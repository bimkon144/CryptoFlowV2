{"version":3,"sources":["components/Footer/Footer.tsx","utils/connectors.ts","components/ActivateDeactivate/ActivateDeactivate.tsx","components/Header/Header.tsx","components/Wrapper/Wrapper.tsx","pages/Layout.tsx","store/WebStore.tsx","components/CsvReader/CsvReader.tsx","components/CsvContainer/CsvContainer.tsx","pages/Home.tsx","components/Modal/MyVerticallyCenteredModal.tsx","components/TableItem/TableItem.jsx","utils/deployToIpfs.js","components/TableList/TableList.jsx","utils/getEncryptedText.jsx","pages/Book.tsx","pages/Contact.tsx","pages/NoPage.tsx","App.tsx","index.tsx","utils/provider.ts"],"names":["Footer","className","injected","InjectedConnector","supportedChainIds","StyledActivateDeactivateDiv","styled","div","StyledActivateButton","button","StyledDeactivateButton","Activate","context","useWeb3React","activate","active","disabled","style","cursor","padding","border","onClick","event","preventDefault","_activate","Deactivate","deactivate","ActivateDeactivate","error","window","alert","errorMessage","constructor","NoEthereumProviderError","UnsupportedChainIdError","UserRejectedRequestError","message","getErrorMessage","Header","navbar","name","to","map","item","Wrapper","props","children","Layout","addToggledItem","arrayOfTogledEdit","indexOfArray","stateOfEditable","stateOfChecked","indexOfToggledArray","isReadOnly","isChecked","addresses","amounts","textAreaPlaceholder","tokenList","label","value","signature","addressesBookData","toggledEditArray","cidPhrase","isCidModal","isModalShow","dataWithCheckboxState","makeAutoObservable","this","isToggled","array","index","checkBoxState","toLowerCase","isOn","isShow","cid","data","values","forEach","element","push","ethers","utils","parseEther","filteredArray","slice","setData","join","tokens","splice","nameOfInput","arrayIndex","GREY","GREY_LIGHT","DEFAULT_REMOVE_HOVER_COLOR","REMOVE_HOVER_COLOR_LIGHT","lightenDarkenColor","styles","zone","alignItems","borderRadius","display","flexDirection","height","justifyContent","color","file","background","width","position","zIndex","info","paddingLeft","paddingRight","size","backgroundColor","marginBottom","fontSize","progressBar","bottom","zoneHover","borderColor","default","remove","right","top","CSVReader","useCSVReader","useState","setZoneHover","removeHoverColor","setRemoveHoverColor","isProfile","onUploadAccepted","results","filter","n","WebStore","setAddressesBookData","newArray","setTextAreaPlaceholder","onDragOver","onDragLeave","getRootProps","acceptedFile","ProgressBar","getRemoveFileProps","Remove","Object","assign","formatFileSize","onMouseOver","onMouseOut","CsvContainer","observer","readString","usePapaParse","library","account","chainId","multiSendContractAddress","busdAddress","usdtAddress","loading","setLoading","selectedOption","setSelectedOption","fetchTokenBalances","getBalance","nativeAssetBalance","nativeAssets","nativeAssetsAddress","console","log","signer","getSigner","busdContract","Contract","ERC20","balanceOf","balanceOfBusd","symbol","symbolOfBusd","usdtContract","balanceOfUsdt","symbolOfUsdt","newTokens","formatUnits","toFixed","unshift","setTokensList","useEffect","find","c","onChange","newValue","isLoading","options","isDisabled","placeholder","htmlFor","onBlur","worker","complete","id","target","multisSendContract","multisenderV1","abi","tokenContract","result","reduce","sum","elem","add","BigNumber","from","multiSendNativeToken","approve","approved","wait","multiSendToken","txdone","handleMultiSend","type","Home","MyVerticallyCenteredModal","Modal","centered","isAlert","Body","closeButton","Title","Button","onCidChange","variant","Boolean","onCreateClick","setModalShow","TableItem","undefined","setInitEditable","typeOfInput","getValueFromAddressesBookData","readOnly","evt","setIndexedValueToAddressesBookData","handleChangeInput","isLastItem","toggleEdit","removeRow","deployToIpfs","client","NFTStorage","token","someData","File","storeBlob","TableList","navigate","useNavigate","saveTheTable","cloneOfBookData","JSON","parse","stringify","toString","encryotedText","AES","encrypt","setCidPhrase","setCidModal","onSubmit","slicedData","includes","addRow","clearTheTable","checked","toggleCheckbox","Book","readRemoteFile","onChangeCid","prompted","prompt","enscryptedText","bytes","decrypt","originalText","ens","slicedDataToNormalView","setDataWithCheckboxState","setCheckboxStateFromIpfs","err","download","signMessage","setSignature","catch","length","show","onHide","Contact","NoPage","document","URL","App","path","ReactDOM","render","StrictMode","getLibrary","provider","web3Provider","Web3Provider","pollingInterval","serverUrl","appId","getElementById"],"mappings":"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","file":"static/js/main.7055ad10.chunk.js","sourcesContent":["import { FC } from 'react';\r\n\r\nconst Footer: FC = () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n    </footer>\r\n  );\r\n};\r\n \r\nexport default Footer;\r\n","import { InjectedConnector } from '@web3-react/injected-connector';\r\n\r\nexport const injected = new InjectedConnector({\r\n  supportedChainIds: [1, 3, 4, 5, 42, 56, 97, 31337]\r\n});\r\n","import { AbstractConnector } from '@web3-react/abstract-connector';\r\nimport { UnsupportedChainIdError, useWeb3React } from '@web3-react/core';\r\nimport {\r\n  NoEthereumProviderError,\r\n  UserRejectedRequestError\r\n} from '@web3-react/injected-connector';\r\nimport { MouseEvent, ReactElement} from 'react';\r\nimport styled from 'styled-components';\r\nimport { injected } from '../../utils/connectors';\r\nimport { Provider } from '../../utils/provider';\r\n\r\n\r\ntype ActivateFunction = (\r\n  connector: AbstractConnector,\r\n  onError?: (error: Error) => void,\r\n  throwErrors?: boolean\r\n) => Promise<void>;\r\n\r\nfunction getErrorMessage(error: Error): string {\r\n  let errorMessage: string;\r\n\r\n  switch (error.constructor) {\r\n    case NoEthereumProviderError:\r\n      errorMessage = `No Ethereum browser extension detected. Please install MetaMask extension.`;\r\n      break;\r\n    case UnsupportedChainIdError:\r\n      errorMessage = `You're connected to an unsupported network.`;\r\n      break;\r\n    case UserRejectedRequestError:\r\n      errorMessage = `Please authorize this website to access your Ethereum account.`;\r\n      break;\r\n    default:\r\n      errorMessage = error.message;\r\n  }\r\n\r\n  return errorMessage;\r\n}\r\n\r\nconst StyledActivateDeactivateDiv = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 1fr;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-gap: 10px;\r\n  place-self: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst StyledActivateButton = styled.button`\r\n  width: 150px;\r\n  height: 2rem;\r\n  border-radius: 1rem;\r\n  border-color: green;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst StyledDeactivateButton = styled.button`\r\n  width: 150px;\r\n  height: 2rem;\r\n  border-radius: 1rem;\r\n  border-color: red;\r\n  cursor: pointer;\r\n`;\r\n\r\nfunction Activate(): ReactElement {\r\n  const context = useWeb3React<Provider>();\r\n  const { activate, active } = context;\r\n\r\n\r\n\r\n  function handleActivate(event: MouseEvent<HTMLButtonElement>): void {\r\n    event.preventDefault();\r\n\r\n    async function _activate(activate: ActivateFunction): Promise<void> {\r\n\r\n      await activate(injected);\r\n\r\n    }\r\n\r\n    _activate(activate);\r\n\r\n  }\r\n\r\n  return (\r\n    <StyledActivateButton\r\n      disabled={active}\r\n      style={{\r\n        cursor: active ? 'not-allowed' : 'pointer',\r\n        padding: 0,\r\n        border: \"none\"\r\n      }}\r\n      onClick={handleActivate}\r\n    >\r\n      Connect\r\n    </StyledActivateButton>\r\n  );\r\n}\r\n\r\nfunction Deactivate(): ReactElement {\r\n  const context = useWeb3React<Provider>();\r\n  const { deactivate, active } = context;\r\n\r\n  function handleDeactivate(event: MouseEvent<HTMLButtonElement>): void {\r\n    event.preventDefault();\r\n\r\n    deactivate();\r\n  }\r\n\r\n  return (\r\n    <StyledDeactivateButton\r\n      disabled={!active}\r\n      style={{\r\n        cursor: active ? 'pointer' : 'not-allowed',\r\n        padding: 0,\r\n        border: \"none\"\r\n      }}\r\n      onClick={handleDeactivate}\r\n    >\r\n      Disconnect\r\n    </StyledDeactivateButton>\r\n  );\r\n}\r\n\r\nexport function ActivateDeactivate(): ReactElement {\r\n  const context = useWeb3React<Provider>();\r\n  const { error } = context;\r\n\r\n  if (!!error) {\r\n    window.alert(getErrorMessage(error));\r\n  }\r\n\r\n  return (\r\n    <StyledActivateDeactivateDiv>\r\n      <Activate />\r\n      <Deactivate />\r\n    </StyledActivateDeactivateDiv>\r\n  );\r\n}\r\n","import { FC } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { ActivateDeactivate } from '../ActivateDeactivate/ActivateDeactivate';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { Provider } from '../../utils/provider';\r\n\r\nconst Header: FC = () => {\r\n  const { active } = useWeb3React<Provider>();\r\n  const navbar = active ? ([\r\n    { name: 'main', to: '/' },\r\n    { name: 'address book', to: '/book' },\r\n  ]) : ([{ name: 'main', to: '/' }]);\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"header__wrapper\">\r\n        <Link to=\"/\" className='header__link-item'>\r\n          <div className=\"header__main-title\">\r\n            <div className=\"header__title\">CryptoFlowV1</div>\r\n            <div className=\"header__tagline\">Just send it!</div>\r\n          </div>\r\n        </Link>\r\n        <ActivateDeactivate />\r\n        <nav className=\"header__navbar\">\r\n          <ul className='header__list'>\r\n            {navbar.map((item) => (\r\n              <li key={item.name} className=\"header__link-container\">\r\n                <Link to={item.to} key={item.name} className=\"header__link-item\">\r\n                  <div className=\"header__link\">{item.name}</div>\r\n                </Link>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { ReactElement } from 'react';\r\n\r\nconst Wrapper = (props: { children: ReactElement[] }) => {\r\n  const { children } = props;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"main-container-page-with-footer__wrapper\">\r\n        <div className=\"main-container-page-with-footer__content\">\r\n          {children[0]}\r\n          <div className=\"main-container-page-with-footer__body\">\r\n            {children[1]}\r\n          </div>\r\n        </div>\r\n        <div className=\"main-container-page-with-footer__footer\">\r\n          {children[2]}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Wrapper;\r\n","import { Outlet } from \"react-router-dom\";\r\nimport Footer from \"../components/Footer/Footer\";\r\nimport Header from \"../components/Header/Header\";\r\nimport Wrapper from \"../components/Wrapper/Wrapper\";\r\n\r\nconst Layout = () => {\r\n  return (\r\n    <>\r\n      <Wrapper>\r\n        <Header />\r\n        <Outlet />\r\n        <Footer />\r\n      </Wrapper>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default Layout;","import { ethers } from \"ethers\";\r\nimport { makeAutoObservable } from \"mobx\";\r\n\r\n\r\ninterface rowArray {\r\n  indexOfToggledArray: number;\r\n  isReadOnly: boolean;\r\n  isChecked: boolean;\r\n}\r\n\r\n\r\n\r\nconst addToggledItem = (arrayOfTogledEdit: rowArray[], indexOfArray: number, stateOfEditable: boolean, stateOfChecked: boolean): rowArray[] => [\r\n  ...arrayOfTogledEdit,\r\n  {\r\n    indexOfToggledArray: indexOfArray,\r\n    isReadOnly:stateOfEditable,\r\n    isChecked:stateOfChecked,\r\n  },\r\n];\r\n\r\n\r\nclass WebStore {\r\n\r\n  addresses: string[] = [];\r\n  amounts: ethers.BigNumber[] = [];\r\n  textAreaPlaceholder: string = '';\r\n  tokenList = [{ label: '', value: '' }];\r\n\r\n  signature: string = ''\r\n  addressesBookData: string[][] = [];\r\n  toggledEditArray: rowArray[] = [];\r\n  cidPhrase: string = ''\r\n  isCidModal:boolean = false;\r\n  isModalShow:boolean = false;\r\n  dataWithCheckboxState: string[][] = []\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n  setInitEditable(isToggled: boolean, isChecked:boolean, indexOfToggledArray: number) {\r\n    this.toggledEditArray = addToggledItem(this.toggledEditArray,indexOfToggledArray, isToggled, isChecked);\r\n  }\r\n\r\n  setCheckboxStateFromIpfs (array:string[], index: number) {\r\n    const checkBoxState = array[0].toLowerCase() === 'true'? true : false;\r\n    this.toggledEditArray = addToggledItem(this.toggledEditArray, index, true, checkBoxState)\r\n  }\r\n  \r\n  toggleEdit(isReadOnly: boolean, indexOfToggledArray: number) {\r\n    this.toggledEditArray[indexOfToggledArray].isReadOnly = isReadOnly;\r\n  }\r\n\r\n  toggleCheckbox(isToggled: boolean, indexOfToggledArray: number) {\r\n   this.toggledEditArray[indexOfToggledArray].isChecked = isToggled\r\n    \r\n  }\r\n\r\n  setCidModal (isOn:boolean) {\r\n    this.isCidModal = isOn;\r\n  }\r\n\r\n  setModalShow (isShow:boolean) {\r\n    this.isModalShow = isShow;\r\n  }\r\n\r\n  setCidPhrase(cid:string) {\r\n    this.cidPhrase = cid;\r\n  }\r\n\r\n  setData(data: string[][]) {\r\n    const addresses: string[] = [];\r\n    const values: ethers.BigNumber[] = [];\r\n    data.forEach((element, index) => {\r\n      addresses.push(element[0]);\r\n    });\r\n    data.forEach((element, index) => {\r\n      values.push(ethers.utils.parseEther(element[1]));\r\n    });\r\n    this.addresses = addresses;\r\n    this.amounts = values;\r\n  }\r\n\r\n  setFilteredData () {\r\n    const filteredArray = this.addressesBookData.map((array) => {\r\n      return array.slice(1);\r\n    });\r\n    this.setData(filteredArray);\r\n  }\r\n\r\n  setAddressesBookData(data: string[][]) {\r\n    this.addressesBookData = data;\r\n  }\r\n\r\n  setDataWithCheckboxState(data: string[][]) {\r\n    this.dataWithCheckboxState = data;\r\n  }\r\n\r\n\r\n  setTextAreaPlaceholder(data: string[][]) {\r\n    this.textAreaPlaceholder = data.join('\\r\\n')\r\n  }\r\n\r\n  setTokensList(tokens: { label: string, value: string }[]) {\r\n    this.tokenList = tokens;\r\n  }\r\n\r\n  setSignature(signature: string) {\r\n    this.signature = signature;\r\n  }\r\n\r\n  addRow() {\r\n    this.addressesBookData.push([])\r\n  }\r\n\r\n  removeRow(indexOfArray: number) {\r\n    this.addressesBookData.splice(indexOfArray, 1);\r\n  }\r\n\r\n  getValueFromAddressesBookData(nameOfInput: string, arrayIndex: number): string {\r\n    let value\r\n    switch (nameOfInput) {\r\n      case 'username':\r\n        value = this.addressesBookData[arrayIndex][0];\r\n        break;\r\n      case 'address':\r\n        value = this.addressesBookData[arrayIndex][1];\r\n        break;\r\n      case 'amount':\r\n        value = this.addressesBookData[arrayIndex][2];\r\n        break;\r\n      default:\r\n        value = '';\r\n        break;\r\n    }\r\n    return value\r\n  }\r\n\r\n  setIndexedValueToAddressesBookData(nameOfInput: string, arrayIndex: number, value: any): void {\r\n    switch (nameOfInput) {\r\n      case 'username':\r\n        this.addressesBookData[arrayIndex][0] = value;\r\n        break;\r\n      case 'address':\r\n        this.addressesBookData[arrayIndex][1] = value\r\n        break;\r\n      case 'amount':\r\n        this.addressesBookData[arrayIndex][2] = value\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  clearTheTable() {\r\n    this.addressesBookData = [];\r\n  }\r\n\r\n  // load(url: string) {\r\n  //   fetch(url)\r\n  //     .then((resp) => resp.json())\r\n  //     .then((tds: Todo[]) => (store.todos = tds));\r\n  // }\r\n}\r\n\r\n\r\nexport default new WebStore();","import { useState, CSSProperties } from 'react';\r\nimport WebStore from \"../../store/WebStore\";\r\nimport deployToIpfs from '../../utils/deployToIpfs';\r\n\r\n\r\nimport {\r\n    useCSVReader,\r\n    lightenDarkenColor,\r\n    formatFileSize,\r\n} from 'react-papaparse';\r\nimport getEncryptedText from '../../utils/getEncryptedText';\r\n\r\nconst GREY = '#CCC';\r\nconst GREY_LIGHT = 'rgba(255, 255, 255, 0.4)';\r\nconst DEFAULT_REMOVE_HOVER_COLOR = '#A01919';\r\nconst REMOVE_HOVER_COLOR_LIGHT = lightenDarkenColor(\r\n    DEFAULT_REMOVE_HOVER_COLOR,\r\n    40\r\n);\r\nconst GREY_DIM = '#686868';\r\n\r\nconst styles = {\r\n    zone: {\r\n        alignItems: 'center',\r\n        border: `2px dashed ${GREY}`,\r\n        borderRadius: 20,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        height: '100%',\r\n        justifyContent: 'center',\r\n        padding: 20,\r\n        color: 'white',\r\n    } as CSSProperties,\r\n    file: {\r\n        background: 'linear-gradient(to bottom, #EEE, #DDD)',\r\n        borderRadius: 20,\r\n        display: 'flex',\r\n        height: 120,\r\n        width: 120,\r\n        position: 'relative',\r\n        zIndex: 10,\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n\r\n    } as CSSProperties,\r\n    info: {\r\n        alignItems: 'center',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        paddingLeft: 10,\r\n        paddingRight: 10,\r\n        color: 'blue'\r\n    } as CSSProperties,\r\n    size: {\r\n        backgroundColor: GREY_LIGHT,\r\n        borderRadius: 3,\r\n        marginBottom: '0.5em',\r\n        justifyContent: 'center',\r\n        display: 'flex',\r\n    } as CSSProperties,\r\n    name: {\r\n        backgroundColor: GREY_LIGHT,\r\n        borderRadius: 3,\r\n        fontSize: 12,\r\n        marginBottom: '0.5em',\r\n    } as CSSProperties,\r\n    progressBar: {\r\n        bottom: 14,\r\n        position: 'absolute',\r\n        width: '100%',\r\n        paddingLeft: 10,\r\n        paddingRight: 10,\r\n    } as CSSProperties,\r\n    zoneHover: {\r\n        borderColor: GREY_DIM,\r\n    } as CSSProperties,\r\n    default: {\r\n        borderColor: GREY,\r\n    } as CSSProperties,\r\n    remove: {\r\n        height: 23,\r\n        position: 'absolute',\r\n        right: 6,\r\n        top: 6,\r\n        width: 23,\r\n    } as CSSProperties,\r\n};\r\n\r\nconst CSVReader = (data: { isProfile?: boolean }) => {\r\n    const { CSVReader } = useCSVReader();\r\n    const [zoneHover, setZoneHover] = useState(false);\r\n    const [removeHoverColor, setRemoveHoverColor] = useState(\r\n        DEFAULT_REMOVE_HOVER_COLOR\r\n    );\r\n    const { isProfile } = data;\r\n\r\n    return (\r\n        <CSVReader\r\n            onUploadAccepted={(results: { data: any[]; }, file: any) => {\r\n                if (isProfile) {\r\n                    const filteredArray: any = results.data.filter(n => n != '');\r\n                    WebStore.setAddressesBookData(filteredArray);\r\n\r\n                } else {\r\n                    const newArray = results.data.filter(n => n != '');\r\n                    WebStore.setData(newArray)\r\n                    WebStore.setTextAreaPlaceholder(newArray)\r\n                    setZoneHover(false);\r\n                }\r\n\r\n            }}\r\n            onDragOver={(event: DragEvent) => {\r\n                event.preventDefault();\r\n                setZoneHover(true);\r\n            }}\r\n            onDragLeave={(event: DragEvent) => {\r\n                event.preventDefault();\r\n                setZoneHover(false);\r\n            }}\r\n        >\r\n            {({\r\n                getRootProps,\r\n                acceptedFile,\r\n                ProgressBar,\r\n                getRemoveFileProps,\r\n                Remove,\r\n            }: any) => (\r\n                <>\r\n                    <div\r\n                        {...getRootProps()}\r\n                        style={Object.assign(\r\n                            {},\r\n                            styles.zone,\r\n                            zoneHover && styles.zoneHover\r\n                        )}\r\n                    >\r\n                        {acceptedFile ? (\r\n                            <>\r\n\r\n                                <div style={styles.file}>\r\n                                    <div style={styles.info}>\r\n                                        <span style={styles.size}>\r\n                                            {formatFileSize(acceptedFile.size)}\r\n                                        </span>\r\n                                        <span style={styles.name}>{acceptedFile.name}</span>\r\n                                    </div>\r\n                                    <div style={styles.progressBar}>\r\n                                        <ProgressBar />\r\n                                    </div>\r\n                                    <div\r\n                                        {...getRemoveFileProps()}\r\n                                        style={styles.remove}\r\n                                        onMouseOver={(event: Event) => {\r\n                                            event.preventDefault();\r\n                                            setRemoveHoverColor(REMOVE_HOVER_COLOR_LIGHT);\r\n                                        }}\r\n                                        onMouseOut={(event: Event) => {\r\n                                            event.preventDefault();\r\n                                            setRemoveHoverColor(DEFAULT_REMOVE_HOVER_COLOR);\r\n                                        }}\r\n                                    >\r\n                                        <Remove color={removeHoverColor} />\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        ) : (\r\n                            'Drop CSV file here or click to upload'\r\n                        )}\r\n                    </div>\r\n                </>\r\n            )}\r\n        </CSVReader>\r\n    );\r\n}\r\n\r\nexport default CSVReader;","import { useEffect, useState } from 'react';\r\nimport CSVReader from '../CsvReader/CsvReader';\r\nimport { usePapaParse } from 'react-papaparse';\r\nimport React from 'react';\r\nimport Select from 'react-select';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { Provider } from '../../utils/provider';\r\nimport { BigNumber, ethers } from 'ethers';\r\nimport multisenderV1 from './MultiSenderV1.json'\r\nimport ERC20 from './ERC20.json'\r\nimport { observer } from 'mobx-react-lite';\r\nimport WebStore from \"../../store/WebStore\";\r\n\r\n\r\nconst CsvContainer: React.FC = observer(() => {\r\n    const { readString } = usePapaParse();\r\n    const context = useWeb3React<Provider>();\r\n    const { library, active, account, chainId } = context;\r\n    const multiSendContractAddress = \"0xe776C27ebFe7D0Eb741aD3Ab113Bbcb5659396f5\";\r\n    const busdAddress = \"0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56\"\r\n    const usdtAddress = \"0x55d398326f99059fF775485246999027B3197955\"\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [selectedOption, setSelectedOption] = useState('');\r\n\r\n\r\n    const fetchTokenBalances = async () => {\r\n        let nativeAssets, nativeAssetsAddress: any;\r\n        const nativeAssetBalance = await library!.getBalance(account!);\r\n\r\n        switch (chainId) {\r\n            case 56:\r\n                nativeAssets = 'BNB'\r\n                nativeAssetsAddress = '0xB8c77482e45F1F44dE1745F52C74426C631bDD52'\r\n                console.log('This is binance mainnet', chainId)\r\n                break;\r\n            case 97:\r\n                nativeAssets = 'BNB'\r\n                nativeAssetsAddress = '0x62b35Eb73edcb96227F666A878201b2cF915c2B5'\r\n                console.log('This is binance test smart chain', chainId)\r\n                break;\r\n            default:\r\n                console.log('This is an unknown network.', chainId)\r\n        }\r\n        const signer = library!.getSigner();\r\n\r\n        const busdContract = new ethers.Contract(busdAddress, ERC20, signer)\r\n        const balanceOfBusd = await busdContract.balanceOf(account);\r\n        const symbolOfBusd = await busdContract.symbol();\r\n\r\n        const usdtContract = new ethers.Contract(usdtAddress, ERC20, signer)\r\n        const balanceOfUsdt = await usdtContract.balanceOf(account);\r\n        const symbolOfUsdt = await usdtContract.symbol();\r\n\r\n        let newTokens = [{ label: `${symbolOfBusd} - ${(+ethers.utils.formatUnits(balanceOfBusd)).toFixed(4)} - ${busdAddress}`, value: busdAddress }, { label: `${symbolOfUsdt} - ${(+ethers.utils.formatUnits(balanceOfUsdt)).toFixed(4)} - ${usdtAddress}`, value: usdtAddress }];\r\n        newTokens.unshift({\r\n            label: `${nativeAssets} - ${(+ethers.utils.formatUnits(nativeAssetBalance)).toFixed(4)} - ${nativeAssetsAddress}`,\r\n            value: nativeAssetsAddress\r\n        })\r\n        WebStore.setTokensList(newTokens);\r\n    };\r\n\r\n\r\n    const handleReadString = () => {\r\n        readString(WebStore.textAreaPlaceholder, {\r\n            worker: true,\r\n            complete: (results: { data: any[]; }) => {\r\n                const newArray = results.data.filter(n => n != '');\r\n                WebStore.setData(newArray);\r\n\r\n            },\r\n        });\r\n    };\r\n\r\n    const multiSend = (event: { preventDefault: () => void; }): void => {\r\n        event.preventDefault();\r\n\r\n\r\n        if (!multiSendContractAddress) {\r\n            window.alert('Undefined MultiSender contract');\r\n            return;\r\n        }\r\n        async function handleMultiSend(multiSendContractAddress: string): Promise<void> {\r\n\r\n            try {\r\n                const signer = library!.getSigner();\r\n                const multisSendContract = new ethers.Contract(multiSendContractAddress, multisenderV1.abi, signer);\r\n                const tokenContract = new ethers.Contract(selectedOption, ERC20, signer);\r\n\r\n\r\n                let result = WebStore.amounts.reduce(function (sum: ethers.BigNumber, elem) {\r\n                    return sum.add(elem);\r\n                }, BigNumber.from(0));\r\n                if (selectedOption === WebStore.tokenList[0].value) {\r\n                    await multisSendContract.multiSendNativeToken(WebStore.addresses, WebStore.amounts, { value: result });\r\n                } else {\r\n                    const approved = await tokenContract.approve(multiSendContractAddress, result)\r\n                    await approved.wait();\r\n                    const txdone = await multisSendContract.multiSendToken(selectedOption, WebStore.addresses, WebStore.amounts);\r\n                    await txdone.wait();\r\n                    fetchTokenBalances();\r\n                }\r\n\r\n            } catch (error: any) {\r\n                window.alert(\r\n                    'Error!' + (error && error.message ? `\\n\\n${error.message}` : '')\r\n                );\r\n            }\r\n        }\r\n        handleMultiSend(multiSendContractAddress);\r\n    }\r\n\r\n\r\n    const getValue = () => {\r\n        return selectedOption ? WebStore.tokenList.find(c => c.value === selectedOption) : ''\r\n    }\r\n\r\n    const onChange = (newValue: any) => {\r\n        setSelectedOption(newValue.value)\r\n        console.log(newValue.value)\r\n    }\r\n\r\n    const handleChange = (event: any) => WebStore.textAreaPlaceholder = (event.target.value);\r\n\r\n    useEffect((): void => {\r\n        if (active) {\r\n            setSelectedOption('');\r\n            fetchTokenBalances();\r\n            setLoading(false);\r\n        } else {\r\n            WebStore.setTokensList([{ label: '', value: '' }]);\r\n            WebStore.textAreaPlaceholder = ('');\r\n            setSelectedOption('');\r\n            setLoading(true);\r\n        }\r\n\r\n    }, [active, chainId, account]);\r\n\r\n    return (\r\n        <div className='csv-container'>\r\n            <div className='csv-container__item'>\r\n                <Select\r\n                    className='csv-container__select'\r\n                    value={getValue()}\r\n                    onChange={onChange}\r\n                    isLoading={loading}\r\n                    options={WebStore.tokenList}\r\n                    isDisabled={WebStore.tokenList[0].label === '' ? true : false}\r\n                    placeholder={WebStore.tokenList[0].label === '' ? \"Loading your token addresses...\" : \"Your tokens are loaded\"}\r\n                />\r\n            </div>\r\n            <div className='csv-container__item'>\r\n                <label className='csv-container__title' htmlFor='text-area'>Список адресов в формате csv </label>\r\n                <textarea className='csv-container__text-area' onBlur={() => handleReadString()} id=\"text-area\" name=\"csv-data\" value={WebStore.textAreaPlaceholder} onChange={handleChange} />\r\n            </div>\r\n            <div className='csv-container__item'>\r\n                <CSVReader />\r\n            </div>\r\n            <button className='csv-container__button' onClick={multiSend} type='button'>Далее</button>\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default CsvContainer;","import CsvContainer from \"../components/CsvContainer/CsvContainer\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <CsvContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport WebStore from '../../store/WebStore';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nconst MyVerticallyCenteredModal = observer((props: any) => {\r\n\r\n\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      {props.isAlert ? (\r\n        <>\r\n          <Modal.Body>\r\n            {`Save your Cid phrase to acces to your addresses book ${WebStore.cidPhrase}`}\r\n          </Modal.Body>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              {WebStore.signature? 'Выберите вариант' : 'Подпишите сообщение в MetaMask и выберите вариант'}\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className=\"d-grid gap-2\">\r\n              <Button onClick={props.onCidChange} variant=\"primary\" size=\"lg\" disabled={!Boolean(WebStore.signature)}>\r\n                Ввести адрес списка\r\n              </Button>\r\n              <Button onClick={props.onCreateClick} variant=\"secondary\" size=\"lg\" disabled={!Boolean(WebStore.signature)}>\r\n                Создать новый список\r\n              </Button>\r\n            </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button onClick={() => WebStore.setModalShow(false)}>Close</Button>\r\n          </Modal.Footer>\r\n        </>)\r\n      }\r\n\r\n    </Modal >\r\n  );\r\n})\r\n\r\nexport default MyVerticallyCenteredModal;","import { observer } from 'mobx-react-lite';\r\nimport { useEffect } from 'react';\r\n\r\nimport WebStore from \"../../store/WebStore\";\r\n\r\nconst TableItem = observer(({ data }) => {\r\n\r\n\r\n    const handleChangeInput = (event, index, name) => {\r\n        const value = event.target.value;\r\n        WebStore.setIndexedValueToAddressesBookData(name, index, value);\r\n    }\r\n    useEffect(() => {\r\n\r\n        if (WebStore.dataWithCheckboxState[0] === undefined) {\r\n            WebStore.setInitEditable(true, true, data.index)\r\n        }\r\n\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n\r\n            <input\r\n                className='book__input-item'\r\n                type={data.typeOfInput}\r\n                name={data.name}\r\n                placeholder={data.placeholder}\r\n                value={WebStore.getValueFromAddressesBookData(data.name, data.index)}\r\n                readOnly={WebStore.toggledEditArray[data.index] ? WebStore.toggledEditArray[data.index].isReadOnly : true}\r\n                onChange={(evt) => handleChangeInput(evt, data.index, data.name)}\r\n                disabled={WebStore.toggledEditArray[data.index]? !WebStore.toggledEditArray[data.index].isChecked : false}\r\n            />\r\n\r\n            {data.isLastItem ? (\r\n                <>\r\n                    <label>\r\n                        <button type=\"button\" disabled={WebStore.toggledEditArray[data.index]? !WebStore.toggledEditArray[data.index].isChecked : false} onClick={() => WebStore.toggleEdit(!WebStore.toggledEditArray[data.index].isReadOnly, data.index)}>edit</button>\r\n                    </label>\r\n                    <label>\r\n                        <button type=\"button\" disabled={WebStore.toggledEditArray[data.index]? !WebStore.toggledEditArray[data.index].isChecked : false} onClick={() => WebStore.removeRow(data.index)}>delete</button>\r\n                    </label>\r\n                </>\r\n            ) : ('')}\r\n\r\n        </>\r\n    );\r\n})\r\n\r\nexport default TableItem;","import { NFTStorage, File } from 'nft.storage/dist/bundle.esm.min.js'\r\n\r\nexport default async function deployToIpfs(data) {\r\n  const client = new NFTStorage({ token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkaWQ6ZXRocjoweDk0ZUQxRGY0NmMxMzc4RjQ4QTc2MkQxQjkwNmM2QTUxMkFlNzdFQkYiLCJpc3MiOiJuZnQtc3RvcmFnZSIsImlhdCI6MTY2MTQyMzM1ODA3NSwibmFtZSI6ImNyeXB0b0Zsb3cifQ.MZs_cjKfV-Mm4oJD77O_PaZF1c2BbTe_GWZ_1YrCtII' })\r\n  const someData = new File([data], 'Addresses.csv', { type: 'text/csv' });\r\n  const cid = await client.storeBlob(someData)\r\n  return cid\r\n}\r\n\r\n","import { observer } from 'mobx-react-lite';\r\nimport getEncryptedText from '../../utils/getEncryptedText';\r\nimport WebStore from \"../../store/WebStore\";\r\nimport TableItem from '../TableItem/TableItem';\r\nimport deployToIpfs from '../../utils/deployToIpfs';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst TableList = observer(() => {\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const cloneOfBookData = JSON.parse(JSON.stringify(WebStore.addressesBookData))\r\n    cloneOfBookData.forEach((array, index) => {\r\n      array.unshift((WebStore.toggledEditArray[index].isChecked).toString());\r\n    })\r\n    const filteredAddressesToSend = cloneOfBookData.filter(array => array.includes('true'));\r\n    const slicedData = filteredAddressesToSend.map((array) => {\r\n      return array.slice(2);\r\n    });\r\n\r\n    WebStore.setData(slicedData);\r\n    WebStore.setTextAreaPlaceholder(slicedData)\r\n    navigate(\"/\");\r\n  }\r\n\r\n  const saveTheTable = async () => { \r\n    //тут нужно запушить состояния чекбоксов в адрес бук\r\n    const cloneOfBookData = JSON.parse(JSON.stringify(WebStore.addressesBookData))\r\n    cloneOfBookData.forEach((array, index) => {\r\n      array.unshift((WebStore.toggledEditArray[index].isChecked).toString());\r\n    })\r\n    const encryotedText = getEncryptedText(cloneOfBookData, WebStore.signature);\r\n    const cidPhrase = await deployToIpfs(encryotedText)\r\n    WebStore.setCidPhrase(cidPhrase);\r\n    WebStore.setCidModal(true);\r\n    WebStore.setModalShow(true)\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <form className='book__form' onSubmit={handleSubmit}>\r\n        <button type=\"button\" onClick={() => (WebStore.addRow())}>Add row</button>\r\n        <button type=\"button\" onClick={() => (WebStore.clearTheTable())}>Clear the table</button>\r\n        <button type=\"button\" onClick={saveTheTable}>Save this table </button>\r\n        {WebStore.addressesBookData.map((item, index) => (\r\n          <li className=\"book__list-items\">\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"isActive\"\r\n              checked={WebStore.toggledEditArray[index]? WebStore.toggledEditArray[index].isChecked : true}\r\n              onChange={() => {WebStore.toggleCheckbox(!WebStore.toggledEditArray[index].isChecked, index)}}\r\n            />\r\n            <TableItem data={{ type: 'text', name: 'username',   isLastItem: false, index}} />\r\n            <TableItem data={{ type: 'text', name: 'address',   isLastItem: false, index }} />\r\n            <TableItem data={{ type: 'text', name: 'amount',   isLastItem: true, index }} />\r\n          </li>\r\n        ))}\r\n        <input type=\"submit\" />\r\n      </form>\r\n    </>\r\n  );\r\n})\r\n\r\n\r\nexport default TableList;","import AES from 'crypto-js/aes';\r\n\r\n\r\nexport default function getEncryptedText(array, signature) {\r\n\r\n    const encryptedText = AES.encrypt(JSON.stringify(array), signature).toString()\r\n\r\n    return encryptedText;\r\n}","import CSVReader from '../components/CsvReader/CsvReader';\r\nimport {useEffect } from 'react';\r\nimport MyVerticallyCenteredModal from '../components/Modal/MyVerticallyCenteredModal'\r\nimport { usePapaParse } from 'react-papaparse';\r\nimport AES from 'crypto-js/aes';\r\nimport ens from 'crypto-js/enc-utf8';\r\nimport { observer } from 'mobx-react-lite';\r\nimport WebStore from \"../store/WebStore\";\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { Provider } from '../utils/provider';\r\nimport TableListItems from '../components/TableList/TableList';\r\n\r\nconst Book = observer(() => {\r\n  const { readRemoteFile } = usePapaParse();\r\n  const { library } = useWeb3React<Provider>();\r\n\r\n\r\n  const handleReadRemoteFile = (url: string) => {\r\n    readRemoteFile(url, {\r\n      complete: (results) => {\r\n        try {\r\n          const enscryptedText = results.data.toString()\r\n          const bytes = AES.decrypt(enscryptedText, WebStore.signature);\r\n          const originalText = JSON.parse(bytes.toString(ens));\r\n          console.log('---------------------------');\r\n          const slicedDataToNormalView = originalText.map((array:[]) => {\r\n            return array.slice(1);\r\n          });\r\n          WebStore.setDataWithCheckboxState(originalText);\r\n          WebStore.setAddressesBookData(slicedDataToNormalView);\r\n          console.log('origintest', originalText, slicedDataToNormalView);\r\n          originalText.forEach((array:string[], index:number) => {\r\n            WebStore.setCheckboxStateFromIpfs(array, index);\r\n          });\r\n\r\n        }\r\n        catch (err) {\r\n          alert(`You cannot decrypt the data `)\r\n          console.log(err);\r\n        }\r\n\r\n      },\r\n      download: true\r\n    });\r\n  };\r\n\r\n  const onChangeCid = () => {\r\n   WebStore.setModalShow(false)\r\n\r\n    const prompted = prompt('Введи свой путь к списку')\r\n\r\n    if (prompted != null) {\r\n      const rightUrl = 'https://ipfs.io/ipfs/' + prompted\r\n      handleReadRemoteFile(rightUrl);\r\n    } else {\r\n      alert('Вы ничего не ввели')\r\n    }\r\n\r\n  }\r\n\r\n  const onCreateClick = () => {\r\n    WebStore.setModalShow(false)\r\n\r\n  }\r\n\r\n  const signMessage = async () => {\r\n    try {\r\n      const signer = library!.getSigner();\r\n      const signature = await signer.signMessage('sign this to continue');\r\n      WebStore.setSignature(signature);\r\n\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  useEffect((): void => {\r\n    if (!WebStore.signature) {\r\n      signMessage().catch(console.error);\r\n    }\r\n\r\n    if (!WebStore.isModalShow && !WebStore.addressesBookData.length) {\r\n      WebStore.setModalShow(true)\r\n    }\r\n    if (WebStore.cidPhrase) {\r\n      WebStore.setCidModal(false)\r\n    }\r\n\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className='book'>\r\n        <MyVerticallyCenteredModal\r\n          show={WebStore.isModalShow}\r\n          onHide={() => WebStore.setModalShow(false)}\r\n          onCidChange={() => onChangeCid()}\r\n          onCreateClick={() => onCreateClick()}\r\n          isAlert={WebStore.isCidModal}\r\n          cid={WebStore.cidPhrase}\r\n        />\r\n        {WebStore.isModalShow  ? '' : <><CSVReader isProfile={true} /></>}\r\n        {WebStore.addressesBookData.length ? (<TableListItems />) : ('')}\r\n\r\n      </div>\r\n\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Book;","const Contact = () => {\r\n    return <h1>Contact Me</h1>;\r\n  };\r\n  \r\n  export default Contact;","const NoPage = () => {\r\n    return <h1>{document.URL} not exist</h1>;\r\n  };\r\n  \r\n  export default NoPage;","import { ReactElement } from 'react';\r\nimport { Routes, Route, HashRouter } from \"react-router-dom\";\r\nimport Layout from \"./pages/Layout\";\r\nimport Home from \"./pages/Home\";\r\nimport Book from \"./pages/Book\";\r\nimport Contact from \"./pages/Contact\";\r\nimport NoPage from \"./pages/NoPage\";\r\n\r\n\r\nexport function App(): ReactElement {\r\n  return (\r\n    <HashRouter>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Layout />}>\r\n          <Route index element={<Home />} />\r\n          <Route path=\"book\" element={<Book />} />\r\n          <Route path=\"contact\" element={<Contact />} />\r\n          <Route path=\"*\" element={<NoPage />} />\r\n        </Route>\r\n      </Routes>\r\n    </HashRouter>\r\n  );\r\n}\r\n","import { Web3ReactProvider } from '@web3-react/core';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\nimport './index.scss';\r\nimport { getProvider } from './utils/provider';\r\nimport { MoralisProvider } from \"react-moralis\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Web3ReactProvider getLibrary={getProvider}>\r\n      <MoralisProvider serverUrl=\"https://ycdrwalsmowu.usemoralis.com:2053/server\" appId=\"OMmCccFisfG41m6CAL0NUsZIjyn959QUTkPv89Jg\">\r\n        <App />\r\n      </MoralisProvider>\r\n    </Web3ReactProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","import type { Web3Provider as ProviderType } from '@ethersproject/providers';\r\nimport { Web3Provider } from '@ethersproject/providers';\r\n\r\nexport function getProvider(provider: any): ProviderType {\r\n  const web3Provider = new Web3Provider(provider);\r\n  web3Provider.pollingInterval = 1000;\r\n  return web3Provider;\r\n}\r\n\r\nexport type Provider = ProviderType;\r\n"],"sourceRoot":""}