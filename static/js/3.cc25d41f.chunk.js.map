{"version":3,"sources":["../node_modules/@noble/hashes/utils.js","../node_modules/bs58/index.js","../../src/rpc/JrpcClient.ts","../../src/rpc/solanaRpcMiddlewares.ts","../../src/providers/injectedProviders/base/baseInjectedProvider.ts","../../src/providers/injectedProviders/base/providerHandlers.ts","../../src/providers/injectedProviders/injectedProviderProxy.ts","../../src/providers/injectedProviders/phantom/phantomInjectedProvider.ts","../../src/providers/injectedProviders/slope/slopeInjectedProvider.ts","../../src/providers/injectedProviders/slope/providerHandlers.ts","../../src/providers/injectedProviders/solflare/solflareInjectedProvider.ts","../../src/providers/injectedProviders/solflare/providerHandlers.ts","../../src/providers/injectedProviders/sollet/solletInjectedProvider.ts","../../src/providers/injectedProviders/sollet/providerHandlers.ts","../../src/providers/injectedProviders/torus/providerHandlers.ts","../../src/providers/injectedProviders/torus/torusInjectedProvider.ts","../../src/providers/privateKeyProvider/solanaPrivateKeyUtils.ts","../../src/providers/privateKeyProvider/solanaPrivateKeyProvider.ts","../../src/solanaWallet.ts","../node_modules/@noble/hashes/_sha2.js","../node_modules/@noble/hashes/_assert.js","../../src/Layout.ts","../node_modules/@noble/ed25519/lib/esm/index.js","../../src/utils.ts","../../src/error.ts","../../src/struct.ts","../../src/structs/utilities.ts","../../src/structs/types.ts","../node_modules/@babel/runtime/helpers/esm/toArray.js","../../src/structs/coercions.ts","../node_modules/@noble/secp256k1/lib/esm/index.js","../../src/utils/ed25519.ts","../../src/utils/to-buffer.ts","../../src/utils/borsh-schema.ts","../../src/publickey.ts","../../src/bpf-loader-deprecated.ts","../../src/transaction/constants.ts","../../src/transaction/expiry-custom-errors.ts","../../src/layout.ts","../../src/utils/shortvec-encoding.ts","../../src/message/legacy.ts","../../src/utils/assert.ts","../../src/transaction/legacy.ts","../../src/message/v0.ts","../../src/sysvar.ts","../../src/utils/send-and-confirm-transaction.ts","../../src/utils/sleep.ts","../../src/instruction.ts","../../src/fee-calculator.ts","../../src/utils/bigint.ts","../../src/nonce-account.ts","../../src/programs/system.ts","../../src/loader.ts","../../src/bpf-loader.ts","../../node_modules/fast-stable-stringify/index.js","../../src/epoch-schedule.ts","../../src/errors.ts","../../src/__forks__/browser/fetch-impl.ts","../../src/programs/address-lookup-table/state.ts","../../src/account-data.ts","../../src/utils/makeWebsocketUrl.ts","../../src/connection.ts","../../src/keypair.ts","../../src/programs/address-lookup-table/index.ts","../../src/programs/compute-budget.ts","../../src/programs/ed25519.ts","../../src/utils/secp256k1.ts","../../src/programs/secp256k1.ts","../../src/programs/stake.ts","../../src/programs/vote.ts","../../src/validator-info.ts","../../src/vote-account.ts","../node_modules/@noble/hashes/sha512.js","../node_modules/@noble/hashes/cryptoBrowser.js","../node_modules/@noble/hashes/_u64.js","../node_modules/@solana/web3.js/node_modules/bn.js/lib/bn.js","../node_modules/base-x/src/index.js","../node_modules/@noble/hashes/sha256.js","../node_modules/borsh/lib/index.js","../node_modules/borsh/node_modules/bn.js/lib/bn.js","../node_modules/text-encoding-utf-8/lib/encoding.lib.mjs","../node_modules/bigint-buffer/dist/browser.js","../node_modules/rpc-websockets/dist/index.browser.js","../node_modules/rpc-websockets/dist/lib/client/websocket.browser.js","../node_modules/rpc-websockets/dist/lib/client.js","../node_modules/jayson/lib/client/browser/index.js","../node_modules/jayson/lib/generateRequest.js","../node_modules/@noble/hashes/hmac.js"],"names":["Object","defineProperty","exports","value","randomBytes","wrapConstructorWithOpts","wrapConstructor","checkOpts","Hash","concatBytes","toBytes","utf8ToBytes","asyncLoop","nextTick","hexToBytes","bytesToHex","isLE","rotr","createView","u32","u8","crypto_1","require","arr","Uint8Array","buffer","byteOffset","byteLength","Uint32Array","Math","floor","DataView","word","shift","Error","hexes","Array","from","length","v","i","toString","padStart","uint8a","hex","TypeError","array","j","hexByte","slice","byte","Number","parseInt","isNaN","iters","tick","cb","ts","Date","now","diff","str","TextEncoder","encode","data","arrays","every","a","reduce","result","pad","set","this","_cloneInto","defaults","opts","undefined","obj","prototype","call","constructor","assign","hashConstructor","hashC","message","update","digest","tmp","outputLen","blockLen","create","hashCons","msg","bytesLength","crypto","web","getRandomValues","node","basex","module","createChainIdMiddleware","chainId","req","res","next","end","method","createProviderConfigMiddleware","providerConfig","createConfigMiddleware","mergeMiddleware","createJsonRpcClient","rpcTarget","fetchMiddleware","createFetchMiddleware","networkMiddleware","_ref","getAccounts","createAsyncMiddleware","request","response","accounts","_ref2","requestAccounts","targetMethod","handler","createSolanaMiddleware","providerHandlers","signTransaction","signAndSendTransaction","signAllTransactions","signMessage","getPrivateKey","getSecretKey","createRequestAccountsMiddleware","createGetAccountsMiddleware","createGenericJRPCMiddleware","BaseInjectedProvider","config","state","chainConfig","chainNamespace","CHAIN_NAMESPACES","SOLANA","_","Promise","resolve","injectedProvider","engine","JRPCEngine","getProviderHandlers","solanaMiddleware","push","configMiddleware","injectedProviderProxy","getInjectedProviderProxy","provider","providerFromEngine","updateProviderEngineProxy","lookupNetwork","BaseProvider","getBaseProviderHandlers","publicKey","bs58","ethErrors","rpc","methodNotSupported","params","transaction","_req$params","_req$params2","invalidParams","txRes","signature","createInjectedProviderProxyMiddleware","_next","PhantomInjectedProvider","SlopeInjectedProxyProvider","getProviderEngineProxy","connect","txMessage","invalidRequest","serializeMessage","PublicKey","decode","addSignature","custom","code","conn","Connection","sendRawTransaction","serialize","allTxns","unsignedTx","signatures","getSlopeHandlers","bind","SolflareInjectedProvider","solflareProviderHandlers","getSolflareHandlers","SolletInjectedProvider","sign","getSolletHandlers","getTorusHandlers","_req$params3","sendTransaction","_req$params4","_req$params5","transactions","TorusInjectedProvider","handleInjectedProviderUpdate","setupEngine","connectedChainId","connectedHexChainId","isHexStrict","WalletInitializationError","rpcConnectionError","emit","on","configure","_objectSpread","setupProvider","privKey","keyPairGenerator","Keypair","fromSecretKey","Buffer","keyPair","toBase58","secretKey","partialSign","signedMsg","nacl","detached","_providerEngineProxy","sig","txns","_req$params6","tx","SolanaPrivateKeyProvider","privateKey","getChainSwitchMiddleware","getAccountMiddleware","getChainConfig","health","chainSwitchHandlers","addNewChainConfig","chainName","rpcUrls","blockExplorerUrls","nativeCurrency","addChain","ticker","symbol","tickerName","name","displayName","blockExplorer","switchSolanaChain","switchChain","_ref3","createChainSwitchMiddleware","accountHandlers","updatePrivatekey","updateAccount","_ref4","createAccountMiddleware","providerFactory","SolanaWallet","_defineProperty","signedTransaction","signedTransactions","args","SHA2","_assert_js_1","utils_js_1","padOffset","finished","pos","destroyed","view","default","exists","len","take","min","subarray","process","dataView","roundClean","out","output","fill","setBigUint64","_32n","BigInt","_u32_max","wh","wl","h","l","setUint32","oview","get","forEach","digestInto","destroy","to","number","n","isSafeInteger","bool","b","bytes","lengths","includes","hash","instance","checkFinished","assert","checkUint8Array","uint8ArrayToBuffer","buffer_1","Layout","span","property","isInteger","offset","RangeError","rv","values","nameWithProperty","lo","Class","layout","hasOwnProperty","layout_","boundConstructor_","makeDestinationObject","writable","ExternalLayout","GreedyCount","elementSpan","rem","src","OffsetLayout","UInt","UIntBE","readUIntLE","writeUIntLE","readUIntBE","writeUIntBE","Int","readIntLE","writeIntLE","IntBE","readIntBE","writeIntBE","V2E32","pow","divmodInt64","hi32","lo32","roundedInt64","NearUInt64","readUInt32LE","split","writeUInt32LE","NearUInt64BE","readUInt32BE","writeUInt32BE","NearInt64","readInt32LE","writeInt32LE","NearInt64BE","readInt32BE","writeInt32BE","Float","readFloatLE","writeFloatLE","FloatBE","readFloatBE","writeFloatBE","Double","readDoubleLE","writeDoubleLE","DoubleBE","readDoubleBE","writeDoubleBE","Sequence","elementLayout","count","isCount","idx","getSpan","elo","Structure","fields","decodePrefixes","isArray","acc","fd","e","fsp","dest","firstOffset","lastOffset","lastWrote","fv","UnionDiscriminator","UnionLayoutDiscriminator","Union","discr","defaultLayout","discriminator","replicate","usesPrefixDiscriminator","registry","boundGetSourceVariant","defaultGetSourceVariant","getSourceVariant","configGetSourceVariant","gsv","vlo","getVariant","tag","dlo","clo","contentOffset","variant","VariantLayout","vb","union","fromArray","fixBitwiseResult","BitStructure","msb","_packedSetValue","_packedGetValue","bits","bf","BitField","Boolean","container","totalBits","usedBits","sum","valueMask","start","wordMask","wordValue","Blob","srcBuffer","write","CString","String","srcb","copy","UTF8","maxSpan","Constant","_0n","_1n","_2n","_255n","CURVE_ORDER","CURVE","freeze","d","P","Gx","Gy","MAX_256B","SQRT_M1","SQRT_AD_MINUS_ONE","INVSQRT_A_MINUS_D","ONE_MINUS_D_SQ","D_MINUS_ONE_SQ","ExtendedPoint","x","y","z","t","other","assertExtPoint","X1","Y1","Z1","X2","Y2","Z2","X1Z2","mod","X2Z1","Y1Z2","Y2Z1","A","B","C","D","E","G","F","H","X3","Y3","T3","T1","T2","double","add","negate","W","windows","points","p","base","window","affinePoint","equals","BASE","Point","_WINDOW_SIZE","precomputes","pointPrecomputes","precomputeWindow","normalizeZ","ZERO","f","windowSize","mask","maxNumber","shiftBy","wbits","pr","cached","abs","scalar","wNAF","normalizeScalar","P0","multiplyUnsafe","invZ","invert","ax","ay","zz","legacyRist","toInv","nums","inverted","num","reduceRight","invertBatch","map","toAffine","toAffineBatch","fromAffine","assertRstPoint","RistrettoPoint","ep","u1","u2","invsqrt","invertSqrt","D1","D2","zInv","edIsNegative","_x","_y","s","numberTo32BytesLE","toRawBytes","toHex","one","two","subtract","multiply","r0","r","Ns","c","uvRatio","Ns_D_is_sq","isValid","s_","Nt","s2","W0","W1","W2","W3","r1","bytes255ToNumberLE","ensureBytes","R1","calcElligatorRistrettoMap","r2","R2","emsg","b1","b2","equalBytes","u1_2","u2_2","I","Dx","Dy","WeakMap","delete","isTorsionFree","strict","normed","bytesToNumberLE","y2","u","isXOdd","isLastByteOdd","getExtendedPublicKey","point","Signature","assertValidity","fromHex","_sha512Sync","numberTo32BytesBE","reverse","modulo","q","m","gcd","pow2","power","pow_2_252_3","_5n","_10n","_20n","_40n","_80n","b4","b5","b10","b20","b40","b80","b160","b240","b250","pow_p_5_8","v3","v7","vx2","root1","root2","useRoot1","useRoot2","noRoot","modlLE","expectedLength","max","adjustBytes25519","checkPrivateKey","key","getKeyFromHash","hashed","head","prefix","pointBytes","sha512s","utils","sha512","getExtendedPublicKeySync","prepareVerification","SB","pub","finishVerification","k","kA","sync","getPublicKey","R","verify","_setWindowSize","nodeCrypto","self","TORSION_SUBGROUP","hashToPrivateScalar","randomPrivateKey","subtle","createHash","precompute","sha512Sync","defineProperties","configurable","val","toFailures","run","StructError","failure","failures","rest","path","join","isObject","print","JSON","stringify","shiftIterator","input","done","toFailure","context","struct","branch","type","refinement","Symbol","iterator","options","coerce","ctx","coercer","schema","valid","validator","entries","Map","Set","refiner","Struct","props","is","validate","tuples","tuple","error","define","Element","boolean","literal","constant","description","never","nullable","optional","record","Key","Value","string","Elements","Never","keys","Structs","arrayWithHoles","iterableToArray","unsupportedIterableToArray","nonIterableRest","unknown","condition","_3n","_8n","POW_2_256","beta","weistrass","x2","x3","USE_ENDOMORPHISM","JacobianPoint","Z1Z1","Z2Z2","U1","U2","S1","S2","HH","HHH","V","splitScalarEndo","k1neg","k1","k2neg","k2","k1p","k2p","fake","f1p","f2p","iz1","iz2","iz3","scratch","isCompressed","numTo32bStr","isValidFieldElement","left","Q","aP","bQ","isShort","bytesToNumber","_6n","_11n","_22n","_23n","_44n","_88n","b3","b6","b9","b11","b22","b44","b88","b176","b220","b223","t1","t2","sqrtMod","isYOdd","header","fromCompressedHex","fromUncompressedHex","normalizePrivateKey","msgHash","recovery","truncateHash","normalizeSignature","rinv","multiplyAndAddUnsafe","sliceDER","parseDERInt","isWithinCurveOrder","HALF","hasHighS","toDERHex","sHex","numberToHexUnpadded","rHex","rLen","sLen","toDERRawBytes","toCompactHex","isUint8a","hexToNumber","rBytesLeft","parseDERSignature","fromDER","numTo32b","divNearest","POW_2_128","a1","a2","c1","c2","delta","HmacDrbg","counter","hmacSha256","hmacSha256Sync","seed","hmac","hmacSync","incr","kmdToSig","kBytes","fromCompact","bits2int","bits2octets","z1","z2","int2octets","initSigArgs","extraEntropy","h1","seedArgs","finalizeSig","recSig","canonical","der","recovered","normalizeS","toCompactRawBytes","TAGGED_HASH_PREFIXES","isValidPrivateKey","privateAdd","tweak","privateNegate","pointAddScalar","pointMultiply","hashToPrivateKey","sha256","messages","importKey","ckey","createHmac","sha256Sync","taggedHash","tagP","charCodeAt","tagH","taggedHashSync","ed25519","generateKeypair","privateScalar","isOnCurve","toBuffer","isBuffer","properties","SOLANA_SCHEMA","deserialize","deserializeUnchecked","PUBLIC_KEY_LENGTH","_bn","isPublicKeyData","decoded","BN","eq","toJSON","toArrayLike","zeroPad","alloc","fromPublicKey","programId","concat","publicKeyBytes","seeds","createProgramAddressSync","address","nonce","seedsWithNonce","err","findProgramAddressSync","pubkeyData","kind","PACKET_DATA_SIZE","TransactionExpiredBlockheightExceededError","TransactionExpiredTimeoutError","timeoutSeconds","toFixed","BufferLayout","rustString","rsl","_decode","_encode","rslShim","chars","getAlloc","getItemAlloc","item","field","decodeLength","size","elem","encodeLength","rem_len","Message","accountKeys","recentBlockhash","instructions","indexToProgramIds","account","ix","programIdIndex","accountKeyIndexes","isAccountSigner","index","numRequiredSignatures","isAccountWritable","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","isProgramId","has","programIds","nonProgramIds","filter","numKeys","keyCount","shortvec","instruction","keyIndicesCount","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","instructionBufferLength","signDataLayout","signData","byteArray","accountCount","dataSlice","TransactionStatus","MessageV0","staticAccountKeys","compiledInstructions","addressTableLookups","encodedStaticAccountKeysLength","serializedInstructions","serializeInstructions","encodedInstructionsLength","serializedAddressTableLookups","serializeAddressTableLookups","encodedAddressTableLookupsLength","messageLayout","serializedMessage","serializedMessageLength","staticAccountKeysLength","instructionsLength","addressTableLookupsLength","serializedLength","encodedAccountKeyIndexesLength","encodedDataLength","lookup","encodedWritableIndexesLength","writableIndexes","encodedReadonlyIndexesLength","readonlyIndexes","accountKey","maskedPrefix","splice","accountKeyIndexesLength","addressTableLookupsCount","writableIndexesLength","readonlyIndexesLength","DEFAULT_SIGNATURE","TransactionInstruction","pubkey","isSigner","isWritable","Transaction","feePayer","lastValidBlockHeight","nonceInfo","_message","_json","blockhash","nonceInstruction","signers","items","compileMessage","console","warn","accountMetas","accountMeta","uniqueMetas","pubkeyString","uniqueIndex","findIndex","sort","localeCompare","feePayerIndex","payerMeta","unshift","signedKeys","unsignedKeys","indexOf","meta","invariant","keyIndex","_compile","pair","connection","getFeeForMessage","setSigners","seen","uniqueSigners","signer","_partialSign","_addSignature","sigpair","verifySignatures","_verifySignatures","requireAllSignatures","_serialize","signatureCount","transactionLength","wireTransaction","keyObj","populate","sigPubkeyPair","some","SYSVAR_CLOCK_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_RENT_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","sendAndConfirmTransaction","sendOptions","skipPreflight","preflightCommitment","commitment","maxRetries","minContextSlot","confirmTransaction","status","sleep","ms","setTimeout","encodeData","allocLength","layoutFields","FeeCalculatorLayout","NonceAccountLayout","NONCE_ACCOUNT_LENGTH","NonceAccount","authorizedPubkey","feeCalculator","nonceAccount","u64","blob","encodeDecode","bigIntLayout","toBigIntLE","bigInt","toBufferLE","SYSTEM_INSTRUCTION_LAYOUTS","Create","Assign","Transfer","CreateWithSeed","AdvanceNonceAccount","WithdrawNonceAccount","InitializeNonceAccount","AuthorizeNonceAccount","Allocate","AllocateWithSeed","AssignWithSeed","TransferWithSeed","UpgradeNonceAccount","SystemProgram","lamports","space","fromPubkey","newAccountPubkey","basePubkey","toPubkey","accountPubkey","createAccountWithSeed","noncePubkey","createAccount","initParams","nonceInitialize","authorized","instructionData","newAuthorizedPubkey","Loader","ceil","chunkSize","payer","program","getMinimumBalanceForRentExemption","balanceNeeded","getAccountInfo","programInfo","executable","allocate","owner","transfer","dataLayout","bytesLengthPadding","_rpcEndpoint","all","objToString","objKeys","isArrayProp","propVal","toStr","isFinite","returnVal","trailingZeros","EpochSchedule","slotsPerEpoch","leaderScheduleSlotOffset","warmup","firstNormalEpoch","firstNormalSlot","getEpoch","slot","getEpochAndSlotIndex","epoch","getSlotsInEpoch","normalSlotIndex","normalEpochIndex","getFirstSlotInEpoch","getLastSlotInEpoch","SendTransactionError","logs","SolanaJSONRPCError","customMessage","globalThis","fetch","AddressLookupTableAccount","isActive","U64_MAX","deactivationSlot","accountData","typeIndex","decodeData","LookupTableMetaLayout","serializedAddressesLen","numSerializedAddresses","addresses","lastExtendedSlot","lastExtendedSlotStartIndex","lastExtendedStartIndex","authority","URL_RE","PublicKeyFromString","RawAccountDataResult","BufferFromRawAccountData","extractCommitmentFromConfig","commitmentOrConfig","createRpcResult","pick","jsonrpc","id","UnknownRpcResult","jsonRpcResult","jsonRpcResultAndContext","notificationResultAndContext","versionedMessageFromResponse","version","GetInflationGovernorResult","foundation","foundationTerm","initial","taper","terminal","GetInflationRewardResult","effectiveSlot","amount","postBalance","GetEpochInfoResult","slotIndex","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","GetLeaderScheduleResult","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","VersionResult","SimulatedTransactionResponseStruct","rentEpoch","unitsConsumed","returnData","BlockProductionResponseStruct","byIdentity","range","firstSlot","lastSlot","GetInflationGovernorRpcResult","GetEpochInfoRpcResult","GetEpochScheduleRpcResult","GetLeaderScheduleRpcResult","SlotRpcResult","GetSupplyRpcResult","total","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","decimals","uiAmountString","GetTokenLargestAccountsResult","GetTokenAccountsByOwner","ParsedAccountDataResult","parsed","GetParsedTokenAccountsByOwner","GetLargestAccountsRpcResult","AccountInfoResult","KeyedAccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","KeyedParsedAccountInfoResult","StakeActivationResult","active","inactive","GetConfirmedSignaturesForAddress2RpcResult","memo","blockTime","GetSignaturesForAddressRpcResult","AccountNotificationResult","subscription","ProgramAccountInfoResult","ProgramAccountNotificationResult","SlotInfoResult","parent","root","SlotNotificationResult","SlotUpdateResult","timestamp","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","SlotUpdateNotificationResult","SignatureNotificationResult","RootNotificationResult","ContactInfoResult","gossip","tpu","VoteAccountInfoResult","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","commission","lastVote","rootSlot","GetVoteAccounts","current","delinquent","ConfirmationStatus","SignatureStatusResponse","confirmations","confirmationStatus","GetSignatureStatusesRpcResult","GetMinimumBalanceForRentExemptionRpcResult","AddressTableLookupStruct","ConfirmedTransactionResult","ParsedInstructionResult","RawInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","TokenBalanceResult","accountIndex","mint","uiTokenAmount","LoadedAddressesResult","readonly","ConfirmedTransactionMetaResult","fee","innerInstructions","preBalances","postBalances","logMessages","preTokenBalances","postTokenBalances","loadedAddresses","ParsedConfirmedTransactionMetaResult","TransactionVersionStruct","GetBlockRpcResult","previousBlockhash","parentSlot","rewards","rewardType","GetConfirmedBlockRpcResult","GetBlockSignaturesRpcResult","GetTransactionRpcResult","GetParsedTransactionRpcResult","GetRecentBlockhashAndContextRpcResult","lamportsPerSignature","GetLatestBlockhashRpcResult","GetRecentPerformanceSamplesRpcResult","numTransactions","numSlots","samplePeriodSecs","GetFeeCalculatorRpcResult","RequestAirdropRpcResult","SendTransactionRpcResult","LogsResult","LogsNotificationResult","COMMON_HTTP_HEADERS","endpoint","wsEndpoint","httpHeaders","disableRetryOnRateLimit","client","_commitment","_confirmTransactionInitialTimeout","_rpcWsEndpoint","_rpcClient","_rpcRequest","_rpcBatchRequest","_rpcWebSocket","_rpcWebSocketConnected","_rpcWebSocketHeartbeat","_rpcWebSocketIdleTimeout","_rpcWebSocketGeneration","_disableBlockhashCaching","_pollingBlockhash","_blockhashInfo","latestBlockhash","lastFetch","transactionSignatures","simulatedSignatures","_nextClientSubscriptionId","_subscriptionDisposeFunctionsByClientSubscriptionId","_subscriptionCallbacksByServerSubscriptionId","_subscriptionsByHash","_subscriptionsAutoDisposedByRpc","confirmTransactionInitialTimeout","putativeUrl","test","assertEndpointUrl","matches","match","hostish","portWithColon","protocol","startsWith","startPort","websocketPort","makeWebsocketUrl","url","customFetch","fetchWithMiddleware","fetchImpl","info","init","reject","modifiedInfo","modifiedInit","modifiedFetchArgs","clientBrowser","RpcClient","callback","body","agent","headers","too_many_requests_retries","waitTime","log","statusText","text","ok","createRpcClient","requests","batch","methodName","createRpcBatchRequest","RpcWebSocketClient","autoconnect","max_reconnects","Infinity","_wsOnOpen","_wsOnError","_wsOnClose","_wsOnAccountNotification","_wsOnProgramAccountNotification","_wsOnSlotNotification","_wsOnSlotUpdatesNotification","_wsOnSignatureNotification","_wsOnRootNotification","_wsOnLogsNotification","_buildArgs","unsafeRes","getBalanceAndContext","then","catch","configArg","tokenMintAddress","tokenAddress","ownerAddress","_args","arg","mintAddress","getAccountInfoAndContext","publicKeys","getMultipleAccountsInfoAndContext","configOrCommitment","encoding","configWithoutEncoding","strategy","rawSignature","decodedSignature","subscriptionCommitment","confirmationPromise","subscriptionId","onSignature","__type","PROCESSED","expiryPromise","timeoutMs","timeoutId","TIMED_OUT","checkBlockHeight","getBlockHeight","currentBlockHeight","BLOCKHEIGHT_EXCEEDED","race","outcome","clearTimeout","removeSignatureListener","startSlot","limit","getSignatureStatuses","getSupply","excludeNonCirculatingAccountsList","epochSchedule","wireMessage","getRecentBlockhashAndContext","getLatestBlockhashAndContext","rawConfig","_buildArgsAtLeastConfirmed","extra","block","endSlot","transactionDetails","getFirstAvailableBlock","firstAvailableBlock","getConfirmedBlockSignatures","until","getSlot","highestConfirmedRoot","before","getConfirmedSignaturesForAddress2","confirmedSignatureInfo","accountInfo","fromAccountData","getNonceAndContext","disableCache","timeSinceFetch","expired","_pollNewBlockhash","startTime","cachedLatestBlockhash","cachedBlockhash","getLatestBlockhash","MS_PER_SLOT","transactionOrMessage","includeAccounts","originalTx","_blockhashWithExpiryBlockHeight","encodedTransaction","sigVerify","logTrace","traceIndent","rawTransaction","sendEncodedTransaction","setInterval","notify","_updateSubscriptions","clearInterval","close","activeWebSocketGeneration","isCurrentConnectionStillActive","callbacks","serverSubscriptionId","unsubscribeMethod","_handleServerNotification","callbackArgs","notification","_makeSubscription","subscriptionConfig","clientSubscriptionId","fastStableStringify","existingSubscription","onAccountChange","_unsubscribeClientSubscription","accountId","onProgramAccountChange","filters","onLogs","mentions","onSlotChange","onSlotUpdate","subscriptionName","dispose","override","_err","onSignatureWithOptions","onRootChange","keypair","_keypair","skipValidation","computedPublicKey","ii","LOOKUP_TABLE_INSTRUCTION_LAYOUTS","CreateLookupTable","bigintLayout","FreezeLookupTable","ExtendLookupTable","DeactivateLookupTable","CloseLookupTable","AddressLookupTableProgram","recentSlot","lookupTableAddress","bumpSeed","lookupTable","addr","recipient","COMPUTE_BUDGET_INSTRUCTION_LAYOUTS","RequestUnits","RequestHeapFrame","SetComputeUnitLimit","SetComputeUnitPrice","ComputeBudgetProgram","microLamports","ED25519_INSTRUCTION_LAYOUT","instructionIndex","publicKeyOffset","signatureOffset","messageDataOffset","numSignatures","padding","signatureInstructionIndex","publicKeyInstructionIndex","messageDataSize","messageInstructionIndex","Ed25519Program","createInstructionWithPublicKey","secp256k1","msgs","ecdsaSign","drbg","reseedSync","generateSync","publicKeyCreate","fromPrivateKey","SECP256K1_INSTRUCTION_LAYOUT","sha3","keccak_256","recoveryId","Secp256k1Program","createInstructionWithEthAddress","ethAddress","publicKeyToEthAddress","rawAddress","substr","ethAddressOffset","ethAddressInstructionIndex","pkey","messageHash","STAKE_CONFIG_ID","Lockup","unixTimestamp","custodian","STAKE_INSTRUCTION_LAYOUTS","Initialize","Authorize","Delegate","Split","Withdraw","Deactivate","Merge","AuthorizeWithSeed","StakeProgram","Staker","Withdrawer","stakePubkey","lockup","staker","withdrawer","initialize","stakeAuthorizationType","custodianPubkey","newAuthorized","authorityBase","authoritySeed","authorityOwner","splitStakePubkey","splitInstruction","sourceStakePubKey","VOTE_INSTRUCTION_LAYOUTS","InitializeAccount","VoteProgram","Voter","voteInit","authorizedVoter","authorizedWithdrawer","initializeAccount","voteAuthorizationType","authorizedWithdrawerPubkey","currentVoteAccountBalance","rentExemptMinimum","withdraw","website","details","keybaseUsername","sha384","sha512_256","SHA512","_sha2_js_1","_u64_js_1","SHA512_Kh","SHA512_Kl","SHA512_W_H","SHA512_W_L","Ah","Al","Bh","Bl","Ch","Cl","Dh","Dl","Eh","El","Fh","Fl","Gh","Gl","Hh","Hl","getUint32","W15h","W15l","s0h","rotrSH","shrSH","s0l","rotrSL","shrSL","W2h","W2l","s1h","rotrBH","s1l","rotrBL","SUMl","add4L","SUMh","add4H","sigma1h","sigma1l","CHIh","CHIl","T1ll","add5L","T1h","add5H","T1l","sigma0h","sigma0l","MAJh","MAJl","All","add3L","add3H","SHA512_256","SHA384","toBig","fromBig","U32_MASK64","le","lst","rotr32H","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","low","inherits","ctor","superCtor","super_","TempCtor","endian","isBN","negative","words","red","_init","wordSize","parseHex4Bits","parseHexByte","lowerBound","parseBase","mul","move","right","cmp","_initNumber","_initArray","replace","_parseHex","_parseBase","toArray","w","off","_strip","limbLen","limbPow","imuln","_iaddn","_move","clone","_expand","_normSign","for","inspect","zeros","groupSizes","groupBases","carry","groupSize","groupBase","isZero","modrn","idivn","toNumber","ret","smallMulTo","ncarry","rword","maxJ","ArrayType","reqLength","allocUnsafe","_toArrayLikeLE","position","_toArrayLikeBE","clz32","_countBits","_zeroBits","bitLength","hi","zeroBits","toTwos","width","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","sub","comb10MulTo","mid","o","a0","al0","ah0","al1","ah1","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","bl1","bh1","bl2","bh2","bl3","bh3","bl4","bh4","bl5","bh5","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","mulTo","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","mulp","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","sqr","isqr","toBitArray","iushln","carryMask","newCarry","ishln","iushrn","hint","extended","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","qj","div","divmod","positive","divn","umod","divRound","dm","half","andln","modn","egcd","g","isEven","yp","xp","im","isOdd","jm","_invmp","x1","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","Red","toRed","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","minv","ireduce","rlen","imulK","strip","outLen","prev","mod3","nOne","lpow","inv","wnd","currentLen","mont","_Buffer","ALPHABET","BASE_MAP","charAt","xc","LEADER","FACTOR","iFACTOR","decodeUnsafe","source","psz","zeroes","b256","it3","it4","vch","pbegin","pend","b58","it1","it2","repeat","Maj","SHA256_K","IV","SHA256_W","SHA256","W15","s0","s1","__createBinding","enumerable","__setModuleDefault","__decorate","decorators","target","desc","arguments","getOwnPropertyDescriptor","Reflect","decorate","__importStar","__esModule","__importDefault","BinaryReader","BinaryWriter","BorshError","baseDecode","baseEncode","bn_js_1","bs58_1","textDecoder","TextDecoder","fatal","INITIAL_LENGTH","fieldPath","originalMessage","fieldName","buf","maybeResize","writeUInt8","writeUInt16LE","writeBuffer","writeU32","fn","handlingRangeError","propertyKey","propertyDescriptor","originalMethod","apply","readUInt8","readUInt16LE","readBuffer","readU32","capitalizeFirstLetter","toUpperCase","serializeField","fieldType","writer","writeFixedArray","writeArray","writeU8","serializeStruct","addToFieldPath","borshSerialize","structSchema","deserializeField","reader","readFixedArray","readArray","readU8","deserializeStruct","classType","borshDeserialize","fieldValue","Writer","Reader","inRange","ToDictionary","Stream","tokens","endOfStream","read","prepend","token","pop","decoderError","opt_code_point","DEFAULT_ENCODING","toLowerCase","_streaming","_BOMseen","_decoder","_fatal","_ignoreBOM","_encoder","_options","UTF8Decoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","stream","bite","code_point","UTF8Encoder","temp","ArrayBuffer","input_stream","code_points","cp","fromCharCode","codePointsToString","opt_string","stringToCodePoints","reversed","toBigIntBE","toBufferBE","_interopRequireDefault","Client","_createClass2","_classCallCheck2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_websocket","_createSuper","Derived","hasNativeReflectConstruct","construct","sham","Proxy","valueOf","_isNativeReflectConstruct","Super","NewTarget","_CommonClient","_super","_ref$autoconnect","_ref$reconnect","reconnect","_ref$reconnect_interv","reconnect_interval","_ref$max_reconnects","generate_request_id","WebSocketBrowserImpl","_EventEmitter","protocols","_this","socket","WebSocket","onopen","onmessage","event","onerror","onclose","reason","optionsOrCallback","send","listener","addEventListener","EventEmitter","_regenerator","_asyncToGenerator2","_typeof2","_eventemitter","__rest","getOwnPropertySymbols","propertyIsEnumerable","CommonClient","webSocketFactory","_a","_a$autoconnect","_a$reconnect","_a$reconnect_interval","_a$max_reconnects","rest_options","queue","rpc_id","ready","current_reconnects","_connect","timeout","ws_opts","_this2","promise","_login","mark","_callee","resp","wrap","_context","sent","abrupt","stop","_listMethods","_callee2","_context2","_this3","_subscribe","_callee3","_context3","_x2","_unsubscribe","_callee4","_context4","_x3","_this4","parse","listeners","uuid","v4","generateRequest","ClientBrowser","callServer","reviver","replacer","generator","notificationIdNull","isBatch","hasCallback","_parseResponse","responseText","isError","HMAC","_key","iHash","oHash","getPrototypeOf"],"mappings":";uLAEAA,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQE,YAAcF,EAAQG,wBAA0BH,EAAQI,gBAAkBJ,EAAQK,UAAYL,EAAQM,KAAON,EAAQO,YAAcP,EAAQQ,QAAUR,EAAQS,YAAcT,EAAQU,UAAYV,EAAQW,SAAWX,EAAQY,WAAaZ,EAAQa,WAAab,EAAQc,KAAOd,EAAQe,KAAOf,EAAQgB,WAAahB,EAAQiB,IAAMjB,EAAQkB,QAAK,EAGlV,IAAMC,EAAWC,EAAQ,MAGzBpB,EAAQkB,GADG,SAACG,GAAD,OAAS,IAAIC,WAAWD,EAAIE,OAAQF,EAAIG,WAAYH,EAAII,aAGnEzB,EAAQiB,IADI,SAACI,GAAD,OAAS,IAAIK,YAAYL,EAAIE,OAAQF,EAAIG,WAAYG,KAAKC,MAAMP,EAAII,WAAa,KAI7FzB,EAAQgB,WADW,SAACK,GAAD,OAAS,IAAIQ,SAASR,EAAIE,OAAQF,EAAIG,WAAYH,EAAII,aAQzE,GAJAzB,EAAQe,KADK,SAACe,EAAMC,GAAP,OAAkBD,GAAS,GAAKC,EAAWD,IAASC,GAEjE/B,EAAQc,KAAmE,KAA5D,IAAIQ,WAAW,IAAII,YAAY,CAAC,YAAaH,QAAQ,IAG/DvB,EAAQc,KACT,MAAM,IAAIkB,MAAM,+CACpB,IAAMC,EAAQC,MAAMC,KAAK,CAAEC,OAAQ,MAAO,SAACC,EAAGC,GAAJ,OAAUA,EAAEC,SAAS,IAAIC,SAAS,EAAG,QAc/ExC,EAAQa,WAVR,SAAoB4B,GAEhB,KAAMA,aAAkBnB,YACpB,MAAM,IAAIU,MAAM,uBAEpB,IADA,IAAIU,EAAM,GACDJ,EAAI,EAAGA,EAAIG,EAAOL,OAAQE,IAC/BI,GAAOT,EAAMQ,EAAOH,IAExB,OAAOI,GAuBX1C,EAAQY,WAjBR,SAAoB8B,GAChB,GAAmB,kBAARA,EACP,MAAM,IAAIC,UAAU,2CAA6CD,GAErE,GAAIA,EAAIN,OAAS,EACb,MAAM,IAAIJ,MAAM,6CAEpB,IADA,IAAMY,EAAQ,IAAItB,WAAWoB,EAAIN,OAAS,GACjCE,EAAI,EAAGA,EAAIM,EAAMR,OAAQE,IAAK,CACnC,IAAMO,EAAQ,EAAJP,EACJQ,EAAUJ,EAAIK,MAAMF,EAAGA,EAAI,GAC3BG,EAAOC,OAAOC,SAASJ,EAAS,IACtC,GAAIG,OAAOE,MAAMH,IAASA,EAAO,EAC7B,MAAM,IAAIhB,MAAM,yBACpBY,EAAMN,GAAKU,EAEf,OAAOJ,GAKX,IAAMjC,EAAQ,6BAAG,kHAAH,qD,kCAGd,WAAyByC,EAAOC,EAAMC,GAAtC,2EACQC,EAAKC,KAAKC,MACLnB,EAAI,EAFjB,YAEoBA,EAAIc,GAFxB,oBAGQE,EAAGhB,MAEGoB,EAAOF,KAAKC,MAAQF,IACd,GAAKG,EAAOL,GANhC,uEAQc,EAAIrD,EAAQW,YAR1B,OASQ4C,GAAMG,EATd,QAE+BpB,IAF/B,4D,sBAaA,SAAS7B,EAAYkD,GACjB,GAAmB,kBAARA,EACP,MAAM,IAAIhB,UAAJ,kDAAyDgB,IAEnE,OAAO,IAAIC,aAAcC,OAAOF,GAGpC,SAASnD,EAAQsD,GAGb,GAFoB,kBAATA,IACPA,EAAOrD,EAAYqD,MACjBA,aAAgBxC,YAClB,MAAM,IAAIqB,UAAJ,wDAA+DmB,EAA/D,MACV,OAAOA,EA3BX9D,EAAQW,SAAWA,EAcnBX,EAAQU,U,gDAORV,EAAQS,YAAcA,EAQtBT,EAAQQ,QAAUA,EAmBlBR,EAAQO,YAdR,WAAgC,2BAARwD,EAAQ,yBAARA,EAAQ,gBAC5B,IAAKA,EAAOC,OAAM,SAACC,GAAD,OAAOA,aAAa3C,cAClC,MAAM,IAAIU,MAAM,4BACpB,GAAsB,IAAlB+B,EAAO3B,OACP,OAAO2B,EAAO,GAGlB,IAFA,IAAM3B,EAAS2B,EAAOG,QAAO,SAACD,EAAG5C,GAAJ,OAAY4C,EAAI5C,EAAIe,SAAQ,GACnD+B,EAAS,IAAI7C,WAAWc,GACrBE,EAAI,EAAG8B,EAAM,EAAG9B,EAAIyB,EAAO3B,OAAQE,IAAK,CAC7C,IAAMjB,EAAM0C,EAAOzB,GACnB6B,EAAOE,IAAIhD,EAAK+C,GAChBA,GAAO/C,EAAIe,OAEf,OAAO+B,G,IAIL7D,E,iEAEF,WACI,OAAOgE,KAAKC,iB,KAGpBvE,EAAQM,KAAOA,EASfN,EAAQK,UANR,SAAmBmE,EAAUC,GACzB,QAAaC,IAATD,IAAuC,kBAATA,IAFfE,EAEmDF,EAFH,oBAAxC3E,OAAO8E,UAAUrC,SAASsC,KAAKF,IAA8BA,EAAIG,cAAgBhF,SAGxG,MAAM,IAAI6C,UAAU,yCAHN,IAACgC,EAKnB,OADe7E,OAAOiF,OAAOP,EAAUC,IAY3CzE,EAAQI,gBARR,SAAyB4E,GACrB,IAAMC,EAAQ,SAACC,GAAD,OAAaF,IAAkBG,OAAO3E,EAAQ0E,IAAUE,UAChEC,EAAML,IAIZ,OAHAC,EAAMK,UAAYD,EAAIC,UACtBL,EAAMM,SAAWF,EAAIE,SACrBN,EAAMO,OAAS,kBAAMR,KACdC,GAWXjF,EAAQG,wBARR,SAAiCsF,GAC7B,IAAMR,EAAQ,SAACS,EAAKjB,GAAN,OAAegB,EAAShB,GAAMU,OAAO3E,EAAQkF,IAAMN,UAC3DC,EAAMI,EAAS,IAIrB,OAHAR,EAAMK,UAAYD,EAAIC,UACtBL,EAAMM,SAAWF,EAAIE,SACrBN,EAAMO,OAAS,SAACf,GAAD,OAAUgB,EAAShB,IAC3BQ,GAiBXjF,EAAQE,YAXR,WAAuC,IAAlByF,EAAkB,uDAAJ,GAC/B,GAAIxE,EAASyE,OAAOC,IAChB,OAAO1E,EAASyE,OAAOC,IAAIC,gBAAgB,IAAIxE,WAAWqE,IAEzD,GAAIxE,EAASyE,OAAOG,KACrB,OAAO,IAAIzE,WAAWH,EAASyE,OAAOG,KAAK7F,YAAYyF,GAAapE,QAGpE,MAAM,IAAIS,MAAM,uD,qBC7JxB,IAAIgE,EAAQ5E,EAAQ,MAGpB6E,EAAOjG,QAAUgG,EAFF,+D,0lBCGT,SAAUE,EAAwBC,GACtC,OAAO,SAACC,EAA2BC,EAA2BC,EAA8BC,GAC1F,MAAmB,mBAAfH,EAAII,QACNH,EAAIlC,OAASgC,EACNI,KAEFD,KAIL,SAAUG,EAA+BC,GAC7C,OAAO,SACLN,EACAC,EACAC,EACAC,GAEA,MAAmB,2BAAfH,EAAII,QACNH,EAAIlC,OAASuC,EACNH,KAEFD,KAIL,SAAUK,EAAuBD,GACrC,IAAQP,EAAYO,EAAZP,QAER,OAAOS,YAAgB,CAACV,EAAwBC,GAAUM,EAA+BC,KAGrF,SAAUG,EAAoBH,GAIlC,IAAQI,EAAcJ,EAAdI,UACFC,EAAkBC,YAAsB,CAAEF,cAEhD,MAAO,CAAEG,kBADiBL,YAAgB,CAACD,EAAuBD,GAAiBK,IACvDA,mBC5Bd,WAA8FG,GAAA,IAAhEC,EAAgE,EAAhEA,YAC5C,OAAOC,YAAqB,iDAAC,WAAOC,EAASC,EAAUhB,GAA1B,oFAEZ,gBADIe,EAAXb,OADmB,yCAEUF,KAFV,UAItBa,EAJsB,sBAIH,IAAInF,MAAM,oDAJP,uBAMJmF,EAAYE,GANR,cAMrBE,EANqB,OAO3BD,EAASnD,OAASoD,EAPS,uBAQpB7C,GARoB,4CAAD,2DAYd,WAIf8C,GAAA,IAHCC,EAGD,EAHCA,gBAIA,OAAOL,YAAqB,iDAAC,WAAOC,EAASC,EAAUhB,GAA1B,oFAEZ,oBADIe,EAAXb,OADmB,yCAEcF,KAFd,UAItBmB,EAJsB,sBAIC,IAAIzF,MAAM,wDAJX,uBAMJyF,EAAgBJ,GANZ,cAMrBE,EANqB,OAO3BD,EAASnD,OAASoD,EAPS,uBAQpB7C,GARoB,4CAAD,2DAYd,WACdgD,EACAC,GAEA,OAAOP,YAAqB,iDAAa,WAAOC,EAASC,EAAUhB,GAA1B,oFACpBe,EAAXb,SACOkB,EAFwB,yCAEHpB,KAFG,UAIlCqB,EAJkC,sBAInB,IAAI3F,MAAJ,6BAAgC0F,EAAtC,kBAJyB,uBAMlBC,EAAQN,GANU,cAMjClD,EANiC,OAQvCmD,EAASnD,OAASA,EARqB,uBAShCO,GATgC,4CAAb,2DAaxB,SAAUkD,EAAuBC,GACrC,IAAQV,EACNU,EADMV,YAAaM,EACnBI,EADmBJ,gBAAiBK,EACpCD,EADoCC,gBAAiBC,EACrDF,EADqDE,uBAAwBC,EAC7EH,EAD6EG,oBAAqBC,EAClGJ,EADkGI,YAAaC,EAC/GL,EAD+GK,cAAeC,EAC9HN,EAD8HM,aAGhI,OAAOvB,YAAgB,CACrBwB,EAAgC,CAAEX,oBAClCY,EAA4B,CAAElB,gBAC9BmB,EAAmE,kBAAmBR,GACtFQ,EAA6E,yBAA0BP,GACvGO,EAAuE,sBAAuBN,GAC9FM,EAAiE,cAAeL,GAChFK,EAA0C,mBAAoBJ,GAC9DI,EAA0C,kBAAmBH,K,qkBCjE3CI,E,kDACpBzD,WAAwFoC,GAAA,wBAA1EsB,EAA0E,EAA1EA,OAAQC,EAAkE,EAAlEA,MAAkE,mBAChF,CAAED,OAAQ,CAAEE,YAAW,OAAOF,EAAOE,aAAd,IAA2BC,eAAgBC,IAAiBC,UAAYJ,U,gGAG/E,WAACK,GAAD,oGACfC,QAAQC,WADO,2C,mIAIE,WAACC,GAAD,kGAClBC,EAAS,IAAIC,IAEbtB,EAAmB,KAAKuB,oBAAoBH,GAC5CI,EAAmBzB,EAAuBC,GAChDqB,EAAOI,KAAKD,GAENE,EAAmB5C,EAAuB,KAAK6B,OAAOE,aAC5DQ,EAAOI,KAAKC,IAENC,EAAwB,KAAKC,yBAAyBR,KAE1DC,EAAOI,KAAKE,GAGRE,EAAWC,YAAmBT,GACpC,KAAKU,0BAA0BF,GAhBP,UAiBlB,KAAKG,gBAjBa,iD,mIAoBG,qGACnBnB,EAAgB,KAAKF,OAArBE,YACR,KAAKvD,OAAO,CACVgB,QAASuC,EAAYvC,UAHI,kBAKpBuC,EAAYvC,SAAW,IALH,gD,4FAQnBsD,SAAyBX,Q,GArCiBgB,KCAzCC,EAA2Bd,YACtC,IAAMpB,EAAsC,CAC1CJ,gBAAe,iDAAE,iHACRwB,EAAiBe,UAAY,CAACC,IAAKpG,OAAOoF,EAAiBe,UAAUxJ,YAAc,IAD3E,2CAAF,qDAGf2G,YAAW,iDAAE,iHAAa8B,EAAiBe,UAAY,CAACC,IAAKpG,OAAOoF,EAAiBe,UAAUxJ,YAAc,IAAhG,2CAAF,qDACX0H,cAAa,iDAAE,8FACPgC,YAAUC,IAAIC,qBADP,2CAAF,qDAGbjC,aAAY,iDAAE,8FACN+B,YAAUC,IAAIC,qBADR,2CAAF,qDAGZtC,gBAAe,iDAAE,WAAO1B,GAAP,iGACW6C,EAAiBnB,gBAAgB1B,EAAIiE,OAAOnF,SADvD,cACToF,EADS,yBAERA,GAFQ,2CAAF,sDAIfrC,YAAW,iDAAE,WAAO7B,GAAP,iGACW6C,EAAiBhB,YAAY7B,EAAIiE,OAAOnF,SADnD,cACLA,EADK,yBAEJA,GAFI,2CAAF,sDAIX8C,oBAAmB,iDAAE,WAAO5B,GAAP,wFACd,QAAD,EAACA,EAAIiE,cAAJE,SAAYrF,SAAY,QAAD,EAACkB,EAAIiE,cAAJG,SAAYtF,QAAQ9C,OAD9B,sBAEX8H,YAAUC,IAAIM,cAAc,WAFjB,uBAIOxB,EAAiBjB,oBAAoB5B,EAAIiE,OAAOnF,SAJvD,cAIboF,EAJa,yBAKZA,GALY,2CAAF,sDAOnBvC,uBAAsB,iDAAE,WAAO3B,GAAP,iGACF6C,EAAiBlB,uBAAuB3B,EAAIiE,OAAOnF,SADjD,cAChBwF,EADgB,yBAEf,CAAEC,UAAWD,EAAMC,YAFJ,2CAAF,uDAKxB,OAAO9C,G,ikBCpCH,SAAU+C,EAAsClB,GACpD,OAAOtC,YAAqB,iDAAC,WAAOhB,EAA6BC,EAA4BwE,GAAhE,iGACNnB,EAASrC,QAATqC,KAChBtD,IAFsB,OACrBjC,EADqB,OAI3BkC,EAAIlC,OAASA,EAJc,2CAAD,2D,ICGjB2G,E,yKACD1B,SAAoBH,GAC5B,OAAOc,EAAwBd,K,sCAGvBQ,SAAyBR,GACjC,OAAO2B,EAAsC3B,O,GANJV,GCHhCwC,E,yKACD3B,SAAoBH,GAC5B,OCE4B,SAACA,EAAkC+B,GACjE,IAAMnD,EAAsC,CAC1CJ,gBAAe,iDAAE,gHACQwB,EAAiBgC,UADzB,uBACPnH,EADO,EACPA,KADO,kBAER,CAACA,EAAKkG,YAFE,2CAAF,qDAIf7C,YAAW,iDAAE,gHACY8B,EAAiBgC,UAD7B,uBACHnH,EADG,EACHA,KADG,kBAEJ,CAACA,EAAKkG,YAFF,2CAAF,qDAIX9B,cAAa,iDAAE,8FACPgC,YAAUC,IAAIC,qBADP,2CAAF,qDAGbjC,aAAY,iDAAE,8FACN+B,YAAUC,IAAIC,qBADR,2CAAF,qDAGZtC,gBAAe,iDAAE,WAAO1B,GAAP,4FACT8E,EAAY9E,EAAIiE,OAAOnF,QADd,sBAEOgF,YAAUC,IAAIgB,eAAe,CAAEjG,QAAS,gCAF/C,uBAGQ+D,EAAiBnB,gBAAgBmC,IAAKpG,OAAOqH,EAAUE,qBAH/D,oBAGPtH,EAHO,EAGPA,MACEkG,WAAclG,EAAK6G,UAJd,sBAI+B,IAAI3I,MAAM,uCAJzC,cAKTgI,EAAY,IAAIqB,IAAUvH,EAAKkG,WAC/BW,EAAYV,IAAKqB,OAAOxH,EAAK6G,WACnCO,EAAUK,aAAavB,EAAWW,GAPnB,kBAQRO,GARQ,4CAAF,sDAUfjD,YAAW,iDAAE,WAAO7B,GAAP,iGACY6C,EAAiBhB,YAAY7B,EAAIiE,OAAOnF,SADpD,cACLoC,EADK,yBAEJ2C,IAAKqB,OAAOhE,EAASxD,KAAK6G,YAFtB,2CAAF,sDAIX5C,uBAAsB,iDAAE,WAAO3B,GAAP,oGAChBsD,EAAWsB,IADK,sBAEDd,YAAUR,SAAS8B,OAAO,CAAEtG,QAAS,8BAA+BuG,KAAM,OAFzE,UAGhBP,EAAY9E,EAAIiE,OAAOnF,QAHP,sBAIAgF,YAAUC,IAAIgB,eAAe,CAAEjG,QAAS,gCAJxC,uBAKC+D,EAAiBnB,gBAAgBmC,IAAKpG,OAAOqH,EAAUE,qBALxD,oBAKdtH,EALc,EAKdA,MACEkG,WAAclG,EAAK6G,UANP,uBAMwB,IAAI3I,MAAM,uCANlC,eAOhBgI,EAAY,IAAIqB,IAAUvH,EAAKkG,WAC/BW,EAAYV,IAAKqB,OAAOxH,EAAK6G,WACnCO,EAAUK,aAAavB,EAAWW,GATZ,UAUKjB,EAASrC,QAA2B,CAAEb,OAAQ,yBAA0B6D,OAAQ,KAVrF,eAUhB3B,EAVgB,OAWhBgD,EAAO,IAAIC,IAAWjD,EAAY5B,WAXlB,UAYJ4E,EAAKE,mBAAmBV,EAAUW,aAZ9B,eAYhBxF,EAZgB,yBAaf,CAAEsE,UAAWtE,IAbE,4CAAF,sDAetB2B,oBAAmB,iDAAE,WAAO5B,GAAP,0GACd,QAAD,EAACA,EAAIiE,cAAJE,SAAYrF,SAAY,QAAD,EAACkB,EAAIiE,cAAJG,SAAYtF,QAAQ9C,OAD9B,sBAEX8H,YAAUC,IAAIM,cAAc,WAFjB,OAUnB,IALMqB,EAAU1F,EAAIiE,OAAOnF,QACnB9C,EAAW0J,EAAX1J,OAEF2J,EAAa,GAEVzJ,EAAI,EAAGA,EAAIF,EAAQE,IAC1ByJ,EAAWzC,KAAKW,IAAKpG,OAAOuC,EAAIiE,OAAOnF,QAAQ5C,GAAG8I,qBAXjC,gBAaSnC,EAAiBjB,oBAAoB+D,GAb9C,mBAaXrG,EAbW,EAaXA,KAAK5B,EAbM,EAaNA,MAEHkG,YAAa,YAAKgC,kBAAL,eAAiB5J,UAAWA,EAfhC,uBAe8C,IAAIJ,MAAM0D,GAfxD,QAmBnB,IAFMsE,EAAY,IAAIqB,IAAUvH,EAAKkG,WAE5B1H,EAAI,EAAGA,EAAIF,EAAQE,IACpBqI,EAAYV,IAAKqB,OAAOxH,EAAKkI,WAAW1J,IAC9CwJ,EAAQxJ,GAAGiJ,aAAavB,EAAWW,GArBlB,yBAwBZmB,GAxBY,4CAAF,uDA2BrB,OAAOjE,ED1EEoE,CAAiBhD,EAAkB,KAAK+B,uBAAuBkB,KAAK,W,GAF/B3D,GECnC4D,E,yKACD/C,SAAoBH,GAC5B,OCE+B,SAACA,EAA4B+B,GAC9D,IAAMoB,EAA2BrC,EAAwBd,GAUzD,OATAmD,EAAyBrE,uBAAzBqE,iDAAkD,WAAOhG,GAAP,4FAC1CsD,EAAWsB,IAD+B,sBAE3Bd,YAAUR,SAAS8B,OAAO,CAAEtG,QAAS,8BAA+BuG,KAAM,OAF/C,uBAGtBxC,EAAiBnB,gBAAgB1B,EAAIiE,OAAOnF,SAHtB,cAG1CoF,EAH0C,gBAIrBZ,EAASrC,QAA2B,CAAEb,OAAQ,yBAA0B6D,OAAQ,KAJ3D,cAI1C3B,EAJ0C,OAK1CgD,EAAO,IAAIC,IAAWjD,EAAY5B,WALQ,UAM9B4E,EAAKE,mBAAmBtB,EAAYuB,aANN,eAM1CxF,EAN0C,yBAOzC,CAAEsE,UAAWtE,IAP4B,4CAAlD+F,sDASOA,EDbEC,CAAoBpD,EAAkB,KAAK+B,uBAAuBkB,KAAK,W,GAFpC3D,GEAjC+D,E,yKACDlD,SAAoBH,GAC5B,OCE6B,SAACA,EAAgC+B,GAChE,IAAMnD,EAAmBkC,EAAwBd,GAcjD,OAbApB,EAAiBI,YAAjBJ,iDAA+B,WAAOzB,GAAP,mGACD6C,EAAiBsD,KAAKnG,EAAIiE,OAAOnF,QAAS,QADzC,uBACrByF,EADqB,EACrBA,UADqB,kBAEtBA,GAFsB,2CAA/B9C,sDAIAA,EAAiBE,uBAAjBF,iDAA0C,WAAOzB,GAAP,4FAClCsD,EAAWsB,IADuB,sBAEnBd,YAAUR,SAAS8B,OAAO,CAAEtG,QAAS,8BAA+BuG,KAAM,OAFvD,uBAGdxC,EAAiBnB,gBAAgB1B,EAAIiE,OAAOnF,SAH9B,cAGlCoF,EAHkC,gBAIbZ,EAASrC,QAA2B,CAAEb,OAAQ,yBAA0B6D,OAAQ,KAJnE,cAIlC3B,EAJkC,OAKlCgD,EAAO,IAAIC,IAAWjD,EAAY5B,WALA,UAMtB4E,EAAKE,mBAAmBtB,EAAYuB,aANd,eAMlCxF,EANkC,yBAOjC,CAAEsE,UAAWtE,IAPoB,4CAA1CwB,sDASOA,EDjBE2E,CAAkBvD,EAAkB,KAAK+B,uBAAuBkB,KAAK,W,GAFpC3D,GEC/BkE,EAAoBxD,YAC/B,IAAMpB,EAAsC,CAC1CJ,gBAAe,iDAAE,8GACQwB,EAAiB5B,QAAkB,CACxDb,OAAQ,yBACR6D,OAAQ,KAHK,cACT9C,EADS,yBAKRA,GALQ,2CAAF,qDAQfJ,YAAW,iDAAE,8GACY8B,EAAiB5B,QAAkB,CACxDb,OAAQ,kBACR6D,OAAQ,KAHC,cACL9C,EADK,yBAKJA,GALI,2CAAF,qDAQXW,cAAa,iDAAE,8FACPgC,YAAUC,IAAIC,qBADP,2CAAF,qDAGbjC,aAAY,iDAAE,8FACN+B,YAAUC,IAAIC,qBADR,2CAAF,qDAGZnC,YAAW,iDAAE,WAAO7B,GAAP,sFACP,UAACA,EAAIiE,cAAL,OAACE,EAAYrF,QADN,sBAEHgF,YAAUC,IAAIM,cAAc,WAFzB,uBAIWxB,EAAiBhB,YAAY7B,EAAIiE,OAAOnF,SAJnD,cAILA,EAJK,yBAKJA,GALI,2CAAF,sDAQX4C,gBAAe,iDAAE,WAAO1B,GAAP,wFACX,UAACA,EAAIiE,cAAL,OAACG,EAAYtF,QADF,sBAEPgF,YAAUC,IAAIM,cAAc,WAFrB,cAITS,EAAY9E,EAAIiE,OAAOnF,QAJd,SAKQ+D,EAAiBnB,gBAAgBoD,GALzC,cAKT5D,EALS,yBAMRA,GANQ,2CAAF,sDASfS,uBAAsB,iDAAE,WAAO3B,GAAP,wFAClB,UAACA,EAAIiE,cAAL,OAACqC,EAAYxH,QADK,sBAEdgF,YAAUC,IAAIM,cAAc,WAFd,cAIhBS,EAAY9E,EAAIiE,OAAOnF,QAJP,SAKC+D,EAAiB0D,gBAAgBzB,GALlC,cAKhB5D,EALgB,yBAMf,CAAEqD,UAAWrD,IANE,2CAAF,sDAStBU,oBAAmB,iDAAE,WAAO5B,GAAP,0FACd,QAAD,EAACA,EAAIiE,cAAJuC,SAAY1H,SAAY,QAAD,EAACkB,EAAIiE,cAAJwC,SAAY3H,QAAQ9C,OAD9B,sBAEX8H,YAAUC,IAAIM,cAAc,WAFjB,cAIbqC,EAAe1G,EAAIiE,OAAOnF,QAJb,SAKI+D,EAAiBjB,oBAAoB8E,GALzC,cAKbxF,EALa,yBAMZA,GANY,2CAAF,uDASrB,OAAOO,G,qkBCvDIkF,E,kDACXjI,WAAwFoC,GAAA,wBAA1EsB,EAA0E,EAA1EA,OAAQC,EAAkE,EAAlEA,MAAkE,mBAChF,CAAED,OAAQ,CAAEE,YAAW,OAAOF,EAAOE,aAAd,IAA2BC,eAAgBC,IAAiBC,UAAYJ,U,gGAG/E,WAACK,GAAD,oGACfC,QAAQC,WADO,2C,mIAIE,WAACC,GAAD,kFACxB,KAAK+D,6BAA6B/D,GADV,SAElB,KAAKgE,YAAYhE,GAFC,gD,mIAKG,qGACtB,KAAKS,SADiB,sBACDQ,YAAUR,SAAS8B,OAAO,CAAEtG,QAAS,2CAA4CuG,KAAM,OADtF,cAEnBtF,EAAY,KAAKqC,OAAOE,YAAxBvC,QAFmB,SAII,KAAKuD,SAASrC,QAAyB,CACpEb,OAAQ,mBALiB,UAIrB0G,EAJqB,OAQrBC,EAAsBC,YAAYF,EAAiB3K,YAAc2K,EAA3CE,YAAmElK,SAASgK,EAAkB,IAAI3K,SAAS,KACnI4D,IAAYgH,EATW,sBAUnBE,IAA0BC,mBAAuDH,6CAAkChH,2BAVhG,cAY3B,KAAKhB,OAAO,CAAEgB,QAASgH,IACvB,KAAKzD,SAAS6D,KAAK,UAAW,CAAEpH,QAAS,KAAKsC,MAAMtC,UACpD,KAAKuD,SAAS6D,KAAK,eAAgB,KAAK9E,MAAMtC,SAdnB,kBAepB,KAAKsC,MAAMtC,SAfS,iD,gIAkBJ,WAAC8C,GAAD,gGACjBpB,EAAmB4E,EAAiBxD,GACpCI,EAAmBzB,EAAuBC,GAC1C2B,EAAwBoB,EAAsC3B,IAC9DC,EAAS,IAAIC,KACZG,KAAKD,GACZH,EAAOI,KAAKE,GACNE,EAAWC,YAAmBT,GACpC,KAAKU,0BAA0BF,GARR,UASjB,KAAKG,gBATY,iD,kJAYiB,WAACZ,GAAD,sFACxCA,EAAiBuE,GAAG,kBAApBvE,iDAAuC,WAAO1B,GAAP,2EACrC,EAAKmC,SAAS6D,KAAK,kBAAmBhG,GADD,2CAAvC0B,uDAGAA,EAAiBuE,GAAG,eAApBvE,iDAAoC,WAAO9C,GAAP,wFAC5BgH,EAAsBC,YAAYjH,GAAWA,EAAvBiH,YAAsClK,SAASiD,EAAS,IAAI5D,SAAS,KAEjG,EAAKkL,UAAU,CACb/E,YAAkBgF,SAAKlF,OAAOE,aAAnB,IAAgCvC,QAASgH,MAJpB,SAM5B,EAAKQ,cAAc1E,GANS,2CAApCA,uDAJwC,2C,4DA5CDa,K,SCFrBV,E,wFAAf,WAMNlC,GANM,4FACL0G,EAKD1G,EALC0G,QACA5C,EAID9D,EAJC8D,uBAKM6C,EAAmB,WACvB,OAAOC,IAAQC,cAAcC,EAAO7L,KAAKyL,EAAS,SAE7B,kBAAZA,EAVN,sBAUkCP,IAA0B5C,cAAc,4BAV1E,cAWCwD,EAAUJ,IACVhG,EAAsC,CAC1CJ,gBAAe,iDAAE,iHACR,CAACwG,EAAQjE,UAAUkE,aADX,2CAAF,qDAGf/G,YAAW,iDAAE,iHAAY,CAAC8G,EAAQjE,UAAUkE,aAA/B,2CAAF,qDAEXhG,cAAa,iDAAE,iHAAY0F,GAAZ,2CAAF,qDACbzF,aAAY,iDAAE,iHAAY8B,IAAKpG,OAAOoK,EAAQE,YAAhC,2CAAF,qDAEZrG,gBAAe,iDAAE,WAAO1B,GAAP,sFACX,UAACA,EAAIiE,cAAL,OAACE,EAAYrF,QADF,sBAEPgF,YAAUC,IAAIM,cAAc,WAFrB,cAITH,EAAclE,EAAIiE,OAAOnF,SACnBkJ,YAAYH,GALT,kBAMR3D,GANQ,2CAAF,sDASfrC,YAAW,iDAAE,WAAO7B,GAAP,sFACP,UAACA,EAAIiE,cAAL,OAACG,EAAYtF,QADN,sBAEHgF,YAAUC,IAAIM,cAAc,WAFzB,cAIL4D,EAAYC,IAAK/B,KAAKgC,SAASnI,EAAIiE,OAAOnF,QAAS+I,EAAQE,WAJtD,kBAKJE,GALI,2CAAF,sDAQXtG,uBAAsB,iDAAE,WAAO3B,GAAP,0FAClB,UAACA,EAAIiE,cAAL,OAACqC,EAAYxH,QADK,sBAEdgF,YAAUC,IAAIM,cAAc,WAFd,UAIhB+D,EAAuBxD,IAJP,sBAKWd,YAAUR,SAAS8B,OAAO,CAAEtG,QAAS,8BAA+BuG,KAAM,OALrF,cAOhBnB,EAAclE,EAAIiE,OAAOnF,SACnBqH,KAAK0B,GARK,SAUJO,EAAqBnH,QAAgB,CACrDb,OAAQ,kBACR6D,OAAQ,CAACJ,IAAKpG,OAAOyG,EAAYuB,gBAZb,cAUhB4C,EAVgB,yBAcf,CAAE9D,UAAW8D,IAdE,4CAAF,sDAiBtBzG,oBAAmB,iDAAE,WAAO5B,GAAP,gGACd,QAAD,EAACA,EAAIiE,cAAJuC,SAAY1H,SAAY,QAAD,EAACkB,EAAIiE,cAAJwC,SAAY3H,QAAQ9C,OAD9B,sBAEX8H,YAAUC,IAAIM,cAAc,WAFjB,OAKbiE,EAAI,QAAGtI,IAAIiE,cAAPsE,WAAA,EAAGvI,EAAYlB,QALN,cAMFwJ,GAAQ,IANN,IAMnB,2BAAWE,EAAkB,QACPA,EACRR,YAAYH,GARP,uDAUZS,GAVY,2CAAF,uDAvDhB,kBAqEE7G,GArEF,2C,6lBCcMgH,E,kDACX/J,WAAiGoC,GAAA,wBAAnFsB,EAAmF,EAAnFA,OAAQC,EAA2E,EAA3EA,MAA2E,mBACzF,CAAED,OAAQ,CAAEE,YAAW,OAAOF,EAAOE,aAAd,IAA2BC,eAAgBC,IAAiBC,UAAYJ,U,2FAYpF,2FACZ,KAAKA,MAAMqG,WADC,sBAET5E,YAAUR,SAAS8B,OAAO,CAAEtG,QAAS,4EAA6EuG,KAAM,OAF/G,uBAGX,KAAKkC,cAAc,KAAKlF,MAAMqG,YAHnB,gCAIV,KAAKN,qBAAqBnH,QAA2B,CAAEb,OAAQ,kBAJrD,gD,kIAOO,WAACoH,GAAD,2GACOxE,EAAoB,CAAEwE,UAAS5C,uBAAwB,KAAKA,uBAAuBkB,KAAK,QAD/F,cAClBrE,EADkB,OAGlBwB,EAAmBzB,EAAuBC,GAE1CqB,EAAS,IAAIC,IALK,EAMMtC,EAAoB,KAAK2B,OAAOE,aAAtDzB,EANgB,EAMhBA,kBACRiC,EAAOI,KAAK,KAAKyF,4BACjB7F,EAAOI,KAAK,KAAK0F,wBACjB9F,EAAOI,KAAKD,GACZH,EAAOI,KAAKrC,GAENyC,EAAWC,YAAmBT,GAEpC,KAAKU,0BAA0BF,GAdP,UAgBlB,KAAKG,gBAhBa,iD,mIAmBA,WAACQ,GAAD,8EACnB,KAAKmE,qBADc,sBACctE,YAAUR,SAAS8B,OAAO,CAAEtG,QAAS,8BAA+BuG,KAAM,OADxF,uBAEE,KAAK+C,qBAAqBnH,QAAyB,CAAEb,OAAQ,qBAF/D,mBAGJ6D,EAAOyE,WAHH,iCAIhB,KAAKnB,cAActD,EAAOyE,YAJV,mBAKtB,KAAKN,qBALiB,UAMJ,KAAKA,qBAAqBnH,QAA2B,CAAEb,OAAQ,oBAN3D,0BAMpBe,SANoB,WAKIgG,KALJ,UAKS,kBALT,uD,iIAWF,WAAClD,GAAD,sFACjB,KAAKmE,qBADY,sBACgBtE,YAAUR,SAAS8B,OAAO,CAAEtG,QAAS,8BAA+BuG,KAAM,OAD1F,cAEhB/C,EAAc,KAAKuG,eAAe5E,EAAOlE,SAC/C,KAAKhB,OAAO,CACVgB,QAAS,YAEX,KAAKsH,UAAU,CAAE/E,gBANK,SAOA,KAAK8F,qBAAqBnH,QAAyB,CAAEb,OAAQ,qBAP7D,cAOhBoH,EAPgB,iBAQhB,KAAKD,cAAcC,GARH,iD,mIAWK,mGACtB,KAAKY,qBADiB,sBACWtE,YAAUR,SAAS8B,OAAO,CAAEtG,QAAS,8BAA+BuG,KAAM,OADrF,uBAEN,KAAK+C,qBAAqBnH,QAAyB,CACtEb,OAAQ,YACR6D,OAAQ,KAJiB,UAErB6E,EAFqB,OAMnBxG,EAAgB,KAAKF,OAArBE,YACO,OAAXwG,EAPuB,sBAQnB7B,IAA0BC,mBAAyE5E,+DAAY5B,YAR5F,cAS3B,KAAK3B,OAAO,CAAEgB,QAASuC,EAAYvC,UAC/B,KAAKsC,MAAMtC,UAAYuC,EAAYvC,UACrC,KAAKuD,SAAS6D,KAAK,eAAgB,KAAK9E,MAAMtC,SAC9C,KAAKuD,SAAS6D,KAAK,UAAW,CAAEpH,QAAS,KAAKsC,MAAMtC,WAZ3B,kBAcpB,KAAKsC,MAAMtC,SAdS,iD,4FAiBrB4I,WAAwB,WACxBI,EAA4C,CAChDC,kBAAiB,iDAAE,WAAOhJ,GAAP,8FACZA,EAAIiE,OADQ,sBACMH,YAAUC,IAAIM,cAAc,0BADlC,YAE0DrE,EAAIiE,OAAvElE,EAFS,EAETA,QAASkJ,EAFA,EAEAA,UAAWC,EAFX,EAEWA,QAASC,EAFpB,EAEoBA,kBAAmBC,EAFvC,EAEuCA,eAEnDrJ,EAJY,sBAIG+D,YAAUC,IAAIM,cAAc,kCAJ/B,UAKZ6E,GAA8B,IAAnBA,EAAQlN,OALP,sBAK2B8H,YAAUC,IAAIM,cAAc,kCALvD,UAMZ+E,EANY,sBAMUtF,YAAUC,IAAIM,cAAc,yCANtC,OAOjB,EAAKgF,SAAS,CACZ9G,eAAgBC,IAAiBC,OACjC1C,UACAuJ,QAAsB,OAAd,YAAAF,OAAA,IAAgBG,SAAU,MAClCC,YAA0B,OAAd,YAAAJ,OAAA,IAAgBK,OAAQ,SACpCC,YAAaT,EACbvI,UAAWwI,EAAQ,GACnBS,eAAgC,OAAjB,YAAAR,OAAA,IAAoB,KAAM,KAd1B,4CAAF,sDAiBjBS,kBAAiB,iDAAE,WAAO5J,GAAP,8EACZA,EAAIiE,OADQ,sBACMH,YAAUC,IAAIM,cAAc,0BADlC,UAEZrE,EAAIiE,OAAOlE,QAFC,sBAEc+D,YAAUC,IAAIM,cAAc,mBAF1C,uBAGX,EAAKwF,YAAY7J,EAAIiE,QAHV,2CAAF,uDAOnB,O,SdpCsG6F,GAAA,IAA5Dd,EAA4D,EAA5DA,kBAAmBY,EAAyC,EAAzCA,kBAC/D,OAAOpJ,YAAgB,CACrB0B,EAA2D,iBAAkB8G,GAC7E9G,EAAuD,oBAAqB0H,KcgC9CG,CAA4BhB,K,kCAIpDH,WAAoB,WACpBoB,EAAoC,CACxCC,iBAAgB,iDAAE,WAAOjK,GAAP,oFACXA,EAAIiE,OADO,sBACOH,YAAUC,IAAIM,cAAc,0BADnC,UAEXrE,EAAIiE,OAAOyE,WAFA,sBAEkB5E,YAAUC,IAAIM,cAAc,sBAF9C,cAGRqE,EAAe1I,EAAIiE,OAAnByE,WAHQ,SAIV,EAAKwB,cAAc,CAAExB,eAJX,2CAAF,uDAOlB,OdtCY,SAA8DyB,GAAA,IAApCF,EAAoC,EAApCA,iBACxC,OAAOzJ,YAAgB,CAAC0B,EAA0D,gBAAiB+H,KcqC1FG,CAAwBJ,O,GArHWtG,K,IAAjC+E,mC,sCAKyB,WAAOxE,GAAP,wFAI5BoG,EAAkB,IAAI5B,EAAyB,CAAErG,OAAQ,CAAEE,YAAa2B,EAAO3B,eAJnD,SAK5B+H,EAAgB9C,cAActD,EAAOuD,SALT,gCAM3B6C,GAN2B,2C,mDALzB5B,I,IClBA6B,E,WAGX5L,WAAY4E,GAAkC,oBAAAiH,4BAC5C,KAAKjH,SAAWA,E,oGAGU,8GACH,KAAKA,SAASrC,QAAkB,CACrDb,OAAQ,kBACR6D,OAAQ,KAHgB,cACpB9C,EADoB,yBAKnBA,GALmB,gD,2IAQO,WAAC+C,GAAD,mGACL,KAAKZ,SAASrC,QAA+B,CACvEb,OAAQ,yBACR6D,OAAQ,CACNnF,QAASoF,KAJoB,uBACzBK,EADyB,EACzBA,UADyB,kBAO1B,CAAEA,cAPwB,gD,qIAUP,WAACL,GAAD,iGACO,KAAKZ,SAASrC,QAAQ,CACrDb,OAAQ,kBACR6D,OAAQ,CACNnF,QAASoF,KAJa,cACpBsG,EADoB,yBAOnBA,GAPmB,gD,yIAUI,WAAC9D,GAAD,iGACI,KAAKpD,SAASrC,QAAQ,CACtDb,OAAQ,sBACR6D,OAAQ,CACNnF,QAAS4H,KAJiB,cACxB+D,EADwB,yBAOvBA,GAPuB,gD,iIAUR,WAAC/M,GAAD,iGACC,KAAK4F,SAASrC,QAAoB,CACvDb,OAAQ,cACR6D,OAAQ,CACNnF,QAASpB,KAJS,cAChBwD,EADgB,yBAOfA,GAPe,gD,6HAUJ,WAAIwJ,GAAJ,iGACG,KAAKpH,SAASrC,QAAWyJ,GAD5B,cACZ3M,EADY,yBAEXA,GAFW,gD,+MC3DtBrE,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ+Q,UAAO,EACf,IAAMC,EAAe5P,EAAQ,MACvB6P,EAAa7P,EAAQ,M,IAerB2P,E,8BACF,WAAYxL,EAAUD,EAAW4L,EAAWpQ,GAAM,wBAC9C,gBACKyE,SAAWA,EAChB,EAAKD,UAAYA,EACjB,EAAK4L,UAAYA,EACjB,EAAKpQ,KAAOA,EACZ,EAAKqQ,UAAW,EAChB,EAAK/O,OAAS,EACd,EAAKgP,IAAM,EACX,EAAKC,WAAY,EACjB,EAAK9P,OAAS,IAAID,WAAWiE,GAC7B,EAAK+L,MAAO,EAAIL,EAAWjQ,YAAY,EAAKO,QAXE,E,gCAalD,SAAOuC,GACHkN,EAAaO,QAAQC,OAAOlN,MAI5B,IAHA,IAAQgN,EAA2BhN,KAA3BgN,KAAM/P,EAAqB+C,KAArB/C,OAAQgE,EAAajB,KAAbiB,SAEhBkM,GADN3N,GAAO,EAAImN,EAAWzQ,SAASsD,IACd1B,OACRgP,EAAM,EAAGA,EAAMK,GAAM,CAC1B,IAAMC,EAAO/P,KAAKgQ,IAAIpM,EAAWjB,KAAK8M,IAAKK,EAAML,GAEjD,GAAIM,IAASnM,EAMbhE,EAAO8C,IAAIP,EAAK8N,SAASR,EAAKA,EAAMM,GAAOpN,KAAK8M,KAChD9M,KAAK8M,KAAOM,EACZN,GAAOM,EACHpN,KAAK8M,MAAQ7L,IACbjB,KAAKuN,QAAQP,EAAM,GACnBhN,KAAK8M,IAAM,QATX,IADA,IAAMU,GAAW,EAAIb,EAAWjQ,YAAY8C,GACrCyB,GAAYkM,EAAML,EAAKA,GAAO7L,EACjCjB,KAAKuN,QAAQC,EAAUV,GAanC,OAFA9M,KAAKlC,QAAU0B,EAAK1B,OACpBkC,KAAKyN,aACEzN,O,wBAEX,SAAW0N,GACPhB,EAAaO,QAAQC,OAAOlN,MAC5B0M,EAAaO,QAAQU,OAAOD,EAAK1N,MACjCA,KAAK6M,UAAW,EAIhB,IAAQ5P,EAAiC+C,KAAjC/C,OAAQ+P,EAAyBhN,KAAzBgN,KAAM/L,EAAmBjB,KAAnBiB,SAAUzE,EAASwD,KAATxD,KAC1BsQ,EAAQ9M,KAAR8M,IAEN7P,EAAO6P,KAAS,IAChB9M,KAAK/C,OAAOqQ,SAASR,GAAKc,KAAK,GAE3B5N,KAAK4M,UAAY3L,EAAW6L,IAC5B9M,KAAKuN,QAAQP,EAAM,GACnBF,EAAM,GAGV,IAAK,IAAI9O,EAAI8O,EAAK9O,EAAIiD,EAAUjD,IAC5Bf,EAAOe,GAAK,GAxExB,SAAsBgP,EAAM9P,EAAYvB,EAAOa,GAC3C,GAAiC,oBAAtBwQ,EAAKa,aACZ,OAAOb,EAAKa,aAAa3Q,EAAYvB,EAAOa,GAChD,IAAMsR,EAAOC,OAAO,IACdC,EAAWD,OAAO,YAClBE,EAAKtP,OAAQhD,GAASmS,EAAQE,GAC9BE,EAAKvP,OAAOhD,EAAQqS,GACpBG,EAAI3R,EAAO,EAAI,EACf4R,EAAI5R,EAAO,EAAI,EACrBwQ,EAAKqB,UAAUnR,EAAaiR,EAAGF,EAAIzR,GACnCwQ,EAAKqB,UAAUnR,EAAakR,EAAGF,EAAI1R,GAkE/BqR,CAAab,EAAM/L,EAAW,EAAG8M,OAAqB,EAAd/N,KAAKlC,QAAatB,GAC1DwD,KAAKuN,QAAQP,EAAM,GACnB,IAAMsB,GAAQ,EAAI3B,EAAWjQ,YAAYgR,GACzC1N,KAAKuO,MAAMC,SAAQ,SAACzQ,EAAGC,GAAJ,OAAUsQ,EAAMD,UAAU,EAAIrQ,EAAGD,EAAGvB,Q,oBAE3D,WACI,IAAQS,EAAsB+C,KAAtB/C,OAAQ+D,EAAchB,KAAdgB,UAChBhB,KAAKyO,WAAWxR,GAChB,IAAM8E,EAAM9E,EAAOwB,MAAM,EAAGuC,GAE5B,OADAhB,KAAK0O,UACE3M,I,wBAEX,SAAW4M,GAAI,MACXA,IAAOA,EAAK,IAAI3O,KAAKQ,cACrB,EAAAmO,GAAG5O,IAAH,UAAUC,KAAKuO,QACf,IAAQtN,EAAuDjB,KAAvDiB,SAAUhE,EAA6C+C,KAA7C/C,OAAQa,EAAqCkC,KAArClC,OAAQ+O,EAA6B7M,KAA7B6M,SAAUE,EAAmB/M,KAAnB+M,UAAWD,EAAQ9M,KAAR8M,IAOvD,OANA6B,EAAG7Q,OAASA,EACZ6Q,EAAG7B,IAAMA,EACT6B,EAAG9B,SAAWA,EACd8B,EAAG5B,UAAYA,EACXjP,EAASmD,GACT0N,EAAG1R,OAAO8C,IAAI9C,GACX0R,M,GArFIhC,EAAW3Q,MAwF9BN,EAAQ+Q,KAAOA,G,kCCxGf,SAASmC,EAAOC,GACZ,IAAKlQ,OAAOmQ,cAAcD,IAAMA,EAAI,EAChC,MAAM,IAAInR,MAAJ,kCAAqCmR,IAGnD,SAASE,EAAKC,GACV,GAAiB,mBAANA,EACP,MAAM,IAAItR,MAAJ,gCAAmCsR,IAGjD,SAASC,EAAMD,GACX,KAAMA,aAAahS,YACf,MAAM,IAAIqB,UAAU,uBAFE,2BAAT6Q,EAAS,iCAATA,EAAS,kBAG1B,GAAIA,EAAQpR,OAAS,IAAMoR,EAAQC,SAASH,EAAElR,QAC1C,MAAM,IAAIO,UAAJ,wCAA+C6Q,EAA/C,2BAAyEF,EAAElR,SAGzF,SAASsR,EAAKA,GACV,GAAoB,oBAATA,GAA8C,oBAAhBA,EAAKlO,OAC1C,MAAM,IAAIxD,MAAM,mDACpBkR,EAAOQ,EAAKpO,WACZ4N,EAAOQ,EAAKnO,UAGhB,SAASiM,EAAOmC,GAAgC,IAAtBC,IAAsB,yDAC5C,GAAID,EAAStC,UACT,MAAM,IAAIrP,MAAM,oCACpB,GAAI4R,GAAiBD,EAASxC,SAC1B,MAAM,IAAInP,MAAM,yCAGxB,SAASiQ,EAAOD,EAAK2B,GACjBJ,EAAMvB,GACN,IAAML,EAAMgC,EAASrO,UACrB,GAAI0M,EAAI5P,OAASuP,EACb,MAAM,IAAI3P,MAAJ,gEAAmE2P,IArCjF7R,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQiS,OAASjS,EAAQwR,OAASxR,EAAQ0T,KAAO1T,EAAQuT,MAAQvT,EAAQqT,KAAOrT,EAAQkT,YAAS,EAKjGlT,EAAQkT,OAASA,EAKjBlT,EAAQqT,KAAOA,EAOfrT,EAAQuT,MAAQA,EAOhBvT,EAAQ0T,KAAOA,EAOf1T,EAAQwR,OAASA,EAQjBxR,EAAQiS,OAASA,EACjB,IAAM4B,EAAS,CACXX,SACAG,OACAE,QACAG,OACAlC,SACAS,UAEJjS,EAAQuR,QAAUsC,G,+8BCoFlB,YAYA,SAAgBC,EAAgBR,GAC9B,KAAMA,aAAahS,YACjB,MAAM,IAAIqB,UAAU,0BAOxB,SAAgBoR,EAAmBT,GAEjC,OADAQ,EAAgBR,GACTU,SAAO7R,KAAKmR,EAAE/R,OAAQ+R,EAAE9R,WAAY8R,EAAElR,QAX/CpC,oBASAA,uB,IAqBsBiU,E,WAKpB,WAAYC,EAAcC,GACxB,GADyC,WACpClR,OAAOmR,UAAUF,GACpB,MAAM,IAAIvR,UAAU,2BAYtB,KAAKuR,KAAOA,EAUZ,KAAKC,SAAWA,E,+CAkBlB,WACE,MAAO,K,qBAyDT,SAAQb,EAAgBe,GACtB,GAAI,EAAI,KAAKH,KACX,MAAM,IAAII,WAAW,sBAEvB,OAAO,KAAKJ,O,uBAmBd,SAAUC,GACR,IAAMI,EAAKzU,OAAO0F,OAAO,KAAKV,YAAYF,WAG1C,OAFA9E,OAAOiF,OAAOwP,EAAI,MAClBA,EAAGJ,SAAWA,EACPI,I,uBAuBT,SAAUC,Q,KAUZ,SAAgBC,EAAiB5E,EAAc6E,GAC7C,OAAIA,EAAGP,SACEtE,EAAO,IAAM6E,EAAGP,SAAW,IAE7BtE,EAzKT7P,WAqKAA,qBAoCAA,wBAAA,SAAyC2U,EAAYC,GACnD,GAAI,oBAAsBD,EACxB,MAAM,IAAIhS,UAAU,6BAEtB,GAAI7C,OAAO8E,UAAUiQ,eAAehQ,KAAK8P,EAAO,WAC9C,MAAM,IAAI3S,MAAM,sCAElB,KAAM4S,GAAWA,aAAkBX,GACjC,MAAM,IAAItR,UAAU,2BAEtB,GAAI7C,OAAO8E,UAAUiQ,eAAehQ,KAAK+P,EAAQ,qBAC/C,MAAM,IAAI5S,MAAM,4CAElB2S,EAAMG,QAAUF,EAChBA,EAAOG,kBAAoBJ,EAC3BC,EAAOI,sBAAyB,kBAAM,IAAIL,GAC1C7U,OAAOC,eAAe4U,EAAM/P,UAAW,SAAU,CAC/C3E,MAD+C,SACxCqT,EAAee,GACpB,OAAOO,EAAO/Q,OAAO,KAAWyP,EAAGe,IAErCY,UAAU,IAEZnV,OAAOC,eAAe4U,EAAO,SAAU,CACrC1U,MADqC,SAC9BqT,EAAee,GACpB,OAAOO,EAAOtJ,OAAOgI,EAAGe,IAE1BY,UAAU,K,IAyBQC,E,qHAYpB,WACE,MAAM,IAAIlT,MAAM,kC,GAbyBiS,GAA7CjU,mB,IAgCamV,E,8BAGX,aAA8C,MAAlCC,EAAkC,uDAApB,EAAGjB,EAAiB,uCAC5C,GAD4C,WACtClR,OAAOmR,UAAUgB,IAAkB,GAAKA,EAC5C,MAAM,IAAIzS,UAAU,4CAFsB,OAI5C,eAAO,EAAGwR,IAKLiB,YAAcA,EATyB,E,iCAa9C,WACE,OAAO,I,oBAIT,SAAO9B,GAAyB,IAAVe,EAAU,uDAAD,EAC7BP,EAAgBR,GAChB,IAAM+B,EAAM/B,EAAElR,OAASiS,EACvB,OAAO1S,KAAKC,MAAMyT,EAAM,KAAKD,e,oBAI/B,SAAOE,EAAahC,EAAee,GACjC,OAAO,M,GA7BsBa,GAAjClV,gB,IAqDauV,E,8BAGX,WAAYX,GAAqD,MAA7BP,EAA6B,uDAApB,EAAGF,EAAiB,uCAC/D,GAD+D,YACzDS,aAAkBX,GACtB,MAAM,IAAItR,UAAU,2BAGtB,IAAKM,OAAOmR,UAAUC,GACpB,MAAM,IAAI1R,UAAU,uCANyC,OAS/D,cAAMiS,EAAOV,KAAMC,GAAYS,EAAOT,WAGjCS,OAASA,EAQd,EAAKP,OAASA,EApBiD,E,iCAwBjE,WACE,OAAS,KAAKO,kBAAkBY,GACpB,KAAKZ,kBAAkBa,I,oBAIrC,SAAOnC,GAAyB,IAAVe,EAAU,uDAAD,EAC7B,OAAO,KAAKO,OAAOtJ,OAAOgI,EAAGe,EAAS,KAAKA,U,oBAI7C,SAAOiB,EAAahC,GAAyB,IAAVe,EAAU,uDAAD,EAC1C,OAAO,KAAKO,OAAO/Q,OAAOyR,EAAKhC,EAAGe,EAAS,KAAKA,Y,GAvClBa,GAAlClV,iB,IA2DawV,E,8BACX,WAAYtB,EAAcC,GAAiB,MAEzC,GAFyC,UAErC,GADJ,cAAMD,EAAMC,IACCD,KACX,MAAM,IAAII,WAAW,gCAHkB,S,gCAQ3C,SAAOhB,GAAyB,IAAVe,EAAU,uDAAD,EAC7B,OAAON,EAAmBT,GAAGoC,WAAWrB,EAAQ,KAAKH,Q,oBAIvD,SAAOoB,EAAahC,GAAyB,IAAVe,EAAU,uDAAD,EAE1C,OADAN,EAAmBT,GAAGqC,YAAYL,EAAKjB,EAAQ,KAAKH,MAC7C,KAAKA,S,GAhBUD,GAA1BjU,S,IAoCayV,E,8BACX,WAAYvB,EAAcC,GAAiB,MAEzC,GAFyC,UAErC,GADJ,cAAMD,EAAMC,IACCD,KACX,MAAM,IAAII,WAAW,gCAHkB,S,gCAQ3C,SAAOhB,GAAyB,IAAVe,EAAU,uDAAD,EAC7B,OAAON,EAAmBT,GAAGsC,WAAWvB,EAAQ,KAAKH,Q,oBAIvD,SAAOoB,EAAahC,GAAyB,IAAVe,EAAU,uDAAD,EAE1C,OADAN,EAAmBT,GAAGuC,YAAYP,EAAKjB,EAAQ,KAAKH,MAC7C,KAAKA,S,GAhBYD,GAA5BjU,W,IAoCa8V,E,8BACX,WAAY5B,EAAcC,GAAiB,MAEzC,GAFyC,UAErC,GADJ,cAAMD,EAAMC,IACCD,KACX,MAAM,IAAII,WAAW,gCAHkB,S,gCAQ3C,SAAOhB,GAAyB,IAAVe,EAAU,uDAAD,EAC7B,OAAON,EAAmBT,GAAGyC,UAAU1B,EAAQ,KAAKH,Q,oBAItD,SAAOoB,EAAahC,GAAyB,IAAVe,EAAU,uDAAD,EAE1C,OADAN,EAAmBT,GAAG0C,WAAWV,EAAKjB,EAAQ,KAAKH,MAC5C,KAAKA,S,GAhBSD,GAAzBjU,Q,IAoCaiW,E,8BACX,WAAY/B,EAAcC,GAAiB,MAEzC,GAFyC,UAErC,GADJ,cAAMD,EAAMC,IACCD,KACX,MAAM,IAAII,WAAW,gCAHkB,S,gCAQ3C,SAAOhB,GAAyB,IAAVe,EAAU,uDAAD,EAC7B,OAAON,EAAmBT,GAAG4C,UAAU7B,EAAQ,KAAKH,Q,oBAItD,SAAOoB,EAAahC,GAAyB,IAAVe,EAAU,uDAAD,EAE1C,OADAN,EAAmBT,GAAG6C,WAAWb,EAAKjB,EAAQ,KAAKH,MAC5C,KAAKA,S,GAhBWD,GAA3BjU,UAoBA,IAAMoW,EAAQzU,KAAK0U,IAAI,EAAG,IAI1B,SAASC,EAAYhB,GACnB,IAAMiB,EAAO5U,KAAKC,MAAM0T,EAAMc,GAE9B,MAAO,CAACG,OAAMC,KADDlB,EAAOiB,EAAOH,GAI7B,SAASK,EAAaF,EAAcC,GAClC,OAAOD,EAAOH,EAAQI,E,IAcXE,E,8BACX,WAAYvC,GAAiB,6BACrB,EAAGA,G,gCAIX,SAAOb,GAAyB,IAAVe,EAAU,uDAAD,EACvB9S,EAASwS,EAAmBT,GAC5BkD,EAAOjV,EAAOoV,aAAatC,GAC3BkC,EAAOhV,EAAOoV,aAAatC,EAAS,GAC1C,OAAOoC,EAAaF,EAAMC,K,oBAI5B,SAAOlB,EAAahC,GAAyB,IAAVe,EAAU,uDAAD,EACpCuC,EAAQN,EAAYhB,GACpB/T,EAASwS,EAAmBT,GAGlC,OAFA/R,EAAOsV,cAAcD,EAAMJ,KAAMnC,GACjC9S,EAAOsV,cAAcD,EAAML,KAAMlC,EAAS,GACnC,M,GAnBqBJ,GAAhCjU,e,IAkCa8W,E,8BACX,WAAY3C,GAAiB,6BACrB,EAAGA,G,gCAIX,SAAOb,GAAyB,IAAVe,EAAU,uDAAD,EACvB9S,EAASwS,EAAmBT,GAC5BiD,EAAOhV,EAAOwV,aAAa1C,GAC3BmC,EAAOjV,EAAOwV,aAAa1C,EAAS,GAC1C,OAAOoC,EAAaF,EAAMC,K,oBAI5B,SAAOlB,EAAahC,GAAyB,IAAVe,EAAU,uDAAD,EACpCuC,EAAQN,EAAYhB,GACpB/T,EAASwS,EAAmBT,GAGlC,OAFA/R,EAAOyV,cAAcJ,EAAML,KAAMlC,GACjC9S,EAAOyV,cAAcJ,EAAMJ,KAAMnC,EAAS,GACnC,M,GAnBuBJ,GAAlCjU,iB,IAkCaiX,E,8BACX,WAAY9C,GAAiB,6BACrB,EAAGA,G,gCAIX,SAAOb,GAAyB,IAAVe,EAAU,uDAAD,EACvB9S,EAASwS,EAAmBT,GAC5BkD,EAAOjV,EAAOoV,aAAatC,GAC3BkC,EAAOhV,EAAO2V,YAAY7C,EAAS,GACzC,OAAOoC,EAAaF,EAAMC,K,oBAI5B,SAAOlB,EAAahC,GAAyB,IAAVe,EAAU,uDAAD,EACpCuC,EAAQN,EAAYhB,GACpB/T,EAASwS,EAAmBT,GAGlC,OAFA/R,EAAOsV,cAAcD,EAAMJ,KAAMnC,GACjC9S,EAAO4V,aAAaP,EAAML,KAAMlC,EAAS,GAClC,M,GAnBoBJ,GAA/BjU,c,IAkCaoX,E,8BACX,WAAYjD,GAAiB,6BACrB,EAAGA,G,gCAIX,SAAOb,GAAyB,IAAVe,EAAU,uDAAD,EACvB9S,EAASwS,EAAmBT,GAC5BiD,EAAOhV,EAAO8V,YAAYhD,GAC1BmC,EAAOjV,EAAOwV,aAAa1C,EAAS,GAC1C,OAAOoC,EAAaF,EAAMC,K,oBAI5B,SAAOlB,EAAahC,GAAyB,IAAVe,EAAU,uDAAD,EACpCuC,EAAQN,EAAYhB,GACpB/T,EAASwS,EAAmBT,GAGlC,OAFA/R,EAAO+V,aAAaV,EAAML,KAAMlC,GAChC9S,EAAOyV,cAAcJ,EAAMJ,KAAMnC,EAAS,GACnC,M,GAnBsBJ,GAAjCjU,gB,IAiCauX,E,8BACX,WAAYpD,GAAiB,6BACrB,EAAGA,G,gCAIX,SAAOb,GAAyB,IAAVe,EAAU,uDAAD,EAC7B,OAAON,EAAmBT,GAAGkE,YAAYnD,K,oBAI3C,SAAOiB,EAAahC,GAAyB,IAAVe,EAAU,uDAAD,EAE1C,OADAN,EAAmBT,GAAGmE,aAAanC,EAAKjB,GACjC,M,GAbgBJ,GAA3BjU,U,IA2Ba0X,E,8BACX,WAAYvD,GAAiB,6BACrB,EAAGA,G,gCAIX,SAAOb,GAAyB,IAAVe,EAAU,uDAAD,EAC7B,OAAON,EAAmBT,GAAGqE,YAAYtD,K,oBAI3C,SAAOiB,EAAahC,GAAyB,IAAVe,EAAU,uDAAD,EAE1C,OADAN,EAAmBT,GAAGsE,aAAatC,EAAKjB,GACjC,M,GAbkBJ,GAA7BjU,Y,IA2Ba6X,E,8BACX,WAAY1D,GAAiB,6BACrB,EAAGA,G,gCAIX,SAAOb,GAAyB,IAAVe,EAAU,uDAAD,EAC7B,OAAON,EAAmBT,GAAGwE,aAAazD,K,oBAI5C,SAAOiB,EAAahC,GAAyB,IAAVe,EAAU,uDAAD,EAE1C,OADAN,EAAmBT,GAAGyE,cAAczC,EAAKjB,GAClC,M,GAbiBJ,GAA5BjU,W,IA2BagY,E,8BACX,WAAY7D,GAAiB,6BACrB,EAAGA,G,gCAIX,SAAOb,GAAyB,IAAVe,EAAU,uDAAD,EAC7B,OAAON,EAAmBT,GAAG2E,aAAa5D,K,oBAI5C,SAAOiB,EAAahC,GAAyB,IAAVe,EAAU,uDAAD,EAE1C,OADAN,EAAmBT,GAAG4E,cAAc5C,EAAKjB,GAClC,M,GAbmBJ,GAA9BjU,a,IAkCamY,E,8BAIX,WAAYC,EAA0BC,EAAgClE,GAAiB,MACrF,GADqF,YAC/EiE,aAAyBnE,GAC7B,MAAM,IAAItR,UAAU,kCAEtB,KAAQ0V,aAAiBnD,GAAmBmD,EAAMC,WACxCrV,OAAOmR,UAAUiE,IAAW,GAAKA,GACzC,MAAM,IAAI1V,UAAU,4EAGtB,IAAIuR,GAAQ,EATyE,QAU9EmE,aAAiBnD,IAChB,EAAIkD,EAAclE,OACxBA,EAAOmE,EAAQD,EAAclE,OAG/B,cAAMA,EAAMC,IAGPiE,cAAgBA,EAOrB,EAAKC,MAAQA,EAzBwE,E,iCA6BvF,SAAQ/E,GAAyB,IAAVe,EAAU,uDAAD,EAC9B,GAAI,GAAK,KAAKH,KACZ,OAAO,KAAKA,KAEd,IAAIA,EAAO,EACPmE,EAAQ,KAAKA,MAIjB,GAHIA,aAAiBnD,IACnBmD,EAAQA,EAAM/M,OAAOgI,EAAGe,IAEtB,EAAI,KAAK+D,cAAclE,KACzBA,EAAOmE,EAAQ,KAAKD,cAAclE,UAGlC,IADA,IAAIqE,EAAM,EACHA,EAAMF,GACXnE,GAAQ,KAAKkE,cAAcI,QAAQlF,EAAGe,EAASH,KAC7CqE,EAGN,OAAOrE,I,oBAIT,SAAOZ,GAAyB,IAAVe,EAAU,uDAAD,EACvBE,EAAU,GACZjS,EAAI,EACJ+V,EAAQ,KAAKA,MAIjB,IAHIA,aAAiBnD,IACnBmD,EAAQA,EAAM/M,OAAOgI,EAAGe,IAEnB/R,EAAI+V,GACT9D,EAAGjL,KAAK,KAAK8O,cAAc9M,OAAOgI,EAAGe,IACrCA,GAAU,KAAK+D,cAAcI,QAAQlF,EAAGe,GACxC/R,GAAK,EAEP,OAAOiS,I,oBAaT,SAAOe,EAAUhC,GAAyB,IAAVe,EAAU,uDAAD,EACjCoE,EAAM,KAAKL,cACXlE,EAAeoB,EAAIpR,QAAO,SAACgQ,EAAM7R,GACrC,OAAO6R,EAAOuE,EAAI5U,OAAOxB,EAAGiR,EAAGe,EAASH,KACvC,GAIH,OAHI,KAAKmE,iBAAiBnD,GACxB,KAAKmD,MAAMxU,OAAOyR,EAAIlT,OAAQkR,EAAGe,GAE5BH,M,GAxFsBD,GAAjCjU,a,IA4Ha0Y,E,8BAIX,WAAYC,EAA8BxE,EAAmByE,GAAwB,MACnF,GADmF,WAC7E1W,MAAM2W,QAAQF,KACXA,EAAOzU,QAAO,SAAC4U,EAAKzW,GAAN,OAAYyW,GAAQzW,aAAa4R,KAAS,GAC/D,MAAM,IAAItR,UAAU,4CAEjB,mBAAqBwR,QAClBzP,IAAckU,IACpBA,EAAiBzE,EACjBA,OAAWzP,GARsE,UAYlEiU,GAZkE,IAYnF,2BAAyB,KAAdI,EAAc,QACvB,GAAK,EAAIA,EAAG7E,WACJxP,IAAcqU,EAAG5E,SACvB,MAAM,IAAInS,MAAM,yDAf+D,8BAmBnF,IAAIkS,GAAQ,EACZ,IACEA,EAAOyE,EAAOzU,QAAO,SAACgQ,EAAM6E,GAAP,OAAc7E,EAAO6E,EAAGP,YAAW,GACxD,MAAOQ,IAtB0E,OAyBnF,cAAM9E,EAAMC,IAYPwE,OAASA,EAWd,EAAKC,iBAAmBA,EAhD2D,E,iCAoDrF,SAAQtF,GAAyB,IAAVe,EAAU,uDAAD,EAC9B,GAAI,GAAK,KAAKH,KACZ,OAAO,KAAKA,KAEd,IAAIA,EAAO,EACX,IACEA,EAAO,KAAKyE,OAAOzU,QAAO,SAACgQ,EAAM6E,GAC/B,IAAME,EAAMF,EAAGP,QAAQlF,EAAGe,GAE1B,OADAA,GAAU4E,EACH/E,EAAO+E,IACb,GACH,MAAOD,GACP,MAAM,IAAI1E,WAAW,sBAEvB,OAAOJ,I,oBAIT,SAAOZ,GAAyB,IAAVe,EAAU,uDAAD,EAC7BP,EAAgBR,GAChB,IAF8B,EAExB4F,EAAO,KAAKlE,wBAFY,IAGb,KAAK2D,QAHQ,IAG9B,2BAA8B,KAAnBI,EAAmB,QAK5B,QAJIrU,IAAcqU,EAAG5E,WACnB+E,EAAKH,EAAG5E,UAAuB4E,EAAGzN,OAAOgI,EAAGe,IAE9CA,GAAU0E,EAAGP,QAAQlF,EAAGe,GACpB,KAAKuE,gBACDtF,EAAElR,SAAWiS,EACnB,OAV0B,8BAa9B,OAAO6E,I,oBAQT,SAAO5D,EAAQhC,GAAyB,MAAVe,EAAU,uDAAD,EAC/B8E,EAAc9E,EAChB+E,EAAa,EACbC,EAAY,EAHsB,IAIrB,KAAKV,QAJgB,IAItC,2BAA8B,KAAnBI,EAAmB,QACxB7E,EAAO6E,EAAG7E,KAEd,GADAmF,EAAa,EAAInF,EAAQA,EAAO,OAC5BxP,IAAcqU,EAAG5E,SAAU,CAC7B,IAAMmF,EAAKhE,EAAIyD,EAAG5E,eACdzP,IAAc4U,IAChBD,EAAYN,EAAGlV,OAAOyV,EAAIhG,EAAGe,GACzB,EAAIH,IAGNA,EAAO6E,EAAGP,QAAQlF,EAAGe,KAI3B+E,EAAa/E,EACbA,GAAUH,GAnB0B,8BAyBtC,OAAQkF,EAAaC,EAAaF,I,uBAIpC,SAAU3E,GACR,IADqB,EACf0E,EAAO,KAAKlE,wBADG,IAEJ,KAAK2D,QAFD,IAErB,2BAA8B,KAAnBI,EAAmB,aACvBrU,IAAcqU,EAAG5E,UACd,EAAIK,EAAOpS,SACjB8W,EAAKH,EAAG5E,UAAYK,EAAOzS,UALV,8BAQrB,OAAOmX,I,uBAWT,SAAU/E,GACR,GAAI,kBAAoBA,EACtB,MAAM,IAAIxR,UAAU,2BAFE,UAIP,KAAKgW,QAJE,IAIxB,2BAA8B,KAAnBI,EAAmB,QAC5B,GAAIA,EAAG5E,WAAaA,EAClB,OAAO4E,GANa,iC,sBAuB1B,SAAS5E,GACP,GAAI,kBAAoBA,EACtB,MAAM,IAAIxR,UAAU,2BAEtB,IAJuB,EAInB0R,EAAS,EAJU,IAKN,KAAKsE,QALC,IAKvB,2BAA8B,KAAnBI,EAAmB,QAC5B,GAAIA,EAAG5E,WAAaA,EAClB,OAAOE,EAEL,EAAI0E,EAAG7E,KACTG,GAAU,EACD,GAAKA,IACdA,GAAU0E,EAAG7E,OAZM,mC,GAtKOD,GAAlCjU,c,IAuMauZ,E,WAEX,WAAYpF,GAAgB,UAK1B,KAAKA,SAAWA,E,gCAOlB,SAAOb,EAAgBe,GACrB,MAAM,IAAIrS,MAAM,oC,oBAOlB,SAAOsT,EAAQhC,EAAee,GAC5B,MAAM,IAAIrS,MAAM,sC,KAvBpBhC,uB,IA4CawZ,E,8BAEX,WAAY5E,EAAwBT,GAAiB,MACnD,GADmD,YAC5CS,aAAkBM,GAChBN,EAAO0D,WACd,MAAM,IAAI3V,UAAU,qDAH6B,OAMnD,cAAMwR,GAAYS,EAAOT,UAAY,YAIhCS,OAASA,EAVqC,E,gCAcrD,SAAOtB,EAAee,GACpB,OAAO,KAAKO,OAAOtJ,OAAOgI,EAAGe,K,oBAI/B,SAAOiB,EAAahC,EAAee,GACjC,OAAO,KAAKO,OAAO/Q,OAAOyR,EAAKhC,EAAGe,O,GAtBQkF,GAA9CvZ,6B,IAqFayZ,E,8BAYX,WACIC,EACAC,EACAxF,GAAgB,MAEdyF,EACJ,GAHkB,UAGbF,aAAiBlE,GACdkE,aAAiBjE,EACvBmE,EAAgB,IAAIJ,EAAyB,IAAIjE,EAAamE,SACzD,GAAKA,aAAiBxE,GACfwE,EAAMpB,UAClBsB,EAAgB,IAAIJ,EAAyBE,OACxC,MAAMA,aAAiBH,GAC5B,MAAM,IAAI5W,UAAU,oEAGpBiX,EAAgBF,EAKlB,QAHIhV,IAAciV,IAChBA,EAAgB,QAEX,OAASA,GACNA,aAAyB1F,GACjC,MAAM,IAAItR,UAAU,0CAEtB,GAAI,OAASgX,EAAe,CAC1B,GAAI,EAAIA,EAAczF,KACpB,MAAM,IAAIlS,MAAM,8CAEd0C,IAAciV,EAAcxF,WAC9BwF,EAAgBA,EAAcE,UAAU,YAQ5C,IAAI3F,GAAQ,EACRyF,GAEG,IADLzF,EAAOyF,EAAczF,QACAwF,aAAiBlE,GAC9BkE,aAAiBjE,KACvBvB,GAAS0F,EAA2ChF,OAAOV,OAG/D,cAAMA,EAAMC,IAUPyF,cAAgBA,EAOrB,EAAKE,wBAA2BJ,aAAiBlE,GACzCkE,aAAiBjE,EASzB,EAAKkE,cAAgBA,EAYrB,EAAKI,SAAW,GAGhB,IAAIC,EAAwB,EAAKC,wBAAwB/N,KAA7B,MArFV,OAoGlB,EAAKgO,iBAAmB,SAAS5E,GAC/B,OAAO0E,EAAsB1E,IAgB/B,EAAK6E,uBAAyB,SAASC,GACrCJ,EAAwBI,EAAIlO,KAAK,OAtHjB,E,iCA2HpB,SAAQoH,GAAyB,IAAVe,EAAU,uDAAD,EAC9B,GAAI,GAAK,KAAKH,KACZ,OAAO,KAAKA,KAKd,IAAMmG,EAAM,KAAKC,WAAWhH,EAAGe,GAC/B,IAAKgG,EACH,MAAM,IAAIrY,MAAM,qDAElB,OAAOqY,EAAI7B,QAAQlF,EAAGe,K,qCAgCxB,SAAwBiB,GACtB,GAAIxV,OAAO8E,UAAUiQ,eAAehQ,KAAKyQ,EAAK,KAAKsE,cAAczF,UAAW,CAC1E,GAAI,KAAKwF,eAAiB,KAAKA,cAAcxF,UACtCrU,OAAO8E,UAAUiQ,eAAehQ,KAAKyQ,EAAK,KAAKqE,cAAcxF,UAClE,OAEF,IAAMkG,EAAM,KAAKN,SAASzE,EAAI,KAAKsE,cAAczF,WACjD,GAAIkG,KACMA,EAAIzF,QACFyF,EAAIlG,UAAYrU,OAAO8E,UAAUiQ,eAAehQ,KAAKyQ,EAAK+E,EAAIlG,WACxE,OAAOkG,OAGT,IAAK,IAAME,KAAO,KAAKR,SAAU,CAC/B,IAAMM,EAAM,KAAKN,SAASQ,GAC1B,GAAIF,EAAIlG,UAAYrU,OAAO8E,UAAUiQ,eAAehQ,KAAKyQ,EAAK+E,EAAIlG,UAChE,OAAOkG,EAIb,MAAM,IAAIrY,MAAM,iC,oBASlB,SAAOsR,GAAyB,IAC1B4F,EADgB7E,EAAU,uDAAD,EAEvBmG,EAAM,KAAKZ,cACXF,EAAQc,EAAIlP,OAAOgI,EAAGe,GACtBoG,EAAM,KAAKV,SAASL,GAC1B,QAAIhV,IAAc+V,EAAK,CACrB,IAAMd,EAAgB,KAAKA,cACvBe,EAAgB,EAChB,KAAKZ,0BACPY,EAAiBF,EAAiC5F,OAAOV,OAE3DgF,EAAO,KAAKlE,yBACPwF,EAAIrG,UAAYuF,EAGrBR,EAAKS,EAAexF,UAAawF,EAAerO,OAAOgI,EAAGe,EAASqG,QAEnExB,EAAOuB,EAAInP,OAAOgI,EAAGe,GAEvB,OAAO6E,I,oBAST,SAAO5D,EAAmBhC,GAAyB,IAAVe,EAAU,uDAAD,EAC1CgG,EAAM,KAAKH,iBAAiB5E,GAClC,QAAI5Q,IAAc2V,EAAK,CACrB,IAAMG,EAAM,KAAKZ,cAGXa,EAAM,KAAKd,cACbe,EAAgB,EAOpB,OANI,KAAKZ,0BACPY,EAAiBF,EAAiC5F,OAAOV,MAE3DsG,EAAI3W,OAAOyR,EAAIkF,EAAIrG,UAAWb,EAAGe,GAG1BqG,EAAgBD,EAAI5W,OAAOyR,EAAImF,EAAItG,UAAYb,EAAGe,EAASqG,GAEpE,OAAOL,EAAIxW,OAAOyR,EAAKhC,EAAGe,K,wBAgB5B,SAAWsG,EAAiB/F,EAA8BT,GACxD,IAAMI,EAAK,IAAIqG,EAAc,KAAMD,EAAS/F,EAAQT,GAEpD,OADA,KAAK4F,SAASY,GAAWpG,EAClBA,I,wBAiBT,SAAWsG,GAAmC,IACxCF,EAD8BtG,EAAU,uDAAD,EAO3C,OAJEsG,EADEE,aAAcvZ,WACN,KAAKsY,cAActO,OAAOuP,EAAIxG,GAE9BwG,EAEL,KAAKd,SAASY,O,GAzSE1G,GAA3BjU,U,IA0Ua4a,E,8BAOX,WAAYE,EAAcH,EAAiB/F,EAAqCT,GAAgB,MAC9F,GAD8F,YACxF2G,aAAiBrB,GACrB,MAAM,IAAI9W,UAAU,yBAEtB,IAAMM,OAAOmR,UAAUuG,IAAc,EAAIA,EACvC,MAAM,IAAIhY,UAAU,4CAOtB,GALK,kBAAoBiS,QACjBlQ,IAAcyP,IACpBA,EAAWS,EACXA,EAAS,MAEPA,EAAQ,CACV,KAAMA,aAAkBX,GACtB,MAAM,IAAItR,UAAU,2BAEtB,GAAK,OAASmY,EAAMnB,eACZ,GAAK/E,EAAOV,MACZU,EAAOV,KAAO4G,EAAMnB,cAAczF,KACxC,MAAM,IAAIlS,MAAM,iDAElB,GAAI,kBAAoBmS,EACtB,MAAM,IAAIxR,UAAU,uCAGxB,IAAIuR,EAAO4G,EAAM5G,KAzB6E,OA0B1F,EAAI4G,EAAM5G,MAEP,IADLA,EAAOU,EAASA,EAAOV,KAAO,IACX4G,EAAMhB,0BACvB5F,GAAS4G,EAAMlB,cAA2ChF,OAAOV,OAGrE,cAAMA,EAAMC,IAGP2G,MAAQA,EAKb,EAAKH,QAAUA,EAMf,EAAK/F,OAASA,GAAU,KA9CsE,E,iCAkDhG,SAAQtB,GAAyB,IAAVe,EAAU,uDAAD,EAC9B,GAAI,GAAK,KAAKH,KAGZ,OAAO,KAAKA,KAEd,IAAIwG,EAAgB,EAChB,KAAKI,MAAMhB,0BACbY,EAAiB,KAAKI,MAAMlB,cAA2ChF,OAAOV,MAGhF,IAAIA,EAAO,EAIX,OAHI,KAAKU,SACPV,EAAO,KAAKU,OAAO4D,QAAQlF,EAAGe,EAASqG,IAElCA,EAAgBxG,I,oBAIzB,SAAOZ,GAAyB,IAAVe,EAAU,uDAAD,EACvB6E,EAAO,KAAKlE,wBAClB,GAAI,OAAS,KAAK8F,MAAMR,WAAWhH,EAAGe,GACpC,MAAM,IAAIrS,MAAM,oBAElB,IAAI0Y,EAAgB,EAWpB,OAVI,KAAKI,MAAMhB,0BACbY,EAAiB,KAAKI,MAAMlB,cAA2ChF,OAAOV,MAE5E,KAAKU,OACPsE,EAAK,KAAK/E,UAAY,KAAKS,OAAOtJ,OAAOgI,EAAGe,EAASqG,GAC5C,KAAKvG,SACd+E,EAAK,KAAK/E,WAAY,EACb,KAAK2G,MAAMhB,0BACpBZ,EAAK,KAAK4B,MAAMlB,cAAczF,UAAY,KAAKwG,SAE1CzB,I,oBAIT,SAAO5D,EAAmBhC,GAAyB,IAAVe,EAAU,uDAAD,EAC5CqG,EAAgB,EAIpB,GAHI,KAAKI,MAAMhB,0BACbY,EAAiB,KAAKI,MAAMlB,cAA2ChF,OAAOV,MAE5E,KAAKU,SACA9U,OAAO8E,UAAUiQ,eAAehQ,KAAKyQ,EAAK,KAAKnB,UACtD,MAAM,IAAIxR,UAAU,0BAA4B,KAAKwR,UAEvD,KAAK2G,MAAMlB,cAAc/V,OAAO,KAAK8W,QAASrH,EAAGe,GACjD,IAAIH,EAAOwG,EACX,GAAI,KAAK9F,SACP,KAAKA,OAAO/Q,OAAOyR,EAAI,KAAKnB,UAAWb,EAAGe,EAASqG,GACnDxG,GAAQ,KAAKU,OAAO4D,QAAQlF,EAAGe,EAASqG,GACnC,GAAK,KAAKI,MAAM5G,MACbA,EAAO,KAAK4G,MAAM5G,MACxB,MAAM,IAAIlS,MAAM,6CAGpB,OAAOkS,I,uBAKT,SAAUM,GACR,GAAI,KAAKI,OACP,OAAO,KAAKA,OAAOmG,UAAUvG,O,GA1HAP,GAsInC,SAAS+G,EAAiB3Y,GAIxB,OAHI,EAAIA,IACNA,GAAK,YAEAA,EA1ITrC,kB,IA4Kaib,E,8BAQX,WAAYnZ,EAAqBoZ,EAAuB/G,GAAiB,MACvE,GADuE,YAChErS,aAAgB0T,GACb1T,aAAgB2T,GACxB,MAAM,IAAI9S,UAAU,wCAOtB,GALK,kBAAoBuY,QACjBxW,IAAcyP,IACpBA,EAAW+G,EACXA,GAAM,GAEJ,EAAIpZ,EAAKoS,KACX,MAAM,IAAII,WAAW,+BAEvB,cAAMxS,EAAKoS,KAAMC,IAKZrS,KAAOA,EASZ,EAAKoZ,MAAQA,EAQb,EAAKvC,OAAS,GAKd,IAAI1Y,EAAQ,EAxC2D,OAyCvE,EAAKkb,gBAAkB,SAAS9Y,GAE9B,OADApC,EAAQ+a,EAAiB3Y,GAClB,MAET,EAAK+Y,gBAAkB,WACrB,OAAOnb,GA9C8D,E,gCAmDzE,SAAOqT,GAAyB,IAAVe,EAAU,uDAAD,EACvB6E,EAAO,KAAKlE,wBACZ/U,EAAQ,KAAK6B,KAAKwJ,OAAOgI,EAAGe,GAClC,KAAK8G,gBAAgBlb,GAHS,UAIb,KAAK0Y,QAJQ,IAI9B,2BAA8B,KAAnBI,EAAmB,aACxBrU,IAAcqU,EAAG5E,WACnB+E,EAAKH,EAAG5E,UAAY4E,EAAGzN,OAAOgI,KANJ,8BAS9B,OAAO4F,I,oBAQT,SAAO5D,EAAmBhC,GAAyB,IAAVe,EAAU,uDAAD,EAC1CpU,EAAQ,KAAK6B,KAAKwJ,OAAOgI,EAAGe,GAClC,KAAK8G,gBAAgBlb,GAF4B,UAGhC,KAAK0Y,QAH2B,IAGjD,2BAA8B,KAAnBI,EAAmB,QAC5B,QAAIrU,IAAcqU,EAAG5E,SAAU,CAC7B,IAAMmF,EAAKhE,EAAIyD,EAAG5E,eACdzP,IAAc4U,GAChBP,EAAGlV,OAAOyV,KAPiC,8BAWjD,OAAO,KAAKxX,KAAK+B,OAAO,KAAKuX,kBAAmB9H,EAAGe,K,sBAYrD,SAASgH,EAAclH,GACrB,IAAMmH,EAAK,IAAIC,EAAS,KAAMF,EAAMlH,GAEpC,OADA,KAAKwE,OAAOrP,KAAKgS,GACVA,I,wBAYT,SAAWnH,GAET,IAAMmH,EAAK,IAAIE,EAAQ,KAAMrH,GAE7B,OADA,KAAKwE,OAAOrP,KAAKgS,GACVA,I,sBAWT,SAASnH,GACP,GAAI,kBAAoBA,EACtB,MAAM,IAAIxR,UAAU,2BAFC,UAIN,KAAKgW,QAJC,IAIvB,2BAA8B,KAAnBI,EAAmB,QAC5B,GAAIA,EAAG5E,WAAaA,EAClB,OAAO4E,GANY,mC,GAjIO9E,GAAlCjU,iB,IAkKaub,E,WAOX,WAAYE,EAAyBJ,EAAclH,GACjD,GADiE,YAC3DsH,aAAqBR,GACzB,MAAM,IAAItY,UAAU,oCAEtB,IAAMM,OAAOmR,UAAUiH,IAAW,GAAKA,EACrC,MAAM,IAAI1Y,UAAU,iCAEtB,IAAM+Y,EAAY,EAAID,EAAUvH,KAC1ByH,EAAWF,EAAU9C,OAAOzU,QAAO,SAAC0X,EAAK7C,GAAN,OAAa6C,EAAM7C,EAAGsC,OAAM,GACrE,GAAKA,EAAOM,EAAYD,EACtB,MAAM,IAAI1Z,MAAM,sCACG0Z,EAAYC,GAAY,OACzBD,EAAY,YAKhC,KAAKD,UAAYA,EAGjB,KAAKJ,KAAOA,EAOZ,KAAKQ,WAAa,GAAKR,GAAQ,EAC3B,KAAOA,IACT,KAAKQ,UAAY,YAMnB,KAAKC,MAAQH,EACT,KAAKF,UAAUP,MACjB,KAAKY,MAAQJ,EAAYC,EAAWN,GAKtC,KAAKU,SAAWf,EAAiB,KAAKa,WAAa,KAAKC,OAYxD,KAAK3H,SAAWA,E,gCAKlB,SAAOb,EAAgBe,GAIrB,OAFkB2G,EADL,KAAKS,UAAUL,kBACc,KAAKW,YACnB,KAAKD,Q,oBASnC,SAAO7b,GACL,GAAI,kBAAoBA,IAChBgD,OAAOmR,UAAUnU,IACjBA,IAAU+a,EAAiB/a,EAAQ,KAAK4b,WAC9C,MAAM,IAAIlZ,UAAU8R,EAAiB,kBAAmB,MAClC,wCAA0C,KAAKoH,WAEvE,IAAM/Z,EAAO,KAAK2Z,UAAUL,kBACtBY,EAAYhB,EAAiB/a,GAAS,KAAK6b,OACjD,KAAKL,UAAUN,gBAAgBH,EAAiBlZ,GAAQ,KAAKia,UAC5BC,O,KAxFrChc,a,IA6Gawb,E,8BACX,WAAYC,EAAyBtH,GAAgB,6BAC7CsH,EAAW,EAAGtH,G,gCAMtB,SAAOb,EAAgBe,GACrB,QAAQ,0CAAcf,EAAGe,K,oBAI3B,SAAOpU,GACD,mBAAqBA,IAEvBA,GAASA,GAEX,0CAAaA,O,GAlBYsb,GAA7Bvb,Y,IAqCaic,E,8BAEX,WAAY7Z,EAAiC+R,GAAiB,MAC5D,GAD4D,YACpD/R,aAAkB8S,GAAmB9S,EAAOkW,WAC1CrV,OAAOmR,UAAUhS,IAAY,GAAKA,GAC1C,MAAM,IAAIO,UAAU,yEAItB,IAAIuR,GAAQ,EAPgD,OAQtD9R,aAAkB8S,IACtBhB,EAAO9R,IAET,cAAM8R,EAAMC,IAOP/R,OAASA,EAlB8C,E,iCAsB9D,SAAQkR,EAAee,GACrB,IAAIH,EAAO,KAAKA,KAIhB,OAHI,EAAIA,IACNA,EAAQ,KAAK9R,OAA0BkJ,OAAOgI,EAAGe,IAE5CH,I,oBAIT,SAAOZ,GAAyB,IAAVe,EAAU,uDAAD,EACzBH,EAAO,KAAKA,KAIhB,OAHI,EAAIA,IACNA,EAAQ,KAAK9R,OAA0BkJ,OAAOgI,EAAGe,IAE5CN,EAAmBT,GAAGvQ,MAAMsR,EAAQA,EAASH,K,oBAQtD,SAAOoB,EAAiBhC,EAAee,GACrC,IAAIH,EAAO,KAAK9R,OAIhB,GAHI,KAAKA,kBAAkB8S,IACzBhB,EAAOoB,EAAIlT,UAEPkT,aAAehU,YAAc4S,IAASoB,EAAIlT,QAC9C,MAAM,IAAIO,UAAU8R,EAAiB,cAAe,MAC9B,qBAAuBP,EAAO,uBAEtD,GAAKG,EAASH,EAAQZ,EAAElR,OACtB,MAAM,IAAIkS,WAAW,gCAEvB,IAAM4H,EAAYnI,EAAmBuB,GAKrC,OAJAvB,EAAmBT,GAAG6I,MAAMD,EAAU3Z,SAAS,OAAQ8R,EAAQH,EAAM,OACjE,KAAK9R,kBAAkB8S,GACzB,KAAK9S,OAAOyB,OAAOqQ,EAAMZ,EAAGe,GAEvBH,M,GA/DeD,GAA1BjU,S,IAgFaoc,E,8BACX,WAAYjI,GAAiB,8BACpB,EAAGA,G,iCAIZ,SAAQb,GAAyB,IAAVe,EAAU,uDAAD,EAC9BP,EAAgBR,GAEhB,IADA,IAAIiF,EAAMlE,EACFkE,EAAMjF,EAAElR,QAAY,IAAMkR,EAAEiF,IAClCA,GAAO,EAET,OAAO,EAAIA,EAAMlE,I,oBAInB,SAAOf,GAAyB,IAAVe,EAAU,uDAAD,EACvBH,EAAO,KAAKsE,QAAQlF,EAAGe,GAC7B,OAAON,EAAmBT,GAAGvQ,MAAMsR,EAAQA,EAASH,EAAO,GAAG3R,SAAS,W,oBAIzE,SAAO+S,EAAahC,GAAyB,IAAVe,EAAU,uDAAD,EAItC,kBAAoBiB,IACtBA,EAAM+G,OAAO/G,IAEf,IAAMgH,EAAOtI,SAAO7R,KAAKmT,EAAK,QACxBpB,EAAOoI,EAAKla,OAClB,GAAKiS,EAASH,EAAQZ,EAAElR,OACtB,MAAM,IAAIkS,WAAW,4BAEvB,IAAM/S,EAASwS,EAAmBT,GAGlC,OAFAgJ,EAAKC,KAAKhb,EAAQ8S,GAClB9S,EAAO8S,EAASH,GAAQ,EACjBA,EAAO,M,GArCWD,GAA7BjU,Y,IA4Dawc,E,8BAEX,WAAYC,EAA2BtI,GAAiB,MAKtD,GALsD,UACjD,kBAAoBsI,QAAa/X,IAAcyP,IAClDA,EAAWsI,EACXA,OAAU/X,QAERA,IAAc+X,EAChBA,GAAW,OACN,IAAKxZ,OAAOmR,UAAUqI,GAC3B,MAAM,IAAI9Z,UAAU,8BARgC,OAWtD,eAAO,EAAGwR,IAULsI,QAAUA,EArBuC,E,iCAyBxD,SAAQnJ,GAAyB,IAAVe,EAAU,uDAAD,EAE9B,OADAP,EAAgBR,GACTA,EAAElR,OAASiS,I,oBAIpB,SAAOf,GAAyB,IAAVe,EAAU,uDAAD,EACvBH,EAAO,KAAKsE,QAAQlF,EAAGe,GAC7B,GAAK,GAAK,KAAKoI,SACP,KAAKA,QAAUvI,EACrB,MAAM,IAAII,WAAW,+BAEvB,OAAOP,EAAmBT,GAAGvQ,MAAMsR,EAAQA,EAASH,GAAM3R,SAAS,W,oBAIrE,SAAO+S,EAA4BhC,GAAyB,IAAVe,EAAU,uDAAD,EAIrD,kBAAoBiB,IACtBA,EAAM+G,OAAO/G,IAEf,IAAMgH,EAAOtI,SAAO7R,KAAKmT,EAAK,QACxBpB,EAAOoI,EAAKla,OAClB,GAAK,GAAK,KAAKqa,SACP,KAAKA,QAAUvI,EACrB,MAAM,IAAII,WAAW,+BAEvB,GAAKD,EAASH,EAAQZ,EAAElR,OACtB,MAAM,IAAIkS,WAAW,4BAGvB,OADAgI,EAAKC,KAAKxI,EAAmBT,GAAIe,GAC1BH,M,GA5DeD,GAA1BjU,S,IAmFa0c,E,8BAEX,WAAYzc,EAAUkU,GAAiB,wBACrC,cAAM,EAAGA,IAWJlU,MAAQA,EAZwB,E,gCAgBvC,SAAOqT,EAAgBe,GACrB,OAAO,KAAKpU,Q,oBAId,SAAOqV,EAAQhC,EAAgBe,GAE7B,OAAO,M,GAzBsBJ,GAAjCjU,aA8BaA,SAAU,SAACoV,EAAqBjB,GAAtB,OAAyD,IAAIgB,EAAYC,EAAajB,IAGhGnU,SAAU,SAAC4U,EAAwBP,EAAiBF,GAA1C,OACnB,IAAIoB,EAAaX,EAAQP,EAAQF,IAIxBnU,KAAM,SAACmU,GAAD,OAA6B,IAAIqB,EAAK,EAAGrB,IAI/CnU,MAAO,SAACmU,GAAD,OAA6B,IAAIqB,EAAK,EAAGrB,IAIhDnU,MAAO,SAACmU,GAAD,OAA6B,IAAIqB,EAAK,EAAGrB,IAIhDnU,MAAO,SAACmU,GAAD,OAA6B,IAAIqB,EAAK,EAAGrB,IAIhDnU,MAAO,SAACmU,GAAD,OAA6B,IAAIqB,EAAK,EAAGrB,IAIhDnU,MAAO,SAACmU,GAAD,OAA6B,IAAIqB,EAAK,EAAGrB,IAIhDnU,OAAQ,SAACmU,GAAD,OAAmC,IAAIuC,EAAWvC,IAI1DnU,QAAS,SAACmU,GAAD,OAA+B,IAAIsB,EAAO,EAAGtB,IAItDnU,QAAS,SAACmU,GAAD,OAA+B,IAAIsB,EAAO,EAAGtB,IAItDnU,QAAS,SAACmU,GAAD,OAA+B,IAAIsB,EAAO,EAAGtB,IAItDnU,QAAS,SAACmU,GAAD,OAA+B,IAAIsB,EAAO,EAAGtB,IAItDnU,QAAS,SAACmU,GAAD,OAA+B,IAAIsB,EAAO,EAAGtB,IAItDnU,SAAU,SAACmU,GAAD,OAAqC,IAAI2C,EAAa3C,IAIhEnU,KAAM,SAACmU,GAAD,OAA4B,IAAI2B,EAAI,EAAG3B,IAI7CnU,MAAO,SAACmU,GAAD,OAA4B,IAAI2B,EAAI,EAAG3B,IAI9CnU,MAAO,SAACmU,GAAD,OAA4B,IAAI2B,EAAI,EAAG3B,IAI9CnU,MAAO,SAACmU,GAAD,OAA4B,IAAI2B,EAAI,EAAG3B,IAI9CnU,MAAO,SAACmU,GAAD,OAA4B,IAAI2B,EAAI,EAAG3B,IAI9CnU,MAAO,SAACmU,GAAD,OAA4B,IAAI2B,EAAI,EAAG3B,IAI9CnU,OAAQ,SAACmU,GAAD,OAAkC,IAAI8C,EAAU9C,IAIxDnU,QAAS,SAACmU,GAAD,OAA8B,IAAI8B,EAAM,EAAG9B,IAIpDnU,QAAS,SAACmU,GAAD,OAA8B,IAAI8B,EAAM,EAAG9B,IAIpDnU,QAAS,SAACmU,GAAD,OAA8B,IAAI8B,EAAM,EAAG9B,IAIpDnU,QAAS,SAACmU,GAAD,OAA8B,IAAI8B,EAAM,EAAG9B,IAIpDnU,QAAS,SAACmU,GAAD,OAA8B,IAAI8B,EAAM,EAAG9B,IAIpDnU,SAAU,SAACmU,GAAD,OAAoC,IAAIiD,EAAYjD,IAG9DnU,MAAO,SAACmU,GAAD,OAA8B,IAAIoD,EAAMpD,IAG/CnU,QAAS,SAACmU,GAAD,OAAgC,IAAIuD,EAAQvD,IAGrDnU,MAAO,SAACmU,GAAD,OAA+B,IAAI0D,EAAO1D,IAGjDnU,QAAS,SAACmU,GAAD,OAAiC,IAAI6D,EAAS7D,IAGvDnU,SAAU,SAAI2Y,EAA8BxE,EAAmByE,GAArD,OACnB,IAAIF,EAAaC,EAAQxE,EAAUyE,IAG1B5Y,OAAQ,SAAC8B,EAAqBoZ,EAAuB/G,GAA7C,OACjB,IAAI8G,EAAanZ,EAAMoZ,EAAK/G,IAGnBnU,MAAO,SAAIoY,EAA0BC,EAAgClE,GAA9D,OAChB,IAAIgE,EAAYC,EAAeC,EAAOlE,IAG7BnU,QAAS,SAAC0Z,EACAC,EAA4CxF,GAD7C,OAElB,IAAIsF,EAAMC,EAAOC,EAAexF,IAGvBnU,2BAA4B,SAAC4U,EAAwBT,GAAzB,OACrC,IAAIqF,EAAyB5E,EAAQT,IAG5BnU,OAAQ,SAACoC,EAAiC+R,GAAlC,OAA8D,IAAI8H,EAAK7Z,EAAQ+R,IAGvFnU,OAAQ,SAACmU,GAAD,OAAgC,IAAIiI,EAAQjI,IAGpDnU,OAAQ,SAACyc,EAAiBtI,GAAlB,OAA8C,IAAIqI,EAAKC,EAAStI,IAGxEnU,WAAY,SAAIC,EAAUkU,GAAd,OAAiD,IAAIuI,EAASzc,EAAOkU,K,wQCjlFxFwI,EAAMtK,OAAO,GACbuK,EAAMvK,OAAO,GACbwK,EAAMxK,OAAO,GACbyK,EAAQzK,OAAO,KACf0K,EAAc,SAAAF,EAAOxK,OAAO,MAAOA,OAAO,0CAC1C2K,EAAQld,OAAOmd,OAAO,CACxBhZ,EAAGoO,QAAQ,GACX6K,EAAG7K,OAAO,iFACV8K,EAAG,SAAAN,EAAOC,GAAQzK,OAAO,IACzBK,EAAGqK,EACH5J,EAAG4J,EACHtK,EAAGJ,OAAO,GACV+K,GAAI/K,OAAO,iFACXgL,GAAIhL,OAAO,mFAGTiL,EAAW,KAAH,IAAGT,EAAOxK,OAAO,MACzBkL,EAAUlL,OAAO,iFAEjBmL,GADSnL,OAAO,gFACIA,OAAO,kFAC3BoL,EAAoBpL,OAAO,iFAC3BqL,EAAiBrL,OAAO,gFACxBsL,EAAiBtL,OAAO,iFACxBuL,E,WACF,WAAYC,EAAGC,EAAGC,EAAGC,GAAG,oBACpB1Z,KAAKuZ,EAAIA,EACTvZ,KAAKwZ,EAAIA,EACTxZ,KAAKyZ,EAAIA,EACTzZ,KAAK0Z,EAAIA,E,0CAiBb,SAAOC,GACHC,EAAeD,GACf,IAAWE,EAAqB7Z,KAAxBuZ,EAAUO,EAAc9Z,KAAjBwZ,EAAUO,EAAO/Z,KAAVyZ,EACXO,EAAqBL,EAAxBJ,EAAUU,EAAcN,EAAjBH,EAAUU,EAAOP,EAAVF,EAChBU,EAAOC,EAAIP,EAAKK,GAChBG,EAAOD,EAAIJ,EAAKD,GAChBO,EAAOF,EAAIN,EAAKI,GAChBK,EAAOH,EAAIH,EAAKF,GACtB,OAAOI,IAASE,GAAQC,IAASC,I,oBAErC,WACI,OAAO,IAAIjB,EAAcc,GAAKpa,KAAKuZ,GAAIvZ,KAAKwZ,EAAGxZ,KAAKyZ,EAAGW,GAAKpa,KAAK0Z,M,oBAErE,WACI,IAAWG,EAAqB7Z,KAAxBuZ,EAAUO,EAAc9Z,KAAjBwZ,EAAUO,EAAO/Z,KAAVyZ,EACd9Z,EAAM+Y,EAAN/Y,EACF6a,EAAIJ,EAAI,KAAD,IAACP,EAAMtB,IACdkC,EAAIL,EAAI,KAAD,IAACN,EAAMvB,IACdmC,EAAIN,EAAI7B,EAAM6B,EAAI,KAAD,IAACL,EAAMxB,KACxBoC,EAAIP,EAAIza,EAAI6a,GACZI,EAAIR,EAAIA,EAAI,KAAD,IAAEP,EAAKC,EAAOvB,IAAOiC,EAAIC,GACpCI,EAAIF,EAAIF,EACRK,EAAID,EAAIH,EACRK,EAAIJ,EAAIF,EACRO,EAAKZ,EAAIQ,EAAIE,GACbG,EAAKb,EAAIS,EAAIE,GACbG,EAAKd,EAAIQ,EAAIG,GAEnB,OAAO,IAAIzB,EAAc0B,EAAIC,EADlBb,EAAIU,EAAID,GACkBK,K,iBAEzC,SAAIvB,GACAC,EAAeD,GACf,IAAWE,EAA4B7Z,KAA/BuZ,EAAUO,EAAqB9Z,KAAxBwZ,EAAUO,EAAc/Z,KAAjByZ,EAAU0B,EAAOnb,KAAV0Z,EAClBM,EAA4BL,EAA/BJ,EAAUU,EAAqBN,EAAxBH,EAAUU,EAAcP,EAAjBF,EAAU2B,EAAOzB,EAAVD,EACvBc,EAAIJ,GAAKN,EAAKD,IAAOI,EAAKD,IAC1BS,EAAIL,GAAKN,EAAKD,IAAOI,EAAKD,IAC1Bc,EAAIV,EAAIK,EAAID,GAClB,GAAIM,IAAMzC,EACN,OAAOrY,KAAKqb,SAChB,IAAMX,EAAIN,EAAIL,EAAKxB,EAAM6C,GACnBT,EAAIP,EAAIe,EAAK5C,EAAM2B,GACnBU,EAAID,EAAID,EACRG,EAAIJ,EAAID,EACRO,EAAIJ,EAAID,EACRM,EAAKZ,EAAIQ,EAAIE,GACbG,EAAKb,EAAIS,EAAIE,GACbG,EAAKd,EAAIQ,EAAIG,GAEnB,OAAO,IAAIzB,EAAc0B,EAAIC,EADlBb,EAAIU,EAAID,GACkBK,K,sBAEzC,SAASvB,GACL,OAAO3Z,KAAKsb,IAAI3B,EAAM4B,Y,8BAE1B,SAAiBC,GAKb,IAJA,IAAMC,EAAU,EAAI,IAAMD,EACpBE,EAAS,GACXC,EAAI3b,KACJ4b,EAAOD,EACFE,EAAS,EAAGA,EAASJ,EAASI,IAAU,CAC7CD,EAAOD,EACPD,EAAO1W,KAAK4W,GACZ,IAAK,IAAI5d,EAAI,EAAGA,EAAI,KAAH,IAAG,EAAMwd,EAAI,GAAIxd,IAC9B4d,EAAOA,EAAKN,IAAIK,GAChBD,EAAO1W,KAAK4W,GAEhBD,EAAIC,EAAKP,SAEb,OAAOK,I,kBAEX,SAAK7M,EAAGiN,IACCA,GAAe9b,KAAK+b,OAAOzC,EAAc0C,QAC1CF,EAAcG,EAAMD,MACxB,IAAMR,EAAKM,GAAeA,EAAYI,cAAiB,EACvD,GAAI,IAAMV,EACN,MAAM,IAAI9d,MAAM,iEAEpB,IAAIye,EAAcL,GAAeM,EAAiB7N,IAAIuN,GACjDK,IACDA,EAAcnc,KAAKqc,iBAAiBb,GAChCM,GAAqB,IAANN,IACfW,EAAc7C,EAAcgD,WAAWH,GACvCC,EAAiBrc,IAAI+b,EAAaK,KAU1C,IAPA,IAAIR,EAAIrC,EAAciD,KAClBC,EAAIlD,EAAciD,KAChBd,EAAU,EAAI,IAAMD,EACpBiB,EAAa,KAAH,IAAG,EAAMjB,EAAI,GACvBkB,EAAO3O,OAAO,WAAKyN,GAAI,GACvBmB,EAAY,KAAH,IAAG,EAAKnB,GACjBoB,EAAU7O,OAAOyN,GACdK,EAAS,EAAGA,EAASJ,EAASI,IAAU,CAC7C,IAAM9L,EAAS8L,EAASY,EACpBI,EAAQle,OAAOkQ,EAAI6N,GAMvB,GALA7N,IAAM+N,EACFC,EAAQJ,IACRI,GAASF,EACT9N,GAAKyJ,GAEK,IAAVuE,EAAa,CACb,IAAIC,EAAKX,EAAYpM,GACjB8L,EAAS,IACTiB,EAAKA,EAAGvB,UACZiB,EAAIA,EAAElB,IAAIwB,OAET,CACD,IAAIC,EAASZ,EAAYpM,EAAS1S,KAAK2f,IAAIH,GAAS,GAChDA,EAAQ,IACRE,EAASA,EAAOxB,UACpBI,EAAIA,EAAEL,IAAIyB,IAGlB,OAAOzD,EAAcgD,WAAW,CAACX,EAAGa,IAAI,K,sBAE5C,SAASS,EAAQnB,GACb,OAAO9b,KAAKkd,KAAKC,GAAgBF,EAAQvE,EAAMtK,GAAI0N,K,4BAEvD,SAAemB,GACX,IAAIpO,EAAIsO,GAAgBF,EAAQvE,EAAMtK,GAAG,GACnCyM,EAAIvB,EAAc0C,KAClBoB,EAAK9D,EAAciD,KACzB,GAAI1N,IAAMwJ,EACN,OAAO+E,EACX,GAAIpd,KAAK+b,OAAOqB,IAAOvO,IAAMyJ,EACzB,OAAOtY,KACX,GAAIA,KAAK+b,OAAOlB,GACZ,OAAO7a,KAAKkd,KAAKrO,GAGrB,IAFA,IAAI8M,EAAIyB,EACJxE,EAAI5Y,KACD6O,EAAIwJ,GACHxJ,EAAIyJ,IACJqD,EAAIA,EAAEL,IAAI1C,IACdA,EAAIA,EAAEyC,SACNxM,IAAMyJ,EAEV,OAAOqD,I,0BAEX,WACI,OAAO3b,KAAKqd,eAAe3E,EAAMvK,GAAG4N,OAAOzC,EAAciD,Q,2BAE7D,WACI,OAAOvc,KAAKqd,eAAe3E,EAAMtK,GAAG2N,OAAOzC,EAAciD,Q,sBAE7D,WAAgC,IAAvBe,EAAuB,uDAAhBC,EAAOvd,KAAKyZ,GAChBF,EAAYvZ,KAAZuZ,EAAGC,EAASxZ,KAATwZ,EAAGC,EAAMzZ,KAANyZ,EACR+D,EAAKpD,EAAIb,EAAI+D,GACbG,EAAKrD,EAAIZ,EAAI8D,GACbI,EAAKtD,EAAIX,EAAI6D,GACnB,GAAII,IAAOpF,EACP,MAAM,IAAI5a,MAAM,oBACpB,OAAO,IAAIue,EAAMuB,EAAIC,K,gCAEzB,WACIE,M,8BAEJ,WACIA,M,+BAEJ,WACIA,O,yBA9KJ,SAAkBhC,GACd,KAAMA,aAAaM,GACf,MAAM,IAAI5d,UAAU,4CAExB,OAAIsd,EAAEI,OAAOE,EAAMM,MACRjD,EAAciD,KAClB,IAAIjD,EAAcqC,EAAEpC,EAAGoC,EAAEnC,EAAGlB,EAAK8B,EAAIuB,EAAEpC,EAAIoC,EAAEnC,M,2BAExD,SAAqBkC,GACjB,IAAMkC,EAged,SAAqBC,GAAmB,IAAblC,EAAa,uDAATjD,EAAMG,EAC3B9X,EAAM,IAAInD,MAAMigB,EAAK/f,QAOrBggB,EAAWP,EANMM,EAAKje,QAAO,SAAC4U,EAAKuJ,EAAK/f,GAC1C,OAAI+f,IAAQ1F,EACD7D,GACXzT,EAAI/C,GAAKwW,EACF4F,EAAI5F,EAAMuJ,EAAKpC,MACvBrD,GACqCqD,GAOxC,OANAkC,EAAKG,aAAY,SAACxJ,EAAKuJ,EAAK/f,GACxB,OAAI+f,IAAQ1F,EACD7D,GACXzT,EAAI/C,GAAKoc,EAAI5F,EAAMzT,EAAI/C,GAAI2d,GACpBvB,EAAI5F,EAAMuJ,EAAKpC,MACvBmC,GACI/c,EA/eWkd,CAAYvC,EAAOwC,KAAI,SAACvC,GAAD,OAAOA,EAAElC,MAC9C,OAAOiC,EAAOwC,KAAI,SAACvC,EAAG3d,GAAJ,OAAU2d,EAAEwC,SAASP,EAAM5f,S,wBAEjD,SAAkB0d,GACd,OAAO1b,KAAKoe,cAAc1C,GAAQwC,IAAIle,KAAKqe,gB,KAsKnD,SAASzE,EAAeD,GACpB,KAAMA,aAAiBL,GACnB,MAAM,IAAIjb,UAAU,0BAE5B,SAASigB,EAAe3E,GACpB,KAAMA,aAAiB4E,GACnB,MAAM,IAAIlgB,UAAU,2BAE5B,SAASsf,IACL,MAAM,IAAIjgB,MAAM,2CAXpB4b,EAAc0C,KAAO,IAAI1C,EAAcZ,EAAMI,GAAIJ,EAAMK,GAAIT,EAAK8B,EAAI1B,EAAMI,GAAKJ,EAAMK,KACrFO,EAAciD,KAAO,IAAIjD,EAAcjB,EAAKC,EAAKA,EAAKD,G,IAYhDkG,E,WACF,WAAYC,GAAI,oBACZxe,KAAKwe,GAAKA,E,8CAyDd,WACI,IAOI7D,EAPJ,EAAqB3a,KAAKwe,GAApBjF,EAAN,EAAMA,EAAGC,EAAT,EAASA,EAAGC,EAAZ,EAAYA,EAAGC,EAAf,EAAeA,EACT+E,EAAKrE,EAAIA,EAAIX,EAAID,GAAKY,EAAIX,EAAID,IAC9BkF,EAAKtE,EAAIb,EAAIC,GACJmF,EAAYC,EAAWxE,EAAIqE,EAAK,KAAH,IAAGC,EAAMnG,KAA7C5c,MACFkjB,EAAKzE,EAAIuE,EAAUF,GACnBK,EAAK1E,EAAIuE,EAAUD,GACnBK,EAAO3E,EAAIyE,EAAKC,EAAKpF,GAE3B,GAAIsF,EAAatF,EAAIqF,GAAO,CACxB,IAAIE,EAAK7E,EAAIZ,EAAIP,GACbiG,EAAK9E,EAAIb,EAAIN,GACjBM,EAAI0F,EACJzF,EAAI0F,EACJvE,EAAIP,EAAIyE,EAAK1F,QAGbwB,EAAImE,EAEJE,EAAazF,EAAIwF,KACjBvF,EAAIY,GAAKZ,IACb,IAAI2F,EAAI/E,GAAKX,EAAID,GAAKmB,GAGtB,OAFIqE,EAAaG,KACbA,EAAI/E,GAAK+E,IACNC,EAAkBD,K,mBAE7B,WACI,OAAO5iB,EAAWyD,KAAKqf,gB,sBAE3B,WACI,OAAOrf,KAAKsf,U,oBAEhB,SAAO3F,GACH2E,EAAe3E,GACf,IAAMha,EAAIK,KAAKwe,GACTxP,EAAI2K,EAAM6E,GACVe,EAAMnF,EAAIza,EAAE4Z,EAAIvK,EAAEwK,KAAOY,EAAIza,EAAE6Z,EAAIxK,EAAEuK,GACrCiG,EAAMpF,EAAIza,EAAE6Z,EAAIxK,EAAEwK,KAAOY,EAAIza,EAAE4Z,EAAIvK,EAAEuK,GAC3C,OAAOgG,GAAOC,I,iBAElB,SAAI7F,GAEA,OADA2E,EAAe3E,GACR,IAAI4E,EAAeve,KAAKwe,GAAGlD,IAAI3B,EAAM6E,O,sBAEhD,SAAS7E,GAEL,OADA2E,EAAe3E,GACR,IAAI4E,EAAeve,KAAKwe,GAAGiB,SAAS9F,EAAM6E,O,sBAErD,SAASvB,GACL,OAAO,IAAIsB,EAAeve,KAAKwe,GAAGkB,SAASzC,M,4BAE/C,SAAeA,GACX,OAAO,IAAIsB,EAAeve,KAAKwe,GAAGnB,eAAeJ,O,wCA3GrD,SAAiC0C,GAC7B,IAAQ/G,EAAMF,EAANE,EACFgH,EAAIxF,EAAInB,EAAU0G,EAAKA,GACvBE,EAAKzF,GAAKwF,EAAItH,GAAOc,GACvB0G,EAAI/R,QAAQ,GACV4M,EAAIP,GAAK0F,EAAIlH,EAAIgH,GAAKxF,EAAIwF,EAAIhH,IACpC,EAAwCmH,EAAQF,EAAIlF,GAArCqF,EAAf,EAAMC,QAA4Bd,EAAlC,EAA2BxjB,MACvBukB,EAAK9F,EAAI+E,EAAIQ,GACZX,EAAakB,KACdA,EAAK9F,GAAK8F,IACTF,IACDb,EAAIe,GACHF,IACDF,EAAIF,GACR,IAAMO,EAAK/F,EAAI0F,GAAKF,EAAItH,GAAOe,EAAiBsB,GAC1CyF,EAAKjB,EAAIA,EACTkB,EAAKjG,GAAK+E,EAAIA,GAAKxE,GACnB2F,EAAKlG,EAAI+F,EAAKjH,GACdqH,EAAKnG,EAAI9B,EAAM8H,GACfI,EAAKpG,EAAI9B,EAAM8H,GACrB,OAAO,IAAI9G,EAAcc,EAAIiG,EAAKG,GAAKpG,EAAImG,EAAKD,GAAKlG,EAAIkG,EAAKE,GAAKpG,EAAIiG,EAAKE,M,yBAEhF,SAAmBniB,GAEf,IAAMqiB,EAAKC,GADXtiB,EAAMuiB,GAAYviB,EAAK,KACWK,MAAM,EAAG,KACrCmiB,EAAK5gB,KAAK6gB,0BAA0BJ,GACpCK,EAAKJ,EAAmBtiB,EAAIK,MAAM,GAAI,KACtCsiB,EAAK/gB,KAAK6gB,0BAA0BC,GAC1C,OAAO,IAAIvC,EAAeqC,EAAGtF,IAAIyF,M,qBAErC,SAAe3iB,GACXA,EAAMuiB,GAAYviB,EAAK,IACvB,IAAQuB,EAAS+Y,EAAT/Y,EAAGiZ,EAAMF,EAANE,EACLoI,EAAO,0EACP7B,EAAIuB,EAAmBtiB,GAC7B,IA4UR,SAAoB6iB,EAAIC,GACpB,GAAID,EAAGnjB,SAAWojB,EAAGpjB,OACjB,OAAO,EAEX,IAAK,IAAIE,EAAI,EAAGA,EAAIijB,EAAGnjB,OAAQE,IAC3B,GAAIijB,EAAGjjB,KAAOkjB,EAAGljB,GACb,OAAO,EAGf,OAAO,EArVEmjB,CAAW/B,EAAkBD,GAAI/gB,IAAQ4gB,EAAaG,GACvD,MAAM,IAAIzhB,MAAMsjB,GACpB,IAAMZ,EAAKhG,EAAI+E,EAAIA,GACbV,EAAKrE,EAAI9B,EAAM3Y,EAAIygB,GACnB1B,EAAKtE,EAAI9B,EAAM3Y,EAAIygB,GACnBgB,EAAOhH,EAAIqE,EAAKA,GAChB4C,EAAOjH,EAAIsE,EAAKA,GAChB3gB,EAAIqc,EAAIza,EAAIiZ,EAAIwI,EAAOC,GAC7B,EAA8BzC,EAAWxE,EAAIrc,EAAIsjB,IAAzCpB,EAAR,EAAQA,QAAgBqB,EAAxB,EAAiB3lB,MACX4lB,EAAKnH,EAAIkH,EAAI5C,GACb8C,EAAKpH,EAAIkH,EAAIC,EAAKxjB,GACpBwb,EAAIa,GAAK+E,EAAIA,GAAKoC,GAClBvC,EAAazF,KACbA,EAAIa,GAAKb,IACb,IAAMC,EAAIY,EAAIqE,EAAK+C,GACb9H,EAAIU,EAAIb,EAAIC,GAClB,IAAKyG,GAAWjB,EAAatF,IAAMF,IAAMnB,EACrC,MAAM,IAAI3a,MAAMsjB,GACpB,OAAO,IAAIzC,EAAe,IAAIjF,EAAcC,EAAGC,EAAGlB,EAAKoB,Q,KAyD/D6E,EAAevC,KAAO,IAAIuC,EAAejF,EAAc0C,MACvDuC,EAAehC,KAAO,IAAIgC,EAAejF,EAAciD,MACvD,IAAMH,EAAmB,IAAIqF,QACvBxF,E,WACF,WAAY1C,EAAGC,GAAG,oBACdxZ,KAAKuZ,EAAIA,EACTvZ,KAAKwZ,EAAIA,E,kDAEb,SAAeiD,GACXzc,KAAKkc,aAAeO,EACpBL,EAAiBsF,OAAO1hB,Q,wBA4B5B,WACI,IAAMiP,EAAQmQ,EAAkBpf,KAAKwZ,GAErC,OADAvK,EAAM,KAAOjP,KAAKuZ,EAAIjB,EAAM,IAAO,EAC5BrJ,I,mBAEX,WACI,OAAO1S,EAAWyD,KAAKqf,gB,sBAE3B,WACI,IAAQ7F,EAAMxZ,KAANwZ,EAER,OAAO4F,EADGhF,GAAK9B,EAAMkB,GAAK+D,EAAOjF,EAAMkB,O,2BAG3C,WACI,OAAOF,EAAc+E,WAAWre,MAAM2hB,kB,oBAE1C,SAAOhI,GACH,OAAO3Z,KAAKuZ,IAAMI,EAAMJ,GAAKvZ,KAAKwZ,IAAMG,EAAMH,I,oBAElD,WACI,OAAO,IAAIyC,EAAM7B,GAAKpa,KAAKuZ,GAAIvZ,KAAKwZ,K,iBAExC,SAAIG,GACA,OAAOL,EAAc+E,WAAWre,MAAMsb,IAAIhC,EAAc+E,WAAW1E,IAAQwE,a,sBAE/E,SAASxE,GACL,OAAO3Z,KAAKsb,IAAI3B,EAAM4B,Y,sBAE1B,SAAS0B,GACL,OAAO3D,EAAc+E,WAAWre,MAAM0f,SAASzC,EAAQjd,MAAMme,c,sBAvDjE,SAAe/f,GAAoB,IAAfwjB,IAAe,yDACvBhJ,EAASF,EAATE,EAAGC,EAAMH,EAANG,EAELgJ,GADNzjB,EAAMuiB,GAAYviB,EAAK,KACJK,QACnBojB,EAAO,KAAgB,IAAVzjB,EAAI,IACjB,IAAMob,EAAIsI,EAAgBD,GAC1B,GAAID,GAAUpI,GAAKX,EACf,MAAM,IAAInb,MAAM,wBACpB,IAAKkkB,GAAUpI,GAAKR,EAChB,MAAM,IAAItb,MAAM,6BACpB,IAAMqkB,EAAK3H,EAAIZ,EAAIA,GACbwI,EAAI5H,EAAI2H,EAAKzJ,GACbva,EAAIqc,EAAIxB,EAAImJ,EAAKzJ,GACvB,EAA4ByH,EAAQiC,EAAGjkB,GAAjCkiB,EAAN,EAAMA,QAAgB1G,EAAtB,EAAe5d,MACf,IAAKskB,EACD,MAAM,IAAIviB,MAAM,uCACpB,IAAMukB,GAAU1I,EAAIjB,KAASA,EACvB4J,EAAqC,KAAV,IAAV9jB,EAAI,KAI3B,OAHI8jB,IAAkBD,IAClB1I,EAAIa,GAAKb,IAEN,IAAI0C,EAAM1C,EAAGC,K,6EAExB,WAA4BhP,GAA5B,2FACkB2X,GAAqB3X,GADvC,uCACoD4X,OADpD,2C,8DAmCJnG,EAAMD,KAAO,IAAIC,EAAMvD,EAAMI,GAAIJ,EAAMK,IACvCkD,EAAMM,KAAO,IAAIN,EAAM5D,EAAKC,G,IACtB+J,E,WACF,WAAYzC,EAAGT,GAAG,oBACdnf,KAAK4f,EAAIA,EACT5f,KAAKmf,EAAIA,EACTnf,KAAKsiB,iB,kDAQT,WACI,IAAQ1C,EAAS5f,KAAT4f,EAAGT,EAAMnf,KAANmf,EACX,KAAMS,aAAa3D,GACf,MAAM,IAAIve,MAAM,2BAEpB,OADAyf,GAAgBgC,EAAGzG,EAAMtK,GAAG,GACrBpO,O,wBAEX,WACI,IAAMpD,EAAK,IAAII,WAAW,IAG1B,OAFAJ,EAAGmD,IAAIC,KAAK4f,EAAEP,cACdziB,EAAGmD,IAAIqf,EAAkBpf,KAAKmf,GAAI,IAC3BviB,I,mBAEX,WACI,OAAOL,EAAWyD,KAAKqf,iB,sBApB3B,SAAejhB,GACX,IAAM6Q,EAAQ0R,GAAYviB,EAAK,IAG/B,OAAO,IAAIikB,EAFDpG,EAAMsG,QAAQtT,EAAMxQ,MAAM,EAAG,KAAK,GAClCqjB,EAAgB7S,EAAMxQ,MAAM,GAAI,U,KAqBlD,SAASxC,IAAuB,2BAARwD,EAAQ,yBAARA,EAAQ,gBAC5B,IAAKA,EAAOC,OAAM,SAACC,GAAD,OAAOA,aAAa3C,cAClC,MAAM,IAAIU,MAAM,4BACpB,GAAsB,IAAlB+B,EAAO3B,OACP,OAAO2B,EAAO,GAGlB,IAFA,IAAM3B,EAAS2B,EAAOG,QAAO,SAACD,EAAG5C,GAAJ,OAAY4C,EAAI5C,EAAIe,SAAQ,GACnD+B,EAAS,IAAI7C,WAAWc,GACrBE,EAAI,EAAG8B,EAAM,EAAG9B,EAAIyB,EAAO3B,OAAQE,IAAK,CAC7C,IAAMjB,EAAM0C,EAAOzB,GACnB6B,EAAOE,IAAIhD,EAAK+C,GAChBA,GAAO/C,EAAIe,OAEf,OAAO+B,EAEX,IAyMI2iB,EAzME7kB,EAAQC,MAAMC,KAAK,CAAEC,OAAQ,MAAO,SAACC,EAAGC,GAAJ,OAAUA,EAAEC,SAAS,IAAIC,SAAS,EAAG,QAC/E,SAAS3B,EAAW4B,GAChB,KAAMA,aAAkBnB,YACpB,MAAM,IAAIU,MAAM,uBAEpB,IADA,IAAIU,EAAM,GACDJ,EAAI,EAAGA,EAAIG,EAAOL,OAAQE,IAC/BI,GAAOT,EAAMQ,EAAOH,IAExB,OAAOI,EAEX,SAAS9B,EAAW8B,GAChB,GAAmB,kBAARA,EACP,MAAM,IAAIC,UAAU,2CAA6CD,GAErE,GAAIA,EAAIN,OAAS,EACb,MAAM,IAAIJ,MAAM,6CAEpB,IADA,IAAMY,EAAQ,IAAItB,WAAWoB,EAAIN,OAAS,GACjCE,EAAI,EAAGA,EAAIM,EAAMR,OAAQE,IAAK,CACnC,IAAMO,EAAQ,EAAJP,EACJQ,EAAUJ,EAAIK,MAAMF,EAAGA,EAAI,GAC3BG,EAAOC,OAAOC,SAASJ,EAAS,IACtC,GAAIG,OAAOE,MAAMH,IAASA,EAAO,EAC7B,MAAM,IAAIhB,MAAM,yBACpBY,EAAMN,GAAKU,EAEf,OAAOJ,EAEX,SAASmkB,EAAkB1E,GAGvB,OAAOzhB,EADKyhB,EAAI9f,SAAS,IAAIC,SAASJ,GAAY,MAGtD,SAASshB,EAAkBrB,GACvB,OAAO0E,EAAkB1E,GAAK2E,UAElC,SAAS1D,EAAajB,GAClB,OAAQ3D,EAAI2D,GAAOzF,KAASA,EAEhC,SAASwJ,EAAgB3jB,GACrB,KAAMA,aAAkBnB,YACpB,MAAM,IAAIU,MAAM,uBACpB,OAAOqQ,OAAO,KAAOxR,EAAWS,WAAWa,KAAKM,GAAQukB,YAE5D,SAAShC,EAAmBzR,GACxB,OAAOmL,EAAI0H,EAAgB7S,GAAU,SAAAsJ,EAAOC,GAAQF,GAExD,SAAS8B,EAAIza,GAAgB,IAAbqP,EAAa,uDAAT0J,EAAMG,EAChB9W,EAAMpC,EAAIqP,EAChB,OAAOjN,GAAOsW,EAAMtW,EAAMiN,EAAIjN,EAElC,SAASwb,EAAO3O,GAA0B,IAAlB+T,EAAkB,uDAATjK,EAAMG,EACnC,GAAIjK,IAAWyJ,GAAOsK,GAAUtK,EAC5B,MAAM,IAAI3a,MAAJ,oDAAuDkR,EAAvD,gBAAqE+T,IAK/E,IAHA,IAAIhjB,EAAIya,EAAIxL,EAAQ+T,GAChB3T,EAAI2T,EACJpJ,EAAIlB,EAAKmB,EAAIlB,EAAK0J,EAAI1J,EAAKva,EAAIsa,EAC5B1Y,IAAM0Y,GAAK,CACd,IAAMuK,EAAI5T,EAAIrP,EACRigB,EAAI5Q,EAAIrP,EACRkjB,EAAItJ,EAAIyI,EAAIY,EACZ/T,EAAI2K,EAAIzb,EAAI6kB,EAClB5T,EAAIrP,EAAGA,EAAIigB,EAAGrG,EAAIyI,EAAGxI,EAAIzb,EAAGikB,EAAIa,EAAG9kB,EAAI8Q,EAE3C,IAAMiU,EAAM9T,EACZ,GAAI8T,IAAQxK,EACR,MAAM,IAAI5a,MAAM,0BACpB,OAAO0c,EAAIb,EAAGoJ,GAmBlB,SAASI,EAAKxJ,EAAGyJ,GAGb,IAFA,IAAQnK,EAAMH,EAANG,EACJ9W,EAAMwX,EACHyJ,KAAU3K,GACbtW,GAAOA,EACPA,GAAO8W,EAEX,OAAO9W,EAEX,SAASkhB,EAAY1J,GACjB,IAAQV,EAAMH,EAANG,EACFqK,EAAMnV,OAAO,GACboV,EAAOpV,OAAO,IACdqV,EAAOrV,OAAO,IACdsV,EAAOtV,OAAO,IACduV,EAAOvV,OAAO,IAEdmT,EADM3H,EAAIA,EAAKV,EACJU,EAAKV,EAChB0K,EAAMR,EAAK7B,EAAI3I,GAAO2I,EAAMrI,EAC5B2K,EAAMT,EAAKQ,EAAIjL,GAAOiB,EAAKV,EAC3B4K,EAAOV,EAAKS,EAAIN,GAAOM,EAAM3K,EAC7B6K,EAAOX,EAAKU,EAAKN,GAAQM,EAAO5K,EAChC8K,EAAOZ,EAAKW,EAAKN,GAAQM,EAAO7K,EAChC+K,EAAOb,EAAKY,EAAKN,GAAQM,EAAO9K,EAChCgL,EAAQd,EAAKa,EAAKN,GAAQM,EAAO/K,EACjCiL,EAAQf,EAAKc,EAAMP,GAAQM,EAAO/K,EAClCkL,EAAQhB,EAAKe,EAAMX,GAAQM,EAAO5K,EAExC,MAAO,CAAEmL,UADUjB,EAAKgB,EAAMxL,GAAOgB,EAAKV,EACtBqI,MAExB,SAASnB,EAAQiC,EAAGjkB,GAChB,IAAMkmB,EAAK7J,EAAIrc,EAAIA,EAAIA,GACjBmmB,EAAK9J,EAAI6J,EAAKA,EAAKlmB,GAErBwb,EAAIa,EAAI4H,EAAIiC,EADJhB,EAAYjB,EAAIkC,GAAIF,WAE1BG,EAAM/J,EAAIrc,EAAIwb,EAAIA,GAClB6K,EAAQ7K,EACR8K,EAAQjK,EAAIb,EAAIN,GAChBqL,EAAWH,IAAQnC,EACnBuC,EAAWJ,IAAQ/J,GAAK4H,GACxBwC,EAASL,IAAQ/J,GAAK4H,EAAI/I,GAOhC,OANIqL,IACA/K,EAAI6K,IACJG,GAAYC,KACZjL,EAAI8K,GACJrF,EAAazF,KACbA,EAAIa,GAAKb,IACN,CAAE0G,QAASqE,GAAYC,EAAU5oB,MAAO4d,GAEnD,SAASqF,EAAWhQ,GAChB,OAAOmR,EAAQzH,EAAK1J,GAExB,SAAS6V,GAAOrV,GACZ,OAAOgL,EAAI0H,EAAgB1S,GAAOsJ,EAAMtK,GAa5C,SAASuS,GAAYviB,EAAKsmB,GACtB,IAAMzV,EAAQ7Q,aAAepB,WAAaA,WAAWa,KAAKO,GAAO9B,EAAW8B,GAC5E,GAA8B,kBAAnBsmB,GAA+BzV,EAAMnR,SAAW4mB,EACvD,MAAM,IAAIhnB,MAAJ,mBAAsBgnB,EAAtB,WACV,OAAOzV,EAEX,SAASkO,GAAgBY,EAAK4G,GAAoB,IAAf/C,IAAe,yDAC9C,IAAK+C,EACD,MAAM,IAAItmB,UAAU,qBAGxB,GAFmB,kBAAR0f,GAAoBpf,OAAOmQ,cAAciP,KAChDA,EAAMhQ,OAAOgQ,IACE,kBAARA,GAAoBA,EAAM4G,EACjC,GAAI/C,GACA,GAAIvJ,EAAM0F,EACN,OAAOA,OAGX,GAAI1F,GAAO0F,EACP,OAAOA,EAGnB,MAAM,IAAI1f,UAAU,2CAExB,SAASumB,GAAiB3V,GAItB,OAHAA,EAAM,IAAM,IACZA,EAAM,KAAO,IACbA,EAAM,KAAO,GACNA,EAKX,SAAS4V,GAAgBC,GAKrB,GAAmB,MAJnBA,EACmB,kBAARA,GAAmC,kBAARA,EAC5BrC,EAAkBtF,GAAgB2H,EAAK9L,IACvC2H,GAAYmE,IACdhnB,OACJ,MAAM,IAAIJ,MAAJ,qBACV,OAAOonB,EAEX,SAASC,GAAeC,GACpB,IAAMC,EAAOL,GAAiBI,EAAOvmB,MAAM,EAAG,KACxCymB,EAASF,EAAOvmB,MAAM,GAAI,IAC1Bwe,EAASwH,GAAOQ,GAChB7C,EAAQnG,EAAMD,KAAK0D,SAASzC,GAC5BkI,EAAa/C,EAAM/C,aACzB,MAAO,CAAE4F,OAAMC,SAAQjI,SAAQmF,QAAO+C,cAG1C,SAASC,KACL,GAA2B,oBAAhB5C,EACP,MAAM,IAAI9kB,MAAM,oDACpB,OAAO8kB,EAAW,WAAX,a,SAEIL,G,2FAAf,WAAoC2C,GAApC,uFACWC,GADX,SACgCM,GAAMC,OAAOT,GAAgBC,IAD7D,wG,sBAGA,SAASS,GAAyBT,GAC9B,OAAOC,GAAeK,GAAQP,GAAgBC,KA0BlD,SAASU,GAAoBrb,EAAKvJ,EAAS8E,GACvC9E,EAAU+f,GAAY/f,GAChB8E,aAAqBuW,IACvBvW,EAAYuW,EAAMsG,QAAQ7c,GAAW,IACzC,MAAiByE,aAAekY,EAAYlY,EAAImY,iBAAmBD,EAAUE,QAAQpY,GAA7EyV,EAAR,EAAQA,EAAGT,EAAX,EAAWA,EAEX,MAAO,CAAES,IAAGT,IAAGsG,GADJnM,EAAc0C,KAAKqB,eAAe8B,GAC1BuG,IAAKhgB,EAAWtE,IAAKR,GAE5C,SAAS+kB,GAAmBjgB,EAAWka,EAAG6F,EAAIT,GAC1C,IAAMY,EAAInB,GAAOO,GACXa,EAAKvM,EAAc+E,WAAW3Y,GAAW2X,eAAeuI,GAE9D,OADYtM,EAAc+E,WAAWuB,GAAGtE,IAAIuK,GACjCpG,SAASgG,GAAIpI,eAAe3E,EAAMvK,GAAG4N,OAAOzC,EAAciD,MAYlE,IAAMuJ,GAAO,CAChB3D,qBAAsBoD,GACtBQ,aA/CJ,SAA0Bvb,GACtB,OAAO+a,GAAyB/a,GAAY2a,YA+C5Cld,KApCJ,SAAkBrH,EAAS4J,GACvB5J,EAAU+f,GAAY/f,GACtB,MAAuC2kB,GAAyB/a,GAAxD0a,EAAR,EAAQA,OAAQjI,EAAhB,EAAgBA,OAAQkI,EAAxB,EAAwBA,WAClBvF,EAAI6E,GAAOW,GAAQF,EAAQtkB,IAC3BolB,EAAI/J,EAAMD,KAAK0D,SAASE,GAExBT,EAAI/E,EAAIwF,EADJ6E,GAAOW,GAAQY,EAAE3G,aAAc8F,EAAYvkB,IAC/Bqc,EAAQvE,EAAMtK,GACpC,OAAO,IAAIiU,EAAU2D,EAAG7G,GAAGE,cA8B3B4G,OATJ,SAAoB9b,EAAKvJ,EAAS8E,GAC9B,MAA4B8f,GAAoBrb,EAAKvJ,EAAS8E,GAAtDka,EAAR,EAAQA,EAAG6F,EAAX,EAAWA,GAAIrkB,EAAf,EAAeA,IAAKskB,EAApB,EAAoBA,IACdV,EAASI,GAAQxF,EAAEP,aAAcqG,EAAIrG,aAAcje,GACzD,OAAOukB,GAAmBD,EAAK9F,EAAG6F,EAAIT,KAa1C/I,EAAMD,KAAKkK,eAAe,GA6DnB,IAcD5kB,GAAS,CACXG,KAAM0kB,EACN5kB,IAAqB,kBAAT6kB,MAAqB,WAAYA,KAAOA,KAAK9kB,YAASlB,GAEzDilB,GAAQ,CACjBgB,iBAAkB,CACd,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,oEAEJ9pB,aACAD,aACAL,cACAkmB,wBACA/H,MACAmD,SACA+I,oBAAqB,SAAClX,GAElB,IADAA,EAAOuR,GAAYvR,IACVtR,OAAS,IAAMsR,EAAKtR,OAAS,KAClC,MAAM,IAAIJ,MAAM,yDACpB,OAAO0c,EAAI0H,EAAgB1S,GAAOsJ,EAAMtK,EAAIkK,GAAOA,GAEvD1c,YAAa,WAAsB,IAArByF,EAAqB,uDAAP,GACxB,GAAIC,GAAOC,IACP,OAAOD,GAAOC,IAAIC,gBAAgB,IAAIxE,WAAWqE,IAEhD,GAAIC,GAAOG,KAAM,CAClB,IAAQ7F,EAAgB0F,GAAOG,KAAvB7F,YACR,OAAO,IAAIoB,WAAWpB,EAAYyF,GAAapE,QAG/C,MAAM,IAAIS,MAAM,sDAGxB6oB,iBAAkB,WACd,OAAOlB,GAAMzpB,YAAY,KAE7B0pB,OAAQ,WAAF,sCAAE,+GACE1kB,EAAU3E,EAAW,WAAX,MACZqF,GAAOC,IAFP,gCAGqBD,GAAOC,IAAIilB,OAAO1lB,OAAO,UAAWF,EAAQ3D,QAHjE,cAGMA,EAHN,yBAIO,IAAID,WAAWC,IAJtB,WAMKqE,GAAOG,KANZ,0CAOOzE,WAAWa,KAAKyD,GAAOG,KAAKglB,WAAW,UAAU5lB,OAAOD,GAASE,WAPxE,cAUM,IAAIpD,MAAM,gDAVhB,4CAAF,kDAAE,GAaRgpB,WAnDiB,WAmD8B,IAApCjK,EAAoC,uDAAvB,EAAG2F,EAAoB,uDAAZnG,EAAMD,KAC/Be,EAASqF,EAAMrG,OAAOE,EAAMD,MAAQoG,EAAQ,IAAInG,EAAMmG,EAAM7I,EAAG6I,EAAM5I,GAG3E,OAFAuD,EAAOmJ,eAAezJ,GACtBM,EAAO2C,SAASnH,GACTwE,GAEX4J,gBAAYvmB,GAEhB5E,OAAOorB,iBAAiBvB,GAAO,CAC3BsB,WAAY,CACRE,cAAc,EACdtY,IAFQ,WAGJ,OAAOiU,GAEXziB,IALQ,SAKJ+mB,GACKtE,IACDA,EAAcsE,O,sLCzwBbC,I,sBAwBAC,IC9FJC,G,kDAUXzmB,WAAY0mB,EAAkBC,SACxBpK,EADwBoK,oBAE5B,IAAQvmB,EAAqBsmB,EAArBtmB,QAAYwmB,EAApB,YAA6BF,EAA7B,IACQG,EAASH,EAATG,KACFjmB,EACY,IAAhBimB,EAAKvpB,OAAe8C,EAApBymB,YAA0CA,EAAKC,KAAK,KAApD,OAA+D1mB,EALrCumB,OAM5B,cAAM/lB,GACN5F,OAAOiF,OAAPjF,gBAAoB4rB,GACpB,EAAK7b,KAAO,EAAK/K,YAAY+K,KAC7B,EAAK4b,SAAW,W,MACd,cAAQ,EAAApK,GAAR,EAAQA,EAAR,CAAoBmK,GAApB,mBAAgCC,OAVNA,E,mCAVC9oB,Y,SDRjBkpB,GAAShO,GACvB,MAAoB,kBAANA,GAAuB,MAALA,E,SAoBlBiO,GAAM7rB,GACpB,MAAwB,kBAAVA,EAAqB8rB,KAAKC,UAAU/rB,GAA3C,GAAuDA,E,SAQhDgsB,GAAiBC,GAC/B,MAAwBA,EAAM5lB,OAAtB6lB,EAAR,EAAQA,KAAMlsB,EAAd,EAAcA,MACd,OAAOksB,OAAOznB,EAAYzE,E,SAOZmsB,GACdjoB,EACAkoB,EACAC,EACArsB,GAEA,IAAe,IAAXkE,EAAJ,EAEsB,IAAXA,EACTA,EAAS,GACkB,kBAAXA,IAChBA,EAAS,CAAEe,QAASf,IAGtB,IAAQwnB,EAAiBU,EAAjBV,KAAMY,EAAWF,EAAXE,OACNC,EAASF,EAATE,KACR,EAKIroB,EAJFsoB,EADF,EACEA,WADF,IAEEvnB,eAFF,MAES,6BAAiCsnB,EAAjC,KACLC,EAAa,qBAAsBA,EAAzB,IAA0C,IAD/C,oBAEcX,GAAM7rB,GAFpB,IAFT,EAOA,OAAO,yBACLA,QACAusB,OACAC,aACArD,IAAKuC,EAAKA,EAAKvpB,OAAS,GACxBupB,OACAY,UACGpoB,GAPL,IAQEe,a,SAQammB,GACflnB,EACAkoB,EACAC,EACArsB,G,uFAzFO4rB,GADchO,EA4FL1Z,IA3FoC,oBAAvB0Z,EAAE6O,OAAOC,YA4FpCxoB,EAAS,CAACA,I,cAGIA,G,4DAAL+f,YACHsH,EAAUY,GAAUlI,EAAGmI,EAASC,EAAQrsB,IAEjCurB,C,gBACX,O,UAAMA,E,yKApGZ,IAAuB3N,I,iCA8GNyN,GACfrrB,EACAqsB,G,mJAWA,GAVAM,iCAKI,G,EAEkEA,EAA9DjB,kBAAO,OAAuDiB,EAAnDL,oBAAS,CAACtsB,GAAD,IAA0C2sB,EAAjCC,qBAAS,IAAwBD,EAAjB5L,mBAAO,EACtD8L,EAAe,CAAEnB,OAAMY,UAEzBM,IACF5sB,EAAQqsB,EAAOS,QAAQ9sB,EAAO6sB,GAG5B9L,GACgB,SAAhBsL,EAAOE,MACPX,GAASS,EAAOU,SAChBnB,GAAS5rB,KACRiC,MAAM2W,QAAQ5Y,IAEf,IAAWmpB,KAAOnpB,OACWyE,IAAvB4nB,EAAOU,OAAO5D,WACTnpB,EAAMmpB,GAMjB6D,GAAQ,E,cAEUX,EAAOY,UAAUjtB,EAAO6sB,I,yDAE5C,OAFStB,UACTyB,GAAQ,E,UACF,CAACzB,OAAS9mB,G,6JAGI4nB,EAAOa,QAAQltB,EAAO6sB,I,oFAAlC5C,OAAG7nB,OAAGohB,OACRlgB,EAAK+nB,GAAIjpB,EAAGohB,EAAa,CAC7BkI,UAAYjnB,IAANwlB,EAAkByB,EAAlBzB,sBAA6ByB,GAA7BzB,CAAmCA,IACzCqC,YAAc7nB,IAANwlB,EAAkBqC,EAAlBrC,sBAA+BqC,GAA/BrC,CAAuC7nB,IAC/CwqB,SACA7L,S,cAGczd,G,gEAALya,WACH,GAAD,C,gBAEH,OADAiP,GAAQ,E,UACF,CAACjP,EAAE,QAAItZ,G,gCACJmoB,IACTxqB,EAAI2b,EAAE,QAEItZ,IAANwlB,EACFjqB,EAAQoC,EACCpC,aAAiBmtB,IAC1BntB,EAAMoE,IAAI6lB,EAAG7nB,GACJpC,aAAiBotB,IAC1BptB,EAAM2f,IAAIvd,GACDwpB,GAAS5rB,KAClBA,EAAMiqB,GAAK7nB,I,8RAMf4qB,EAAOA,C,8BACaX,EAAOgB,QAAQrtB,EAAY6sB,I,2DAE/C,OAFStB,UACTyB,GAAQ,E,UACF,CAACzB,OAAS9mB,G,qJAIhBuoB,EAAOA,C,gBACT,O,UAAM,MAACvoB,EAAWzE,G,2GEtLTstB,G,WAYXzoB,WAAY0oB,kCAQV,IACEhB,EAMEgB,EANFhB,KACAQ,EAKEQ,EALFR,OACAE,EAIEM,EAJFN,UACAI,EAGEE,EAHFF,QAJF,EAOIE,EAFFT,eALF,MAKa9sB,YAAD,OAAoBA,GALhC,IAOIutB,EADFL,eANF,0BAMY,2HANZ,EASA7oB,KAAKkoB,KAAOA,EACZloB,KAAK0oB,OAASA,EACd1oB,KAAK6oB,QAAUA,EACf7oB,KAAKyoB,QAAUA,EAGbzoB,KAAK4oB,UADHA,EACe,SAACjtB,EAAOosB,GAEvB,OAAOhB,GADQ6B,EAAUjtB,EAAOosB,GACNA,EAAS,EAAMpsB,IAG1B,iBAAM,IAIvBqE,KAAKgpB,QADHA,EACa,SAACrtB,EAAOosB,GAErB,OAAOhB,GADQiC,EAAQrtB,EAAOosB,GACJA,EAAS,EAAMpsB,IAG5B,iBAAM,I,0CAQzB4T,SAAO5T,GACL,OAAO4T,GAAO5T,EAAOqE,Q,oBAOvBkB,SAAOvF,GACL,OAAOuF,GAAOvF,EAAOqE,Q,gBAOvBmpB,SAAGxtB,GACD,OAAOwtB,GAAGxtB,EAAOqE,Q,kBAQnB0c,SAAK/gB,GACH,O,SAuDuBA,EAAgBqsB,GACzC,IAAMnoB,EAASupB,GAASztB,EAAOqsB,EAAQ,CAAEO,QAAQ,EAAM7L,MAAM,IAE7D,GAAI7c,EAAO,GACT,MAAMA,EAAO,GAEb,OAAOA,EAAO,GA7DP6c,CAAK/gB,EAAOqE,Q,sBAYrBopB,SACEztB,GADM,IAEN2sB,EAFM,uDAIF,GAEJ,OAAOc,GAASztB,EAAOqE,KAAMsoB,O,cAQjB/Y,GACd5T,EACAqsB,GAEA,IAAMnoB,EAASupB,GAASztB,EAAOqsB,GAE/B,GAAInoB,EAAO,GACT,MAAMA,EAAO,G,SAQDqB,GAAavF,EAAgBqsB,GAC3C,IAAMnoB,EAASupB,GAASztB,EAAOqsB,EAAQ,CAAEO,QAAQ,IAEjD,GAAI1oB,EAAO,GACT,MAAMA,EAAO,GAEb,OAAOA,EAAO,G,SAsBFspB,GAASxtB,EAAgBqsB,GAEvC,OADeoB,GAASztB,EAAOqsB,GAChB,G,SAQDoB,GACdztB,EACAqsB,GAII,IAHJM,EAGI,0DAEEe,EAASrC,GAAIrrB,EAAOqsB,EAAQM,GAC5BgB,EAAQ3B,GAAc0B,GAE5B,GAAIC,EAAM,GAAI,CACZ,IAAMC,EAAQ,IAAItC,GAAYqC,EAAM,GAAtB,oBAA0B,gHACtBD,GADsB,8DAC3B3P,EAD2B,SAE9B,GAF8B,gBAGlC,OAHkC,SAG5BA,EAAE,GAH0B,qHAAA8C,IAAA,6EAQxC,MAAO,CAAC+M,OAAOnpB,GAEf,IAAMrC,EAAIurB,EAAM,GAChB,MAAO,MAAClpB,EAAWrC,G,SClIPyrB,GAAUje,EAAcqd,GACtC,OAAO,IAAIK,GAAO,CAAEf,KAAM3c,EAAMmd,OAAQ,KAAME,c,SCpChCtqB,GAA6BmrB,GAC3C,OAAO,IAAIR,GAAO,CAChBf,KAAM,QACNQ,OAAQe,EACPZ,QAHe,+BAGPltB,GAHO,6FAIV8tB,IAAW7rB,MAAM2W,QAAQ5Y,GAJf,+BAKSA,EAAMktB,WALf,yDAMV,OANU,yBAKA7qB,EALA,KAKGD,EALH,cAMJ,CAACC,EAAGD,EAAG0rB,GANH,qMAUhBhB,QAVgB,SAUR9sB,GACN,OAAOiC,MAAM2W,QAAQ5Y,GAASA,EAAM8C,QAAU9C,GAEhDitB,UAbgB,SAaNjtB,GACR,OACEiC,MAAM2W,QAAQ5Y,IAAdiC,0CAC0C4pB,GAAM7rB,M,SAUxC+tB,KACd,OAAOF,GAAO,WAAY7tB,YACxB,MAAwB,mBAAVA,K,SAsEF0T,GACdgB,GAEA,OAAOmZ,GAAO,YAAa7tB,YACzB,OACEA,aAAiB0U,GAAjB1U,eACgB0U,EAAM9E,KADtB,6BACwDic,GAAM7rB,M,SAwGpDguB,GAAWC,GACzB,IAAMC,EAAcrC,GAAMoC,GACpBlQ,SAAWkQ,EACjB,OAAO,IAAIX,GAAO,CAChBf,KAAM,UACNQ,OACQ,WAANhP,GAAwB,WAANA,GAAwB,YAANA,EAAkBkQ,EAAW,KACnEhB,UAJgB,SAINjtB,GACR,OACEA,IAAUiuB,GAAVjuB,yBAC0BkuB,EAD1B,oBAC0DrC,GAAM7rB,M,SA4CxDmuB,KACd,OAAON,GAAO,SAAS,kBAAM,K,SAOfO,GAAe/B,GAC7B,OAAO,IAAIiB,GAAJ,2BACFjB,GADE,IAELY,UAAW,SAACjtB,EAAO6sB,GAAR,OAA0B,OAAV7sB,GAAkBqsB,EAAOY,UAAUjtB,EAAO6sB,IACrEQ,QAAS,SAACrtB,EAAO6sB,GAAR,OAA0B,OAAV7sB,GAAkBqsB,EAAOgB,QAAQrtB,EAAO6sB,O,SAQrD5Z,KACd,OAAO4a,GAAO,UAAW7tB,YACvB,MACoB,kBAAVA,IAAuBkD,MAAMlD,IAArC,oCACoC6rB,GAAM7rB,M,SAmDhCquB,GAAehC,GAC7B,OAAO,IAAIiB,GAAJ,2BACFjB,GADE,IAELY,UAAW,SAACjtB,EAAO6sB,GAAR,YACCpoB,IAAVzE,GAAuBqsB,EAAOY,UAAUjtB,EAAO6sB,IACjDQ,QAAS,SAACrtB,EAAO6sB,GAAR,YAA0BpoB,IAAVzE,GAAuBqsB,EAAOgB,QAAQrtB,EAAO6sB,O,SAW1DyB,GACdC,EACAC,GAEA,OAAO,IAAIlB,GAAO,CAChBf,KAAM,SACNQ,OAAQ,KACPG,QAHe,+BAGPltB,GAHO,uFAIV4rB,GAAS5rB,GAJC,yCAKIA,GALJ,8CAOV,OAFSiqB,EALC,WAMJ7nB,EAAIpC,EAAMiqB,GANN,SAOJ,CAACA,EAAGA,EAAGsE,GAPH,OAQV,OARU,SAQJ,CAACtE,EAAG7nB,EAAGosB,GARH,iEAYhBvB,UAZgB,SAYNjtB,GACR,OACE4rB,GAAS5rB,IAAT4rB,qCAAwDC,GAAM7rB,M,SAqDtDyuB,KACd,OAAOZ,GAAO,UAAW7tB,YACvB,MACmB,kBAAVA,GAAP,oCACoC6rB,GAAM7rB,M,SAyDhC2tB,GAAMe,GACpB,IAAMC,EAAQR,KAEd,OAAO,IAAIb,GAAO,CAChBf,KAAM,QACNQ,OAAQ,KACPG,QAHe,+BAGPltB,GAHO,uFAIViC,MAAM2W,QAAQ5Y,GAJJ,gBAKNmC,EAAST,KAAKsnB,IAAI0F,EAASvsB,OAAQnC,EAAMmC,QAEtCE,EAAI,EAPD,YAOIA,EAAIF,GAPR,gBAQV,OARU,SAQJ,CAACE,EAAGrC,EAAMqC,GAAIqsB,EAASrsB,IAAMssB,GARzB,OAOgBtsB,IAPhB,yDAYhB4qB,UAZgB,SAYNjtB,GACR,OACEiC,MAAM2W,QAAQ5Y,IAAdiC,oCACoC4pB,GAAM7rB,M,SAalCusB,GACdQ,GAEA,IAAM6B,EAAO/uB,OAAO+uB,KAAK7B,GACzB,OAAO,IAAIO,GAAO,CAChBf,KAAM,OACNQ,SACCG,QAHe,+BAGPltB,GAHO,yFAIV4rB,GAAS5rB,GAJC,+BAKI4uB,GALJ,yDAMV,OADS3E,EALC,iBAMJ,CAACA,EAAGjqB,EAAMiqB,GAAI8C,EAAO9C,IANjB,qMAUhBgD,UAVgB,SAUNjtB,GACR,OACE4rB,GAAS5rB,IAAT4rB,qCAAwDC,GAAM7rB,M,SA4DtD6a,GAAMgU,GACpB,IAAMX,EAAcW,EAAQtM,KAAKiB,YAAD,OAAOA,EAAE+I,QAAMZ,KAAK,OACpD,OAAO,IAAI2B,GAAO,CAChBf,KAAM,QACNQ,OAAQ,KACRE,UAHgB,SAGNjtB,EAAO6sB,GACf,IADO,EC/mBoBzrB,EDgnBrBoqB,EAAW,GADV,cAGSqD,GAHT,IAGP,IAAK,EAAL,qBAAyB,KACvB,EAAoBxD,GAAIrrB,EADD,QACW6sB,GAAxBa,GCnnBetsB,EDmnBzB,EClnBC,OAAA0tB,GAAA,GAAe1tB,IAAQ,OAAA2tB,GAAA,GAAgB3tB,IAAQ,OAAA4tB,GAAA,GAA2B5tB,IAAQ,OAAA6tB,GAAA,MDknBnF,SAGA,IAFA,YAAgBvB,EAAhB,MAEW,GACT,MAAO,GACF,oBACmBA,GADnB,IACL,IAAK,EAAL,qBAAgC,KAApBnC,EAAoB,0BAC1BA,GACFC,EAASniB,KAAKkiB,IAHb,gCATF,8BAkBP,MAAO,8CACyC2C,EADzC,oBACyErC,GAC5E7rB,IAFJ,OAIKwrB,M,SAUK0D,KACd,OAAOrB,GAAO,WAAW,kBAAM,K,SEroBjBjB,GACdP,EACA8C,EACArC,GAEA,OAAO,IAAIQ,GAAJ,2BACFjB,GADE,IAELS,QAAS,SAAC9sB,EAAO6sB,GACf,OAAOW,GAAGxtB,EAAOmvB,GACb9C,EAAOS,QAAQA,EAAQ9sB,EAAO6sB,GAAMA,GACpCR,EAAOS,QAAQ9sB,EAAO6sB,O,gFCvB1BnQ,GAAMtK,OAAO,GACbuK,GAAMvK,OAAO,GACbwK,GAAMxK,OAAO,GACbgd,GAAMhd,OAAO,GACbid,GAAMjd,OAAO,GACbkd,GAAY,KAAH,IAAG1S,GAAOxK,OAAO,MAC1B2K,GAAQ,CACV/Y,EAAG0Y,GACHrJ,EAAGjB,OAAO,GACV8K,EAAGoS,GAAY,KAAH,IAAG1S,GAAOxK,OAAO,KAAMA,OAAO,KAC1Cc,EAAGoc,GAAYld,OAAO,2CACtBI,EAAGmK,GACHQ,GAAI/K,OAAO,iFACXgL,GAAIhL,OAAO,iFACXmd,KAAMnd,OAAO,uEAGjB,SAASod,GAAU5R,GACf,IAAQ5Z,EAAS+Y,GAAT/Y,EAAGqP,EAAM0J,GAAN1J,EACLoc,EAAKhR,GAAIb,EAAIA,GACb8R,EAAKjR,GAAIgR,EAAK7R,GACpB,OAAOa,GAAIiR,EAAK1rB,EAAI4Z,EAAIvK,GAE5B,IAAMsc,GAAmB5S,GAAM/Y,IAAM0Y,GAC/BkT,G,WACF,WAAYhS,EAAGC,EAAGC,GAAG,oBACjBzZ,KAAKuZ,EAAIA,EACTvZ,KAAKwZ,EAAIA,EACTxZ,KAAKyZ,EAAIA,E,0CAeb,SAAOE,GACH,KAAMA,aAAiB4R,GACnB,MAAM,IAAIltB,UAAU,0BACxB,IAAWwb,EAAqB7Z,KAAxBuZ,EAAUO,EAAc9Z,KAAjBwZ,EAAUO,EAAO/Z,KAAVyZ,EACXO,EAAqBL,EAAxBJ,EAAUU,EAAcN,EAAjBH,EAAUU,EAAOP,EAAVF,EAChB+R,EAAOpR,GAAI,KAAD,IAACL,EAAMxB,KACjBkT,EAAOrR,GAAI,KAAD,IAACF,EAAM3B,KACjBmT,EAAKtR,GAAIP,EAAK4R,GACdE,EAAKvR,GAAIJ,EAAKwR,GACdI,EAAKxR,GAAIA,GAAIN,EAAKI,GAAMuR,GACxBI,EAAKzR,GAAIA,GAAIH,EAAKF,GAAMyR,GAC9B,OAAOE,IAAOC,GAAMC,IAAOC,I,oBAE/B,WACI,OAAO,IAAIN,EAAcvrB,KAAKuZ,EAAGa,IAAKpa,KAAKwZ,GAAIxZ,KAAKyZ,K,oBAExD,WACI,IAAWI,EAAqB7Z,KAAxBuZ,EAAUO,EAAc9Z,KAAjBwZ,EAAUO,EAAO/Z,KAAVyZ,EAChBe,EAAIJ,GAAI,KAAD,IAACP,EAAMtB,KACdkC,EAAIL,GAAI,KAAD,IAACN,EAAMvB,KACdmC,EAAIN,GAAI,KAAD,IAACK,EAAKlC,KACboC,EAAIP,GAAI7B,IAAO6B,GAAI,KAAD,IAAEP,EAAKY,EAAMlC,KAAOiC,EAAIE,IAC1CE,EAAIR,GAAI2Q,GAAMvQ,GACdM,EAAIV,GAAI,KAAD,IAACQ,EAAKrC,KACbyC,EAAKZ,GAAIU,EAAIvC,GAAMoC,GAGzB,OAAO,IAAI4Q,EAAcvQ,EAFdZ,GAAIQ,GAAKD,EAAIK,GAAMgQ,GAAMtQ,GACzBN,GAAI7B,GAAMuB,EAAKC,M,iBAG9B,SAAIJ,GACA,KAAMA,aAAiB4R,GACnB,MAAM,IAAIltB,UAAU,0BACxB,IAAWwb,EAAqB7Z,KAAxBuZ,EAAUO,EAAc9Z,KAAjBwZ,EAAUO,EAAO/Z,KAAVyZ,EACXO,EAAqBL,EAAxBJ,EAAUU,EAAcN,EAAjBH,EAAUU,EAAOP,EAAVF,EACtB,GAAIO,IAAO3B,IAAO4B,IAAO5B,GACrB,OAAOrY,KACX,GAAI6Z,IAAOxB,IAAOyB,IAAOzB,GACrB,OAAOsB,EACX,IAAM6R,EAAOpR,GAAI,KAAD,IAACL,EAAMxB,KACjBkT,EAAOrR,GAAI,KAAD,IAACF,EAAM3B,KACjBmT,EAAKtR,GAAIP,EAAK4R,GACdE,EAAKvR,GAAIJ,EAAKwR,GACdI,EAAKxR,GAAIA,GAAIN,EAAKI,GAAMuR,GACxBI,EAAKzR,GAAIA,GAAIH,EAAKF,GAAMyR,GACxBzQ,EAAIX,GAAIuR,EAAKD,GACb9L,EAAIxF,GAAIyR,EAAKD,GACnB,GAAI7Q,IAAM1C,GACN,OAAIuH,IAAMvH,GACCrY,KAAKqb,SAGLkQ,EAAchP,KAG7B,IAAMuP,EAAK1R,GAAI,KAAD,IAACW,EAAKxC,KACdwT,EAAM3R,GAAIW,EAAI+Q,GACdE,EAAI5R,GAAIsR,EAAKI,GACb9Q,EAAKZ,GAAI,SAAAwF,EAAKrH,IAAMwT,EAAMxT,GAAMyT,GAGtC,OAAO,IAAIT,EAAcvQ,EAFdZ,GAAIwF,GAAKoM,EAAIhR,GAAM4Q,EAAKG,GACxB3R,GAAIL,EAAKG,EAAKa,M,sBAG7B,SAASpB,GACL,OAAO3Z,KAAKsb,IAAI3B,EAAM4B,Y,4BAE1B,SAAe0B,GACX,IAAMG,EAAKmO,EAAchP,KACzB,GAAsB,kBAAXU,GAAuBA,IAAW5E,GACzC,OAAO+E,EACX,IAAIvO,EAAIsO,GAAgBF,GACxB,GAAIpO,IAAMyJ,GACN,OAAOtY,KACX,IAAKsrB,GAAkB,CAGnB,IAFA,IAAI3P,EAAIyB,EACJxE,EAAI5Y,KACD6O,EAAIwJ,IACHxJ,EAAIyJ,KACJqD,EAAIA,EAAEL,IAAI1C,IACdA,EAAIA,EAAEyC,SACNxM,IAAMyJ,GAEV,OAAOqD,EAMX,IAJA,MAA+BsQ,GAAgBpd,GAAzCqd,EAAN,EAAMA,MAAOC,EAAb,EAAaA,GAAIC,EAAjB,EAAiBA,MAAOC,EAAxB,EAAwBA,GACpBC,EAAMlP,EACNmP,EAAMnP,EACNxE,EAAI5Y,KACDmsB,EAAK9T,IAAOgU,EAAKhU,IAChB8T,EAAK7T,KACLgU,EAAMA,EAAIhR,IAAI1C,IACdyT,EAAK/T,KACLiU,EAAMA,EAAIjR,IAAI1C,IAClBA,EAAIA,EAAEyC,SACN8Q,IAAO7T,GACP+T,IAAO/T,GAOX,OALI4T,IACAI,EAAMA,EAAI/Q,UACV6Q,IACAG,EAAMA,EAAIhR,UACdgR,EAAM,IAAIhB,EAAcnR,GAAImS,EAAIhT,EAAIb,GAAMwS,MAAOqB,EAAI/S,EAAG+S,EAAI9S,GACrD6S,EAAIhR,IAAIiR,K,8BAEnB,SAAiB/Q,GAKb,IAJA,IAAMC,EAAU6P,GAAmB,IAAM9P,EAAI,EAAI,IAAMA,EAAI,EACrDE,EAAS,GACXC,EAAI3b,KACJ4b,EAAOD,EACFE,EAAS,EAAGA,EAASJ,EAASI,IAAU,CAC7CD,EAAOD,EACPD,EAAO1W,KAAK4W,GACZ,IAAK,IAAI5d,EAAI,EAAGA,EAAI,KAAH,IAAG,EAAMwd,EAAI,GAAIxd,IAC9B4d,EAAOA,EAAKN,IAAIK,GAChBD,EAAO1W,KAAK4W,GAEhBD,EAAIC,EAAKP,SAEb,OAAOK,I,kBAEX,SAAK7M,EAAGiN,IACCA,GAAe9b,KAAK+b,OAAOwP,EAAcvP,QAC1CF,EAAcG,GAAMD,MACxB,IAAMR,EAAKM,GAAeA,EAAYI,cAAiB,EACvD,GAAI,IAAMV,EACN,MAAM,IAAI9d,MAAM,iEAEpB,IAAIye,EAAcL,GAAeM,GAAiB7N,IAAIuN,GACjDK,IACDA,EAAcnc,KAAKqc,iBAAiBb,GAChCM,GAAqB,IAANN,IACfW,EAAcoP,EAAcjP,WAAWH,GACvCC,GAAiBrc,IAAI+b,EAAaK,KAU1C,IAPA,IAAIR,EAAI4P,EAAchP,KAClBC,EAAI+O,EAAchP,KAChBd,EAAU,GAAK6P,GAAmB,IAAM9P,EAAI,IAAMA,GAClDiB,EAAa,KAAH,IAAG,EAAMjB,EAAI,GACvBkB,EAAO3O,OAAO,WAAKyN,GAAI,GACvBmB,EAAY,KAAH,IAAG,EAAKnB,GACjBoB,EAAU7O,OAAOyN,GACdK,EAAS,EAAGA,EAASJ,EAASI,IAAU,CAC7C,IAAM9L,EAAS8L,EAASY,EACpBI,EAAQle,OAAOkQ,EAAI6N,GAMvB,GALA7N,IAAM+N,EACFC,EAAQJ,IACRI,GAASF,EACT9N,GAAKyJ,IAEK,IAAVuE,EAAa,CACb,IAAIC,EAAKX,EAAYpM,GACjB8L,EAAS,IACTiB,EAAKA,EAAGvB,UACZiB,EAAIA,EAAElB,IAAIwB,OAET,CACD,IAAIC,EAASZ,EAAYpM,EAAS1S,KAAK2f,IAAIH,GAAS,GAChDA,EAAQ,IACRE,EAASA,EAAOxB,UACpBI,EAAIA,EAAEL,IAAIyB,IAGlB,MAAO,CAAEpB,IAAGa,O,sBAEhB,SAASS,EAAQnB,GACb,IACIsG,EACAoK,EAFA3d,EAAIsO,GAAgBF,GAGxB,GAAIqO,GAAkB,CAClB,MAAiCW,GAAgBpd,GAAzCqd,EAAR,EAAQA,MAAOC,EAAf,EAAeA,GAAIC,EAAnB,EAAmBA,MAAOC,EAA1B,EAA0BA,GAC1B,EAAyBrsB,KAAKkd,KAAKiP,EAAIrQ,GAA9BwQ,EAAT,EAAM3Q,EAAW8Q,EAAjB,EAAcjQ,EACd,EAAyBxc,KAAKkd,KAAKmP,EAAIvQ,GAA9ByQ,EAAT,EAAM5Q,EAAW+Q,EAAjB,EAAclQ,EACV0P,IACAI,EAAMA,EAAI/Q,UACV6Q,IACAG,EAAMA,EAAIhR,UACdgR,EAAM,IAAIhB,EAAcnR,GAAImS,EAAIhT,EAAIb,GAAMwS,MAAOqB,EAAI/S,EAAG+S,EAAI9S,GAC5D2I,EAAQkK,EAAIhR,IAAIiR,GAChBC,EAAOC,EAAInR,IAAIoR,OAEd,CACD,MAAiB1sB,KAAKkd,KAAKrO,EAAGiN,GAC9BsG,EADA,EAAQzG,EAER6Q,EAFA,EAAWhQ,EAIf,OAAO+O,EAAcjP,WAAW,CAAC8F,EAAOoK,IAAO,K,sBAEnD,WAAgC,IAAvBlP,EAAuB,uDAAhBC,GAAOvd,KAAKyZ,GAChBF,EAAYvZ,KAAZuZ,EAAGC,EAASxZ,KAATwZ,EAAGC,EAAMzZ,KAANyZ,EACRkT,EAAMrP,EACNsP,EAAMxS,GAAIuS,EAAMA,GAChBE,EAAMzS,GAAIwS,EAAMD,GAChBnP,EAAKpD,GAAIb,EAAIqT,GACbnP,EAAKrD,GAAIZ,EAAIqT,GACbnP,EAAKtD,GAAIX,EAAIkT,GACnB,GAAIjP,IAAOpF,GACP,MAAM,IAAI5a,MAAM,oBACpB,OAAO,IAAIue,GAAMuB,EAAIC,M,yBAlNzB,SAAkB9B,GACd,KAAMA,aAAaM,IACf,MAAM,IAAI5d,UAAU,4CAExB,OAAO,IAAIktB,EAAc5P,EAAEpC,EAAGoC,EAAEnC,EAAGlB,M,2BAEvC,SAAqBoD,GACjB,IAAMkC,EAmjBd,SAAqBC,GAAmB,IAAblC,EAAa,uDAATjD,GAAMG,EAC3BiU,EAAU,IAAIlvB,MAAMigB,EAAK/f,QAOzBggB,EAAWP,GANMM,EAAKje,QAAO,SAAC4U,EAAKuJ,EAAK/f,GAC1C,OAAI+f,IAAQ1F,GACD7D,GACXsY,EAAQ9uB,GAAKwW,EACN4F,GAAI5F,EAAMuJ,EAAKpC,MACvBrD,IACqCqD,GAOxC,OANAkC,EAAKG,aAAY,SAACxJ,EAAKuJ,EAAK/f,GACxB,OAAI+f,IAAQ1F,GACD7D,GACXsY,EAAQ9uB,GAAKoc,GAAI5F,EAAMsY,EAAQ9uB,GAAI2d,GAC5BvB,GAAI5F,EAAMuJ,EAAKpC,MACvBmC,GACIgP,EAlkBW7O,CAAYvC,EAAOwC,KAAI,SAACvC,GAAD,OAAOA,EAAElC,MAC9C,OAAOiC,EAAOwC,KAAI,SAACvC,EAAG3d,GAAJ,OAAU2d,EAAEwC,SAASP,EAAM5f,S,wBAEjD,SAAkB0d,GACd,OAAO6P,EAAcnN,cAAc1C,GAAQwC,IAAIqN,EAAclN,gB,KA0MrEkN,GAAcvP,KAAO,IAAIuP,GAAc7S,GAAMI,GAAIJ,GAAMK,GAAIT,IAC3DiT,GAAchP,KAAO,IAAIgP,GAAclT,GAAKC,GAAKD,IACjD,IAAM+D,GAAmB,IAAIqF,QAChBxF,GAAb,WACI,WAAY1C,EAAGC,GAAG,oBACdxZ,KAAKuZ,EAAIA,EACTvZ,KAAKwZ,EAAIA,EAHjB,kDAKI,SAAeiD,GACXzc,KAAKkc,aAAeO,EACpBL,GAAiBsF,OAAO1hB,QAPhC,wBAsEI,WAAiC,IAAtB+sB,EAAsB,wDAC7B,OAAOzwB,GAAW0D,KAAKsf,MAAMyN,MAvErC,mBAyEI,WAA4B,IAAtBA,EAAsB,wDAClBxT,EAAIyT,GAAYhtB,KAAKuZ,GAC3B,GAAIwT,EAAc,CACd,IAAM7H,EAASllB,KAAKwZ,EAAIlB,GAAM,KAAO,KACrC,MAAO,GAAP,OAAU4M,GAAV,OAAmB3L,GAGnB,MAAO,KAAP,OAAYA,GAAZ,OAAgByT,GAAYhtB,KAAKwZ,MAhF7C,oBAmFI,WACI,OAAOxZ,KAAKsf,OAAM,GAAM7gB,MAAM,KApFtC,oBAsFI,WACI,OAAOuB,KAAKqf,YAAW,GAAM5gB,MAAM,KAvF3C,4BAyFI,WACI,IAAM2C,EAAM,iCACJmY,EAASvZ,KAATuZ,EAAGC,EAAMxZ,KAANwZ,EACX,IAAKyT,GAAoB1T,KAAO0T,GAAoBzT,GAChD,MAAM,IAAI9b,MAAM0D,GACpB,IAAM8rB,EAAO9S,GAAIZ,EAAIA,GAErB,GAAIY,GAAI8S,EADM/B,GAAU5R,MACElB,GACtB,MAAM,IAAI3a,MAAM0D,KAjG5B,oBAmGI,SAAOuY,GACH,OAAO3Z,KAAKuZ,IAAMI,EAAMJ,GAAKvZ,KAAKwZ,IAAMG,EAAMH,IApGtD,oBAsGI,WACI,OAAO,IAAIyC,EAAMjc,KAAKuZ,EAAGa,IAAKpa,KAAKwZ,MAvG3C,oBAyGI,WACI,OAAO+R,GAAclN,WAAWre,MAAMqb,SAAS8C,aA1GvD,iBA4GI,SAAIxE,GACA,OAAO4R,GAAclN,WAAWre,MAAMsb,IAAIiQ,GAAclN,WAAW1E,IAAQwE,aA7GnF,sBA+GI,SAASxE,GACL,OAAO3Z,KAAKsb,IAAI3B,EAAM4B,YAhH9B,sBAkHI,SAAS0B,GACL,OAAOsO,GAAclN,WAAWre,MAAM0f,SAASzC,EAAQjd,MAAMme,aAnHrE,kCAqHI,SAAqBgP,EAAGxtB,EAAGqP,GACvB,IAAM6J,EAAI0S,GAAclN,WAAWre,MAC7BotB,EAAKztB,IAAM0Y,IAAO1Y,IAAM2Y,IAAOtY,OAASic,EAAMD,KAAOnD,EAAEwE,eAAe1d,GAAKkZ,EAAE6G,SAAS/f,GACtF0tB,EAAK9B,GAAclN,WAAW8O,GAAG9P,eAAerO,GAChDsI,EAAM8V,EAAG9R,IAAI+R,GACnB,OAAO/V,EAAIyE,OAAOwP,GAAchP,WAAQnc,EAAYkX,EAAI6G,cA1HhE,gCASI,SAAyBlP,GACrB,IAAMqe,EAA2B,KAAjBre,EAAMnR,OAChByb,EAAIgU,GAAcD,EAAUre,EAAQA,EAAM3B,SAAS,IACzD,IAAK2f,GAAoB1T,GACrB,MAAM,IAAI7b,MAAM,yBACpB,IACI8b,EAySZ,SAAiBD,GACb,IAAQV,EAAMH,GAANG,EACF2U,EAAMzf,OAAO,GACb0f,EAAO1f,OAAO,IACd2f,EAAO3f,OAAO,IACd4f,EAAO5f,OAAO,IACd6f,EAAO7f,OAAO,IACd8f,EAAO9f,OAAO,IACdmT,EAAM3H,EAAIA,EAAIA,EAAKV,EACnBiV,EAAM5M,EAAKA,EAAK3H,EAAKV,EACrBkV,EAAMhL,GAAK+K,EAAI/C,IAAO+C,EAAMjV,EAC5BmV,EAAMjL,GAAKgL,EAAIhD,IAAO+C,EAAMjV,EAC5BoV,EAAOlL,GAAKiL,EAAIzV,IAAO2I,EAAMrI,EAC7BqV,EAAOnL,GAAKkL,EAAKR,GAAQQ,EAAOpV,EAChCsV,EAAOpL,GAAKmL,EAAKR,GAAQQ,EAAOrV,EAChCuV,EAAOrL,GAAKoL,EAAKP,GAAQO,EAAOtV,EAChCwV,EAAQtL,GAAKqL,EAAKP,GAAQO,EAAOvV,EACjCyV,EAAQvL,GAAKsL,EAAMT,GAAQO,EAAOtV,EAClC0V,EAAQxL,GAAKuL,EAAMvD,IAAO+C,EAAMjV,EAChC2V,EAAMzL,GAAKwL,EAAMZ,GAAQO,EAAOrV,EAChC4V,EAAM1L,GAAKyL,EAAIhB,GAAOtM,EAAMrI,EAClC,OAAOkK,GAAK0L,EAAIlW,IA9TJmW,CADGvD,GAAU5R,IAEfoV,GAAUnV,EAAIlB,MAASA,GACzBgV,EACIqB,IACAnV,EAAIY,IAAKZ,IAG6B,KAAP,EAAXvK,EAAM,MACP0f,IACnBnV,EAAIY,IAAKZ,IAEjB,IAAM4I,EAAQ,IAAInG,EAAM1C,EAAGC,GAE3B,OADA4I,EAAME,iBACCF,IA5Bf,iCA8BI,SAA2BnT,GACvB,IAEMmT,EAAQ,IAAInG,EAFRsR,GAActe,EAAM3B,SAAS,EAAG,KAChCigB,GAActe,EAAM3B,SAAS,GAAI,MAG3C,OADA8U,EAAME,iBACCF,IAnCf,qBAqCI,SAAehkB,GACX,IAAM6Q,EAAQ0R,GAAYviB,GACpB+O,EAAM8B,EAAMnR,OACZ8wB,EAAS3f,EAAM,GACrB,GAAY,KAAR9B,GAAuB,KAARA,IAA0B,IAAXyhB,GAA8B,IAAXA,GACjD,OAAO5uB,KAAK6uB,kBAAkB5f,GAElC,GAAY,KAAR9B,GAAyB,IAAXyhB,EACd,OAAO5uB,KAAK8uB,oBAAoB7f,GACpC,MAAM,IAAIvR,MAAJ,+GAAkHyP,MA9ChI,4BAgDI,SAAsB3C,GAClB,OAAOyR,EAAMD,KAAK0D,SAASqP,GAAoBvkB,MAjDvD,2BAmDI,SAAqBwkB,EAAS3oB,EAAW4oB,GAErC,IAAM9gB,EAAI+gB,GADVF,EAAUrO,GAAYqO,IAEtB,EAAiBG,GAAmB9oB,GAA5BuZ,EAAR,EAAQA,EAAGT,EAAX,EAAWA,EACX,GAAiB,IAAb8P,GAA+B,IAAbA,EAClB,MAAM,IAAIvxB,MAAM,kDAEpB,IAAMwnB,EAAoB,EAAX+J,EAAe,KAAO,KAC/BjJ,EAAI/J,EAAMsG,QAAQ2C,EAAS8H,GAAYpN,IACrC/Q,EAAM6J,GAAN7J,EACFugB,EAAO7R,GAAOqC,EAAG/Q,GACjB4P,EAAKrE,IAAKjM,EAAIihB,EAAMvgB,GACpB6P,EAAKtE,GAAI+E,EAAIiQ,EAAMvgB,GACnBse,EAAIlR,EAAMD,KAAKqT,qBAAqBrJ,EAAGvH,EAAIC,GACjD,IAAKyO,EACD,MAAM,IAAIzvB,MAAM,+CAEpB,OADAyvB,EAAE7K,iBACK6K,MApEf,KA+HA,SAASmC,GAASnQ,GACd,OAAOxgB,OAAOC,SAASugB,EAAE,GAAI,KAAO,EAAI,KAAOA,EAAIA,EAEvD,SAASoQ,GAAY/vB,GACjB,GAAIA,EAAK1B,OAAS,GAAiB,IAAZ0B,EAAK,GACxB,MAAM,IAAI9B,MAAJ,yCAA4CnB,GAAWiD,KAEjE,IAAM2N,EAAM3N,EAAK,GACXuC,EAAMvC,EAAK8N,SAAS,EAAGH,EAAM,GACnC,IAAKA,GAAOpL,EAAIjE,SAAWqP,EACvB,MAAM,IAAIzP,MAAJ,2CAEV,GAAe,IAAXqE,EAAI,IAAeA,EAAI,IAAM,IAC7B,MAAM,IAAIrE,MAAM,8CAEpB,MAAO,CAAE8B,KAAM+tB,GAAcxrB,GAAMmrB,KAAM1tB,EAAK8N,SAASH,EAAM,IAjBjE8O,GAAMD,KAAO,IAAIC,GAAMvD,GAAMI,GAAIJ,GAAMK,IACvCkD,GAAMM,KAAO,IAAIN,GAAM5D,GAAKA,IAgCrB,IAAMgK,GAAb,WACI,WAAYzC,EAAGT,GAAG,oBACdnf,KAAK4f,EAAIA,EACT5f,KAAKmf,EAAIA,EACTnf,KAAKsiB,iBAJb,kDA0BI,WACI,IAAQ1C,EAAS5f,KAAT4f,EAAGT,EAAMnf,KAANmf,EACX,IAAKqQ,GAAmB5P,GACpB,MAAM,IAAIliB,MAAM,0CACpB,IAAK8xB,GAAmBrQ,GACpB,MAAM,IAAIzhB,MAAM,4CA/B5B,sBAiCI,WACI,IAAM+xB,EAAO/W,GAAM7J,GAAKyJ,GACxB,OAAOtY,KAAKmf,EAAIsQ,IAnCxB,wBAqCI,WACI,OAAOzvB,KAAK0vB,WAAa,IAAIrN,EAAUriB,KAAK4f,EAAGlH,GAAM7J,EAAI7O,KAAKmf,GAAKnf,OAtC3E,2BAwCI,WAAoC,IAAtB+sB,EAAsB,wDAChC,OAAOzwB,GAAW0D,KAAK2vB,SAAS5C,MAzCxC,sBA2CI,WAA+B,IAAtBA,EAAsB,wDACrB6C,EAAON,GAASO,GAAoB7vB,KAAKmf,IAC/C,GAAI4N,EACA,OAAO6C,EACX,IAAME,EAAOR,GAASO,GAAoB7vB,KAAK4f,IACzCmQ,EAAOF,GAAoBC,EAAKhyB,OAAS,GACzCkyB,EAAOH,GAAoBD,EAAK9xB,OAAS,GACzCA,EAAS+xB,GAAoBC,EAAKhyB,OAAS,EAAI8xB,EAAK9xB,OAAS,EAAI,GACvE,MAAO,KAAP,OAAYA,EAAZ,aAAuBiyB,GAAvB,OAA8BD,EAA9B,aAAuCE,GAAvC,OAA8CJ,KAnDtD,wBAqDI,WACI,OAAO5vB,KAAKiwB,kBAtDpB,mBAwDI,WACI,OAAOjwB,KAAK2vB,aAzDpB,+BA2DI,WACI,OAAOrzB,GAAW0D,KAAKkwB,kBA5D/B,0BA8DI,WACI,OAAOlD,GAAYhtB,KAAK4f,GAAKoN,GAAYhtB,KAAKmf,MA/DtD,0BAMI,SAAmB/gB,GACf,IAAMrB,EAAMozB,GAAS/xB,GACfmN,EAAO,wBACb,GAAmB,kBAARnN,IAAqBrB,EAC5B,MAAM,IAAIsB,UAAJ,UAAiBkN,EAAjB,oCACV,IAAMlM,EAAMtC,EAAMR,GAAW6B,GAAOA,EACpC,GAAmB,MAAfiB,EAAIvB,OACJ,MAAM,IAAIJ,MAAJ,UAAa6N,EAAb,2BACV,OAAO,IAAI8W,EAAU+N,GAAY/wB,EAAIZ,MAAM,EAAG,KAAM2xB,GAAY/wB,EAAIZ,MAAM,GAAI,SAdtF,qBAgBI,SAAeL,GACX,IAAMrB,EAAMozB,GAAS/xB,GACrB,GAAmB,kBAARA,IAAqBrB,EAC5B,MAAM,IAAIsB,UAAJ,oDACV,MAlCR,SAA2BmB,GACvB,GAAIA,EAAK1B,OAAS,GAAgB,IAAX0B,EAAK,GACxB,MAAM,IAAI9B,MAAJ,iCAAoCnB,GAAWiD,KAEzD,GAAIA,EAAK,KAAOA,EAAK1B,OAAS,EAC1B,MAAM,IAAIJ,MAAM,uCAEpB,MAAkC6xB,GAAY/vB,EAAK8N,SAAS,IAA9CsS,EAAd,EAAQpgB,KACR,EAAsC+vB,GADtC,EAAiBrC,MACH/N,EAAd,EAAQ3f,KAAe6wB,EAAvB,EAAiBnD,KACjB,GAAImD,EAAWvyB,OACX,MAAM,IAAIJ,MAAJ,uDAA0DnB,GAAW8zB,KAE/E,MAAO,CAAEzQ,IAAGT,KAsBSmR,CAAkBvzB,EAAMqB,EAAM9B,GAAW8B,IAC1D,OAAO,IAAIikB,EADX,EAAQzC,EAAR,EAAWT,KApBnB,qBAuBI,SAAe/gB,GACX,OAAO4B,KAAKuwB,QAAQnyB,OAxB5B,KAkEA,SAASnC,KAAuB,2BAARwD,EAAQ,yBAARA,EAAQ,gBAC5B,IAAKA,EAAOC,MAAMywB,IACd,MAAM,IAAIzyB,MAAM,4BACpB,GAAsB,IAAlB+B,EAAO3B,OACP,OAAO2B,EAAO,GAGlB,IAFA,IAAM3B,EAAS2B,EAAOG,QAAO,SAACD,EAAG5C,GAAJ,OAAY4C,EAAI5C,EAAIe,SAAQ,GACnD+B,EAAS,IAAI7C,WAAWc,GACrBE,EAAI,EAAG8B,EAAM,EAAG9B,EAAIyB,EAAO3B,OAAQE,IAAK,CAC7C,IAAMjB,EAAM0C,EAAOzB,GACnB6B,EAAOE,IAAIhD,EAAK+C,GAChBA,GAAO/C,EAAIe,OAEf,OAAO+B,EAEX,SAASswB,GAASlhB,GACd,OAAOA,aAAiBjS,WAE5B,IAAMW,GAAQC,MAAMC,KAAK,CAAEC,OAAQ,MAAO,SAACC,EAAGC,GAAJ,OAAUA,EAAEC,SAAS,IAAIC,SAAS,EAAG,QAC/E,SAAS3B,GAAW4B,GAChB,KAAMA,aAAkBnB,YACpB,MAAM,IAAIU,MAAM,uBAEpB,IADA,IAAIU,EAAM,GACDJ,EAAI,EAAGA,EAAIG,EAAOL,OAAQE,IAC/BI,GAAOT,GAAMQ,EAAOH,IAExB,OAAOI,EAEX,SAAS4uB,GAAYjP,GACjB,GAAIA,EAAMkN,GACN,MAAM,IAAIvtB,MAAM,2BACpB,OAAOqgB,EAAI9f,SAAS,IAAIC,SAAS,GAAI,KAEzC,SAASsyB,GAASzS,GACd,OAAOzhB,GAAW0wB,GAAYjP,IAElC,SAAS8R,GAAoB9R,GACzB,IAAM3f,EAAM2f,EAAI9f,SAAS,IACzB,OAAoB,EAAbG,EAAIN,OAAJ,WAAqBM,GAAQA,EAExC,SAASgyB,GAAYhyB,GACjB,GAAmB,kBAARA,EACP,MAAM,IAAIC,UAAU,4CAA8CD,GAEtE,OAAO2P,OAAO,KAAD,OAAM3P,IAEvB,SAAS9B,GAAW8B,GAChB,GAAmB,kBAARA,EACP,MAAM,IAAIC,UAAU,2CAA6CD,GAErE,GAAIA,EAAIN,OAAS,EACb,MAAM,IAAIJ,MAAM,4CAA8CU,EAAIN,QAEtE,IADA,IAAMQ,EAAQ,IAAItB,WAAWoB,EAAIN,OAAS,GACjCE,EAAI,EAAGA,EAAIM,EAAMR,OAAQE,IAAK,CACnC,IAAMO,EAAQ,EAAJP,EACJQ,EAAUJ,EAAIK,MAAMF,EAAGA,EAAI,GAC3BG,EAAOC,OAAOC,SAASJ,EAAS,IACtC,GAAIG,OAAOE,MAAMH,IAASA,EAAO,EAC7B,MAAM,IAAIhB,MAAM,yBACpBY,EAAMN,GAAKU,EAEf,OAAOJ,EAEX,SAASivB,GAActe,GACnB,OAAOmhB,GAAY7zB,GAAW0S,IAElC,SAAS0R,GAAYviB,GACjB,OAAOA,aAAepB,WAAaA,WAAWa,KAAKO,GAAO9B,GAAW8B,GAEzE,SAAS+e,GAAgBY,GACrB,GAAmB,kBAARA,GAAoBpf,OAAOmQ,cAAciP,IAAQA,EAAM,EAC9D,OAAOhQ,OAAOgQ,GAClB,GAAmB,kBAARA,GAAoByR,GAAmBzR,GAC9C,OAAOA,EACX,MAAM,IAAI1f,UAAU,uDAExB,SAAS+b,GAAIza,GAAgB,IAAbqP,EAAa,uDAAT0J,GAAMG,EAChBhZ,EAASF,EAAIqP,EACnB,OAAOnP,GAAUwY,GAAMxY,EAASmP,EAAInP,EAExC,SAASkjB,GAAKxJ,EAAGyJ,GAGb,IAFA,IAAQnK,EAAMH,GAANG,EACJ9W,EAAMwX,EACHyJ,KAAU3K,IACbtW,GAAOA,EACPA,GAAO8W,EAEX,OAAO9W,EAyBX,SAASwb,GAAO3O,GAA0B,IAAlB+T,EAAkB,uDAATjK,GAAMG,EACnC,GAAIjK,IAAWyJ,IAAOsK,GAAUtK,GAC5B,MAAM,IAAI3a,MAAJ,oDAAuDkR,EAAvD,gBAAqE+T,IAK/E,IAHA,IAAIhjB,EAAIya,GAAIxL,EAAQ+T,GAChB3T,EAAI2T,EACJpJ,EAAIlB,GAAKmB,EAAIlB,GAAK0J,EAAI1J,GAAKva,EAAIsa,GAC5B1Y,IAAM0Y,IAAK,CACd,IAAMuK,EAAI5T,EAAIrP,EACRigB,EAAI5Q,EAAIrP,EACRkjB,EAAItJ,EAAIyI,EAAIY,EACZ/T,EAAI2K,EAAIzb,EAAI6kB,EAClB5T,EAAIrP,EAAGA,EAAIigB,EAAGrG,EAAIyI,EAAGxI,EAAIzb,EAAGikB,EAAIa,EAAG9kB,EAAI8Q,EAE3C,IAAMiU,EAAM9T,EACZ,GAAI8T,IAAQxK,GACR,MAAM,IAAI5a,MAAM,0BACpB,OAAO0c,GAAIb,EAAGoJ,GAmBlB,IAAM8N,GAAa,SAAC9wB,EAAGqP,GAAJ,OAAWrP,EAAIqP,EAAIuJ,IAAOvJ,GACvC0hB,GAAY,KAAH,IAAGnY,GAAOxK,OAAO,MAChC,SAASke,GAAgBrG,GACrB,IAAQ/W,EAAM6J,GAAN7J,EACF8hB,EAAK5iB,OAAO,sCACZkT,GAAM3I,GAAMvK,OAAO,sCACnB6iB,EAAK7iB,OAAO,uCACZmT,EAAKyP,EACLE,EAAKJ,GAAWvP,EAAK0E,EAAG/W,GACxBiiB,EAAKL,IAAYxP,EAAK2E,EAAG/W,GAC3Bsd,EAAK/R,GAAIwL,EAAIiL,EAAKF,EAAKG,EAAKF,EAAI/hB,GAChCwd,EAAKjS,IAAKyW,EAAK5P,EAAK6P,EAAK5P,EAAIrS,GAC3Bqd,EAAQC,EAAKuE,GACbtE,EAAQC,EAAKqE,GAKnB,GAJIxE,IACAC,EAAKtd,EAAIsd,GACTC,IACAC,EAAKxd,EAAIwd,GACTF,EAAKuE,IAAarE,EAAKqE,GACvB,MAAM,IAAIhzB,MAAM,2CAA6CkoB,GAEjE,MAAO,CAAEsG,QAAOC,KAAIC,QAAOC,MAE/B,SAAS6C,GAAa9f,GAClB,IAAQP,EAAM6J,GAAN7J,EAEFkiB,EAAqB,EADR3hB,EAAKtR,OACO,IAC3BqQ,EAAIof,GAAcne,GAKtB,OAJI2hB,EAAQ,IACR5iB,IAASJ,OAAOgjB,IAChB5iB,GAAKU,IACLV,GAAKU,GACFV,E,IAEL6iB,G,WACF,aAAc,oBACVhxB,KAAKjC,EAAI,IAAIf,WAAW,IAAI4Q,KAAK,GACjC5N,KAAK4lB,EAAI,IAAI5oB,WAAW,IAAI4Q,KAAK,GACjC5N,KAAKixB,QAAU,E,wCAEnB,WAAgB,2BAAR/gB,EAAQ,yBAARA,EAAQ,gBACZ,OAAOmV,GAAM6L,WAAN,MAAA7L,GAAK,CAAYrlB,KAAK4lB,GAAjB,OAAuB1V,M,sBAEvC,WACI,GAAoC,oBAAzBmV,GAAM8L,eACb,MAAM,IAAIzzB,MAAM,yDAFJ,2BAARwS,EAAQ,yBAARA,EAAQ,gBAGhB,IAAMnO,EAAMsjB,GAAM8L,eAAN,MAAA9L,GAAK,CAAgBrlB,KAAK4lB,GAArB,OAA2B1V,IAC5C,GAAInO,aAAe0C,QACf,MAAM,IAAI/G,MAAM,uDACpB,OAAOqE,I,kBAEX,WACI,GAAI/B,KAAKixB,SAAW,IAChB,MAAM,IAAIvzB,MAAM,qDAEpBsC,KAAKixB,SAAW,I,qEAEpB,iHAAaG,EAAb,+BAAoB,IAAIp0B,WAAxB,SACmBgD,KAAKqxB,KAAKrxB,KAAKjC,EAAGf,WAAWa,KAAK,CAAC,IAAQuzB,GAD9D,cACIpxB,KAAK4lB,EADT,gBAEmB5lB,KAAKqxB,KAAKrxB,KAAKjC,GAFlC,UAEIiC,KAAKjC,EAFT,OAGwB,IAAhBqzB,EAAKtzB,OAHb,kEAKmBkC,KAAKqxB,KAAKrxB,KAAKjC,EAAGf,WAAWa,KAAK,CAAC,IAAQuzB,GAL9D,eAKIpxB,KAAK4lB,EALT,iBAMmB5lB,KAAKqxB,KAAKrxB,KAAKjC,GANlC,QAMIiC,KAAKjC,EANT,wD,8EAQA,WAAoC,IAAzBqzB,EAAyB,uDAAlB,IAAIp0B,WAClBgD,KAAK4lB,EAAI5lB,KAAKsxB,SAAStxB,KAAKjC,EAAGf,WAAWa,KAAK,CAAC,IAAQuzB,GACxDpxB,KAAKjC,EAAIiC,KAAKsxB,SAAStxB,KAAKjC,GACR,IAAhBqzB,EAAKtzB,SAETkC,KAAK4lB,EAAI5lB,KAAKsxB,SAAStxB,KAAKjC,EAAGf,WAAWa,KAAK,CAAC,IAAQuzB,GACxDpxB,KAAKjC,EAAIiC,KAAKsxB,SAAStxB,KAAKjC,M,uEAEhC,+FACIiC,KAAKuxB,OADT,SAEmBvxB,KAAKqxB,KAAKrxB,KAAKjC,GAFlC,cAEIiC,KAAKjC,EAFT,yBAGWiC,KAAKjC,GAHhB,gD,gFAKA,WAGI,OAFAiC,KAAKuxB,OACLvxB,KAAKjC,EAAIiC,KAAKsxB,SAAStxB,KAAKjC,GACrBiC,KAAKjC,M,KAGpB,SAASyxB,GAAmBzR,GACxB,OAAO1F,GAAM0F,GAAOA,EAAMrF,GAAM7J,EAEpC,SAASoe,GAAoBlP,GACzB,OAAO1F,GAAM0F,GAAOA,EAAMrF,GAAMG,EAEpC,SAAS2Y,GAASC,EAAQ5O,EAAGjK,GACzB,IAAMgN,EAAI2H,GAAckE,GACxB,GAAKjC,GAAmB5J,GAAxB,CAEA,IAAQ/W,EAAM6J,GAAN7J,EACF+T,EAAI3G,GAAMD,KAAK0D,SAASkG,GACxBhG,EAAIxF,GAAIwI,EAAErJ,EAAG1K,GACnB,GAAI+Q,IAAMvH,GAAV,CAEA,IAAM8G,EAAI/E,GAAImD,GAAOqI,EAAG/W,GAAKuL,GAAIyI,EAAIjK,EAAIgH,EAAG/Q,GAAIA,GAChD,GAAIsQ,IAAM9G,GAAV,CAEA,IAAMlO,EAAM,IAAIkY,GAAUzC,EAAGT,GAE7B,MAAO,CAAEhV,MAAK8kB,UADIrM,EAAErJ,IAAMpP,EAAIyV,EAAI,EAAI,GAAKjhB,OAAOikB,EAAEpJ,EAAIlB,QAG5D,SAASyW,GAAoBjK,GACzB,IAAI/G,EACJ,GAAmB,kBAAR+G,EACP/G,EAAM+G,OAEL,GAAmB,kBAARA,GAAoBnmB,OAAOmQ,cAAcgW,IAAQA,EAAM,EACnE/G,EAAMhQ,OAAO+W,QAEZ,GAAmB,kBAARA,EAAkB,CAC9B,GAAmB,KAAfA,EAAIhnB,OACJ,MAAM,IAAIJ,MAAM,oCACpBqgB,EAAMqS,GAAYtL,OAEjB,KAAIqL,GAASrL,GAMd,MAAM,IAAIzmB,UAAU,8BALpB,GAAmB,KAAfymB,EAAIhnB,OACJ,MAAM,IAAIJ,MAAM,oCACpBqgB,EAAMwP,GAAczI,GAKxB,IAAK0K,GAAmBzR,GACpB,MAAM,IAAIrgB,MAAM,qCACpB,OAAOqgB,EAWX,SAASoR,GAAmB9oB,GACxB,GAAIA,aAAqBgc,GAErB,OADAhc,EAAUic,iBACHjc,EAEX,IACI,OAAOgc,GAAUkO,QAAQlqB,GAE7B,MAAOkjB,GACH,OAAOlH,GAAUqP,YAAYrrB,IA8BrC,SAASsrB,GAAS1iB,GAEd,OAAOse,GADOte,EAAMnR,OAAS,GAAKmR,EAAMxQ,MAAM,EAAG,IAAMwQ,GAG3D,SAAS2iB,GAAY3iB,GACjB,IAAM4iB,EAAKF,GAAS1iB,GACd6iB,EAAK1X,GAAIyX,EAAInZ,GAAM7J,GACzB,OAAOkjB,GAAWD,EAAKzZ,GAAMwZ,EAAKC,GAEtC,SAASC,GAAWhU,GAChB,GAAmB,kBAARA,EACP,MAAM,IAAIrgB,MAAM,mBAEpB,OAAOpB,GADK0wB,GAAYjP,IAG5B,SAASiU,GAAYhD,EAASxkB,EAAYynB,GACtC,GAAe,MAAXjD,EACA,MAAM,IAAItxB,MAAJ,kDAAqDsxB,EAArD,MACV,IAAMkD,EAAKvR,GAAYqO,GACjBpW,EAAImW,GAAoBvkB,GACxB2nB,EAAW,CAACJ,GAAWnZ,GAAIgZ,GAAYM,IAC7C,GAAoB,MAAhBD,EAAsB,EACD,IAAjBA,IACAA,EAAe5M,GAAMzpB,YAAY,KACrC,IAAM8Y,EAAIiM,GAAYsR,GACtB,GAAiB,KAAbvd,EAAE5W,OACF,MAAM,IAAIJ,MAAM,yCACpBy0B,EAASntB,KAAK0P,GAIlB,MAAO,CAAE0c,KAFIn1B,GAAW,WAAX,EAAek2B,GAEbtP,EADL8O,GAASO,GACDtZ,KAEtB,SAASwZ,GAAYC,EAAQlyB,GACzB,IAAMgK,EAAkBkoB,EAAlBloB,IAAK8kB,EAAaoD,EAAbpD,SACX,EAAsCzzB,OAAOiF,OAAO,CAAE6xB,WAAW,EAAMC,KAAK,GAAQpyB,GAA5EmyB,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,IAAKC,EAAxB,EAAwBA,UACpBF,GAAanoB,EAAIulB,aACjBvlB,EAAMA,EAAIsoB,aACVxD,GAAY,GAEhB,IAAMjK,EAASuN,EAAMpoB,EAAI8lB,gBAAkB9lB,EAAIuoB,oBAC/C,OAAOF,EAAY,CAACxN,EAAQiK,GAAYjK,EAsL5C/I,GAAMD,KAAKkK,eAAe,GAC1B,IAAM5kB,GAAS,CACXG,KAAM0kB,GACN5kB,IAAqB,kBAAT6kB,MAAqB,WAAYA,KAAOA,KAAK9kB,YAASlB,GAOhEuyB,GAAuB,GAChBtN,GAAQ,CACjBuN,kBADiB,SACCpoB,GACd,IAEI,OADAukB,GAAoBvkB,IACb,EAEX,MAAO+e,GACH,OAAO,IAGfsJ,WAAY,SAACroB,EAAYsoB,GAGrB,OAAOtC,GAASpW,GAFN2U,GAAoBvkB,GACpBukB,GAAoB+D,GACHpa,GAAM7J,KAErCkkB,cAAe,SAACvoB,GACZ,IAAMmR,EAAIoT,GAAoBvkB,GAC9B,OAAOgmB,GAAS9X,GAAM7J,EAAI8M,IAE9BqX,eAAgB,SAACrX,EAAGmX,EAAO/F,GACvB,IAAMlU,EAAIoD,GAAMsG,QAAQ5G,GAClBjC,EAAIqV,GAAoB+D,GACxB3F,EAAIlR,GAAMD,KAAKqT,qBAAqBxW,EAAGa,EAAGpB,IAChD,IAAK6U,EACD,MAAM,IAAIzvB,MAAM,6BACpB,OAAOyvB,EAAE9N,WAAW0N,IAExBkG,cAAe,SAACtX,EAAGmX,EAAO/F,GACtB,IAAMlU,EAAIoD,GAAMsG,QAAQ5G,GAClBjC,EAAI6T,GAAc5M,GAAYmS,IACpC,OAAOja,EAAE6G,SAAShG,GAAG2F,WAAW0N,IAEpCmG,iBAAkB,SAAC9jB,GAEf,IADAA,EAAOuR,GAAYvR,IACVtR,OAAS,IAAMsR,EAAKtR,OAAS,KAClC,MAAM,IAAIJ,MAAM,yDAEpB,OAAO8yB,GADKpW,GAAImT,GAAcne,GAAOsJ,GAAM7J,EAAIyJ,IAAOA,KAG1D1c,YAAa,WAAsB,IAArByF,EAAqB,uDAAP,GACxB,GAAIC,GAAOC,IACP,OAAOD,GAAOC,IAAIC,gBAAgB,IAAIxE,WAAWqE,IAEhD,GAAIC,GAAOG,KAAM,CAClB,IAAQ7F,EAAgB0F,GAAOG,KAAvB7F,YACR,OAAOoB,WAAWa,KAAKjC,EAAYyF,IAGnC,MAAM,IAAI3D,MAAM,sDAGxB6oB,iBAAkB,WACd,OAAOlB,GAAM6N,iBAAiB7N,GAAMzpB,YAAY,MAEpDW,cACAD,cACAL,eACAme,OACAmD,UACA4V,OAAQ,WAAF,sCAAE,mIAAUC,EAAV,yBAAUA,EAAV,YACA9xB,GAAOC,IADP,gCAEqBD,GAAOC,IAAIilB,OAAO1lB,OAAO,UAAW7E,GAAW,WAAX,EAAem3B,IAFxE,cAEMn2B,EAFN,yBAGO,IAAID,WAAWC,IAHtB,WAKKqE,GAAOG,KALZ,wBAMQglB,EAAenlB,GAAOG,KAAtBglB,WACFrX,EAAOqX,EAAW,UACxB2M,EAAS5kB,SAAQ,SAACqU,GAAD,OAAOzT,EAAKvO,OAAOgiB,MARpC,kBASO7lB,WAAWa,KAAKuR,EAAKtO,WAT5B,cAYM,IAAIpD,MAAM,gDAZhB,4CAAF,kDAAE,GAeRwzB,WAAY,WAAF,sCAAE,WAAOpM,GAAP,0HAAesO,EAAf,iCAAeA,EAAf,cACJ9xB,GAAOC,IADH,iCAEeD,GAAOC,IAAIilB,OAAO6M,UAAU,MAAOvO,EAAK,CAAEvZ,KAAM,OAAQ6D,KAAM,CAAE7D,KAAM,aAAe,EAAO,CAAC,SAF5G,cAEE+nB,EAFF,OAGE1yB,EAAU3E,GAAW,WAAX,EAAem3B,GAH3B,SAIiB9xB,GAAOC,IAAIilB,OAAOve,KAAK,OAAQqrB,EAAM1yB,GAJtD,cAIE3D,EAJF,yBAKG,IAAID,WAAWC,IALlB,YAOCqE,GAAOG,KAPR,wBAQI8xB,EAAejyB,GAAOG,KAAtB8xB,WACFnkB,EAAOmkB,EAAW,SAAUzO,GAClCsO,EAAS5kB,SAAQ,SAACqU,GAAD,OAAOzT,EAAKvO,OAAOgiB,MAVhC,kBAWG7lB,WAAWa,KAAKuR,EAAKtO,WAXxB,cAcE,IAAIpD,MAAM,qDAdZ,4CAAF,mDAAE,GAiBZ81B,gBAAYpzB,EACZ+wB,oBAAgB/wB,EAChBqzB,WAAY,WAAF,sCAAE,WAAOxd,GAAP,6GAEK7V,KADTszB,EAAOf,GAAqB1c,IADxB,gCAGeoP,GAAM8N,OAAOn2B,WAAWa,KAAKoY,GAAK,SAAC6J,GAAD,OAAOA,EAAE6T,WAAW,OAHrE,OAGEC,EAHF,OAIJF,EAAOz3B,GAAY23B,EAAMA,GACzBjB,GAAqB1c,GAAOyd,EALxB,sBAAeN,EAAf,iCAAeA,EAAf,mCAOD/N,GAAM8N,OAAN,MAAA9N,GAAK,CAAQqO,GAAR,OAAiBN,KAPrB,2CAAF,mDAAE,GASZS,eAAgB,SAAC5d,GACb,GAAgC,oBAArBoP,GAAMmO,WACb,MAAM,IAAI91B,MAAM,qDACpB,IAAIg2B,EAAOf,GAAqB1c,GAChC,QAAa7V,IAATszB,EAAoB,CACpB,IAAME,EAAOvO,GAAMmO,WAAWx2B,WAAWa,KAAKoY,GAAK,SAAC6J,GAAD,OAAOA,EAAE6T,WAAW,OACvED,EAAOz3B,GAAY23B,EAAMA,GACzBjB,GAAqB1c,GAAOyd,EAPE,2BAAbN,EAAa,iCAAbA,EAAa,kBASlC,OAAO/N,GAAMmO,WAAN,MAAAnO,GAAK,CAAYqO,GAAZ,OAAqBN,KAErC1M,WAjHiB,WAiH8B,IAApCjK,EAAoC,uDAAvB,EAAG2F,EAAoB,uDAAZnG,GAAMD,KAC/Be,EAASqF,IAAUnG,GAAMD,KAAOoG,EAAQ,IAAInG,GAAMmG,EAAM7I,EAAG6I,EAAM5I,GAGvE,OAFAuD,EAAOmJ,eAAezJ,GACtBM,EAAO2C,SAASqL,IACThO,I,sEC3mCf+W,GAAcnN,WAAa,wBAAUrB,kBAAOwO,MAAc73B,YAAd63B,qBAEVA,GAAcvN,iBAAzC,IACMwN,GAAkB,WAC7B,IAAMC,EAAgBF,GAAcvN,mBAC9B7gB,EAAYqgB,GAAaiO,GACzBnqB,EAAY,IAAI7M,WAAW,IAGjC,OAFA6M,EAAU9J,IAAIi0B,GACdnqB,EAAU9J,IAAI2F,EAAW,IAClB,CACLA,YACAmE,cAGSkc,GAAe+N,GAAa/N,aAClC,SAASkO,GAAUvuB,GACxB,IAEE,OADAouB,EAAcvR,QAAQ7c,GAAW,IAC1B,EACP,SACA,OAAO,GAGJ,IAAMuC,GAAO,SAClBrH,EACAiJ,GAFkB,OAGfiqB,GAAa7rB,KAAKrH,EAASiJ,EAAUpL,MAAM,EAAG,MACtCwnB,GAAS6N,GAAa7N,OC3CtBiO,GAAYn3B,YACvB,OAAI2M,SAAOyqB,SAASp3B,GACXA,EACEA,aAAeC,WACjB0M,SAAO7L,KAAKd,EAAIE,OAAQF,EAAIG,WAAYH,EAAII,YAE5CuM,SAAO7L,KAAKd,ICJVksB,G,WACXzoB,WAAY4zB,GAAiB,oBAC3B54B,OAAOiF,OAAOT,KAAMo0B,G,0CAGtB70B,WACE,OAAOmK,SAAO7L,KAAK0J,qBAAU8sB,GAAer0B,U,qBAGjC,SAACR,GACZ,OAAO80B,uBAAYD,GAAer0B,KAAMR,K,6BAGpB,SAACA,GACrB,OAAO+0B,gCAAqBF,GAAer0B,KAAMR,O,KAmBxC60B,GAAoC,IAAIvL,ICpBxC0L,GAAoB,G,IA4BpBztB,G,kDAQXvG,WAAY7E,GAA0B,MAEpC,GAFoC,qBACpC,cAAM,KAPR84B,SAMsC,EAfxC,SAAyB94B,GACvB,YAAwCyE,IAAhCzE,EAAwB84B,IAgB1BC,CAAgB/4B,GAClB,EAAK84B,IAAM94B,EAAM84B,QACZ,CACL,GAAqB,kBAAV94B,EAAoB,CAE7B,IAAMg5B,EAAUhvB,KAAKqB,OAAOrL,GAC5B,GAAIg5B,EAAQ72B,QAAU02B,GACpB,MAAM,IAAI92B,MAAJ,4BAER,EAAK+2B,IAAM,IAAIG,KAAGD,QAElB,EAAKF,IAAM,IAAIG,KAAGj5B,GAGpB,GAAI,EAAK84B,IAAIt3B,aAAe,GAC1B,MAAM,IAAIO,MAAJ,4BAjB0B,S,0CA8BtCqe,SAAOrW,GACL,OAAO1F,KAAKy0B,IAAII,GAAGnvB,EAAU+uB,O,sBAM/B7qB,WACE,OAAOjE,KAAKpG,OAAOS,KAAK9D,a,oBAG1B44B,WACE,OAAO90B,KAAK4J,a,qBAMd1N,WACE,OAAO8D,KAAKk0B,a,sBAMdA,WACE,IAAMllB,EAAIhP,KAAKy0B,IAAIM,YAAYrrB,UAC/B,GAAIsF,EAAElR,SAAW02B,GACf,OAAOxlB,EAGT,IAAMgmB,EAAUtrB,SAAOurB,MAAM,IAE7B,OADAjmB,EAAEiJ,KAAK+c,EAAS,GAAKhmB,EAAElR,QAChBk3B,I,sBAMT/2B,WACE,OAAO+B,KAAK4J,c,8EASa,WACzBsrB,EACA9D,EACA+D,GAHyB,0FAKnBl4B,EAASyM,SAAO0rB,OAAO,CAC3BF,EAAchB,WACdxqB,SAAO7L,KAAKuzB,GACZ+D,EAAUjB,aAENmB,EAAiBlC,kBAAOl2B,GAVL,kBAWlB,IAAI8J,EAAUsuB,IAXI,2C,iGAkBI,SAC7BC,EACAH,GAEA,IAAIl4B,EAASyM,SAAOurB,MAAM,GAC1BK,EAAM9mB,SAAQ,SAAU4iB,GACtB,GAAIA,EAAKtzB,OAhJgB,GAiJvB,MAAM,IAAIO,UAAJ,4BAERpB,EAASyM,SAAO0rB,OAAO,CAACn4B,EAAQi3B,GAAS9C,QAE3Cn0B,EAASyM,SAAO0rB,OAAO,CACrBn4B,EACAk4B,EAAUjB,WACVxqB,SAAO7L,KAAK,2BAEd,IAAMw3B,EAAiBlC,kBAAOl2B,GAC9B,GAAIg3B,GAAUoB,GACZ,MAAM,IAAI33B,MAAJ,kDAER,OAAO,IAAIqJ,EAAUsuB,K,mFAQU,WAC/BC,EACAH,GAF+B,oGAIxBn1B,KAAKu1B,yBAAyBD,EAAOH,IAJb,gD,6FAcJ,SAC3BG,EACAH,GAIA,IAFA,IACIK,EADAC,EAAQ,IAEI,GAATA,GAAY,CACjB,IACE,IAAMC,EAAiBJ,EAAMF,OAAO1rB,SAAO7L,KAAK,CAAC43B,KACjDD,EAAUx1B,KAAKu1B,yBAAyBG,EAAgBP,GACxD,MAAOQ,GACP,GAAIA,aAAet3B,UACjB,MAAMs3B,EAERF,IACA,SAEF,MAAO,CAACD,EAASC,GAEnB,MAAM,IAAI/3B,MAAJ,mD,iFAOuB,WAC7B43B,EACAH,GAF6B,oGAItBn1B,KAAK41B,uBAAuBN,EAAOH,IAJb,gD,gFAUf,SAACU,GAEf,OAAO5B,GADQ,IAAIltB,EAAU8uB,GACL35B,e,GAzLG+sB,IAAlBliB,GAiCJkG,QAAqB,IAAIlG,GAAU,oCA4J5CstB,GAAct0B,IAAIgH,GAAW,CAC3B+uB,KAAM,SACNzhB,OAAQ,CAAC,CAAC,MAAO,WC1O6B,IAAItN,GAClD,+C,ICIWgvB,GAAmB,KCPnBC,G,kDAGXx1B,WAAY6F,GAAmB,kCAC7B,kCAAmBA,EAAnB,0CAHFA,eAE+B,EAE7B,EAAKA,UAAYA,EAFY,E,mCAH+B3I,QAShElC,OAAOC,eACLu6B,GAA2C11B,UAC3C,OACA,CACE3E,MAAO,+C,IAIEs6B,G,kDAGXz1B,WAAY6F,EAAmB6vB,GAAwB,kCACrD,cACG,2CAAmCA,EAAeC,QACjD,GADD,oBAGC,sDAHD,UAII9vB,EAJJ,8CAJLA,eAEuD,EAQrD,EAAKA,UAAYA,EARoC,E,mCAHL3I,QAepDlC,OAAOC,eAAew6B,GAA+B31B,UAAW,OAAQ,CACtE3E,MAAO,mCC3BF,IAAM+J,GAAY,WAAoC,IAAnCmK,EAAmC,uDAAhB,YAC3C,OAAOumB,QAAkB,GAAIvmB,IAqClBwmB,GAAa,WAEQ,IADhCxmB,EACgC,uDADb,SAEbymB,EAAMF,UAOV,CACEA,OAAiB,UACjBA,OAAiB,iBACjBA,QAAkBA,UAAoBA,UAAqB,GAAI,UAEjEvmB,GAEI0mB,EAAUD,EAAItvB,OAAOY,KAAK0uB,GAC1BE,EAAUF,EAAI/2B,OAAOqI,KAAK0uB,GAE1BG,EAAUH,EAsBhB,OApBAG,EAAQzvB,OAAS,SAACgI,EAAee,GAE/B,OADawmB,EAAQvnB,EAAGe,GACb,MAAU9R,YAGvBw4B,EAAQl3B,OAAS,SAACF,EAAa2P,EAAee,GAC5C,IAAMvQ,EAAO,CACXk3B,MAAOhtB,SAAO7L,KAAKwB,EAAK,SAE1B,OAAOm3B,EAAQh3B,EAAMwP,EAAGe,IAG1B0mB,EAAQxB,MAAS51B,YACf,OACE+2B,SAAmBxmB,KACnBwmB,SAAmBxmB,KACnBlG,SAAO7L,KAAKwB,EAAK,QAAQvB,QAItB24B,GAyDF,SAASE,GAASzO,EAAW7T,GAClC,IAAMuiB,EAAgBC,SAAhBD,EAAgBC,GACpB,GAAIA,EAAKjnB,MAAQ,EACf,OAAOinB,EAAKjnB,KACP,GAA0B,oBAAfinB,EAAK5B,MACrB,OAAO4B,EAAK5B,MAAM5gB,EAAOwiB,EAAKhnB,WACzB,GAAI,UAAWgnB,GAAQ,kBAAmBA,EAAM,CACrD,IAAMC,EAAQziB,EAAOwiB,EAAKhnB,UAC1B,GAAIjS,MAAM2W,QAAQuiB,GAChB,OAAOA,EAAMh5B,OAAS84B,EAAaC,EAAK/iB,eAI5C,OAAO,GAGLmhB,EAAQ,EAKZ,OAJA/M,EAAK5X,OAAO+D,OAAO7F,SAASqoB,YAC1B5B,GAAS2B,EAAaC,MAGjB5B,ECpKF,SAAS8B,GAAa9nB,GAG3B,IAFA,IAAI9B,EAAM,EACN6pB,EAAO,IACF,CACP,IAAIC,EAAOhoB,EAAMxR,QAGjB,GAFA0P,IAAe,IAAP8pB,IAAwB,EAAPD,EACzBA,GAAQ,EACc,KAAV,IAAPC,GACH,MAGJ,OAAO9pB,EAGF,SAAS+pB,GAAajoB,EAAsB9B,GAEjD,IADA,IAAIgqB,EAAUhqB,IACL,CACP,IAAI8pB,EAAiB,IAAVE,EAEX,GAAe,IADfA,IAAY,GACM,CAChBloB,EAAMjK,KAAKiyB,GACX,MAEAA,GAAQ,IACRhoB,EAAMjK,KAAKiyB,I,ICyBJG,G,WAWX52B,WAAYgM,GAAmB,oCAV/BoiB,YAU+B,OAT/ByI,iBAS+B,OAR/BC,qBAQ+B,OAP/BC,kBAO+B,OALvBC,kBAA4C,IAAI1O,IAMtD9oB,KAAK4uB,OAASpiB,EAAKoiB,OACnB5uB,KAAKq3B,YAAc7qB,EAAK6qB,YAAYnZ,KAAIuZ,YAAO,OAAI,IAAI1wB,GAAU0wB,MACjEz3B,KAAKs3B,gBAAkB9qB,EAAK8qB,gBAC5Bt3B,KAAKu3B,aAAe/qB,EAAK+qB,aACzBv3B,KAAKu3B,aAAa/oB,SAAQkpB,YAAE,OAC1B,EAAKF,kBAAkBz3B,IACrB23B,EAAGC,eACH,EAAKN,YAAYK,EAAGC,oB,yCAKf,WACT,MAAO,W,6BAGY,WACnB,OAAO33B,KAAKq3B,c,gCAGU,WACtB,OAAOr3B,KAAKu3B,aAAarZ,KACtBwZ,YAAD,MAAqC,CACnCC,eAAgBD,EAAGC,eACnBC,kBAAmBF,EAAGz0B,SACtBzD,KAAMmG,KAAKqB,OAAO0wB,EAAGl4B,Y,+BAKJ,WACrB,MAAO,K,6BAGTq4B,SAAgBC,GACd,OAAOA,EAAQ93B,KAAK4uB,OAAOmJ,wB,+BAG7BC,SAAkBF,GAChB,OACEA,EACE93B,KAAK4uB,OAAOmJ,sBACV/3B,KAAK4uB,OAAOqJ,2BACfH,GAAS93B,KAAK4uB,OAAOmJ,uBACpBD,EACE93B,KAAKq3B,YAAYv5B,OAASkC,KAAK4uB,OAAOsJ,8B,yBAI9CC,SAAYL,GACV,OAAO93B,KAAKw3B,kBAAkBY,IAAIN,K,wBAGpCO,WACE,OAAO,YAAIr4B,KAAKw3B,kBAAkBtnB,Y,2BAGpCooB,WAA6B,WAC3B,OAAOt4B,KAAKq3B,YAAYkB,QAAO,SAAC/zB,EAAGszB,GAAJ,OAAe,EAAKK,YAAYL,Q,uBAGjEvwB,WACE,IAAMixB,EAAUx4B,KAAKq3B,YAAYv5B,OAE7B26B,EAAqB,GACzBC,GAAsBD,EAAUD,GAEhC,IAAMjB,EAAev3B,KAAKu3B,aAAarZ,KAAIya,YACzC,IAAO11B,EAA4B01B,EAA5B11B,SAAU00B,EAAkBgB,EAAlBhB,eACXn4B,EAAO5B,MAAMC,KAAK8H,KAAKqB,OAAO2xB,EAAYn5B,OAE5Co5B,EAA4B,GAChCF,GAAsBE,EAAiB31B,EAASnF,QAEhD,IAAI+6B,EAAsB,GAG1B,OAFAH,GAAsBG,EAAWr5B,EAAK1B,QAE/B,CACL65B,iBACAiB,gBAAiBlvB,SAAO7L,KAAK+6B,GAC7BE,WAAY71B,EACZ81B,WAAYrvB,SAAO7L,KAAKg7B,GACxBr5B,WAIAw5B,EAA6B,GACjCN,GAAsBM,EAAkBzB,EAAaz5B,QACrD,IAAIm7B,EAAoBvvB,SAAOurB,MAAMc,IACrCrsB,SAAO7L,KAAKm7B,GAAkB/gB,KAAKghB,GACnC,IAAIC,EAA0BF,EAAiBl7B,OAE/Cy5B,EAAa/oB,SAAQmqB,YACnB,IA2BM76B,EA3BoBs4B,UAQxB,CACAA,MAAgB,kBAEhBA,QACEuC,EAAYC,gBAAgB96B,OAC5B,mBAEFs4B,OACEA,MAAgB,YAChBuC,EAAYG,WAAWh7B,OACvB,cAEFs4B,QAAkBuC,EAAYI,WAAWj7B,OAAQ,cACjDs4B,OACEA,MAAgB,aAChBuC,EAAYn5B,KAAK1B,OACjB,UAG6ByB,OAC/Bo5B,EACAM,EACAC,GAEFA,GAA2Bp7B,KAE7Bm7B,EAAoBA,EAAkBx6B,MAAM,EAAGy6B,GAE/C,IAAMC,EAAiB/C,UASrB,CACAA,QAAkB,EAAG,yBACrBA,QAAkB,EAAG,6BACrBA,QAAkB,EAAG,+BACrBA,QAAkBqC,EAAS36B,OAAQ,YACnCs4B,OAAiBzmB,GAAiB,OAAQ6oB,EAAS,QACnD7oB,GAAiB,qBAGb3J,EAAc,CAClB+xB,sBAAuBruB,SAAO7L,KAAK,CAACmC,KAAK4uB,OAAOmJ,wBAChDE,0BAA2BvuB,SAAO7L,KAAK,CACrCmC,KAAK4uB,OAAOqJ,4BAEdC,4BAA6BxuB,SAAO7L,KAAK,CACvCmC,KAAK4uB,OAAOsJ,8BAEdO,SAAU/uB,SAAO7L,KAAK46B,GACtBlO,KAAMvqB,KAAKq3B,YAAYnZ,KAAI4G,YAAG,OAAIoP,GAASpP,EAAI5oB,cAC/Co7B,gBAAiB3xB,KAAKqB,OAAOhH,KAAKs3B,kBAGhC8B,EAAW1vB,SAAOurB,MAAM,MACtBn3B,EAASq7B,EAAe55B,OAAOyG,EAAaozB,GAElD,OADAH,EAAkBhhB,KAAKmhB,EAAUt7B,GAC1Bs7B,EAAS36B,MAAM,EAAGX,EAASm7B,EAAkBn7B,W,mBAM3C,SAACb,GAEV,IAAIo8B,EAAY,YAAIp8B,GAEd86B,EAAwBsB,EAAU57B,QACxC,GACEs6B,KJnO6B,IIoO5BA,GAED,MAAM,IAAIr6B,MACR,+EASJ,IALA,IAAMu6B,EAA4BoB,EAAU57B,QACtCy6B,EAA8BmB,EAAU57B,QAExC67B,EAAeZ,GAAsBW,GACvChC,EAAc,GACTr5B,EAAI,EAAGA,EAAIs7B,EAAct7B,IAAK,CACrC,IAAMy5B,EAAU4B,EAAU56B,MAAM,EAAG+1B,IACnC6E,EAAYA,EAAU56B,MAAM+1B,IAC5B6C,EAAYryB,KAAKW,KAAKpG,OAAOmK,SAAO7L,KAAK45B,KAQ3C,IALA,IAAMH,EAAkB+B,EAAU56B,MAAM,EAAG+1B,IAGrCwE,EAAmBN,GAFzBW,EAAYA,EAAU56B,MAAM+1B,KAGxB+C,EAAsC,GACjCv5B,EAAI,EAAGA,EAAIg7B,EAAkBh7B,IAAK,CACzC,IAAM25B,EAAiB0B,EAAU57B,QAC3B67B,EAAeZ,GAAsBW,GACrCp2B,EAAWo2B,EAAU56B,MAAM,EAAG66B,GAE9BP,EAAaL,GADnBW,EAAYA,EAAU56B,MAAM66B,IAEtBC,EAAYF,EAAU56B,MAAM,EAAGs6B,GAC/Bv5B,EAAOmG,KAAKpG,OAAOmK,SAAO7L,KAAK07B,IACrCF,EAAYA,EAAU56B,MAAMs6B,GAC5BxB,EAAavyB,KAAK,CAChB2yB,iBACA10B,WACAzD,SAeJ,OAAO,IAAI43B,EAXS,CAClBxI,OAAQ,CACNmJ,wBACAE,4BACAC,+BAEFZ,gBAAiB3xB,KAAKpG,OAAOmK,SAAO7L,KAAKy5B,IACzCD,cACAE,qB,KC5RS,SAAS,GACtBzM,EACAlqB,GAEA,IAAKkqB,EACH,MAAM,IAAIptB,MAAMkD,GAAW,oB,ICeb44B,GCWLC,G,WAOXj5B,WAAYgM,GAAqB,yBANjCoiB,YAMiC,OALjC8K,uBAKiC,OAJjCpC,qBAIiC,OAHjCqC,0BAGiC,OAFjCC,yBAEiC,EAC/B55B,KAAK4uB,OAASpiB,EAAKoiB,OACnB5uB,KAAK05B,kBAAoBltB,EAAKktB,kBAC9B15B,KAAKs3B,gBAAkB9qB,EAAK8qB,gBAC5Bt3B,KAAK25B,qBAAuBntB,EAAKmtB,qBACjC35B,KAAK45B,oBAAsBptB,EAAKotB,oB,yCAGvB,WACT,OAAO,I,uBAGTryB,WACE,IAAMsyB,EAAiCj8B,QACvC86B,GACEmB,EACA75B,KAAK05B,kBAAkB57B,QAGzB,IAAMg8B,EAAyB95B,KAAK+5B,wBAC9BC,EAA4Bp8B,QAClC86B,GACEsB,EACAh6B,KAAK25B,qBAAqB77B,QAG5B,IAAMm8B,EAAgCj6B,KAAKk6B,+BACrCC,EAAmCv8B,QACzC86B,GACEyB,EACAn6B,KAAK45B,oBAAoB97B,QAG3B,IAAMs8B,EAAgBhE,UAUnB,CACDA,MAAgB,UAChBA,UACE,CACEA,MAAgB,yBAChBA,MAAgB,6BAChBA,MAAgB,gCAElB,UAEFA,QACEyD,EAA+B/7B,OAC/B,2BAEFs4B,OACEzmB,KACA3P,KAAK05B,kBAAkB57B,OACvB,qBAEF6R,GAAiB,mBACjBymB,QAAkB4D,EAA0Bl8B,OAAQ,sBACpDs4B,QACE0D,EAAuBh8B,OACvB,0BAEFs4B,QACE+D,EAAiCr8B,OACjC,6BAEFs4B,QACE6D,EAA8Bn8B,OAC9B,mCAIEu8B,EAAoB,IAAIr9B,WAAW+4B,IAEnCuE,EAA0BF,EAAc76B,OAC5C,CACE2lB,OAH6B,IAI7B0J,OAAQ5uB,KAAK4uB,OACb2L,wBAAyB,IAAIv9B,WAAW68B,GACxCH,kBAAmB15B,KAAK05B,kBAAkBxb,KAAI4G,YAAG,OAAIA,EAAI5oB,aACzDo7B,gBAAiB3xB,KAAKqB,OAAOhH,KAAKs3B,iBAClCkD,mBAAoB,IAAIx9B,WAAWg9B,GACnCF,yBACAW,0BAA2B,IAAIz9B,WAC7Bm9B,GAEFF,iCAEFI,GAEF,OAAOA,EAAkB57B,MAAM,EAAG67B,K,mCAG5BP,WACN,IAD0C,EACtCW,EAAmB,EACjBZ,EAAyB,IAAI98B,WAAW+4B,IAFJ,cAGhB/1B,KAAK25B,sBAHW,IAG1C,IAAK,EAAL,qBAAqD,KAA1ChB,EAA0C,QAC7CgC,EAAiC/8B,QACvC86B,GACEiC,EACAhC,EAAYf,kBAAkB95B,QAGhC,IAAM88B,EAAoBh9B,QAC1B86B,GAAsBkC,EAAmBjC,EAAYn5B,KAAK1B,QAuB1D48B,GArB0BtE,UAMvB,CACDA,MAAgB,kBAChBA,QACEuE,EAA+B78B,OAC/B,kCAEFs4B,OACEA,QACAuC,EAAYf,kBAAkB95B,OAC9B,qBAEFs4B,QAAkBwE,EAAkB98B,OAAQ,qBAC5Cs4B,QAAkBuC,EAAYn5B,KAAK1B,OAAQ,UAGPyB,OACpC,CACEo4B,eAAgBgB,EAAYhB,eAC5BgD,+BAAgC,IAAI39B,WAClC29B,GAEF/C,kBAAmBe,EAAYf,kBAC/BgD,kBAAmB,IAAI59B,WAAW49B,GAClCp7B,KAAMm5B,EAAYn5B,MAEpBs6B,EACAY,IA7CsC,8BAiD1C,OAAOZ,EAAuBr7B,MAAM,EAAGi8B,K,0CAGjCR,WACN,IADiD,EAC7CQ,EAAmB,EACjBT,EAAgC,IAAIj9B,WAAW+4B,IAFJ,cAG5B/1B,KAAK45B,qBAHuB,IAGjD,IAAK,EAAL,qBAA+C,KAApCiB,EAAoC,QACvCC,EAA+Bl9B,QACrC86B,GACEoC,EACAD,EAAOE,gBAAgBj9B,QAGzB,IAAMk9B,EAA+Bp9B,QACrC86B,GACEsC,EACAH,EAAOI,gBAAgBn9B,QA+BzB48B,GA5BiCtE,UAM9B,CACDzmB,GAAiB,cACjBymB,QACE0E,EAA6Bh9B,OAC7B,gCAEFs4B,OACEA,QACAyE,EAAOE,gBAAgBj9B,OACvB,mBAEFs4B,QACE4E,EAA6Bl9B,OAC7B,gCAEFs4B,OACEA,QACAyE,EAAOI,gBAAgBn9B,OACvB,qBAIyCyB,OAC3C,CACE27B,WAAYL,EAAOK,WAAWh/B,UAC9B4+B,6BAA8B,IAAI99B,WAChC89B,GAEFC,gBAAiBF,EAAOE,gBACxBC,6BAA8B,IAAIh+B,WAChCg+B,GAEFC,gBAAiBJ,EAAOI,iBAE1BhB,EACAS,IAzD6C,8BA6DjD,OAAOT,EAA8Bx7B,MAAM,EAAGi8B,M,0BAG9B,SAACL,GACjB,IAAIhB,EAAY,YAAIgB,GAEdnV,EAASmU,EAAU57B,QACnB09B,EPxPyB,IOwPVjW,EACrB3V,GACE2V,IAAWiW,EADP,0DAMN5rB,GACc,IAFE4rB,EACV,sEADUA,IAchB,IARA,IAAMvM,EAAwB,CAC5BmJ,sBAAuBsB,EAAU57B,QACjCw6B,0BAA2BoB,EAAU57B,QACrCy6B,4BAA6BmB,EAAU57B,SAGnCi8B,EAAoB,GACpBa,EAA0B7B,GAAsBW,GAC7Cr7B,EAAI,EAAGA,EAAIu8B,EAAyBv8B,IAC3C07B,EAAkB10B,KAChB,IAAI+B,GAAUsyB,EAAU+B,OAAO,EAAG5G,MAQtC,IAJA,IAAM8C,EAAkB3xB,KAAKpG,OAAO85B,EAAU+B,OAAO,EAAG5G,KAElDwE,EAAmBN,GAAsBW,GACzCM,EAAqD,GAClD37B,EAAI,EAAGA,EAAIg7B,EAAkBh7B,IAAK,CACzC,IAAM25B,EAAiB0B,EAAU57B,QAC3B49B,EAA0B3C,GAAsBW,GAChDzB,EAAoByB,EAAU+B,OAAO,EAAGC,GACxCtC,EAAaL,GAAsBW,GACnC75B,EAAO,IAAIxC,WAAWq8B,EAAU+B,OAAO,EAAGrC,IAChDY,EAAqB30B,KAAK,CACxB2yB,iBACAC,oBACAp4B,SAMJ,IAFA,IAAM87B,EAA2B5C,GAAsBW,GACjDO,EAAmD,GAChD57B,EAAI,EAAGA,EAAIs9B,EAA0Bt9B,IAAK,CACjD,IAAMk9B,EAAa,IAAIn0B,GAAUsyB,EAAU+B,OAAO,EAAG5G,KAC/C+G,EAAwB7C,GAAsBW,GAC9C0B,EAAkB1B,EAAU+B,OAAO,EAAGG,GACtCC,EAAwB9C,GAAsBW,GAC9C4B,EAAkB5B,EAAU+B,OAAO,EAAGI,GAC5C5B,EAAoB50B,KAAK,CACvBk2B,aACAH,kBACAE,oBAIJ,OAAO,IAAIxB,EAAU,CACnB7K,SACA8K,oBACApC,kBACAqC,uBACAC,4B,eD5SYJ,gH,CAAAA,aASlB,IAAMiC,GAAoB/xB,SAAOurB,MNlBQ,IMkByBrnB,KAAK,GAiD1D8tB,G,WAiBXl7B,WAAYL,GAAwC,yBAZpDoqB,UAYoD,OAPpD4K,eAOoD,OAFpD31B,KAAekK,SAAOurB,MAAM,GAG1Bj1B,KAAKm1B,UAAYh1B,EAAKg1B,UACtBn1B,KAAKuqB,KAAOpqB,EAAKoqB,KACbpqB,EAAKX,OACPQ,KAAKR,KAAOW,EAAKX,M,0CAOrBs1B,WACE,MAAO,CACLvK,KAAMvqB,KAAKuqB,KAAKrM,KAAI,gBAAEyd,EAAF,EAAEA,OAAQC,EAAV,EAAUA,SAAUC,EAApB,EAAoBA,WAApB,MAAqC,CACvDF,OAAQA,EAAO7G,SACf8G,WACAC,iBAEF1G,UAAWn1B,KAAKm1B,UAAUL,SAC1Bt1B,KAAM,YAAIQ,KAAKR,W,KAyERs8B,G,WAiEXt7B,WACEL,GAEA,GADA,yBA9DFuH,WAAyC,GA8DvC,KA/CFq0B,cA+CE,OA1CFxE,aAA8C,GA0C5C,KArCFD,qBAqCE,OAhCF0E,0BAgCE,OA1BFC,eA0BE,OArBFC,cAqBE,OAhBFC,WAgBE,EACKh8B,EASL,GANIA,EAAK47B,WACP/7B,KAAK+7B,SAAW57B,EAAK47B,UAEnB57B,EAAKuH,aACP1H,KAAK0H,WAAavH,EAAKuH,YAErBlM,OAAO8E,UAAUiQ,eAAehQ,KAAKJ,EAAM,wBAAyB,CACtE,IAAOi8B,EACLj8B,EADKi8B,UAAWJ,EAChB77B,EADgB67B,qBAElBh8B,KAAKs3B,gBAAkB8E,EACvBp8B,KAAKg8B,qBAAuBA,MACvB,CACL,IAAO1E,EACLn3B,EADKm3B,gBAAiB2E,EACtB97B,EADsB87B,UAEpBA,IACFj8B,KAAKi8B,UAAYA,GAEnBj8B,KAAKs3B,gBAAkBA,G,2CA9Ed,WACX,OAAIt3B,KAAK0H,WAAW5J,OAAS,EACpBkC,KAAK0H,WAAW,GAAGrB,UAErB,O,oBAiFTyuB,WACE,MAAO,CACLwC,gBAAiBt3B,KAAKs3B,iBAAmB,KACzCyE,SAAU/7B,KAAK+7B,SAAW/7B,KAAK+7B,SAASjH,SAAW,KACnDmH,UAAWj8B,KAAKi8B,UACZ,CACExG,MAAOz1B,KAAKi8B,UAAUxG,MACtB4G,iBAAkBr8B,KAAKi8B,UAAUI,iBAAiBvH,UAEpD,KACJyC,aAAcv3B,KAAKu3B,aAAarZ,KAAIya,YAAW,OAAIA,EAAY7D,YAC/DwH,QAASt8B,KAAK0H,WAAWwW,KAAI,YAC3B,OAD4C,EAAfxY,UACZovB,e,iBAQvBxZ,WAIe,kCAHVihB,EAGU,yBAHVA,EAGU,gBACb,GAAqB,IAAjBA,EAAMz+B,OACR,MAAM,IAAIJ,MAAM,mBAYlB,OATA6+B,EAAM/tB,SAASqoB,YACT,iBAAkBA,EACpB,EAAKU,aAAe,EAAKA,aAAanC,OAAOyB,EAAKU,cACzC,SAAUV,GAAQ,cAAeA,GAAQ,SAAUA,EAC5D,EAAKU,aAAavyB,KAAK6xB,GAEvB,EAAKU,aAAavyB,KAAK,IAAI02B,GAAuB7E,OAG/C72B,O,4BAMTw8B,WACE,GACEx8B,KAAKk8B,UACLzU,KAAKC,UAAU1nB,KAAK80B,YAAcrN,KAAKC,UAAU1nB,KAAKm8B,OAEtD,OAAOn8B,KAAKk8B,SAGd,IAAI5E,EACAC,EAoBAwE,EARJ,GAXI/7B,KAAKi8B,WACP3E,EAAkBt3B,KAAKi8B,UAAUxG,MAE/B8B,EADEv3B,KAAKu3B,aAAa,IAAMv3B,KAAKi8B,UAAUI,iBAC1B,CAACr8B,KAAKi8B,UAAUI,kBAAnB,mBAAwCr8B,KAAKu3B,eAE1Cv3B,KAAKu3B,eAGtBD,EAAkBt3B,KAAKs3B,gBACvBC,EAAev3B,KAAKu3B,eAEjBD,EACH,MAAM,IAAI55B,MAAM,wCAQlB,GALI65B,EAAaz5B,OAAS,GACxB2+B,QAAQC,KAAK,4BAIX18B,KAAK+7B,SACPA,EAAW/7B,KAAK+7B,aACX,MAAI/7B,KAAK0H,WAAW5J,OAAS,GAAKkC,KAAK0H,WAAW,GAAGhC,WAI1D,MAAM,IAAIhI,MAAM,kCAFhBq+B,EAAW/7B,KAAK0H,WAAW,GAAGhC,UAKhC,IAAK,IAAI1H,EAAI,EAAGA,EAAIu5B,EAAaz5B,OAAQE,IACvC,QAAkCoC,IAA9Bm3B,EAAav5B,GAAGm3B,UAClB,MAAM,IAAIz3B,MAAJ,wCAC6BM,EAD7B,8BAMV,IAAMq6B,EAAuB,GACvBsE,EAA8B,GACpCpF,EAAa/oB,SAAQmqB,YACnBA,EAAYpO,KAAK/b,SAAQouB,YACvBD,EAAa33B,KAAb23B,eAAsBC,OAGxB,IAAMzH,EAAYwD,EAAYxD,UAAUl3B,WACnCo6B,EAAWlpB,SAASgmB,IACvBkD,EAAWrzB,KAAKmwB,MAKpBkD,EAAW7pB,SAAQ2mB,YACjBwH,EAAa33B,KAAK,CAChB22B,OAAQ,IAAI50B,GAAUouB,GACtByG,UAAU,EACVC,YAAY,OAKhB,IAAMgB,EAA6B,GACnCF,EAAanuB,SAAQouB,YACnB,IAAME,EAAeF,EAAYjB,OAAO19B,WAClC8+B,EAAcF,EAAYG,WAAUzjB,YACxC,OAAOA,EAAEoiB,OAAO19B,aAAe6+B,KAE7BC,GAAe,GACjBF,EAAYE,GAAalB,WACvBgB,EAAYE,GAAalB,YAAce,EAAYf,WACrDgB,EAAYE,GAAanB,SACvBiB,EAAYE,GAAanB,UAAYgB,EAAYhB,UAEnDiB,EAAY73B,KAAK43B,MAKrBC,EAAYI,MAAK,SAAU1jB,EAAGC,GAC5B,OAAID,EAAEqiB,WAAapiB,EAAEoiB,SAEZriB,EAAEqiB,UAAY,EAAI,EAEvBriB,EAAEsiB,aAAeriB,EAAEqiB,WAEdtiB,EAAEsiB,YAAc,EAAI,EAGtBtiB,EAAEoiB,OAAO/xB,WAAWszB,cAAc1jB,EAAEmiB,OAAO/xB,eAIpD,IAAMuzB,EAAgBN,EAAYG,WAAUzjB,YAC1C,OAAOA,EAAEoiB,OAAO5f,OAAOggB,MAEzB,GAAIoB,GAAiB,EAAG,CACtB,MAAoBN,EAAYzB,OAAO+B,EAAe,GAA/CC,EAAP,oBACAA,EAAUxB,UAAW,EACrBwB,EAAUvB,YAAa,EACvBgB,EAAYQ,QAAQD,QAEpBP,EAAYQ,QAAQ,CAClB1B,OAAQI,EACRH,UAAU,EACVC,YAAY,IAjHQ,oBAsHA77B,KAAK0H,YAtHL,yBAsHbrB,EAtHa,QAuHhB02B,EAAcF,EAAYG,WAAUzjB,YACxC,OAAOA,EAAEoiB,OAAO5f,OAAO1V,EAAUX,cAEnC,KAAIq3B,GAAe,GAUjB,MAAM,IAAIr/B,MAAJ,0BAA6B2I,EAAUX,UAAUzH,aATlD4+B,EAAYE,GAAanB,WAC5BiB,EAAYE,GAAanB,UAAW,EACpCa,QAAQC,KACN,kOARR,IAAK,EAAL,qBAAyC,IAtHjB,8BAwIxB,IAAI3E,EAAwB,EACxBE,EAA4B,EAC5BC,EAA8B,EAG5BoF,EAAuB,GACvBC,EAAyB,GAC/BV,EAAYruB,SAAQ,YAAoC,IAAlCmtB,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,WAClCD,GACF0B,EAAWt4B,KAAK22B,EAAO19B,YACvB85B,GAAyB,EACpB8D,IACH5D,GAA6B,KAG/BsF,EAAav4B,KAAK22B,EAAO19B,YACpB49B,IACH3D,GAA+B,OAKrC,IAAMb,EAAciG,EAAWlI,OAAOmI,GAChC5D,EAA8CpC,EAAarZ,KAC/Dya,YACE,IAAOn5B,EAAmBm5B,EAAnBn5B,KAAM21B,EAAawD,EAAbxD,UACb,MAAO,CACLwC,eAAgBN,EAAYmG,QAAQrI,EAAUl3B,YAC9CgF,SAAU01B,EAAYpO,KAAKrM,KAAIuf,YAAI,OACjCpG,EAAYmG,QAAQC,EAAK9B,OAAO19B,eAElCuB,KAAMmG,KAAKpG,OAAOC,OAUxB,OALAm6B,EAAqBnrB,SAAQmqB,YAC3B+E,GAAU/E,EAAYhB,gBAAkB,GACxCgB,EAAY11B,SAASuL,SAAQmvB,YAAQ,OAAID,GAAUC,GAAY,SAG1D,IAAIvG,GAAQ,CACjBxI,OAAQ,CACNmJ,wBACAE,4BACAC,+BAEFb,cACAC,kBACAC,aAAcoC,M,sBAOlBiE,WACE,IAAMh9B,EAAUZ,KAAKw8B,iBACfc,EAAa18B,EAAQy2B,YAAY54B,MACrC,EACAmC,EAAQguB,OAAOmJ,uBAGjB,GAAI/3B,KAAK0H,WAAW5J,SAAWw/B,EAAWx/B,QAC1BkC,KAAK0H,WAAWhI,OAAM,SAACm+B,EAAM/F,GACzC,OAAOwF,EAAWxF,GAAO/b,OAAO8hB,EAAKn4B,cAG5B,OAAO9E,EAQpB,OALAZ,KAAK0H,WAAa41B,EAAWpf,KAAIxY,YAAS,MAAK,CAC7CW,UAAW,KACXX,gBAGK9E,I,8BAMTkG,WACE,OAAO9G,KAAK49B,WAAWr2B,c,8EAMJ,WAACu2B,GAAD,2FACLA,EAAWC,iBAAiB/9B,KAAKw8B,kBAD5B,uCAC+C7gC,OAD/C,gD,+EAcrBqiC,WAAyC,2BAA3B1B,EAA2B,yBAA3BA,EAA2B,gBACvC,GAAuB,IAAnBA,EAAQx+B,OACV,MAAM,IAAIJ,MAAM,cAGlB,IAAMugC,EAAO,IAAIlV,IACjB/oB,KAAK0H,WAAa40B,EACf/D,QAAO7yB,YACN,IAAMof,EAAMpf,EAAUzH,WACtB,OAAIggC,EAAK7F,IAAItT,KAGXmZ,EAAK3iB,IAAIwJ,IACF,MAGV5G,KAAIxY,YAAS,MAAK,CAACW,UAAW,KAAMX,kB,kBAiBzCuC,WAAgC,2BAAxBq0B,EAAwB,yBAAxBA,EAAwB,gBAC9B,GAAuB,IAAnBA,EAAQx+B,OACV,MAAM,IAAIJ,MAAM,cAMlB,IAFA,IAAMugC,EAAO,IAAIlV,IACXmV,EAAgB,GACtB,MAAqB5B,EAArB,eAA8B,CAAzB,IAAM6B,EAAX,KACQrZ,EAAMqZ,EAAOz4B,UAAUzH,WACzBggC,EAAK7F,IAAItT,KAGXmZ,EAAK3iB,IAAIwJ,GACToZ,EAAcl5B,KAAKm5B,IAIvBn+B,KAAK0H,WAAaw2B,EAAchgB,KAAIigB,YAAM,MAAK,CAC7C93B,UAAW,KACXX,UAAWy4B,EAAOz4B,cAGpB,IAAM9E,EAAUZ,KAAK49B,WACrB59B,KAAKo+B,aAAL,MAAAp+B,KAAA,CAAkBY,GAAlB,OAA8Bs9B,M,yBAUhCp0B,WAAuC,2BAAxBwyB,EAAwB,yBAAxBA,EAAwB,gBACrC,GAAuB,IAAnBA,EAAQx+B,OACV,MAAM,IAAIJ,MAAM,cAMlB,IAFA,IAAMugC,EAAO,IAAIlV,IACXmV,EAAgB,GACtB,MAAqB5B,EAArB,eAA8B,CAAzB,IAAM6B,EAAX,KACQrZ,EAAMqZ,EAAOz4B,UAAUzH,WACzBggC,EAAK7F,IAAItT,KAGXmZ,EAAK3iB,IAAIwJ,GACToZ,EAAcl5B,KAAKm5B,IAIvB,IAAMv9B,EAAUZ,KAAK49B,WACrB59B,KAAKo+B,aAAL,MAAAp+B,KAAA,CAAkBY,GAAlB,OAA8Bs9B,M,0BAMhCE,SAAax9B,GAA6C,eAClDw4B,EAAWx4B,EAAQ2G,YAD+B,mBAAxB+0B,EAAwB,iCAAxBA,EAAwB,kBAExDA,EAAQ9tB,SAAQ2vB,YACd,IAAM93B,EAAY4B,GAAKmxB,EAAU+E,EAAOt0B,WACxC,EAAKw0B,cAAcF,EAAOz4B,UAAWwuB,GAAS7tB,S,0BASlDY,SAAa00B,EAAmBt1B,GAC9BrG,KAAK49B,WACL59B,KAAKq+B,cAAc1C,EAAQt1B,K,2BAM7Bg4B,SAAc1C,EAAmBt1B,GAC/Bq3B,GAA+B,KAArBr3B,EAAUvI,QAEpB,IAAMg6B,EAAQ93B,KAAK0H,WAAWs1B,WAAUsB,YAAO,OAC7C3C,EAAO5f,OAAOuiB,EAAQ54B,cAExB,GAAIoyB,EAAQ,EACV,MAAM,IAAIp6B,MAAJ,0BAA6Bi+B,EAAO19B,aAG5C+B,KAAK0H,WAAWowB,GAAOzxB,UAAYqD,SAAO7L,KAAKwI,K,8BAMjDk4B,WACE,OAAOv+B,KAAKw+B,kBAAkBx+B,KAAK8G,oBAAoB,K,+BAMzD03B,SAAkBpF,EAAkBqF,GAAwC,oBACrCz+B,KAAK0H,YADgC,IAC1E,IAAK,EAAL,qBAAsD,eAA1CrB,EAA0C,EAA1CA,UAAWX,EAA+B,EAA/BA,UACrB,GAAkB,OAAdW,GACF,GAAIo4B,EACF,OAAO,OAGT,IAAKxY,GAAO5f,EAAW+yB,EAAU1zB,EAAUwuB,YACzC,OAAO,GAR6D,8BAY1E,OAAO,I,uBAMT3sB,SAAUrD,GACR,MAAiD1I,OAAOiF,OACtD,CAACg+B,sBAAsB,EAAMF,kBAAkB,GAC/Cr6B,GAFKu6B,EAAP,EAAOA,qBAAsBF,EAA7B,EAA6BA,iBAKvBnF,EAAWp5B,KAAK8G,mBACtB,GACEy3B,IACCv+B,KAAKw+B,kBAAkBpF,EAAUqF,GAElC,MAAM,IAAI/gC,MAAM,iCAGlB,OAAOsC,KAAK0+B,WAAWtF,K,wBAMzBsF,SAAWtF,GACT,IAAO1xB,EAAc1H,KAAd0H,WACDi3B,EAA2B,GACjCjG,GAAsBiG,EAAgBj3B,EAAW5J,QACjD,IAAM8gC,EACJD,EAAe7gC,OAA6B,GAApB4J,EAAW5J,OAAcs7B,EAASt7B,OACtD+gC,EAAkBn1B,SAAOurB,MAAM2J,GAoBrC,OAnBAlB,GAAUh2B,EAAW5J,OAAS,KAC9B4L,SAAO7L,KAAK8gC,GAAgB1mB,KAAK4mB,EAAiB,GAClDn3B,EAAW8G,SAAQ,WAAcspB,GAAU,IAAtBzxB,EAAsB,EAAtBA,UACD,OAAdA,IACFq3B,GAA+B,KAArBr3B,EAAUvI,OAAX,gCACT4L,SAAO7L,KAAKwI,GAAW4R,KACrB4mB,EACAF,EAAe7gC,OAAiB,GAARg6B,OAI9BsB,EAASnhB,KACP4mB,EACAF,EAAe7gC,OAA6B,GAApB4J,EAAW5J,QAErC4/B,GACEmB,EAAgB/gC,QAAUi4B,GADnB,iCAEmB8I,EAAgB/gC,OAFnC,cAE+Ci4B,KAEjD8I,I,gBAOD,WAEN,OADAnB,GAAuC,IAA7B19B,KAAKu3B,aAAaz5B,QACrBkC,KAAKu3B,aAAa,GAAGhN,KAAKrM,KAAI4gB,YAAM,OAAIA,EAAOnD,Y,qBAO3C,WAEX,OADA+B,GAAuC,IAA7B19B,KAAKu3B,aAAaz5B,QACrBkC,KAAKu3B,aAAa,GAAGpC,Y,gBAOtB,WAEN,OADAuI,GAAuC,IAA7B19B,KAAKu3B,aAAaz5B,QACrBkC,KAAKu3B,aAAa,GAAG/3B,Q,mBAMnB,SAACvC,GAMV,IAJA,IAAIo8B,EAAY,YAAIp8B,GAEd0hC,EAAiBjG,GAAsBW,GACzC3xB,EAAa,GACR1J,EAAI,EAAGA,EAAI2gC,EAAgB3gC,IAAK,CACvC,IAAMqI,EAAYgzB,EAAU56B,MAAM,EN1xBC,IM2xBnC46B,EAAYA,EAAU56B,MN3xBa,IM4xBnCiJ,EAAW1C,KAAKW,KAAKpG,OAAOmK,SAAO7L,KAAKwI,KAG1C,OAAOy1B,EAAYiD,SAAS3H,GAAQv5B,KAAKw7B,GAAY3xB,K,sBAMxC,SACb9G,GAEa,IADb8G,EACa,uDADe,GAEtB1B,EAAc,IAAI81B,EAyCxB,OAxCA91B,EAAYsxB,gBAAkB12B,EAAQ02B,gBAClC12B,EAAQguB,OAAOmJ,sBAAwB,IACzC/xB,EAAY+1B,SAAWn7B,EAAQy2B,YAAY,IAE7C3vB,EAAW8G,SAAQ,SAACnI,EAAWyxB,GAC7B,IAAMkH,EAAgB,CACpB34B,UACEA,GAAaV,KAAKpG,OAAOk8B,IACrB,KACA91B,KAAKqB,OAAOX,GAClBX,UAAW9E,EAAQy2B,YAAYS,IAEjC9xB,EAAY0B,WAAW1C,KAAKg6B,MAG9Bp+B,EAAQ22B,aAAa/oB,SAAQmqB,YAC3B,IAAMpO,EAAOoO,EAAY11B,SAASib,KAAIuZ,YACpC,IAAMkE,EAAS/6B,EAAQy2B,YAAYI,GACnC,MAAO,CACLkE,SACAC,SACE51B,EAAY0B,WAAWu3B,MACrBH,YAAM,OAAIA,EAAOp5B,UAAUzH,aAAe09B,EAAO19B,eAC9C2C,EAAQi3B,gBAAgBJ,GAC/BoE,WAAYj7B,EAAQo3B,kBAAkBP,OAI1CzxB,EAAYuxB,aAAavyB,KACvB,IAAI02B,GAAuB,CACzBnR,OACA4K,UAAWv0B,EAAQy2B,YAAYsB,EAAYhB,gBAC3Cn4B,KAAMmG,KAAKqB,OAAO2xB,EAAYn5B,YAKpCwG,EAAYk2B,SAAWt7B,EACvBoF,EAAYm2B,MAAQn2B,EAAY8uB,SAEzB9uB,M,KE31BEk5B,GAAsB,IAAIn4B,GACrC,+CAWWo4B,IAR+B,IAAIp4B,GAC9C,+CAGwC,IAAIA,GAC5C,+CAG8C,IAAIA,GAClD,gDAGWq4B,GAAqB,IAAIr4B,GACpC,+CAeWs4B,IAZwB,IAAIt4B,GACvC,+CAGuC,IAAIA,GAC3C,+CAGwC,IAAIA,GAC5C,+CAGyC,IAAIA,GAC7C,gD,SClBoBu4B,G,iGAAf,WACLxB,EACA93B,EACAs2B,EACAhU,GAJK,4FAMCiX,EAAcjX,GAAW,CAC7BkX,cAAelX,EAAQkX,cACvBC,oBAAqBnX,EAAQmX,qBAAuBnX,EAAQoX,WAC5DC,WAAYrX,EAAQqX,WACpBC,eAAgBtX,EAAQsX,gBAVrB,SAamB9B,EAAWz1B,gBACjCrC,EACAs2B,EACAiD,GAhBG,UAaCl5B,EAbD,OAoB4B,MAA/BL,EAAYsxB,iBACwB,MAApCtxB,EAAYg2B,qBArBT,iCAuBS8B,EAAW+B,mBACf,CACEx5B,UAAWA,EACX+1B,UAAWp2B,EAAYsxB,gBACvB0E,qBAAsBh2B,EAAYg2B,sBAEpC1T,GAAWA,EAAQoX,YA7BxB,mBA+BG/jC,MA/BH,yCAiCSmiC,EAAW+B,mBACfx5B,EACAiiB,GAAWA,EAAQoX,YAnCxB,oBAqCG/jC,MArCH,aAmBCmkC,EAnBD,MAuCMnK,IAvCN,uBAwCG,IAAIj4B,MAAJ,sBACW2I,EADX,oBACgCohB,KAAKC,UAAUoY,GAD/C,MAxCH,iCA6CEz5B,GA7CF,6C,sBChBA,SAAS05B,GAAMC,GACpB,OAAO,IAAIv7B,SAAQC,YAAO,OAAIu7B,WAAWv7B,EAASs7B,MCqB7C,SAASE,GACdhY,EACA7T,GAEA,IAAM8rB,EACJjY,EAAK5X,OAAOV,MAAQ,EAAIsY,EAAK5X,OAAOV,KAAOD,GAAgBuY,EAAM7T,GAC7D7U,EAAOkK,SAAOurB,MAAMkL,GACpBC,EAAe5kC,OAAOiF,OAAO,CAACk4B,YAAazQ,EAAK4P,OAAQzjB,GAE9D,OADA6T,EAAK5X,OAAO/Q,OAAO6gC,EAAc5gC,GAC1BA,ECzBF,ICSJ1B,GDTUuiC,GAAsBjK,QAAkB,wBEQ/CkK,GAAqBlK,UAUzB,CACAA,OAAiB,WACjBA,OAAiB,SACjBzmB,GAAiB,oBACjBA,GAAiB,SACjBymB,UACE,CAACiK,IACD,mBAISE,GAAuBD,GAAmB1wB,KAW1C4wB,G,WAQXhgC,WAAYgM,GAAwB,yBAPpCi0B,sBAOoC,OANpChL,WAMoC,OALpCiL,mBAKoC,EAClC1gC,KAAKygC,iBAAmBj0B,EAAKi0B,iBAC7BzgC,KAAKy1B,MAAQjpB,EAAKipB,MAClBz1B,KAAK0gC,cAAgBl0B,EAAKk0B,c,wDASN,SACpBzjC,GAEA,IAAM0jC,EAAeL,GAAmBt5B,OAAOktB,GAASj3B,GAAS,GACjE,OAAO,IAAIujC,EAAa,CACtBC,iBAAkB,IAAI15B,GAAU45B,EAAaF,kBAC7ChL,MAAO,IAAI1uB,GAAU45B,EAAalL,OAAOx3B,WACzCyiC,cAAeC,EAAaD,oB,KDtCrBE,IApBV9iC,GAoBuB,EAnBvB+R,YACC,IAAMS,EAASuwB,gBAAK/iC,GAAQ+R,GAC5B,EAVqBS,YAGvB,MAAO,CAACtJ,OAFOsJ,EAAOtJ,OAAOY,KAAK0I,GAElB/Q,OADD+Q,EAAO/Q,OAAOqI,KAAK0I,IAQPwwB,CAAaxwB,GAA/B/Q,EAAP,EAAOA,OAAQyH,EAAf,EAAeA,OAET+5B,EAAezwB,EAYrB,OAVAywB,EAAa/5B,OAAS,SAAC/J,EAAgB8S,GACrC,IAAMiB,EAAMhK,EAAO/J,EAAQ8S,GAC3B,OAAOixB,sBAAWt3B,SAAO7L,KAAKmT,KAGhC+vB,EAAaxhC,OAAS,SAAC0hC,EAAgBhkC,EAAgB8S,GACrD,IAAMiB,EAAMkwB,sBAAWD,EAAQnjC,IAC/B,OAAOyB,EAAOyR,EAAK/T,EAAQ8S,IAGtBgxB,IEilBEI,GAA6B3lC,OAAOmd,OAI9C,CACDyoB,OAAQ,CACNtJ,MAAO,EACPxnB,OAAQ8lB,UAA0D,CAChEA,OAAiB,eACjBA,QAAkB,YAClBA,QAAkB,SAClBzmB,GAAiB,gBAGrB0xB,OAAQ,CACNvJ,MAAO,EACPxnB,OAAQ8lB,UAA0D,CAChEA,OAAiB,eACjBzmB,GAAiB,gBAGrB2xB,SAAU,CACRxJ,MAAO,EACPxnB,OAAQ8lB,UAA4D,CAClEA,OAAiB,eACjBwK,GAAI,eAGRW,eAAgB,CACdzJ,MAAO,EACPxnB,OAAQ8lB,UAAkE,CACxEA,OAAiB,eACjBzmB,GAAiB,QACjBA,GAAkB,QAClBymB,QAAkB,YAClBA,QAAkB,SAClBzmB,GAAiB,gBAGrB6xB,oBAAqB,CACnB1J,MAAO,EACPxnB,OAAQ8lB,UAEN,CAACA,OAAiB,kBAEtBqL,qBAAsB,CACpB3J,MAAO,EACPxnB,OAAQ8lB,UAEN,CAACA,OAAiB,eAAgBA,QAAkB,eAExDsL,uBAAwB,CACtB5J,MAAO,EACPxnB,OAAQ8lB,UAEN,CAACA,OAAiB,eAAgBzmB,GAAiB,iBAEvDgyB,sBAAuB,CACrB7J,MAAO,EACPxnB,OAAQ8lB,UAEN,CAACA,OAAiB,eAAgBzmB,GAAiB,iBAEvDiyB,SAAU,CACR9J,MAAO,EACPxnB,OAAQ8lB,UAA4D,CAClEA,OAAiB,eACjBA,QAAkB,YAGtByL,iBAAkB,CAChB/J,MAAO,EACPxnB,OAAQ8lB,UACN,CACEA,OAAiB,eACjBzmB,GAAiB,QACjBA,GAAkB,QAClBymB,QAAkB,SAClBzmB,GAAiB,gBAIvBmyB,eAAgB,CACdhK,MAAO,GACPxnB,OAAQ8lB,UAAkE,CACxEA,OAAiB,eACjBzmB,GAAiB,QACjBA,GAAkB,QAClBA,GAAiB,gBAGrBoyB,iBAAkB,CAChBjK,MAAO,GACPxnB,OAAQ8lB,UACN,CACEA,OAAiB,eACjBwK,GAAI,YACJjxB,GAAkB,QAClBA,GAAiB,gBAIvBqyB,oBAAqB,CACnBlK,MAAO,GACPxnB,OAAQ8lB,UAEN,CAACA,OAAiB,oBAOX6L,G,WAIXzhC,aAAc,oB,sDAYM,SAACuF,GACnB,IACMvG,EAAO0gC,GADAiB,GAA2BC,OACV,CAC5Bc,SAAUn8B,EAAOm8B,SACjBC,MAAOp8B,EAAOo8B,MACdhN,UAAWjB,GAASnuB,EAAOovB,UAAUjB,cAGvC,OAAO,IAAIwH,GAAuB,CAChCnR,KAAM,CACJ,CAACoR,OAAQ51B,EAAOq8B,WAAYxG,UAAU,EAAMC,YAAY,GACxD,CAACF,OAAQ51B,EAAOs8B,iBAAkBzG,UAAU,EAAMC,YAAY,IAEhE1G,UAAWn1B,KAAKm1B,UAChB31B,W,sBAOW,SACbuG,GAEA,IAAIvG,EACA+qB,EACA,eAAgBxkB,GAElBvG,EAAO0gC,GADMiB,GAA2BY,iBAChB,CACtBG,SAAUn0B,OAAOhI,EAAOm8B,UACxB9Q,KAAMrrB,EAAOqrB,KACb+D,UAAWjB,GAASnuB,EAAOovB,UAAUjB,cAEvC3J,EAAO,CACL,CAACoR,OAAQ51B,EAAOq8B,WAAYxG,UAAU,EAAOC,YAAY,GACzD,CAACF,OAAQ51B,EAAOu8B,WAAY1G,UAAU,EAAMC,YAAY,GACxD,CAACF,OAAQ51B,EAAOw8B,SAAU3G,UAAU,EAAOC,YAAY,MAIzDr8B,EAAO0gC,GADMiB,GAA2BG,SAChB,CAACY,SAAUn0B,OAAOhI,EAAOm8B,YACjD3X,EAAO,CACL,CAACoR,OAAQ51B,EAAOq8B,WAAYxG,UAAU,EAAMC,YAAY,GACxD,CAACF,OAAQ51B,EAAOw8B,SAAU3G,UAAU,EAAOC,YAAY,KAI3D,OAAO,IAAIH,GAAuB,CAChCnR,OACA4K,UAAWn1B,KAAKm1B,UAChB31B,W,oBAOS,SACXuG,GAEA,IAAIvG,EACA+qB,EACA,eAAgBxkB,GAElBvG,EAAO0gC,GADMiB,GAA2BW,eAChB,CACtBlmB,KAAMsY,GAASnuB,EAAOu8B,WAAWpO,YACjC9C,KAAMrrB,EAAOqrB,KACb+D,UAAWjB,GAASnuB,EAAOovB,UAAUjB,cAEvC3J,EAAO,CACL,CAACoR,OAAQ51B,EAAOy8B,cAAe5G,UAAU,EAAOC,YAAY,GAC5D,CAACF,OAAQ51B,EAAOu8B,WAAY1G,UAAU,EAAMC,YAAY,MAI1Dr8B,EAAO0gC,GADMiB,GAA2BE,OAChB,CACtBlM,UAAWjB,GAASnuB,EAAOovB,UAAUjB,cAEvC3J,EAAO,CAAC,CAACoR,OAAQ51B,EAAOy8B,cAAe5G,UAAU,EAAMC,YAAY,KAGrE,OAAO,IAAIH,GAAuB,CAChCnR,OACA4K,UAAWn1B,KAAKm1B,UAChB31B,W,mCAQwB,SAC1BuG,GAEA,IACMvG,EAAO0gC,GADAiB,GAA2BI,eACV,CAC5B3lB,KAAMsY,GAASnuB,EAAOu8B,WAAWpO,YACjC9C,KAAMrrB,EAAOqrB,KACb8Q,SAAUn8B,EAAOm8B,SACjBC,MAAOp8B,EAAOo8B,MACdhN,UAAWjB,GAASnuB,EAAOovB,UAAUjB,cAEnC3J,EAAO,CACT,CAACoR,OAAQ51B,EAAOq8B,WAAYxG,UAAU,EAAMC,YAAY,GACxD,CAACF,OAAQ51B,EAAOs8B,iBAAkBzG,UAAU,EAAOC,YAAY,IAMjE,OAJI91B,EAAOu8B,YAAcv8B,EAAOq8B,YAC9B7X,EAAKvlB,KAAK,CAAC22B,OAAQ51B,EAAOu8B,WAAY1G,UAAU,EAAMC,YAAY,IAG7D,IAAIH,GAAuB,CAChCnR,OACA4K,UAAWn1B,KAAKm1B,UAChB31B,W,gCAOqB,SACvBuG,GAEA,IAAMC,EAAc,IAAI81B,GACpB,eAAgB/1B,GAAU,SAAUA,EACtCC,EAAYsV,IACV2mB,EAAcQ,sBAAsB,CAClCL,WAAYr8B,EAAOq8B,WACnBC,iBAAkBt8B,EAAO28B,YACzBJ,WAAYv8B,EAAOu8B,WACnBlR,KAAMrrB,EAAOqrB,KACb8Q,SAAUn8B,EAAOm8B,SACjBC,MAAO5B,GACPpL,UAAWn1B,KAAKm1B,aAIpBnvB,EAAYsV,IACV2mB,EAAcU,cAAc,CAC1BP,WAAYr8B,EAAOq8B,WACnBC,iBAAkBt8B,EAAO28B,YACzBR,SAAUn8B,EAAOm8B,SACjBC,MAAO5B,GACPpL,UAAWn1B,KAAKm1B,aAKtB,IAAMyN,EAAa,CACjBF,YAAa38B,EAAO28B,YACpBjC,iBAAkB16B,EAAO06B,kBAI3B,OADAz6B,EAAYsV,IAAItb,KAAK6iC,gBAAgBD,IAC9B58B,I,6BAMa,SACpBD,GAEA,IACMvG,EAAO0gC,GADAiB,GAA2BO,uBACV,CAC5BoB,WAAY5O,GAASnuB,EAAO06B,iBAAiBvM,cAEzC6O,EAAkB,CACtBxY,KAAM,CACJ,CAACoR,OAAQ51B,EAAO28B,YAAa9G,UAAU,EAAOC,YAAY,GAC1D,CACEF,OAAQwD,GACRvD,UAAU,EACVC,YAAY,GAEd,CAACF,OAAQyD,GAAoBxD,UAAU,EAAOC,YAAY,IAE5D1G,UAAWn1B,KAAKm1B,UAChB31B,QAEF,OAAO,IAAIk8B,GAAuBqH,K,0BAMjB,SAACh9B,GAClB,IACMvG,EAAO0gC,GADAiB,GAA2BK,qBAElCuB,EAAkB,CACtBxY,KAAM,CACJ,CAACoR,OAAQ51B,EAAO28B,YAAa9G,UAAU,EAAOC,YAAY,GAC1D,CACEF,OAAQwD,GACRvD,UAAU,EACVC,YAAY,GAEd,CAACF,OAAQ51B,EAAO06B,iBAAkB7E,UAAU,EAAMC,YAAY,IAEhE1G,UAAWn1B,KAAKm1B,UAChB31B,QAEF,OAAO,IAAIk8B,GAAuBqH,K,2BAMhB,SAACh9B,GACnB,IACMvG,EAAO0gC,GADAiB,GAA2BM,qBACV,CAACS,SAAUn8B,EAAOm8B,WAEhD,OAAO,IAAIxG,GAAuB,CAChCnR,KAAM,CACJ,CAACoR,OAAQ51B,EAAO28B,YAAa9G,UAAU,EAAOC,YAAY,GAC1D,CAACF,OAAQ51B,EAAOw8B,SAAU3G,UAAU,EAAOC,YAAY,GACvD,CACEF,OAAQwD,GACRvD,UAAU,EACVC,YAAY,GAEd,CACEF,OAAQyD,GACRxD,UAAU,EACVC,YAAY,GAEd,CAACF,OAAQ51B,EAAO06B,iBAAkB7E,UAAU,EAAMC,YAAY,IAEhE1G,UAAWn1B,KAAKm1B,UAChB31B,W,4BAQiB,SAACuG,GACpB,IACMvG,EAAO0gC,GADAiB,GAA2BQ,sBACV,CAC5BmB,WAAY5O,GAASnuB,EAAOi9B,oBAAoB9O,cAGlD,OAAO,IAAIwH,GAAuB,CAChCnR,KAAM,CACJ,CAACoR,OAAQ51B,EAAO28B,YAAa9G,UAAU,EAAOC,YAAY,GAC1D,CAACF,OAAQ51B,EAAO06B,iBAAkB7E,UAAU,EAAMC,YAAY,IAEhE1G,UAAWn1B,KAAKm1B,UAChB31B,W,sBAOW,SACbuG,GAEA,IAAIvG,EACA+qB,EACA,eAAgBxkB,GAElBvG,EAAO0gC,GADMiB,GAA2BU,iBAChB,CACtBjmB,KAAMsY,GAASnuB,EAAOu8B,WAAWpO,YACjC9C,KAAMrrB,EAAOqrB,KACb+Q,MAAOp8B,EAAOo8B,MACdhN,UAAWjB,GAASnuB,EAAOovB,UAAUjB,cAEvC3J,EAAO,CACL,CAACoR,OAAQ51B,EAAOy8B,cAAe5G,UAAU,EAAOC,YAAY,GAC5D,CAACF,OAAQ51B,EAAOu8B,WAAY1G,UAAU,EAAMC,YAAY,MAI1Dr8B,EAAO0gC,GADMiB,GAA2BS,SAChB,CACtBO,MAAOp8B,EAAOo8B,QAEhB5X,EAAO,CAAC,CAACoR,OAAQ51B,EAAOy8B,cAAe5G,UAAU,EAAMC,YAAY,KAGrE,OAAO,IAAIH,GAAuB,CAChCnR,OACA4K,UAAWn1B,KAAKm1B,UAChB31B,a,KA7SOyiC,GASJ9M,UAAuB,IAAIpuB,GAChC,oCC3tBJ,IAKak8B,G,WAIXziC,aAAc,oB,4DAaY,SAACu4B,GACzB,OACE,GACC17B,KAAK6lC,KAAKnK,EAAakK,EAAOE,WAC7B,EACA,K,mEAcW,WACfrF,EACAsF,EACAC,EACAlO,EACA31B,GALe,2HAQes+B,EAAWwF,kCACrC9jC,EAAK1B,QATM,cAQPylC,EARO,gBAaazF,EAAW0F,eACnCH,EAAQ39B,UACR,aAfW,UAaP+9B,EAbO,OAkBTz9B,EAAkC,KAClB,OAAhBy9B,EAnBS,qBAoBPA,EAAYC,WApBL,wBAqBTjH,QAAQlT,MAAM,sDArBL,mBAsBF,GAtBE,QAyBPka,EAAYjkC,KAAK1B,SAAW0B,EAAK1B,SACnCkI,EAAcA,GAAe,IAAI81B,IACrBxgB,IACV2mB,GAAc0B,SAAS,CACrBnB,cAAea,EAAQ39B,UACvBy8B,MAAO3iC,EAAK1B,UAKb2lC,EAAYG,MAAM7nB,OAAOoZ,KAC5BnvB,EAAcA,GAAe,IAAI81B,IACrBxgB,IACV2mB,GAAcxhC,OAAO,CACnB+hC,cAAea,EAAQ39B,UACvByvB,eAKFsO,EAAYvB,SAAWqB,IACzBv9B,EAAcA,GAAe,IAAI81B,IACrBxgB,IACV2mB,GAAc4B,SAAS,CACrBzB,WAAYgB,EAAM19B,UAClB68B,SAAUc,EAAQ39B,UAClBw8B,SAAUqB,EAAgBE,EAAYvB,YAnDjC,wBAwDXl8B,GAAc,IAAI81B,IAAcxgB,IAC9B2mB,GAAcU,cAAc,CAC1BP,WAAYgB,EAAM19B,UAClB28B,iBAAkBgB,EAAQ39B,UAC1Bw8B,SAAUqB,EAAgB,EAAIA,EAAgB,EAC9CpB,MAAO3iC,EAAK1B,OACZq3B,eA9DO,WAqEO,OAAhBnvB,EArES,kCAsELs5B,GACJxB,EACA93B,EACA,CAACo9B,EAAOC,GACR,CACE3D,WAAY,cA3EL,QAiFToE,EAAa1N,UAQjB,CACAA,OAAiB,eACjBA,OAAiB,UACjBA,OAAiB,eACjBA,OAAiB,sBACjBA,OACEA,MAAgB,QAChBA,UAAoBA,UAAqB,GACzC,WAIE+M,EAAYF,EAAOE,UACrBpzB,EAAS,EACTzR,EAAQkB,EACRgJ,EAAe,GAxGJ,aAyGRlK,EAAMR,OAAS,GAzGP,oBA0GPmR,EAAQ3Q,EAAMG,MAAM,EAAG0kC,GACvB3jC,EAAOkK,SAAOurB,MAAMkO,EAAY,IACtCW,EAAWvkC,OACT,CACEo5B,YAAa,EACb5oB,SACAd,MAAOA,EACP5N,YAAa,EACb0iC,mBAAoB,GAEtBvkC,GAGIwG,GAAc,IAAI81B,IAAcxgB,IAAI,CACxCiP,KAAM,CAAC,CAACoR,OAAQ0H,EAAQ39B,UAAWk2B,UAAU,EAAMC,YAAY,IAC/D1G,YACA31B,SAEFgJ,EAAaxD,KACXs6B,GAA0BxB,EAAY93B,EAAa,CAACo9B,EAAOC,GAAU,CACnE3D,WAAY,gBAKZ5B,EAAWkG,aAAa70B,SAAS,cAnIxB,wBAoIiB,EApIjB,UAqIL4wB,GAAM,KArID,QAwIbhwB,GAAUozB,EACV7kC,EAAQA,EAAMG,MAAM0kC,GAzIP,yCA2IT1+B,QAAQw/B,IAAIz7B,GA3IH,eA+IPs7B,EAAa1N,UAA2C,CAC5DA,OAAiB,iBAGb52B,EAAOkK,SAAOurB,MAAM6O,EAAWl0B,MACrCk0B,EAAWvkC,OACT,CACEo5B,YAAa,GAEfn5B,GAGIwG,GAAc,IAAI81B,IAAcxgB,IAAI,CACxCiP,KAAM,CACJ,CAACoR,OAAQ0H,EAAQ39B,UAAWk2B,UAAU,EAAMC,YAAY,GACxD,CAACF,OAAQyD,GAAoBxD,UAAU,EAAOC,YAAY,IAE5D1G,YACA31B,SAjKW,UAmKP8/B,GACJxB,EACA93B,EACA,CAACo9B,EAAOC,GACR,CACE3D,WAAY,cAxKH,kCA8KR,GA9KQ,4C,sEApCNuD,GASJE,UAdUpN,ICXkB,IAAIhvB,GACvC,+C,ICREm9B,GAAc1oC,OAAO8E,UAAUrC,SAC/BkmC,GAAU3oC,OAAO+uB,MAAQ,SAASlqB,GACpC,IAAIkqB,EAAO,GACX,IAAK,IAAIhf,KAAQlL,EAChBkqB,EAAKvlB,KAAKuG,GAEX,OAAOgf,GAGT,SAAS7C,GAAUZ,EAAKsd,GACvB,IAAIpmC,EAAG2mB,EAAKtlB,EAAKkrB,EAAMzF,EAAKuf,EAASC,EACrC,IAAY,IAARxd,EACH,MAAO,OAER,IAAY,IAARA,EACH,MAAO,QAER,cAAeA,GACd,IAAK,SACJ,GAAY,OAARA,EACH,OAAO,KACD,GAAIA,EAAIgO,QAAgC,oBAAfhO,EAAIgO,OACnC,OAAOpN,GAAUZ,EAAIgO,SAAUsP,GAG/B,GAAc,oBADdE,EAAQJ,GAAY3jC,KAAKumB,IACO,CAG/B,IAFAznB,EAAM,IACNslB,EAAMmC,EAAIhpB,OAAS,EACfE,EAAI,EAAGA,EAAI2mB,EAAK3mB,IACnBqB,GAAOqoB,GAAUZ,EAAI9oB,IAAI,GAAQ,IAKlC,OAHI2mB,GAAO,IACVtlB,GAAOqoB,GAAUZ,EAAI9oB,IAAI,IAEnBqB,EAAM,IACP,GAAc,oBAAVilC,EAA6B,CAMvC,IAHA3f,GADA4F,EAAO4Z,GAAQrd,GAAKmW,QACTn/B,OACXuB,EAAM,GACNrB,EAAI,EACGA,EAAI2mB,QAGMvkB,KADhBikC,EAAU3c,GAAUZ,EADpBhC,EAAMyF,EAAKvsB,KACmB,MAEzBqB,IACHA,GAAO,KAERA,GAAOooB,KAAKC,UAAU5C,GAAO,IAAMuf,GAEpCrmC,IAED,MAAO,IAAMqB,EAAM,IAEnB,OAAOooB,KAAKC,UAAUZ,GAGzB,IAAK,WACL,IAAK,YACJ,OAAOsd,EAAc,UAAOhkC,EAC7B,IAAK,SACJ,OAAOqnB,KAAKC,UAAUZ,GACvB,QACC,OAAOyd,SAASzd,GAAOA,EAAM,M,OAIf,SAASA,GACzB,IAAI0d,EAAY9c,GAAUZ,GAAK,GAC/B,QAAkB1mB,IAAdokC,EACH,MAAO,GAAIA,GCnEb,SAASC,GAAc51B,GAErB,IADA,IAAI41B,EAAgB,EACb51B,EAAI,GACTA,GAAK,EACL41B,IAEF,OAAOA,E,IAqBIC,G,WAYXlkC,WACEmkC,EACAC,EACAC,EACAC,EACAC,GACA,yBAhBKJ,mBAgBL,OAdKC,8BAcL,OAZKC,YAYL,OAVKC,sBAUL,OARKC,qBAQL,EACA/kC,KAAK2kC,cAAgBA,EACrB3kC,KAAK4kC,yBAA2BA,EAChC5kC,KAAK6kC,OAASA,EACd7kC,KAAK8kC,iBAAmBA,EACxB9kC,KAAK+kC,gBAAkBA,E,4CAGzBC,SAASC,GACP,OAAOjlC,KAAKklC,qBAAqBD,GAAM,K,kCAGzCC,SAAqBD,GACnB,GAAIA,EAAOjlC,KAAK+kC,gBAAiB,CAC/B,IAAMI,EACJV,GAjDI,KADY51B,EAkDao2B,EA/DN,GA+DsC,GAjD/C,GACpBp2B,IACAA,GAAKA,GAAK,EACVA,GAAKA,GAAK,EACVA,GAAKA,GAAK,EACVA,GAAKA,GAAK,EACVA,GAAKA,GAAK,GAEC,GADXA,GAAKA,GAAK,MA2CJ41B,GAhEuB,IAiEvB,EAIF,MAAO,CAACU,EADUF,GADDjlC,KAAKolC,gBAAgBD,GAnEb,KAuEzB,IA1DkBt2B,EA0DZw2B,EAAkBJ,EAAOjlC,KAAK+kC,gBAC9BO,EAAmBjoC,KAAKC,MAAM+nC,EAAkBrlC,KAAK2kC,eAG3D,MAAO,CAFO3kC,KAAK8kC,iBAAmBQ,EACpBD,EAAkBrlC,KAAK2kC,iB,iCAK7CY,SAAoBJ,GAClB,OAAIA,GAASnlC,KAAK8kC,iBAhFS,IAiFjBznC,KAAK0U,IAAI,EAAGozB,GAAS,IAG1BA,EAAQnlC,KAAK8kC,kBAAoB9kC,KAAK2kC,cACvC3kC,KAAK+kC,kB,gCAKXS,SAAmBL,GACjB,OAAOnlC,KAAKulC,oBAAoBJ,GAASnlC,KAAKolC,gBAAgBD,GAAS,I,6BAGzEC,SAAgBD,GACd,OAAIA,EAAQnlC,KAAK8kC,iBACRznC,KAAK0U,IAAI,EAAGozB,EAAQV,GAhGF,KAkGlBzkC,KAAK2kC,kB,KClGLc,G,kDAGXjlC,WAAYI,EAAiB8kC,GAAiB,kCAC5C,cAAM9kC,IAHR8kC,UAE8C,EAG5C,EAAKA,KAAOA,EAHgC,E,mCAHNhoC,QAiC7BioC,G,kDAGXnlC,aAMEolC,GACA,MALEz+B,EAKF,EALEA,KACAvG,EAIF,EAJEA,QACApB,EAGF,EAHEA,KAGF,4BACA,cAAuB,MAAjBomC,YAA2BA,EAA3BA,aAA6ChlC,GAAYA,IAVjEuG,UASE,IARF3H,UAQE,EAEA,EAAK2H,KAAOA,EACZ,EAAK3H,KAAOA,EACZ,EAAK+L,KAAO,qBAJZ,E,mCAVoC7N,QC9BxC,GAAemoC,WAAWC,MCmB1B,I,GAEaC,G,WAIXvlC,WAAYgM,GAAqC,yBAHjDsY,SAGiD,OAFjD3gB,WAEiD,EAC/CnE,KAAK8kB,IAAMtY,EAAKsY,IAChB9kB,KAAKmE,MAAQqI,EAAKrI,M,4CAGpB6hC,WACE,IAAMC,EAAU,YAAM,KAAM,GAC5B,OAAOjmC,KAAKmE,MAAM+hC,mBAAqBD,K,0BAGvB,SAACE,GACjB,IAAM1I,ECnBH,SACLvV,EACA1oB,GAEA,IAAIm1B,EACJ,IACEA,EAAUzM,EAAK5X,OAAOtJ,OAAOxH,GAC7B,MAAOm2B,GACP,MAAM,IAAIj4B,MAAM,wBAA0Bi4B,GAG5C,GAAIhB,EAAQyR,YAAcle,EAAK4P,MAC7B,MAAM,IAAIp6B,MAAJ,sDAC2Ci3B,EAAQyR,UADnD,eACmEle,EAAK4P,QAIhF,OAAOnD,EDEQ0R,CAAWC,GAAuBH,GAEzCI,EAAyBJ,EAAYroC,OAnBhB,GAoB3ByR,GAAOg3B,GAA0B,EAAG,2BACpCh3B,GAAOg3B,EAAyB,KAAO,EAAG,2BAE1C,IAAMC,EAAyBD,EAAyB,GACjDE,EAAarQ,UAAoD,CACtEA,OAAiBzmB,KAAoB62B,EAAwB,eAC5Dx/B,OAAOm/B,EAAY1nC,MA1BK,KAwBpBgoC,UAIP,MAAO,CACLP,iBAAkBzI,EAAKyI,iBACvBQ,iBAAkBjJ,EAAKiJ,iBACvBC,2BAA4BlJ,EAAKmJ,uBACjCC,UAC4B,IAA1BpJ,EAAKoJ,UAAU/oC,OACX,IAAIiJ,GAAU02B,EAAKoJ,UAAU,SAC7BzmC,EACNqmC,UAAWA,EAAUvoB,KAAIsX,YAAO,OAAI,IAAIzuB,GAAUyuB,W,KAKlD8Q,GAAwB,CAC5BxO,MAAO,EACPxnB,OAAQ8lB,UAML,CACDA,OAAiB,aACjBwK,GAAI,oBACJxK,QAAkB,oBAClBA,MAAgB,0BAChBA,QACAA,OACEzmB,KACAymB,UAAoBA,SAAoB,GACxC,gBEhFA0Q,GAAS,6CCsDf,IAAMC,GAAsBxe,GAC1BlZ,GAAStI,IACTqjB,MACAzuB,YAAK,OAAI,IAAIoL,GAAUpL,MAGnBqrC,GAAuB1d,GAAM,CAACc,KAAUT,GAAQ,YAEhDsd,GAA2B1e,GAC/BlZ,GAAS3F,UACTs9B,IACArrC,YAAK,OAAI+N,SAAO7L,KAAKlC,EAAM,GAAI,aA8PjC,SAASurC,GACPC,GAEA,IAAIzH,EACAx7B,EACJ,GAAkC,kBAAvBijC,EACTzH,EAAayH,OACR,GAAIA,EAAoB,CAG7BzH,EADEyH,EADKzH,WAGPx7B,EAHA,YACEijC,EADF,IAKF,MAAO,CAACzH,aAAYx7B,UAMtB,SAASkjC,GAAsBvnC,GAC7B,OAAO2W,GAAM,CACX6wB,GAAK,CACHC,QAAS3d,GAAQ,OACjB4d,GAAInd,KACJvqB,WAEFwnC,GAAK,CACHC,QAAS3d,GAAQ,OACjB4d,GAAInd,KACJb,MAAO8d,GAAK,CACVlgC,KAAM0jB,KACNjqB,QAASwpB,KACT5qB,KAAMwqB,GlC/ULR,GAAO,OAAO,kBAAM,YkCqV7B,IAAMge,GAAmBJ,GAAgBvc,MAKzC,SAAS4c,GAAoB/e,GAC3B,OAAOH,GAAO6e,GAAgB1e,GAAS8e,IAAkB7rC,YACvD,MAAI,UAAWA,EACNA,EAEA,2BACFA,GADL,IAEEkE,OAAQqB,GAAOvF,EAAMkE,OAAQ6oB,QASrC,SAASgf,GAA8B/rC,GACrC,OAAO8rC,GACLJ,GAAK,CACHtf,QAASsf,GAAK,CACZpC,KAAMr2B,OAERjT,WAQN,SAASgsC,GAAmChsC,GAC1C,OAAO0rC,GAAK,CACVtf,QAASsf,GAAK,CACZpC,KAAMr2B,OAERjT,UAOJ,SAASisC,GACPC,EACA7kC,GAEA,OAAgB,IAAZ6kC,EACK,IAAIpO,GAAU,CACnB7K,OAAQ5rB,EAAS4rB,OACjB8K,kBAAmB12B,EAASq0B,YAAYnZ,KACtCgd,YAAU,OAAI,IAAIn0B,GAAUm0B,MAE9B5D,gBAAiBt0B,EAASs0B,gBAC1BqC,qBAAsB32B,EAASu0B,aAAarZ,KAAIwZ,YAAE,MAAK,CACrDC,eAAgBD,EAAGC,eACnBC,kBAAmBF,EAAGz0B,SACtBzD,KAAMmG,KAAKqB,OAAO0wB,EAAGl4B,UAEvBo6B,oBAAqB52B,EAAS42B,sBAGzB,IAAIxC,GAAQp0B,GA4PvB,IAAM8kC,GAA6BT,GAAK,CACtCU,WAAYn5B,KACZo5B,eAAgBp5B,KAChBq5B,QAASr5B,KACTs5B,MAAOt5B,KACPu5B,SAAUv5B,OAoBNw5B,GAA2BX,GAC/BnpC,GACEyrB,GACEsd,GAAK,CACHlC,MAAOv2B,KACPy5B,cAAez5B,KACf05B,OAAQ15B,KACR25B,YAAa35B,UAkBf45B,GAAqBnB,GAAK,CAC9BlC,MAAOv2B,KACP65B,UAAW75B,KACX85B,aAAc95B,KACd+5B,aAAc/5B,KACdg6B,YAAa5e,GAASpb,MACtBi6B,iBAAkB7e,GAASpb,QAGvBk6B,GAAyBzB,GAAK,CAClC1C,cAAe/1B,KACfg2B,yBAA0Bh2B,KAC1Bi2B,OAAQnb,KACRob,iBAAkBl2B,KAClBm2B,gBAAiBn2B,OAWbm6B,GAA0B9e,GAAOG,KAAU9rB,GAAMsQ,OAKjDo6B,GAAyBjf,GAASvT,GAAM,CAAC6wB,GAAK,IAAKjd,QAKnD6e,GAAwB5B,GAAK,CACjC1R,IAAKqT,KAMDE,GAA0Bvf,GAAQ,qBAWlCwf,GAAgB9B,GAAK,CACzB,cAAejd,KACf,cAAeJ,GAASpb,QA8BpBw6B,GAAqC1B,GACzCL,GAAK,CACH1R,IAAK5L,GAASvT,GAAM,CAAC6wB,GAAK,IAAKjd,QAC/Bsb,KAAM3b,GAASzrB,GAAM8rB,OACrBnnB,SAAU+mB,GACRD,GACEzrB,GACEyrB,GACEsd,GAAK,CACH3D,WAAYha,KACZka,MAAOxZ,KACP8X,SAAUtzB,KACVpP,KAAMlB,GAAM8rB,MACZif,UAAWrf,GAASpb,YAM9B06B,cAAetf,GAASpb,MACxB26B,WAAYvf,GACVD,GACEsd,GAAK,CACHlS,UAAW/K,KACX5qB,KAAM8pB,GAAM,CAACc,KAAUT,GAAQ,mBAmZnC6f,GAAgC9B,GACpCL,GAAK,CACHoC,WAAYxf,GAAOG,KAAU9rB,GAAMsQ,OACnC86B,MAAOrC,GAAK,CACVsC,UAAW/6B,KACXg7B,SAAUh7B,UAoJhB,IAAMi7B,GAAgCpC,GAAcK,IAK9CgC,GAAwBrC,GAAce,IAKtCuB,GAA4BtC,GAAcqB,IAK1CkB,GAA6BvC,GAAcsB,IAK3CkB,GAAgBxC,GAAc74B,MAmB9Bs7B,GAAqBxC,GACzBL,GAAK,CACH8C,MAAOv7B,KACPw7B,YAAax7B,KACby7B,eAAgBz7B,KAChB07B,uBAAwBhsC,GAAMyoC,OAsB5BwD,GAAoBlD,GAAK,CAC7BiB,OAAQle,KACRogB,SAAUzgB,GAASnb,MACnB67B,SAAU77B,KACV87B,eAAgB1gB,GAASI,QAsBrBugB,GAAgCjD,GACpCppC,GACE+oC,GAAK,CACH7R,QAASuR,GACTuB,OAAQle,KACRogB,SAAUzgB,GAASnb,MACnB67B,SAAU77B,KACV87B,eAAgB1gB,GAASI,UAQzBwgB,GAA0BlD,GAC9BppC,GACE+oC,GAAK,CACH1L,OAAQoL,GACRtP,QAAS4P,GAAK,CACZ3D,WAAYha,KACZka,MAAOmD,GACP7E,SAAUtzB,KACVpP,KAAMynC,GACNoC,UAAWz6B,WAMbi8B,GAA0BxD,GAAK,CACnChE,QAASjZ,KACT0gB,OAAQjgB,KACRsX,MAAOvzB,OAMHm8B,GAAgCrD,GACpCppC,GACE+oC,GAAK,CACH1L,OAAQoL,GACRtP,QAAS4P,GAAK,CACZ3D,WAAYha,KACZka,MAAOmD,GACP7E,SAAUtzB,KACVpP,KAAMqrC,GACNxB,UAAWz6B,WAiBbo8B,GAA8BtD,GAClCppC,GACE+oC,GAAK,CACHnF,SAAUtzB,KACV4mB,QAASuR,OAQTkE,GAAoB5D,GAAK,CAC7B3D,WAAYha,KACZka,MAAOmD,GACP7E,SAAUtzB,KACVpP,KAAMynC,GACNoC,UAAWz6B,OAMPs8B,GAAyB7D,GAAK,CAClC1L,OAAQoL,GACRtP,QAASwT,KAGLE,GAAyB5iB,GAC7B/R,GAAM,CAACnH,GAAS3F,UAASmhC,KACzBr0B,GAAM,CAACwwB,GAAsB6D,MAC7BlvC,YACE,OAAIiC,MAAM2W,QAAQ5Y,GACTuF,GAAOvF,EAAOsrC,IAEdtrC,KAQPyvC,GAA0B/D,GAAK,CACnC3D,WAAYha,KACZka,MAAOmD,GACP7E,SAAUtzB,KACVpP,KAAM2rC,GACN9B,UAAWz6B,OAGPy8B,GAA+BhE,GAAK,CACxC1L,OAAQoL,GACRtP,QAAS2T,KAMLE,GAAwBjE,GAAK,CACjCljC,MAAOqS,GAAM,CACXmT,GAAQ,UACRA,GAAQ,YACRA,GAAQ,cACRA,GAAQ,kBAEV4hB,OAAQ38B,KACR48B,SAAU58B,OAON68B,GAA6ChE,GACjDnpC,GACE+oC,GAAK,CACHhhC,UAAW+jB,KACX6a,KAAMr2B,KACN+mB,IAAKqT,GACL0C,KAAM3hB,GAASK,MACfuhB,UAAW3hB,GAASD,GAASnb,WAQ7Bg9B,GAAmCnE,GACvCnpC,GACE+oC,GAAK,CACHhhC,UAAW+jB,KACX6a,KAAMr2B,KACN+mB,IAAKqT,GACL0C,KAAM3hB,GAASK,MACfuhB,UAAW3hB,GAASD,GAASnb,WAQ7Bi9B,GAA4BxE,GAAK,CACrCyE,aAAcl9B,KACd/O,OAAQ8nC,GAA6BsD,MAMjCc,GAA2B1E,GAAK,CACpC1L,OAAQoL,GACRtP,QAASwT,KAMLe,GAAmC3E,GAAK,CAC5CyE,aAAcl9B,KACd/O,OAAQ8nC,GAA6BoE,MAMjCE,GAAiB5E,GAAK,CAC1B6E,OAAQt9B,KACRq2B,KAAMr2B,KACNu9B,KAAMv9B,OAMFw9B,GAAyB/E,GAAK,CAClCyE,aAAcl9B,KACd/O,OAAQosC,KAiEJI,GAAmB71B,GAAM,CAC7B6wB,GAAK,CACHnf,KAAM1R,GAAM,CACVmT,GAAQ,sBACRA,GAAQ,aACRA,GAAQ,0BACRA,GAAQ,UAEVsb,KAAMr2B,KACN09B,UAAW19B,OAEby4B,GAAK,CACHnf,KAAMyB,GAAQ,eACduiB,OAAQt9B,KACRq2B,KAAMr2B,KACN09B,UAAW19B,OAEby4B,GAAK,CACHnf,KAAMyB,GAAQ,UACdsb,KAAMr2B,KACN09B,UAAW19B,KACX29B,MAAOlF,GAAK,CACVmF,sBAAuB59B,KACvB69B,0BAA2B79B,KAC3B89B,sBAAuB99B,KACvB+9B,wBAAyB/9B,SAG7By4B,GAAK,CACHnf,KAAMyB,GAAQ,QACdsb,KAAMr2B,KACN09B,UAAW19B,KACX+mB,IAAKvL,SAOHwiB,GAA+BvF,GAAK,CACxCyE,aAAcl9B,KACd/O,OAAQwsC,KAMJQ,GAA8BxF,GAAK,CACvCyE,aAAcl9B,KACd/O,OAAQ8nC,GACNnxB,GAAM,CAACyyB,GAAuBC,QAO5B4D,GAAyBzF,GAAK,CAClCyE,aAAcl9B,KACd/O,OAAQ+O,OAGJm+B,GAAoB1F,GAAK,CAC7B1L,OAAQvR,KACR4iB,OAAQjjB,GAASK,MACjB6iB,IAAKljB,GAASK,MACdvkB,IAAKkkB,GAASK,MACdyd,QAAS9d,GAASK,QAGd8iB,GAAwB7F,GAAK,CACjC8F,WAAY/iB,KACZgjB,WAAYhjB,KACZijB,eAAgBz+B,KAChB0+B,iBAAkB5jB,KAClB6jB,aAAcjvC,GAAMgrB,GAAM,CAAC1a,KAAUA,KAAUA,QAC/C4+B,WAAY5+B,KACZ6+B,SAAU7+B,KACV8+B,SAAU3jB,GAASnb,QAMf++B,GAAkBlG,GACtBJ,GAAK,CACHuG,QAAStvC,GAAM4uC,IACfW,WAAYvvC,GAAM4uC,OAIhBY,GAAqBt3B,GAAM,CAC/BmT,GAAQ,aACRA,GAAQ,aACRA,GAAQ,eAGJokB,GAA0B1G,GAAK,CACnCpC,KAAMr2B,KACNo/B,cAAejkB,GAASnb,MACxB+mB,IAAKqT,GACLiF,mBAAoBjkB,GAAS8jB,MAMzBI,GAAgCxG,GACpCppC,GAAMyrB,GAASgkB,MAMXI,GAA6C1G,GAAc74B,MAE3Dw/B,GAA2B/G,GAAK,CACpCnM,WAAY6L,GACZhM,gBAAiBz8B,GAAMsQ,MACvBqsB,gBAAiB38B,GAAMsQ,QAGnBy/B,GAA6BhH,GAAK,CACtC3/B,WAAYpJ,GAAM8rB,MAClBxpB,QAASymC,GAAK,CACZhQ,YAAa/4B,GAAM8rB,MACnBwE,OAAQyY,GAAK,CACXtP,sBAAuBnpB,KACvBqpB,0BAA2BrpB,KAC3BspB,4BAA6BtpB,OAE/B2oB,aAAcj5B,GACZ+oC,GAAK,CACHpkC,SAAU3E,GAAMsQ,MAChBpP,KAAM4qB,KACNuN,eAAgB/oB,QAGpB0oB,gBAAiBlN,KACjBwP,oBAAqB5P,GAAS1rB,GAAM8vC,SAIlCE,GAA0BjH,GAAK,CACnCyD,OAAQjgB,KACRwY,QAASjZ,KACT+K,UAAW4R,KAGPwH,GAAuBlH,GAAK,CAChCpkC,SAAU3E,GAAMyoC,IAChBvnC,KAAM4qB,KACN+K,UAAW4R,KAqBPyH,GAAyBjmB,GAlBL/R,GAAM,CAC9B+3B,GACAD,KAG+B93B,GAAM,CACrC6wB,GAAK,CACHyD,OAAQjgB,KACRwY,QAASjZ,KACT+K,UAAW/K,OAEbid,GAAK,CACHpkC,SAAU3E,GAAM8rB,MAChB5qB,KAAM4qB,KACN+K,UAAW/K,UAObzuB,YACE,OACSuF,GAAOvF,EADZ,aAAcA,EACK4yC,GAEAD,OAQrBG,GAAmCpH,GAAK,CAC5C3/B,WAAYpJ,GAAM8rB,MAClBxpB,QAASymC,GAAK,CACZhQ,YAAa/4B,GACX+oC,GAAK,CACH1L,OAAQoL,GACR5I,OAAQzU,KACR/Y,SAAU+Y,QAGd6N,aAAcj5B,GAAMkwC,IACpBlX,gBAAiBlN,KACjBwP,oBAAqB5P,GAASD,GAASzrB,GAAM8vC,UAI3CM,GAAqBrH,GAAK,CAC9BsH,aAAc//B,KACdggC,KAAMxkB,KACNwZ,MAAO5Z,GAASI,MAChBykB,cAAetE,KAGXuE,GAAwBzH,GAAK,CACjC12B,SAAUrS,GAAMyoC,IAChBgI,SAAUzwC,GAAMyoC,MAMZiI,GAAiC3H,GAAK,CAC1C1R,IAAKqT,GACLiG,IAAKrgC,KACLsgC,kBAAmBllB,GACjBD,GACEzrB,GACE+oC,GAAK,CACHvP,MAAOlpB,KACP2oB,aAAcj5B,GACZ+oC,GAAK,CACHpkC,SAAU3E,GAAMsQ,MAChBpP,KAAM4qB,KACNuN,eAAgB/oB,aAO5BugC,YAAa7wC,GAAMsQ,MACnBwgC,aAAc9wC,GAAMsQ,MACpBygC,YAAarlB,GAASD,GAASzrB,GAAM8rB,QACrCklB,iBAAkBtlB,GAASD,GAASzrB,GAAMowC,MAC1Ca,kBAAmBvlB,GAASD,GAASzrB,GAAMowC,MAC3Cc,gBAAiBxlB,GAAS8kB,MAMtBW,GAAuCpI,GAAK,CAChD1R,IAAKqT,GACLiG,IAAKrgC,KACLsgC,kBAAmBllB,GACjBD,GACEzrB,GACE+oC,GAAK,CACHvP,MAAOlpB,KACP2oB,aAAcj5B,GAAMkwC,SAK5BW,YAAa7wC,GAAMsQ,MACnBwgC,aAAc9wC,GAAMsQ,MACpBygC,YAAarlB,GAASD,GAASzrB,GAAM8rB,QACrCklB,iBAAkBtlB,GAASD,GAASzrB,GAAMowC,MAC1Ca,kBAAmBvlB,GAASD,GAASzrB,GAAMowC,MAC3Cc,gBAAiBxlB,GAAS8kB,MAGtBY,GAA2Bl5B,GAAM,CAACmT,GAAQ,GAAIA,GAAQ,YAKtDgmB,GAAoBlI,GACxB1d,GACEsd,GAAK,CACHjL,UAAWhS,KACXwlB,kBAAmBxlB,KACnBylB,WAAYjhC,KACZpG,aAAclK,GACZ+oC,GAAK,CACHrhC,YAAaqoC,GACb5Q,KAAM1T,GAASilB,IACfnH,QAAS7d,GAAS0lB,OAGtBI,QAAS9lB,GACP1rB,GACE+oC,GAAK,CACH1L,OAAQvR,KACR8X,SAAUtzB,KACV25B,YAAaxe,GAASnb,MACtBmhC,WAAYhmB,GAASK,UAI3BuhB,UAAW5hB,GAASnb,MACpBg6B,YAAa7e,GAASnb,UAUtBohC,GAA6BvI,GACjC1d,GACEsd,GAAK,CACHjL,UAAWhS,KACXwlB,kBAAmBxlB,KACnBylB,WAAYjhC,KACZpG,aAAclK,GACZ+oC,GAAK,CACHrhC,YAAaqoC,GACb5Q,KAAM1T,GAASilB,OAGnBc,QAAS9lB,GACP1rB,GACE+oC,GAAK,CACH1L,OAAQvR,KACR8X,SAAUtzB,KACV25B,YAAaxe,GAASnb,MACtBmhC,WAAYhmB,GAASK,UAI3BuhB,UAAW5hB,GAASnb,UAQpBqhC,GAA8BxI,GAClC1d,GACEsd,GAAK,CACHjL,UAAWhS,KACXwlB,kBAAmBxlB,KACnBylB,WAAYjhC,KACZlH,WAAYpJ,GAAM8rB,MAClBuhB,UAAW5hB,GAASnb,UAQpBshC,GAA0BzI,GAC9B1d,GACEsd,GAAK,CACHpC,KAAMr2B,KACN6uB,KAAMuR,GACNrD,UAAW3hB,GAASD,GAASnb,OAC7B5I,YAAaqoC,GACbxG,QAAS7d,GAAS0lB,QAQlBS,GAAgC1I,GACpC1d,GACEsd,GAAK,CACHpC,KAAMr2B,KACN5I,YAAayoC,GACbhR,KAAM1T,GAAS0lB,IACf9D,UAAW3hB,GAASD,GAASnb,OAC7Bi5B,QAAS7d,GAAS0lB,QAUlBU,GAAwC1I,GAC5CL,GAAK,CACHjL,UAAWhS,KACXsW,cAAe2G,GAAK,CAClBgJ,qBAAsBzhC,UAQtB0hC,GAA8B5I,GAClCL,GAAK,CACHjL,UAAWhS,KACX4R,qBAAsBptB,QAcpB2hC,GAAuC9I,GAC3CnpC,GAXuB+oC,GAAK,CAC5BpC,KAAMr2B,KACN4hC,gBAAiB5hC,KACjB6hC,SAAU7hC,KACV8hC,iBAAkB9hC,SAad+hC,GAA4BjJ,GAChC3d,GACEsd,GAAK,CACH3G,cAAe2G,GAAK,CAClBgJ,qBAAsBzhC,WASxBgiC,GAA0BnJ,GAAcrd,MAKxCymB,GAA2BpJ,GAAcrd,MAkPzC0mB,GAAazJ,GAAK,CACtB1R,IAAKqT,GACLtD,KAAMpnC,GAAM8rB,MACZ/jB,UAAW+jB,OAeP2mB,GAAyB1J,GAAK,CAClCxnC,OAAQ8nC,GAA6BmJ,IACrChF,aAAcl9B,OAiHVoiC,GAAsB,CAC1B,gBAAiB,MAAjB,OAAiB,WAAMzjC,qBAAN,GAAyC,YAM/ClG,G,WA0EX7G,WACEywC,EACA9J,GAEA,IAAI+J,EACAC,EACArL,EACArjC,EACA2uC,EAvxCkBC,EAkxCtB,yBA5EeC,iBA4Ef,OA3EeC,uCA2Ef,OA1EevN,kBA0Ef,OAzEewN,oBAyEf,OAxEeC,gBAwEf,OAvEeC,iBAuEf,OAtEeC,sBAsEf,OArEeC,mBAqEf,OApEeC,wBAAkC,EAoEjD,KAnEeC,uBAEN,KAiET,KAhEeC,yBAEN,KA8DT,KAvDUC,wBAAkC,EAuD5C,KArDeC,0BAAoC,EAqDnD,KApDeC,mBAA6B,EAoD5C,KAnDeC,eAKb,CACFC,gBAAiB,KACjBC,UAAW,EACXC,sBAAuB,GACvBC,oBAAqB,IA0CrB,KAvCuBC,0BAAkD,EAuCzE,KAtCuBC,oDAIrB,GAkCF,KAjCuBC,6CAIrB,GA6BF,KA5BuBC,qBAErB,GA0BF,KAZuBC,gCACvB,IAAI7pB,IAiBAoe,GAAoD,kBAAvBA,EAC/BnnC,KAAKsxC,YAAcnK,EACVA,IACTnnC,KAAKsxC,YAAcnK,EAAmBzH,WACtC1/B,KAAKuxC,kCACHpK,EAAmB0L,iCACrB3B,EAAa/J,EAAmB+J,WAChCC,EAAchK,EAAmBgK,YACjCrL,EAAQqB,EAAmBrB,MAC3BrjC,EAAkB0kC,EAAmB1kC,gBACrC2uC,EAA0BjK,EAAmBiK,yBAG/CpxC,KAAKgkC,aAtzET,SAA2B8O,GACzB,IAAqC,IAAjC,WAAWC,KAAKD,GAClB,MAAM,IAAIz0C,UAAU,qDAEtB,OAAOy0C,EAkzEeE,CAAkB/B,GACtCjxC,KAAKwxC,eAAiBN,GD5mFnB,SAA0BD,GAC/B,IAAMgC,EAAUhC,EAASiC,MAAMpM,IAC/B,GAAe,MAAXmM,EACF,MAAM50C,UAAU,oCAAD,OAAsC4yC,EAAtC,MAEjB,kBAKIgC,EALJ,GAEEE,GAFF,WAGEC,EAHF,KAIEhsB,EAJF,KAMMisB,EAAWpC,EAASqC,WAAW,UAAY,OAAS,MACpDC,EACa,MAAjBH,EAAwB,KAAOx0C,SAASw0C,EAAc30C,MAAM,GAAI,IAC5D+0C,EAOS,MAAbD,EAAoB,GAApBA,WAA6BA,EAAY,GAC3C,MAAO,GAAP,OAAUF,EAAV,aAAuBF,GAAvB,OAAiCK,GAAjC,OAAiDpsB,GCslFXqsB,CAAiBxC,GAErDjxC,KAAKyxC,WAn4CT,SACEiC,EACAvC,EACAwC,EACAlxC,EACA2uC,GAEA,IAMIwC,EANE9N,EAAQ6N,GAA4BE,GAQtCpxC,IACFmxC,EAAmB,iDAAG,WAAOE,EAAMC,GAAb,iGACY,IAAItvC,SAClC,SAACC,EAASsvC,GACR,IACEvxC,EAAgBqxC,EAAMC,GAAM,SAACE,EAAcC,GAAf,OAC1BxvC,EAAQ,CAACuvC,EAAcC,OAEzB,MAAO3qB,GACPyqB,EAAOzqB,OARO,cACd4qB,EADc,gBAYPrO,EAAK,WAALA,cAASqO,IAZF,mFAAH,yDAgBrB,IAAMC,EAAgB,IAAIC,KAAJ,iDAAc,WAAOtxC,EAASuxC,GAAhB,yFAE5BhsB,EAAU,CACdpmB,OAAQ,OACRqyC,KAAMxxC,EACNyxC,WAJyDp0C,EAKzDq0C,QAASj5C,OAAOiF,OACd,CACE,eAAgB,oBAElB0wC,GAAe,GACfH,KAX8B,SAgB5B0D,EAA4B,EAE5BC,EAAW,IAlBiB,WAoB1Bf,EApB0B,iCAqBhBA,EAAoBF,EAAKprB,GArBT,OAqB5BvmB,EArB4B,gDAuBhB+jC,EAAM4N,EAAKprB,GAvBK,QAuB5BvmB,EAvB4B,kBA0BX,MAAfA,EAAI+9B,OA1BsB,yDA6BE,IAA5BsR,EA7B0B,wDAiCI,KADlCsD,GAA6B,GAhCC,4DAoC9BjY,QAAQmY,IAARnY,gCAC2B16B,EAAI+9B,OAD/BrD,YACyC16B,EAAI8yC,WAD7CpY,6BAC4EkY,EAD5ElY,gBApC8B,UAuCxBsD,GAAM4U,GAvCkB,QAwC9BA,GAAY,EAxCkB,gDA2Cb5yC,EAAI+yC,OA3CS,QA2C1BA,EA3C0B,OA4C5B/yC,EAAIgzC,GACNT,EAAS,KAAMQ,GAEfR,EAAS,IAAI52C,MAAJ,UAAaqE,EAAI+9B,OAAjB,YAA2B/9B,EAAI8yC,WAA/B,aAA8CC,KA/CzB,kDAkD5Bnf,gBAAej4B,OAAO42C,EAAS,EAAD,IAlDF,sGAAd,wDAsDnB,IAEH,OAAOF,EA2yCaY,CAChB/D,EACAE,EACArL,EACArjC,EACA2uC,GAEFpxC,KAAK0xC,aA/yCiBL,EA+yCcrxC,KAAKyxC,WA9yCpC,SAACvvC,EAAQsK,GACd,OAAO,IAAI/H,SAAQ,SAACC,EAASsvC,GAC3B3C,EAAOtuC,QAAQb,EAAQsK,GAAM,SAACmpB,EAAU3yB,GAClC2yB,EACFqe,EAAOre,GAGTjxB,EAAQ1B,WAwyCZhD,KAAK2xC,iBAlyCT,SAA+BN,GAC7B,OAAQ4D,YACN,OAAO,IAAIxwC,SAAQ,SAACC,EAASsvC,GAEH,IAApBiB,EAASn3C,QAAc4G,EAAQ,IAEnC,IAAMwwC,EAAQD,EAAS/2B,KAAKnY,YAC1B,OAAOsrC,EAAOtuC,QAAQgD,EAAOovC,WAAYpvC,EAAOyG,SAGlD6kC,EAAOtuC,QAAQmyC,GAAO,SAACvf,EAAU3yB,GAC3B2yB,EACFqe,EAAOre,GAGTjxB,EAAQ1B,UAmxCYoyC,CAAsBp1C,KAAKyxC,YAEnDzxC,KAAK4xC,cAAgB,IAAIyD,UAAmBr1C,KAAKwxC,eAAgB,CAC/D8D,aAAa,EACbC,eAAgBC,MAElBx1C,KAAK4xC,cAAc1oC,GAAG,OAAQlJ,KAAKy1C,UAAU7tC,KAAK5H,OAClDA,KAAK4xC,cAAc1oC,GAAG,QAASlJ,KAAK01C,WAAW9tC,KAAK5H,OACpDA,KAAK4xC,cAAc1oC,GAAG,QAASlJ,KAAK21C,WAAW/tC,KAAK5H,OACpDA,KAAK4xC,cAAc1oC,GACjB,sBACAlJ,KAAK41C,yBAAyBhuC,KAAK5H,OAErCA,KAAK4xC,cAAc1oC,GACjB,sBACAlJ,KAAK61C,gCAAgCjuC,KAAK5H,OAE5CA,KAAK4xC,cAAc1oC,GACjB,mBACAlJ,KAAK81C,sBAAsBluC,KAAK5H,OAElCA,KAAK4xC,cAAc1oC,GACjB,2BACAlJ,KAAK+1C,6BAA6BnuC,KAAK5H,OAEzCA,KAAK4xC,cAAc1oC,GACjB,wBACAlJ,KAAKg2C,2BAA2BpuC,KAAK5H,OAEvCA,KAAK4xC,cAAc1oC,GACjB,mBACAlJ,KAAKi2C,sBAAsBruC,KAAK5H,OAElCA,KAAK4xC,cAAc1oC,GACjB,mBACAlJ,KAAKk2C,sBAAsBtuC,KAAK5H,O,4CAOtB,WACZ,OAAOA,KAAKsxC,c,uBAMC,WACb,OAAOtxC,KAAKgkC,e,mFAMY,WACxBt+B,EACAyhC,GAFwB,oGAMtBD,GAA4BC,GADvBzH,EALiB,EAKjBA,WAAYx7B,EALK,EAKLA,OAEbsI,EAAOxM,KAAKm2C,WAChB,CAACzwC,EAAUkE,YACX81B,OACAt/B,EACA8D,GAXsB,SAaAlE,KAAK0xC,YAAY,aAAcllC,GAb/B,UAalB4pC,EAbkB,SAepB,UADEr0C,EAAMb,GAAOk1C,EAAW1O,GAAwB94B,SAd9B,sBAgBhB,IAAI+2B,GACR5jC,EAAIwnB,MADA,oCAEyB7jB,EAAUkE,aAlBnB,gCAqBjB7H,EAAIlC,QArBa,gD,kIA2BV,WACd6F,EACAyhC,GAFc,2FAIDnnC,KAAKq2C,qBAAqB3wC,EAAWyhC,GAC/CmP,MAAK/8B,YAAC,OAAIA,EAAE5d,SACZ46C,OAAM7hC,YACL,MAAM,IAAIhX,MACR,oCAAsCgI,EAAUkE,WAAa,KAAO8K,MAR5D,wF,oIAgBE,WAACuwB,GAAD,mGACQjlC,KAAK0xC,YAAY,eAAgB,CAACzM,IAD1C,UACVmR,EADU,SAGZ,UADEr0C,EAAMb,GAAOk1C,EAAW3O,GAAc1d,GAASnb,UAFrC,sBAIR,IAAI+2B,GACR5jC,EAAIwnB,MADA,4CAEiC0b,IANzB,gCASTljC,EAAIlC,QATK,gD,0IAgBQ,gHACAG,KAAK0xC,YAAY,oBAAqB,IADtC,UAClB0E,EADkB,SAGpB,UADEr0C,EAAMb,GAAOk1C,EAAW3O,GAAc74B,SAFpB,sBAIhB,IAAI+2B,GACR5jC,EAAIwnB,MACJ,qCANoB,gCASjBxnB,EAAIlC,QATa,gD,2IAeE,gHACFG,KAAK0xC,YAAY,yBAA0B,IADzC,UACpB0E,EADoB,SAGtB,UADEr0C,EAAMb,GAAOk1C,EAAWnM,MAFJ,sBAIlB,IAAItE,GACR5jC,EAAIwnB,MACJ,uCANsB,gCASnBxnB,EAAIlC,QATe,gD,8HAeb,WACbqE,GADa,4FAGTsyC,EAA6B,GAE/BA,EADoB,kBAAXtyC,EACG,CAACw7B,WAAYx7B,GAChBA,EACG,2BACPA,GADI,IAEPw7B,WAAax7B,GAAUA,EAAOw7B,YAAe1/B,KAAK0/B,aAGxC,CACVA,WAAY1/B,KAAK0/B,YAbR,SAiBW1/B,KAAK0xC,YAAY,YAAa,CAAC8E,IAjB1C,UAiBPJ,EAjBO,SAmBT,UADEr0C,EAAMb,GAAOk1C,EAAWlM,MAlBjB,sBAoBL,IAAIvE,GAAmB5jC,EAAIwnB,MAAO,wBApB7B,gCAsBNxnB,EAAIlC,QAtBE,gD,oIA4BK,WAClB42C,EACA/W,GAFkB,4FAIZlzB,EAAOxM,KAAKm2C,WAAW,CAACM,EAAiB7sC,YAAa81B,GAJ1C,SAKM1/B,KAAK0xC,YAAY,iBAAkBllC,GALzC,UAKZ4pC,EALY,SAOd,UADEr0C,EAAMb,GAAOk1C,EAAW1O,GAAwB6C,OANpC,sBAQV,IAAI5E,GAAmB5jC,EAAIwnB,MAAO,8BARxB,gCAUXxnB,EAAIlC,QAVO,gD,8IAgBQ,WAC1B62C,EACAhX,GAF0B,4FAIpBlzB,EAAOxM,KAAKm2C,WAAW,CAACO,EAAa9sC,YAAa81B,GAJ9B,SAKF1/B,KAAK0xC,YAAY,yBAA0BllC,GALzC,UAKpB4pC,EALoB,SAOtB,UADEr0C,EAAMb,GAAOk1C,EAAW1O,GAAwB6C,OAN5B,sBAQlB,IAAI5E,GACR5jC,EAAIwnB,MACJ,uCAVsB,gCAanBxnB,EAAIlC,QAbe,gD,+IAqBC,WAC3B82C,EACApe,EACA4O,GAH2B,sGAUzBD,GAA4BC,GADvBzH,EAToB,EASpBA,WAAYx7B,EATQ,EASRA,OAEf0yC,EAAe,CAACD,EAAa/sC,YAC7B,SAAU2uB,EACZqe,EAAM5xC,KAAK,CAAC4pC,KAAMrW,EAAOqW,KAAKhlC,aAE9BgtC,EAAM5xC,KAAK,CAACmwB,UAAWoD,EAAOpD,UAAUvrB,aAGpC4C,EAAOxM,KAAKm2C,WAAWS,EAAOlX,EAAY,SAAUx7B,GAlB/B,SAmBHlE,KAAK0xC,YAAY,0BAA2BllC,GAnBzC,UAmBrB4pC,EAnBqB,SAqBvB,UADEr0C,EAAMb,GAAOk1C,EAAWxL,MApBH,uBAsBnB,IAAIjF,GACR5jC,EAAIwnB,MADA,wDAE6CotB,EAAa/sC,aAxBvC,iCA2BpB7H,EAAIlC,QA3BgB,iD,uJAmCM,WACjC82C,EACApe,EACAmH,GAHiC,8FAS7BkX,EAAe,CAACD,EAAa/sC,YAC7B,SAAU2uB,EACZqe,EAAM5xC,KAAK,CAAC4pC,KAAMrW,EAAOqW,KAAKhlC,aAE9BgtC,EAAM5xC,KAAK,CAACmwB,UAAWoD,EAAOpD,UAAUvrB,aAGpC4C,EAAOxM,KAAKm2C,WAAWS,EAAOlX,EAAY,cAhBf,SAiBT1/B,KAAK0xC,YAAY,0BAA2BllC,GAjBnC,UAiB3B4pC,EAjB2B,SAmB7B,UADEr0C,EAAMb,GAAOk1C,EAAWrL,MAlBG,sBAoBzB,IAAIpF,GACR5jC,EAAIwnB,MADA,wDAE6CotB,EAAa/sC,aAtBjC,gCAyB1B7H,EAAIlC,QAzBsB,iD,4IA+BX,WACtBqE,GADsB,8FAGhB2yC,EAHgB,YAAC,eAIlB3yC,GAJiB,IAKpBw7B,WAAax7B,GAAUA,EAAOw7B,YAAe1/B,KAAK0/B,aAE9ClzB,EAAOqqC,EAAIte,QAAUse,EAAInX,WAAa,CAACmX,GAAO,GAP9B,SAQE72C,KAAK0xC,YAAY,qBAAsBllC,GARzC,UAQhB4pC,EARgB,SAUlB,UADEr0C,EAAMb,GAAOk1C,EAAWpL,MATR,sBAWd,IAAIrF,GAAmB5jC,EAAIwnB,MAAO,kCAXpB,gCAafxnB,EAAIlC,QAbW,gD,6IAoBK,WAC3Bi3C,EACApX,GAF2B,4FAIrBlzB,EAAOxM,KAAKm2C,WAAW,CAACW,EAAYltC,YAAa81B,GAJ5B,SAKH1/B,KAAK0xC,YAAY,0BAA2BllC,GALzC,UAKrB4pC,EALqB,SAOvB,UADEr0C,EAAMb,GAAOk1C,EAAWzL,MANH,sBAQnB,IAAIhF,GACR5jC,EAAIwnB,MACJ,wCAVuB,gCAapBxnB,EAAIlC,QAbgB,gD,gJAmBC,WAC5B6F,EACAyhC,GAF4B,oGAK1BD,GAA4BC,GADvBzH,EAJqB,EAIrBA,WAAYx7B,EAJS,EAITA,OAEbsI,EAAOxM,KAAKm2C,WAChB,CAACzwC,EAAUkE,YACX81B,EACA,SACAx7B,GAV0B,SAYJlE,KAAK0xC,YAAY,iBAAkBllC,GAZ/B,UAYtB4pC,EAZsB,SAiBxB,UAJEr0C,EAAMb,GACVk1C,EACA1O,GAAwB3d,GAASkhB,QAfP,sBAkBpB,IAAItF,GACR5jC,EAAIwnB,MADA,2CAEgC7jB,EAAUkE,aApBtB,gCAuBrB7H,EAAIlC,QAvBiB,gD,4IA6BJ,WACxB6F,EACAyhC,GAFwB,oGAOtBD,GAA4BC,GADvBzH,EANiB,EAMjBA,WAAYx7B,EANK,EAMLA,OAEbsI,EAAOxM,KAAKm2C,WAChB,CAACzwC,EAAUkE,YACX81B,EACA,aACAx7B,GAZsB,SAcAlE,KAAK0xC,YAAY,iBAAkBllC,GAdnC,UAclB4pC,EAdkB,SAmBpB,UAJEr0C,EAAMb,GACVk1C,EACA1O,GAAwB3d,GAASqhB,QAjBX,sBAoBhB,IAAIzF,GACR5jC,EAAIwnB,MADA,2CAEgC7jB,EAAUkE,aAtB1B,gCAyBjB7H,EAAIlC,QAzBa,gD,sIA+BN,WAClB6F,EACAyhC,GAFkB,0GAKEnnC,KAAK+2C,yBACrBrxC,EACAyhC,GAPc,cAKVplC,EALU,yBASTA,EAAIpG,OATK,sCAWV,IAAI+B,MACR,oCAAsCgI,EAAUkE,WAAa,KAA7D,MAZc,yD,yJAoBmB,WACrCotC,EACA7P,GAFqC,sGAKnCD,GAA4BC,GADvBzH,EAJ8B,EAI9BA,WAAYx7B,EAJkB,EAIlBA,OAEbqmB,EAAOysB,EAAW94B,KAAI4G,YAAG,OAAIA,EAAIlb,cACjC4C,EAAOxM,KAAKm2C,WAAW,CAAC5rB,GAAOmV,EAAY,SAAUx7B,GAPtB,SAQblE,KAAK0xC,YAAY,sBAAuBllC,GAR3B,UAQ/B4pC,EAR+B,SAajC,UAJEr0C,EAAMb,GACVk1C,EACA1O,GAAwBppC,GAAMyrB,GAASkhB,SAXJ,sBAc7B,IAAItF,GACR5jC,EAAIwnB,MADA,0CAE+BgB,IAhBF,gCAmB9BxoB,EAAIlC,QAnB0B,iD,+IAyBV,WAC3Bm3C,EACA7P,GAF2B,iGAITnnC,KAAKi3C,kCACrBD,EACA7P,GANyB,cAIrBplC,EAJqB,yBAQpBA,EAAIpG,OARgB,gD,0IAcL,WACtB+J,EACAyhC,EACAhC,GAHsB,oGAMpB+B,GAA4BC,GADvBzH,EALe,EAKfA,WAAYx7B,EALG,EAKHA,OAEbsI,EAAOxM,KAAKm2C,WAChB,CAACzwC,EAAUkE,YACX81B,OACAt/B,EAHW,2BAKN8D,GALM,IAMTihC,MAAgB,MAATA,EAAgBA,EAAQjhC,8BAAQihC,SAbrB,SAiBEnlC,KAAK0xC,YAAY,qBAAsBllC,GAjBzC,UAiBhB4pC,EAjBgB,SAmBlB,UADEr0C,EAAMb,GAAOk1C,EAAW3O,GAAc6D,OAlBtB,sBAoBd,IAAI3F,GACR5jC,EAAIwnB,MADA,yCAE8B7jB,EAAUkE,aAtB1B,gCAyBf7H,EAAIlC,QAzBW,gD,4IAiCA,WACtBs1B,EACA+hB,GAFsB,0GAKpBhQ,GAA4BgQ,GADvBxX,EAJe,EAIfA,WAAYx7B,EAJG,EAIHA,OAEZizC,GANe,EAMuBjzC,GAAU,IAAhDizC,SAAaC,EANE,kBAOhB5qC,EAAOxM,KAAKm2C,WAChB,CAAChhB,EAAUvrB,YACX81B,EACAyX,GAAY,SACZC,GAXoB,SAaEp3C,KAAK0xC,YAAY,qBAAsBllC,GAbzC,UAahB4pC,EAbgB,SAelB,UADEr0C,EAAMb,GAAOk1C,EAAW3O,GAAcnpC,GAAM4sC,QAd5B,sBAgBd,IAAIvF,GACR5jC,EAAIwnB,MADA,kDAEuC4L,EAAUvrB,aAlBnC,gCAqBf7H,EAAIlC,QArBW,iD,gJA6BM,WAC5Bs1B,EACA+hB,GAF4B,oGAU1BhQ,GAA4BgQ,GADvBxX,EATqB,EASrBA,WAAYx7B,EATS,EASTA,OAEbsI,EAAOxM,KAAKm2C,WAChB,CAAChhB,EAAUvrB,YACX81B,EACA,aACAx7B,GAf0B,SAiBJlE,KAAK0xC,YAAY,qBAAsBllC,GAjBnC,UAiBtB4pC,EAjBsB,SAsBxB,UAJEr0C,EAAMb,GACVk1C,EACA3O,GAAcnpC,GAAM+sC,QApBM,sBAuBpB,IAAI1F,GACR5jC,EAAIwnB,MADA,kDAEuC4L,EAAUvrB,aAzB7B,gCA4BrB7H,EAAIlC,QA5BiB,gD,0IA4CN,WACtBw3C,EAGA3X,GAJsB,0GASpB4X,EADqB,iBAAZD,EACMA,EAGbA,EACoBhxC,UAbF,SAmBpBkxC,EAAmB5xC,KAAKqB,OAAOswC,GAnBX,qDAqBd,IAAI55C,MAAM,qCAAuC45C,GArBnC,cAwBtB/nC,GAAmC,KAA5BgoC,EAAiBz5C,OAAe,gCAEjC05C,EAAyB9X,GAAc1/B,KAAK0/B,WAG9C7X,GAAO,EAEL4vB,EAAsB,IAAIhzC,SAG7B,SAACC,EAASsvC,GACX,IACE0D,EAAiB,EAAKC,YACpBL,GACA,SAACz3C,EAAyBkoB,GACxB2vB,OAAiBt3C,EACjB,IAAM4C,EAAW,CACf+kB,UACApsB,MAAOkE,GAETgoB,GAAO,EACPnjB,EAAQ,CAACkzC,OAAQpe,GAAkBqe,UAAW70C,eAEhDw0C,GAEF,MAAO7hB,GACPqe,EAAOre,OAILmiB,EAAgB,IAAIrzC,SAGxBC,YACA,GAAwB,kBAAb2yC,EAAuB,CAChC,IAAIU,EAAY,EAAKxG,mCAAqC,IAC1D,OAAQiG,GACN,IAAK,YACL,IAAK,SACL,IAAK,SACL,IAAK,YACL,IAAK,eACHO,EAAY,EAAKxG,mCAAqC,IAS1DyG,EAAY/X,YACV,kBAAMv7B,EAAQ,CAACkzC,OAAQpe,GAAkBye,UAAWF,gBACpDA,OAEG,CACL,IAAI7zC,EACFmzC,EACIa,EAAgB,iDAAG,uHAEK,EAAKC,eAAezY,GAFzB,cAEfkJ,EAFe,yBAGdA,GAHc,0DAKb,GALa,yDAAH,qDAQtB,gCAAC,8GACgCsP,IADhC,UACKE,EADL,QAEKvwB,EAFL,sDAGQuwB,GAAsBl0C,EAAO83B,sBAHrC,iCAIS+D,GAAM,KAJf,WAKOlY,EALP,oEAM8BqwB,IAN9B,WAMGE,EANH,QAOOvwB,EAPP,0EASCnjB,EAAQ,CAACkzC,OAAQpe,GAAkB6e,uBATpC,2CAAD,OA1FkB,oBA0GE5zC,QAAQ6zC,KAAK,CAACb,EAAqBK,IA1GrC,QA0GdS,EA1Gc,YA2GZA,EAAQX,OA3GI,cA4Gbpe,GAAkB6e,qBA5GL,UA8Gb7e,GAAkBqe,UA9GL,UAiHbre,GAAkBye,UAjHL,0BA6GV,IAAIjiB,GAA2CshB,GA7GrC,eA+GhBz3C,EAAS04C,EAAQv1C,SA/GD,mCAkHV,IAAIizB,GACRqhB,EACAiB,EAAQR,UAAY,KApHN,yBAwHpBS,aAAaR,GACTN,GACF13C,KAAKy4C,wBAAwBf,GA1HX,8CA6Hf73C,GA7He,qE,uIAmIH,gHACKG,KAAK0xC,YAAY,kBAAmB,IADzC,UACb0E,EADa,SAGf,UADEr0C,EAAMb,GAAOk1C,EAAW3O,GAAcnpC,GAAMyuC,QAF/B,sBAIX,IAAIpH,GAAmB5jC,EAAIwnB,MAAO,+BAJvB,gCAMZxnB,EAAIlC,QANQ,gD,oIAYA,WAAC6/B,GAAD,4FACblzB,EAAOxM,KAAKm2C,WAAW,GAAIzW,GADd,SAEK1/B,KAAK0xC,YAAY,kBAAmBllC,GAFzC,UAEb4pC,EAFa,SAIf,UADEr0C,EAAMb,GAAOk1C,EAAWzI,MAHX,sBAKX,IAAIhI,GAAmB5jC,EAAIwnB,MAAO,+BALvB,gCAOZxnB,EAAIlC,QAPQ,gD,6HAaR,WACXsnC,GADW,oGAITD,GAA4BC,GADvBzH,EAHI,EAGJA,WAAYx7B,EAHR,EAGQA,OAEbsI,EAAOxM,KAAKm2C,WAChB,GACAzW,OACAt/B,EACA8D,GATS,SAWalE,KAAK0xC,YAAY,UAAWllC,GAXzC,UAWL4pC,EAXK,SAaP,UADEr0C,EAAMb,GAAOk1C,EAAW3O,GAAc74B,SAZjC,sBAcH,IAAI+2B,GAAmB5jC,EAAIwnB,MAAO,sBAd/B,gCAgBJxnB,EAAIlC,QAhBA,gD,mIAsBM,WACjBsnC,GADiB,oGAIfD,GAA4BC,GADvBzH,EAHU,EAGVA,WAAYx7B,EAHF,EAGEA,OAEbsI,EAAOxM,KAAKm2C,WAChB,GACAzW,OACAt/B,EACA8D,GATe,SAWOlE,KAAK0xC,YAAY,gBAAiBllC,GAXzC,UAWX4pC,EAXW,SAab,UADEr0C,EAAMb,GAAOk1C,EAAW3O,GAAcrd,SAZ3B,sBAcT,IAAIub,GAAmB5jC,EAAIwnB,MAAO,6BAdzB,gCAgBVxnB,EAAIlC,QAhBM,gD,oIAyBC,WAClB64C,EACAC,GAFkB,4FAIZnsC,EAAO,CAACksC,EAAWC,GAJP,SAKM34C,KAAK0xC,YAAY,iBAAkBllC,GALzC,UAKZ4pC,EALY,SAOd,UADEr0C,EAAMb,GAAOk1C,EAAW3O,GAAcnpC,GAAMyoC,QANhC,sBAQV,IAAIpB,GAAmB5jC,EAAIwnB,MAAO,8BARxB,gCAUXxnB,EAAIlC,QAVO,gD,0IAgBI,WACtBwG,EACAnC,GAFsB,uGAIiBlE,KAAK44C,qBAC1C,CAACvyC,GACDnC,GANoB,uBAIf6jB,EAJe,EAIfA,QAIPxY,GAAyB,KAJFW,EAJD,EAINvU,OAIFmC,QACRnC,EAAQuU,EAAO,GATC,kBAUf,CAAC6X,UAASpsB,UAVK,gD,4IAgBE,WACxB+L,EACAxD,GAFwB,4FAIlB6B,EAAgB,CAAC2B,GACnBxD,GACF6B,EAAOf,KAAKd,GANU,SAQAlE,KAAK0xC,YAAY,uBAAwB3rC,GARzC,UAQlBqwC,EARkB,SAUpB,UADEr0C,EAAMb,GAAOk1C,EAAWlI,MATN,sBAWhB,IAAIvI,GAAmB5jC,EAAIwnB,MAAO,kCAXlB,gCAajBxnB,EAAIlC,QAba,gD,2IAmBD,WACvBsnC,GADuB,oGAIrBD,GAA4BC,GADvBzH,EAHgB,EAGhBA,WAAYx7B,EAHI,EAGJA,OAEbsI,EAAOxM,KAAKm2C,WAChB,GACAzW,OACAt/B,EACA8D,GATqB,SAWClE,KAAK0xC,YAAY,sBAAuBllC,GAXzC,UAWjB4pC,EAXiB,SAanB,UADEr0C,EAAMb,GAAOk1C,EAAW3O,GAAc74B,SAZrB,sBAcf,IAAI+2B,GACR5jC,EAAIwnB,MACJ,mCAhBmB,gCAmBhBxnB,EAAIlC,QAnBY,gD,oIA2BL,WAAC6/B,GAAD,iGACG1/B,KAAK64C,UAAU,CAClCnZ,aACAoZ,mCAAmC,IAHnB,cACZj5C,EADY,yBAKXA,EAAOlE,MAAMwuC,OALF,gD,0IAWM,WACxBzK,GADwB,4FAGlBlzB,EAAOxM,KAAKm2C,WAAW,GAAIzW,GAHT,SAIA1/B,KAAK0xC,YAAY,uBAAwBllC,GAJzC,UAIlB4pC,EAJkB,SAMpB,UADEr0C,EAAMb,GAAOk1C,EAAWvM,MALN,sBAOhB,IAAIlE,GAAmB5jC,EAAIwnB,MAAO,2BAPlB,gCASjBxnB,EAAIlC,QATa,gD,wIAeF,WACtB4mC,EACAtB,EACAgC,GAHsB,oGAMpBD,GAA4BC,GADvBzH,EALe,EAKfA,WAAYx7B,EALG,EAKHA,OAEbsI,EAAOxM,KAAKm2C,WAChB,CAAC1P,EAAUvoB,KAAIyd,YAAM,OAAIA,EAAO/xB,eAChC81B,OACAt/B,EAHW,2BAKN8D,GALM,IAMTihC,MAAgB,MAATA,EAAgBA,EAAQjhC,8BAAQihC,SAbrB,SAgBEnlC,KAAK0xC,YAAY,qBAAsBllC,GAhBzC,UAgBhB4pC,EAhBgB,SAkBlB,UADEr0C,EAAMb,GAAOk1C,EAAWhO,MAjBR,sBAmBd,IAAIzC,GAAmB5jC,EAAIwnB,MAAO,kCAnBpB,gCAqBfxnB,EAAIlC,QArBW,gD,sIA2BN,WAChBsnC,GADgB,oGAIdD,GAA4BC,GADvBzH,EAHS,EAGTA,WAAYx7B,EAHH,EAGGA,OAEbsI,EAAOxM,KAAKm2C,WAChB,GACAzW,OACAt/B,EACA8D,GATc,SAWQlE,KAAK0xC,YAAY,eAAgBllC,GAXzC,UAWV4pC,EAXU,SAaZ,UADEr0C,EAAMb,GAAOk1C,EAAWtM,MAZd,sBAcR,IAAInE,GAAmB5jC,EAAIwnB,MAAO,4BAd1B,gCAgBTxnB,EAAIlC,QAhBK,gD,sIAsBI,kHACIG,KAAK0xC,YAAY,mBAAoB,IADzC,UACd0E,EADc,SAGhB,UADEr0C,EAAMb,GAAOk1C,EAAWrM,MAFV,sBAIZ,IAAIpE,GAAmB5jC,EAAIwnB,MAAO,gCAJtB,cAMdwvB,EAAgBh3C,EAAIlC,OANN,kBAOb,IAAI6kC,GACTqU,EAAcpU,cACdoU,EAAcnU,yBACdmU,EAAclU,OACdkU,EAAcjU,iBACdiU,EAAchU,kBAZI,gD,sIAoBC,gHACG/kC,KAAK0xC,YAAY,oBAAqB,IADzC,UACf0E,EADe,SAGjB,UADEr0C,EAAMb,GAAOk1C,EAAWpM,MAFT,sBAIb,IAAIrE,GAAmB5jC,EAAIwnB,MAAO,iCAJrB,gCAMdxnB,EAAIlC,QANU,gD,sJAagB,WACrCk5B,EACA2G,GAFqC,4FAI/BlzB,EAAOxM,KAAKm2C,WAAW,CAACpd,GAAa2G,GAJN,SAKb1/B,KAAK0xC,YAC3B,oCACAllC,GAPmC,UAK/B4pC,EAL+B,SAUjC,UADEr0C,EAAMb,GAAOk1C,EAAWjI,MATO,uBAWnC1R,QAAQC,KAAK,sDAXsB,kBAY5B,GAZ4B,gCAc9B36B,EAAIlC,QAd0B,gD,oJAuBL,WAChC6/B,GADgC,4FAK1BlzB,EAAOxM,KAAKm2C,WAAW,GAAIzW,GALD,SAMR1/B,KAAK0xC,YAAY,qBAAsBllC,GAN/B,UAM1B4pC,EAN0B,SAQ5B,UADEr0C,EAAMb,GAAOk1C,EAAWhG,MAPE,sBASxB,IAAIzK,GAAmB5jC,EAAIwnB,MAAO,kCATV,gCAWzBxnB,EAAIlC,QAXqB,gD,iJAkBD,WAC/B84C,GAD+B,mGAGP34C,KAAK0xC,YAC3B,8BACAiH,EAAQ,CAACA,GAAS,IALW,UAGzBvC,EAHyB,SAQ3B,UADEr0C,EAAMb,GAAOk1C,EAAW7F,MAPC,sBASvB,IAAI5K,GACR5jC,EAAIwnB,MACJ,4CAX2B,gCAexBxnB,EAAIlC,QAfoB,gD,kJAuBC,WAChCu8B,EACAsD,GAFgC,kGAI1BlzB,EAAOxM,KAAKm2C,WAAW,CAAC/Z,GAAYsD,GAJV,SAKR1/B,KAAK0xC,YAC3B,+BACAllC,GAP8B,UAK1B4pC,EAL0B,SAW5B,UADEr0C,EAAMb,GAAOk1C,EAAWzF,MAVE,sBAYxB,IAAIhL,GAAmB5jC,EAAIwnB,MAAO,gCAZV,gBAcPxnB,EAAIlC,OAAtBkoB,EAdyB,EAczBA,QAASpsB,EAdgB,EAchBA,MAdgB,kBAezB,CACLosB,UACApsB,MAAiB,OAAVA,EAAiBA,EAAM+kC,cAAgB,OAjBhB,gD,wIAwBZ,WACpB9/B,EACA8+B,GAFoB,8FAIdsZ,EAAcp4C,EAAQ2G,YAAYtJ,SAAS,UAC3CuO,EAAOxM,KAAKm2C,WAAW,CAAC6C,GAActZ,GALxB,SAMI1/B,KAAK0xC,YAAY,mBAAoBllC,GANzC,UAMd4pC,EANc,SAShB,UADEr0C,EAAMb,GAAOk1C,EAAW1O,GAAwB3d,GAASnb,UAR3C,sBAUZ,IAAI+2B,GAAmB5jC,EAAIwnB,MAAO,sBAVtB,UAYD,OAAfxnB,EAAIlC,OAZY,uBAaZ,IAAInC,MAAM,qBAbE,iCAebqE,EAAIlC,QAfS,iD,0IAwBE,WACtB6/B,GADsB,0GAIF1/B,KAAKi5C,6BAA6BvZ,GAJhC,cAId39B,EAJc,yBAKbA,EAAIpG,OALS,sCAOd,IAAI+B,MAAM,mCAAqC,EAArC,IAPI,yD,wIAeA,WACtBypC,GADsB,0GAIFnnC,KAAKk5C,6BAA6B/R,GAJhC,cAIdplC,EAJc,yBAKbA,EAAIpG,OALS,sCAOd,IAAI+B,MAAM,mCAAqC,EAArC,IAPI,yD,kJAeU,WAChCypC,GADgC,oGAI9BD,GAA4BC,GADvBzH,EAHyB,EAGzBA,WAAYx7B,EAHa,EAGbA,OAEbsI,EAAOxM,KAAKm2C,WAChB,GACAzW,OACAt/B,EACA8D,GAT8B,SAWRlE,KAAK0xC,YAAY,qBAAsBllC,GAX/B,UAW1B4pC,EAX0B,SAa5B,UADEr0C,EAAMb,GAAOk1C,EAAW9F,MAZE,sBAcxB,IAAI3K,GAAmB5jC,EAAIwnB,MAAO,kCAdV,gCAgBzBxnB,EAAIlC,QAhBqB,gD,gIAsBlB,gHACUG,KAAK0xC,YAAY,aAAc,IADzC,UACR0E,EADQ,SAGV,UADEr0C,EAAMb,GAAOk1C,EAAW3O,GAAc0B,OAF9B,sBAIN,IAAIxD,GAAmB5jC,EAAIwnB,MAAO,yBAJ5B,gCAMPxnB,EAAIlC,QANG,gD,mIAYI,gHACMG,KAAK0xC,YAAY,iBAAkB,IADzC,UACZ0E,EADY,SAGd,UADEr0C,EAAMb,GAAOk1C,EAAW3O,GAAcrd,SAF1B,sBAIV,IAAIub,GAAmB5jC,EAAIwnB,MAAO,8BAJxB,gCAMXxnB,EAAIlC,QANO,gD,6HAiCN,WACZolC,EACAkU,GAFY,sGAIiBjS,GAA4BiS,GAAlDzZ,EAJK,EAILA,WAAYx7B,EAJP,EAIOA,OACbsI,EAAOxM,KAAKo5C,2BAChB,CAACnU,GACDvF,OACAt/B,EACA8D,GATU,SAWYlE,KAAK0xC,YAAY,WAAYllC,GAXzC,UAWN4pC,EAXM,SAcR,UAFEr0C,EAAMb,GAAOk1C,EAAWzG,MAZlB,sBAeJ,IAAIhK,GAAmB5jC,EAAIwnB,MAAO,iCAf9B,UAkBN1pB,EAASkC,EAAIlC,OAlBP,0CAmBQA,GAnBR,6CAAC,eAsBRA,GAtBO,IAuBV2I,aAAc3I,EAAO2I,aAAa0V,KAAI,gBAAElY,EAAF,EAAEA,YAAay3B,EAAf,EAAeA,KAAMoK,EAArB,EAAqBA,QAArB,MAAmC,CACvEpK,OACAz3B,YAAa,2BACRA,GADM,IAETpF,QAASgnC,GAA6BC,EAAS7hC,EAAYpF,WAE7DinC,iBA7BQ,iD,sIAqCM,WAClBV,GADkB,oGAIhBD,GAA4BC,GADvBzH,EAHW,EAGXA,WAAYx7B,EAHD,EAGCA,OAEbsI,EAAOxM,KAAKm2C,WAChB,GACAzW,OACAt/B,EACA8D,GATgB,SAWMlE,KAAK0xC,YAAY,iBAAkBllC,GAXzC,UAWZ4pC,EAXY,SAad,UADEr0C,EAAMb,GAAOk1C,EAAW3O,GAAc74B,SAZ1B,sBAcV,IAAI+2B,GACR5jC,EAAIwnB,MACJ,0CAhBc,gCAoBXxnB,EAAIlC,QApBO,gD,wIA0BI,WACtBq3C,GADsB,mGAMY,kBAAvBA,EACTxX,EAAawX,EACJA,IACUp3B,EAAco3B,EAA1BxX,WAAkBtY,EADI,YACI8vB,EADJ,IAE7BxX,EAAa5f,EACbu5B,EAAQjyB,GAGJ5a,EAAOxM,KAAKm2C,WAAW,GAAIzW,EAAY,SAAU2Z,GAdjC,SAeEr5C,KAAK0xC,YAAY,qBAAsBllC,GAfzC,UAehB4pC,EAfgB,SAiBlB,UADEr0C,EAAMb,GAAOk1C,EAAW5M,MAhBR,sBAkBd,IAAI7D,GACR5jC,EAAIwnB,MACJ,8CApBkB,gCAwBfxnB,EAAIlC,QAxBW,gD,oIAoDJ,WAClBwG,EACA8yC,GAFkB,sGAIWjS,GAA4BiS,GAAlDzZ,EAJW,EAIXA,WAAYx7B,EAJD,EAICA,OACbsI,EAAOxM,KAAKo5C,2BAChB,CAAC/yC,GACDq5B,OACAt/B,EACA8D,GATgB,SAWMlE,KAAK0xC,YAAY,iBAAkBllC,GAXzC,UAWZ4pC,EAXY,SAad,UADEr0C,EAAMb,GAAOk1C,EAAWlG,MAZZ,sBAcV,IAAIvK,GAAmB5jC,EAAIwnB,MAAO,6BAdxB,UAiBZ1pB,EAASkC,EAAIlC,OAjBD,0CAkBEA,GAlBF,6CAAC,eAqBdA,GArBa,IAsBhBmG,YAAa,2BACRnG,EAAOmG,aADD,IAETpF,QAASgnC,GACP/nC,EAAOgoC,QACPhoC,EAAOmG,YAAYpF,cA1BP,iD,4IAmCM,WACxByF,EACA8gC,GAFwB,oGAKtBD,GAA4BC,GADvBzH,EAJiB,EAIjBA,WAAYx7B,EAJK,EAILA,OAEbsI,EAAOxM,KAAKo5C,2BAChB,CAAC/yC,GACDq5B,EACA,aACAx7B,GAVsB,SAYAlE,KAAK0xC,YAAY,iBAAkBllC,GAZnC,UAYlB4pC,EAZkB,SAcpB,UADEr0C,EAAMb,GAAOk1C,EAAWjG,MAbN,sBAehB,IAAIxK,GAAmB5jC,EAAIwnB,MAAO,6BAflB,gCAiBjBxnB,EAAIlC,QAjBa,gD,6IAuBC,WACzB6H,EACAy/B,GAFyB,2GAKvBD,GAA4BC,GADvBzH,EAJkB,EAIlBA,WAAYx7B,EAJM,EAINA,OAEbgxC,EAAQxtC,EAAWwW,KAAI7X,YAO3B,MAAO,CACL8uC,WAAY,iBACZ3oC,KARW,EAAK4sC,2BAChB,CAAC/yC,GACDq5B,EACA,aACAx7B,OAXqB,SAmBDlE,KAAK2xC,iBAAiBuD,GAnBrB,cAmBnBkB,EAnBmB,OAoBnBr0C,EAAMq0C,EAAUl4B,KAAKk4B,YACzB,IAAMr0C,EAAMb,GAAOk1C,EAAWjG,IAC9B,GAAI,UAAWpuC,EACb,MAAM,IAAI4jC,GAAmB5jC,EAAIwnB,MAAO,8BAE1C,OAAOxnB,EAAIlC,UAzBY,kBA4BlBkC,GA5BkB,gD,uIA6DN,WACnB2F,EACAy/B,GAFmB,2GAKjBD,GAA4BC,GADvBzH,EAJY,EAIZA,WAAYx7B,EAJA,EAIAA,OAEbgxC,EAAQxtC,EAAWwW,KAAI7X,YAO3B,MAAO,CACL8uC,WAAY,iBACZ3oC,KARW,EAAK4sC,2BAChB,CAAC/yC,GACDq5B,OACAt/B,EACA8D,OAXe,SAmBKlE,KAAK2xC,iBAAiBuD,GAnB3B,cAmBbkB,EAnBa,OAoBbr0C,EAAMq0C,EAAUl4B,KAAKk4B,YACzB,IAAMr0C,EAAMb,GAAOk1C,EAAWlG,IAC9B,GAAI,UAAWnuC,EACb,MAAM,IAAI4jC,GAAmB5jC,EAAIwnB,MAAO,8BAE1C,IAAM1pB,EAASkC,EAAIlC,OACnB,OAAKA,EAEE,2BACFA,GADL,IAEEmG,YAAa,2BACRnG,EAAOmG,aADD,IAETpF,QAASgnC,GACP/nC,EAAOgoC,QACPhoC,EAAOmG,YAAYpF,aARLf,KA1BH,kBAwCZkC,GAxCY,gD,yIAiDE,WACrBkjC,EACAvF,GAFqB,gGAIflzB,EAAOxM,KAAKo5C,2BAA2B,CAACnU,GAAOvF,GAJhC,SAKG1/B,KAAK0xC,YAAY,oBAAqBllC,GALzC,UAKf4pC,EALe,SAQjB,UAFEr0C,EAAMb,GAAOk1C,EAAWpG,MANT,sBASb,IAAIrK,GAAmB5jC,EAAIwnB,MAAO,iCATrB,UAYf1pB,EAASkC,EAAIlC,OAZE,uBAcb,IAAInC,MAAM,mBAAqBunC,EAAO,cAdzB,eAiBfqU,EAjBe,YAAC,eAkBjBz5C,GAlBgB,IAmBnB2I,aAAc3I,EAAO2I,aAAa0V,KAAI,YAAyB,IAAvBlY,EAAuB,EAAvBA,YAAay3B,EAAU,EAAVA,KAC7C78B,EAAU,IAAIw2B,GAAQpxB,EAAYpF,SACxC,MAAO,CACL68B,OACAz3B,YAAa,2BACRA,GADM,IAETpF,kBAzBa,8BAAC,eAgCjB04C,GAhCgB,IAiCnB9wC,aAAc8wC,EAAM9wC,aAAa0V,KAAI,YAAyB,IAAvBlY,EAAuB,EAAvBA,YACrC,MAAO,CACLy3B,KAF0D,EAAVA,KAGhDz3B,YAAa81B,GAAYiD,SACvB/4B,EAAYpF,QACZoF,EAAY0B,mBAtCC,iD,iIAgDR,WACbgxC,EACAa,EACA7Z,GAHa,4FAKPlzB,EAAOxM,KAAKo5C,gCACJh5C,IAAZm5C,EAAwB,CAACb,EAAWa,GAAW,CAACb,GAChDhZ,GAPW,SASW1/B,KAAK0xC,YAAY,YAAallC,GATzC,UASP4pC,EATO,SAWT,UADEr0C,EAAMb,GAAOk1C,EAAW3O,GAAcnpC,GAAMsQ,UAVrC,sBAYL,IAAI+2B,GAAmB5jC,EAAIwnB,MAAO,wBAZ7B,gCAcNxnB,EAAIlC,QAdE,gD,4IAoBS,WACtBolC,EACAvF,GAFsB,8FAIhBlzB,EAAOxM,KAAKo5C,2BAChB,CAACnU,GACDvF,OACAt/B,EACA,CACEo5C,mBAAoB,aACpB1J,SAAS,IAVS,SAaE9vC,KAAK0xC,YAAY,WAAYllC,GAb/B,UAahB4pC,EAbgB,SAelB,UADEr0C,EAAMb,GAAOk1C,EAAWnG,MAdR,sBAgBd,IAAItK,GAAmB5jC,EAAIwnB,MAAO,uBAhBpB,UAkBhB1pB,EAASkC,EAAIlC,OAlBG,uBAoBd,IAAInC,MAAM,SAAWunC,EAAO,cApBd,iCAsBfplC,GAtBe,iD,mJA8BS,WAC/BolC,EACAvF,GAF+B,8FAIzBlzB,EAAOxM,KAAKo5C,2BAChB,CAACnU,GACDvF,OACAt/B,EACA,CACEo5C,mBAAoB,aACpB1J,SAAS,IAVkB,SAaP9vC,KAAK0xC,YAAY,oBAAqBllC,GAb/B,UAazB4pC,EAbyB,SAe3B,UADEr0C,EAAMb,GAAOk1C,EAAWnG,MAdC,sBAgBvB,IAAItK,GAAmB5jC,EAAIwnB,MAAO,iCAhBX,UAkBzB1pB,EAASkC,EAAIlC,OAlBY,uBAoBvB,IAAInC,MAAM,mBAAqBunC,EAAO,cApBf,iCAsBxBplC,GAtBwB,iD,+IA8BJ,WAC3BwG,EACAq5B,GAF2B,kGAIrBlzB,EAAOxM,KAAKo5C,2BAA2B,CAAC/yC,GAAYq5B,GAJ/B,SAKH1/B,KAAK0xC,YAAY,0BAA2BllC,GALzC,UAKrB4pC,EALqB,SAOvB,UADEr0C,EAAMb,GAAOk1C,EAAWlG,MANH,sBAQnB,IAAIvK,GAAmB5jC,EAAIwnB,MAAO,6BARf,UAWrB1pB,EAASkC,EAAIlC,OAXQ,0CAYPA,GAZO,eAcrBe,EAAU,IAAIw2B,GAAQv3B,EAAOmG,YAAYpF,SACzC8G,EAAa7H,EAAOmG,YAAY0B,WAfX,8BAAC,eAiBvB7H,GAjBsB,IAkBzBmG,YAAa81B,GAAYiD,SAASn+B,EAAS8G,MAlBlB,iD,qJA2BM,WACjCrB,EACAq5B,GAFiC,4FAI3BlzB,EAAOxM,KAAKo5C,2BAChB,CAAC/yC,GACDq5B,EACA,cAP+B,SAST1/B,KAAK0xC,YAAY,0BAA2BllC,GATnC,UAS3B4pC,EAT2B,SAW7B,UADEr0C,EAAMb,GAAOk1C,EAAWjG,MAVG,sBAYzB,IAAIxK,GACR5jC,EAAIwnB,MACJ,uCAd6B,gCAiB1BxnB,EAAIlC,QAjBsB,gD,sJAyBC,WAClC6H,EACAg4B,GAFkC,mGAI5BwV,EAAQxtC,EAAWwW,KAAI7X,YAM3B,MAAO,CACL8uC,WAAY,0BACZ3oC,KAPW,EAAK4sC,2BAChB,CAAC/yC,GACDq5B,EACA,kBAR8B,SAgBV1/B,KAAK2xC,iBAAiBuD,GAhBZ,cAgB5BkB,EAhB4B,OAiB5Br0C,EAAMq0C,EAAUl4B,KAAKk4B,YACzB,IAAMr0C,EAAMb,GAAOk1C,EAAWjG,IAC9B,GAAI,UAAWpuC,EACb,MAAM,IAAI4jC,GACR5jC,EAAIwnB,MACJ,wCAGJ,OAAOxnB,EAAIlC,UAzBqB,kBA4B3BkC,GA5B2B,gD,wJAyCE,WACpCyzB,EACAkjB,EACAa,GAHoC,kGAKhCjxB,EAAe,GALiB,SAOJtoB,KAAKy5C,yBAPD,OAOhCC,EAPgC,iBAQ3B,UAAWpxB,EARgB,wBASlCowB,GACiB,GAAKA,EAAYgB,GAVA,6EAeZ15C,KAAK25C,4BACvBjB,EACA,aAjB8B,SAe1BY,EAf0B,QAmBtB5xC,WAAW5J,OAAS,IAC5BwqB,EAAQsxB,MACNN,EAAM5xC,WAAW4xC,EAAM5xC,WAAW5J,OAAS,GAAGG,YArBlB,uDAwB5B03B,gBAAej4B,OAASi4B,KAAI/0B,QAAQuO,SAAS,YAxBjB,kHAgCHnP,KAAK65C,QAAQ,aAhCV,QAgChCC,EAhCgC,kBAiC3B,WAAYxxB,EAjCe,wBAkClCixB,EACcO,GAnCoB,gFAwCZ95C,KAAK25C,4BAA4BJ,GAxCrB,SAwC1BD,EAxC0B,QAyCtB5xC,WAAW5J,OAAS,IAC5BwqB,EAAQyxB,OACNT,EAAM5xC,WAAW4xC,EAAM5xC,WAAW5J,OAAS,GAAGG,YA3ClB,wDA8C5B03B,gBAAej4B,OAASi4B,KAAI/0B,QAAQuO,SAAS,YA9CjB,oHAsDCnP,KAAKg6C,kCACxCxkB,EACAlN,GAxDkC,eAsD9B2xB,EAtD8B,yBA0D7BA,EAAuB/7B,KAAI41B,YAAI,OAAIA,EAAKztC,cA1DX,kE,2JAqEC,WACrCmvB,EACAlN,EACAoX,GAHqC,4FAK/BlzB,EAAOxM,KAAKo5C,2BAChB,CAAC5jB,EAAQ5rB,YACT81B,OACAt/B,EACAkoB,GATmC,SAWbtoB,KAAK0xC,YAC3B,oCACAllC,GAbmC,UAW/B4pC,EAX+B,SAgBjC,UADEr0C,EAAMb,GAAOk1C,EAAW3K,MAfO,sBAiB7B,IAAI9F,GACR5jC,EAAIwnB,MACJ,kDAnBiC,gCAsB9BxnB,EAAIlC,QAtB0B,gD,iJAiCV,WAC3B21B,EACAlN,EACAoX,GAH2B,4FAKrBlzB,EAAOxM,KAAKo5C,2BAChB,CAAC5jB,EAAQ5rB,YACT81B,OACAt/B,EACAkoB,GATyB,SAWHtoB,KAAK0xC,YAAY,0BAA2BllC,GAXzC,UAWrB4pC,EAXqB,SAavB,UADEr0C,EAAMb,GAAOk1C,EAAWxK,MAZH,sBAcnB,IAAIjG,GACR5jC,EAAIwnB,MACJ,wCAhBuB,gCAmBpBxnB,EAAIlC,QAnBgB,gD,+IAsBF,WACzBq7B,EACAh3B,GAFyB,uGAImBlE,KAAK+2C,yBAC/C7b,EACAh3B,GANuB,uBAIlB6jB,EAJkB,EAIlBA,QAAgBmyB,EAJE,EAITv+C,MAKZA,EAAQ,KACQ,OAAhBu+C,IACFv+C,EAAQ,IAAIoqC,GAA0B,CACpCjhB,IAAKoW,EACL/2B,MAAO4hC,GAA0BzR,YAAY4lB,EAAY16C,SAbpC,kBAiBlB,CACLuoB,UACApsB,UAnBuB,gD,0IA0BH,WACtBglC,EACAjB,GAFsB,uGAIsB1/B,KAAK+2C,yBAC/CpW,EACAjB,GANoB,uBAIf3X,EAJe,EAIfA,QAAgBmyB,EAJD,EAINv+C,MAKZA,EAAQ,KACQ,OAAhBu+C,IACFv+C,EAAQ6kC,GAAa2Z,gBAAgBD,EAAY16C,OAX7B,kBAcf,CACLuoB,UACApsB,UAhBoB,gD,gIAuBV,WACZglC,EACAjB,GAFY,2FAIC1/B,KAAKo6C,mBAAmBzZ,EAAcjB,GAChD4W,MAAK/8B,YAAC,OAAIA,EAAE5d,SACZ46C,OAAM7hC,YACL,MAAM,IAAIhX,MACR,mCACEijC,EAAa/2B,WACb,KACA8K,MAXI,wF,sIA8BM,WAClB/F,EACAuzB,GAFkB,mGAIMliC,KAAK0xC,YAAY,iBAAkB,CACzD/iC,EAAG/E,WACHs4B,IANgB,UAIZkU,EAJY,SASd,UADEr0C,EAAMb,GAAOk1C,EAAWxF,MARZ,sBAUV,IAAIjL,GACR5jC,EAAIwnB,MADA,qBAEU5a,EAAG/E,WAFb,YAVU,gCAeX7H,EAAIlC,QAfO,gD,uJAqBiB,WACnCw6C,GADmC,sFAG9BA,EAH8B,4BAK1Br6C,KAAKkyC,kBALqB,gCAMzBnS,GAAM,KANmB,gCAQ3Bua,EAAiBp7C,KAAKC,MAAQa,KAAKmyC,eAAeE,UAClDkI,EAAUD,GAn4IoB,IAo4IQ,OAAxCt6C,KAAKmyC,eAAeC,iBAA6BmI,EAVpB,0CAWxBv6C,KAAKmyC,eAAeC,iBAXI,yBAetBpyC,KAAKw6C,oBAfiB,0F,uIAqBd,sGACrBx6C,KAAKkyC,mBAAoB,EADJ,SAGbuI,EAAYv7C,KAAKC,MACjBu7C,EAAwB16C,KAAKmyC,eAAeC,gBAC5CuI,EAAkBD,EACpBA,EAAsBte,UACtB,KACKp+B,EAAI,EARM,YAQHA,EAAI,IARD,iCASagC,KAAK46C,mBAAmB,aATrC,UASXxI,EATW,OAWbuI,IAAoBvI,EAAgBhW,UAXvB,wBAYfp8B,KAAKmyC,eAAiB,CACpBC,kBACAC,UAAWnzC,KAAKC,MAChBmzC,sBAAuB,GACvBC,oBAAqB,IAhBR,kBAkBRH,GAlBQ,yBAsBXrS,GAAM8a,KAtBK,QAQK78C,IARL,6BAyBb,IAAIN,MAAJ,iDACsCwB,KAAKC,MAAQs7C,EADnD,OAzBa,yBA6BnBz6C,KAAKkyC,mBAAoB,EA7BN,2E,8IAoCQ,WAC7BhuC,GAD6B,oGAGWgjC,GAA4BhjC,GAA7Dw7B,EAHsB,EAGtBA,WAAoB8W,EAHE,EAGVtyC,OACbsI,EAAOxM,KAAKm2C,WAAW,GAAIzW,EAAY,SAAU8W,GAJ1B,SAKLx2C,KAAK0xC,YAAY,4BAA6BllC,GALzC,UAKvB4pC,EALuB,SAOzB,UADEr0C,EAAMb,GAAOk1C,EAAW1O,GAAwB94B,SANzB,sBAQrB,IAAI+2B,GACR5jC,EAAIwnB,MADA,0CARqB,gCAatBxnB,EAAIlC,QAbkB,gD,yIAmBN,WACvBi7C,EACAxe,EACAye,GAHuB,wHAMnBD,aAAgChf,IAC9Bkf,EAA0BF,GAC9B90C,EAAc,IAAI81B,IACNC,SAAWif,EAAWjf,SAClC/1B,EAAYuxB,aAAeujB,EAAqBvjB,aAChDvxB,EAAYi2B,UAAY+e,EAAW/e,UACnCj2B,EAAY0B,WAAaszC,EAAWtzC,aAEpC1B,EAAc81B,GAAYiD,SAAS+b,IAEvB5e,SAAWl2B,EAAYm2B,WAAQ/7B,GAGzC4F,EAAYi2B,YAAaK,EAnBN,iBAoBrBt2B,KAAYiC,KAAZjC,oBAAoBs2B,IApBC,uBAsBjB+d,EAAer6C,KAAKiyC,yBAtBH,uBAwBWjyC,KAAKi7C,gCACjCZ,GAzBiB,UAwBbjI,EAxBa,OA2BnBpsC,EAAYg2B,qBAAuBoW,EAAgBpW,qBACnDh2B,EAAYsxB,gBAAkB8a,EAAgBhW,UAEzCE,EA9Bc,yDAgCnBt2B,KAAYiC,KAAZjC,oBAAoBs2B,IACft2B,EAAYK,UAjCE,uBAkCX,IAAI3I,MAAM,cAlCC,WAqCb2I,EAAYL,EAAYK,UAAUpI,SAAS,UAE9C+B,KAAKmyC,eAAeI,oBAAoBpjC,SAAS9I,IACjDrG,KAAKmyC,eAAeG,sBAAsBnjC,SAAS9I,GAxCnC,wBA4CjBrG,KAAKmyC,eAAeI,oBAAoBvtC,KAAKqB,GA5C5B,6BAmDjBg0C,GAAe,EAnDE,sCAwDjBz5C,EAAUoF,EAAY43B,WACtBxE,EAAWx4B,EAAQ2G,YACnBs3B,EAAkB74B,EAAY04B,WAAWtF,GACzC8hB,EAAqBrc,EAAgB5gC,SAAS,UAC9CiG,EAAc,CAClBizC,SAAU,SACVzX,WAAY1/B,KAAK0/B,YAGfqb,IACItU,GACJ7oC,MAAM2W,QAAQwmC,GACVA,EACAn6C,EAAQ03B,iBACZpa,KAAI4G,YAAG,OAAIA,EAAIlb,cAEjB1F,EAAM,SAAe,CACnBizC,SAAU,SACV1Q,cAIAnK,IACFp4B,EAAOi3C,WAAY,GAGf3uC,EAAO,CAAC0uC,EAAoBh3C,GAlFX,UAmFClE,KAAK0xC,YAAY,sBAAuBllC,GAnFzC,WAmFjB4pC,EAnFiB,SAqFnB,UADEr0C,EAAMb,GAAOk1C,EAAWhN,MApFP,sBAuFjB,SAAUrnC,EAAIwnB,QAChBmc,EAAO3jC,EAAIwnB,MAAM/pB,KAAKkmC,OACV9nC,MAAM2W,QAAQmxB,KAElB0V,GADAC,EAAc,UACW3V,EAAKpe,KAAK+zB,GACzC5e,QAAQlT,MAAMxnB,EAAIwnB,MAAM3oB,QAASw6C,IAG/B,IAAI3V,GACR,mCAAqC1jC,EAAIwnB,MAAM3oB,QAC/C8kC,GAjGmB,iCAoGhB3jC,EAAIlC,QApGY,iD,yIA0GJ,WACnBmG,EACAs2B,EACAhU,GAHmB,2FAKftiB,EAAYi2B,UALG,gBAMjBj2B,EAAYiC,KAAZjC,QAAW,YAASs2B,IANH,uBAQb+d,EAAer6C,KAAKiyC,yBARP,uBAUejyC,KAAKi7C,gCACjCZ,GAXa,UAUTjI,EAVS,OAafpsC,EAAYg2B,qBAAuBoW,EAAgBpW,qBACnDh2B,EAAYsxB,gBAAkB8a,EAAgBhW,UAC9Cp2B,EAAYiC,KAAZjC,QAAW,YAASs2B,IACft2B,EAAYK,UAhBF,uBAiBP,IAAI3I,MAAM,cAjBH,WAoBT2I,EAAYL,EAAYK,UAAUpI,SAAS,UAC5C+B,KAAKmyC,eAAeG,sBAAsBnjC,SAAS9I,GArBzC,wBAwBbrG,KAAKmyC,eAAeG,sBAAsBttC,KAAKqB,GAxBlC,6BA+Bbg0C,GAAe,EA/BF,sCAoCbxb,EAAkB74B,EAAYuB,YApCjB,UAqCNvH,KAAKsH,mBAAmBu3B,EAAiBvW,GArCnC,0F,4IA4CG,WACtBgzB,EACAhzB,GAFsB,0FAIhB4yB,EAAqBhnB,GAASonB,GAAgBr9C,SAAS,UAJvC,SAKD+B,KAAKu7C,uBACxBL,EACA5yB,GAPoB,cAKhBzoB,EALgB,yBASfA,GATe,gD,8IAgBI,WAC1Bq7C,EACA5yB,GAF0B,oGAIpBpkB,EAAc,CAACizC,SAAU,UACzB3X,EAAgBlX,GAAWA,EAAQkX,cACnCC,EACHnX,GAAWA,EAAQmX,qBAAwBz/B,KAAK0/B,WAE/CpX,GAAiC,MAAtBA,EAAQqX,aACrBz7B,EAAOy7B,WAAarX,EAAQqX,YAE1BrX,GAAqC,MAA1BA,EAAQsX,iBACrB17B,EAAO07B,eAAiBtX,EAAQsX,gBAE9BJ,IACFt7B,EAAOs7B,cAAgBA,GAErBC,IACFv7B,EAAOu7B,oBAAsBA,GAGzBjzB,EAAO,CAAC0uC,EAAoBh3C,GAtBR,UAuBFlE,KAAK0xC,YAAY,kBAAmBllC,GAvBlC,WAuBpB4pC,EAvBoB,SAyBtB,UADEr0C,EAAMb,GAAOk1C,EAAWvF,MAxBJ,sBA2BpB,SAAU9uC,EAAIwnB,QAChBmc,EAAO3jC,EAAIwnB,MAAM/pB,KAAKkmC,MAElB,IAAID,GACR,+BAAiC1jC,EAAIwnB,MAAM3oB,QAC3C8kC,GAhCsB,iCAmCnB3jC,EAAIlC,QAnCe,iD,gFAyC5B41C,WAAY,WACVz1C,KAAK6xC,wBAAyB,EAC9B7xC,KAAK8xC,uBAAyB0J,aAAY,WAExC,EAAK5J,cAAc6J,OAAO,QAAQlF,OAAM,iBACvC,KACHv2C,KAAK07C,yB,wBAMPhG,SAAW/f,GACT31B,KAAK6xC,wBAAyB,EAC9BpV,QAAQlT,MAAM,YAAaoM,EAAI/0B,W,wBAMjC+0C,SAAWxuC,GAAc,WACvBnH,KAAK6xC,wBAAyB,EAC9B7xC,KAAKgyC,0BACDhyC,KAAK+xC,2BACPyG,aAAax4C,KAAK+xC,0BAClB/xC,KAAK+xC,yBAA2B,MAE9B/xC,KAAK8xC,yBACP6J,cAAc37C,KAAK8xC,wBACnB9xC,KAAK8xC,uBAAyB,MAGnB,MAAT3qC,GAOJnH,KAAK0yC,6CAA+C,GACpDl3C,OAAOqtB,QACL7oB,KAAK2yC,sBACLnkC,SAAQ,YAA0B,uBAAxBY,EAAwB,KAAlB08B,EAAkB,KAClC,EAAK6G,qBAAqBvjC,GAA1B,2BACK08B,GADL,IAEE3nC,MAAO,gBAXTnE,KAAK07C,yB,mFAmBiB,0GAC8B,IAAlDlgD,OAAO+uB,KAAKvqB,KAAK2yC,sBAAsB70C,OADnB,uBAElBkC,KAAK6xC,yBACP7xC,KAAK6xC,wBAAyB,EAC9B7xC,KAAK+xC,yBAA2B9R,YAAW,WACzC,EAAK8R,yBAA2B,KAChC,IACE,EAAKH,cAAcgK,QACnB,MAAOjmB,GAEHA,aAAej4B,OACjB++B,QAAQmY,IAARnY,gDAC2C9G,EAAI/0B,aAIlD,MAhBiB,6BAqBc,OAAlCZ,KAAK+xC,2BACPyG,aAAax4C,KAAK+xC,0BAClB/xC,KAAK+xC,yBAA2B,KAChC/xC,KAAK6xC,wBAAyB,GAG3B7xC,KAAK6xC,uBA3Bc,uBA4BtB7xC,KAAK4xC,cAAcjrC,UA5BG,iCAgClBk1C,EAA4B77C,KAAKgyC,wBACjC8J,EAAiC,WACrC,OAAOD,IAA8B,EAAK7J,yBAlCpB,UAqClBvtC,QAAQw/B,IAKZzoC,OAAO+uB,KAAKvqB,KAAK2yC,sBAAsBz0B,IAAvC1iB,iDAA2C,WAAM4T,GAAN,yFAEpBhP,KADf0rC,EAAe,EAAK6G,qBAAqBvjC,IADN,sDAMjC08B,EAAa3nC,MANoB,OAOlC,YAPkC,MAQlC,iBARkC,OAsElC,eAtEkC,2BASD,IAAhC2nC,EAAaiQ,UAAU/kB,KATU,+BAuB5B,EAAK2b,qBAAqBvjC,GACN,iBAAvB08B,EAAa3nC,cACR,EAAKuuC,6CACV5G,EAAakQ,sBA1BkB,UA6B7B,EAAKN,uBA7BwB,2DAgC/B,gCAAC,yGACElvC,EAAgBs/B,EAAhBt/B,KAAMtK,EAAU4pC,EAAV5pC,OADR,SAGH,EAAKywC,qBAAqBvjC,GAA1B,2BACK08B,GADL,IAEE3nC,MAAO,gBALN,SAQM,EAAKytC,cAAcrxC,KAAK2B,EAAQsK,GARtC,cAOGwvC,EAPH,OASH,EAAKrJ,qBAAqBvjC,GAA1B,2BACK08B,GADL,IAEEkQ,uBACA73C,MAAO,eAET,EAAKuuC,6CACHsJ,GACElQ,EAAaiQ,UAhBd,UAiBG,EAAKL,uBAjBR,6DAmBChnC,gBAAahX,OACf++B,QAAQlT,MAARkT,UACKv6B,EADLu6B,uBAEEjwB,EACAkI,KAAE9T,SAGDk7C,IA1BF,0DA8BH,EAAKnJ,qBAAqBvjC,GAA1B,2BACK08B,GADL,IAEE3nC,MAAO,YAhCN,UAkCG,EAAKu3C,uBAlCR,yDAAD,GAhC+B,uDAuED,IAAhC5P,EAAaiQ,UAAU/kB,KAvEU,kCA2E7B,gCAAC,mGACEglB,EAA2ClQ,EAA3CkQ,qBAAsBC,EAAqBnQ,EAArBmQ,mBAE3B,EAAKrJ,gCAAgCxa,IAAI4jB,GAHtC,gBAcH,EAAKpJ,gCAAgClxB,OACnCs6B,GAfC,8BAkBH,EAAKrJ,qBAAqBvjC,GAA1B,2BACK08B,GADL,IAEE3nC,MAAO,kBApBN,kBAuBK,EAAKytC,cAAcrxC,KAAK07C,EAAmB,CAC/CD,IAxBD,4DA2BGtnC,gBAAahX,OACf++B,QAAQlT,MAARkT,UAAiBwf,EAAjBxf,WAA6C/nB,KAAE9T,SAE5Ck7C,IA9BJ,0DAkCD,EAAKnJ,qBAAqBvjC,GAA1B,2BACK08B,GADL,IAEE3nC,MAAO,eApCR,UAsCK,EAAKu3C,uBAtCV,iDA0CL,EAAK/I,qBAAqBvjC,GAA1B,2BACK08B,GADL,IAEE3nC,MAAO,iBA5CJ,UA8CC,EAAKu3C,uBA9CN,yDAAD,GA3E6B,4CAA3ClgD,wDA1CsB,iD,6FAkLlB0gD,SAGNF,EACAG,GAEA,IAAMJ,EACJ/7C,KAAK0yC,6CAA6CsJ,QAClC57C,IAAd27C,GAGJA,EAAUvtC,SAAQxP,YAChB,IACEA,EAAE,WAAFA,cAKKm9C,IAEL,MAAOznC,GACP+nB,QAAQlT,MAAM7U,S,sCAQpBkhC,SAAyBwG,GACvB,MAA+Bl7C,GAC7Bk7C,EACAvQ,IAFKhsC,EAAP,EAAOA,OAAQisC,EAAf,EAAeA,aAIf9rC,KAAKk8C,0BAAiDpQ,EAAc,CAClEjsC,EAAOlE,MACPkE,EAAOkoB,Y,+BAOHs0B,SACNC,EAyBA9vC,GACsB,WAChB+vC,EAAuBv8C,KAAKwyC,4BAC5BpjC,EAAOotC,GACX,CAACF,EAAmBp6C,OAAQsK,IAC5B,GAEIiwC,EAAuBz8C,KAAK2yC,qBAAqBvjC,GA0BvD,YAzB6BhP,IAAzBq8C,EACFz8C,KAAK2yC,qBAAqBvjC,GAA1B,2BACKktC,GADL,IAEE9vC,OACAuvC,UAAW,IAAIhzB,IAAI,CAACuzB,EAAmBhI,WACvCnwC,MAAO,YAGTs4C,EAAqBV,UAAUzgC,IAAIghC,EAAmBhI,UAExDt0C,KAAKyyC,oDACH8J,GADF,gCAEI,4GACK,EAAK9J,oDACV8J,GAGFhtC,QACmBnP,KAFb0rC,EAAe,EAAK6G,qBAAqBvjC,IACzC,iFAEwEmtC,IAE9EzQ,EAAaiQ,UAAUr6B,OAAO46B,EAAmBhI,UAT/C,SAUI,EAAKoH,uBAVT,2CAYJ17C,KAAK07C,uBACEa,I,6BAWTG,SACEh3C,EACA4uC,EACA5U,GAEA,IAAMlzB,EAAOxM,KAAKm2C,WAChB,CAACzwC,EAAUkE,YACX81B,GAAc1/B,KAAKsxC,aAAe,YAClC,UAEF,OAAOtxC,KAAKq8C,kBACV,CACE/H,WACApyC,OAAQ,mBACR+5C,kBAAmB,sBAErBzvC,K,0FAS6B,WAC/B+vC,GAD+B,2FAGzBv8C,KAAK28C,+BACTJ,EACA,kBAL6B,gD,oGAYjC1G,SAAgCuG,GAC9B,MAA+Bl7C,GAC7Bk7C,EACApQ,IAFKnsC,EAAP,EAAOA,OAAQisC,EAAf,EAAeA,aAIf9rC,KAAKk8C,0BAAwDpQ,EAAc,CACzE,CACE8Q,UAAW/8C,EAAOlE,MAAMggC,OACxBue,YAAar6C,EAAOlE,MAAM87B,SAE5B53B,EAAOkoB,Y,oCAcX80B,SACE1nB,EACAmf,EACA5U,EACAod,GAEA,IAAMtwC,EAAOxM,KAAKm2C,WAChB,CAAChhB,EAAUvrB,YACX81B,GAAc1/B,KAAKsxC,aAAe,YAClC,SACAwL,EAAU,CAACA,QAASA,QAAW18C,GAEjC,OAAOJ,KAAKq8C,kBACV,CACE/H,WACApyC,OAAQ,mBACR+5C,kBAAmB,sBAErBzvC,K,iGASoC,WACtC+vC,GADsC,2FAGhCv8C,KAAK28C,+BACTJ,EACA,0BALoC,gD,2EAYxCQ,SACExkB,EACA+b,EACA5U,GAEA,IAAMlzB,EAAOxM,KAAKm2C,WAChB,CAAmB,kBAAX5d,EAAsB,CAACykB,SAAU,CAACzkB,EAAOt6B,aAAes6B,GAChEmH,GAAc1/B,KAAKsxC,aAAe,aAEpC,OAAOtxC,KAAKq8C,kBACV,CACE/H,WACApyC,OAAQ,gBACR+5C,kBAAmB,mBAErBzvC,K,mFASsB,WACxB+vC,GADwB,2FAGlBv8C,KAAK28C,+BAA+BJ,EAAsB,QAHxC,gD,0FAS1BrG,SAAsBkG,GACpB,MAA+Bl7C,GAAOk7C,EAAcrL,IAA7ClxC,EAAP,EAAOA,OAAQisC,EAAf,EAAeA,aACf9rC,KAAKk8C,0BAAwCpQ,EAAc,CACzDjsC,EAAOlE,MACPkE,EAAOkoB,Y,mCAOX+tB,SAAsBsG,GACpB,MAA+Bl7C,GAAOk7C,EAAchQ,IAA7CvsC,EAAP,EAAOA,OAAQisC,EAAf,EAAeA,aACf9rC,KAAKk8C,0BAA8CpQ,EAAc,CAACjsC,M,0BASpEo9C,SAAa3I,GACX,OAAOt0C,KAAKq8C,kBACV,CACE/H,WACApyC,OAAQ,gBACR+5C,kBAAmB,mBAErB,M,uFAS0B,WAC5BM,GAD4B,2FAGtBv8C,KAAK28C,+BACTJ,EACA,eAL0B,gD,iGAY9BxG,SAA6BqG,GAC3B,MAA+Bl7C,GAC7Bk7C,EACAxP,IAFK/sC,EAAP,EAAOA,OAAQisC,EAAf,EAAeA,aAIf9rC,KAAKk8C,0BAA8CpQ,EAAc,CAACjsC,M,0BAUpEq9C,SAAa5I,GACX,OAAOt0C,KAAKq8C,kBACV,CACE/H,WACApyC,OAAQ,wBACR+5C,kBAAmB,2BAErB,M,uFAS0B,WAC5BM,GAD4B,2FAGtBv8C,KAAK28C,+BACTJ,EACA,eAL0B,gD,oJAac,WAC1CA,EACAY,GAF0C,sFAIpCC,EACJp9C,KAAKyyC,oDACH8J,IANsC,gCASlCa,IATkC,6BAWxC3gB,QAAQC,KACN,iFACO6f,EADP,kBACsCY,EADtC,aAEE,uBAdoC,gD,iFAmB5ChH,SACE3pC,EACA6wC,EACAlG,EACAkC,GAEA,IAAM3Z,EAAa2d,GAAYr9C,KAAKsxC,YACpC,GAAI5R,GAAcyX,GAAYkC,EAAO,CACnC,IAAI/wB,EAAe,GACf6uB,IACF7uB,EAAQ6uB,SAAWA,GAEjBzX,IACFpX,EAAQoX,WAAaA,GAEnB2Z,IACF/wB,EAAU9sB,OAAOiF,OAAO6nB,EAAS+wB,IAEnC7sC,EAAKxH,KAAKsjB,GAEZ,OAAO9b,I,wCAMT4sC,SACE5sC,EACA6wC,EACAlG,EACAkC,GAEA,IAAM3Z,EAAa2d,GAAYr9C,KAAKsxC,YACpC,GAAI5R,IAAe,CAAC,YAAa,aAAavwB,SAASuwB,GACrD,MAAM,IAAIhiC,MACR,8CACEsC,KAAKsxC,YACL,+CAGN,OAAOtxC,KAAKm2C,WAAW3pC,EAAM6wC,EAAUlG,EAAUkC,K,wCAMnDrD,SAA2BoG,GACzB,MAA+Bl7C,GAC7Bk7C,EACAvP,IAFKhtC,EAAP,EAAOA,OAAQisC,EAAf,EAAeA,aAIM,sBAAjBjsC,EAAOlE,OAcTqE,KAAK4yC,gCAAgCt3B,IAAIwwB,GAE3C9rC,KAAKk8C,0BACHpQ,EACiB,sBAAjBjsC,EAAOlE,MACH,CAAC,CAACusB,KAAM,YAAaroB,EAAOkoB,SAC5B,CAAC,CAACG,KAAM,SAAUroB,OAAQA,EAAOlE,OAAQkE,EAAOkoB,Y,yBAYxD4vB,SACEtxC,EACAiuC,EACA5U,GACsB,WAChBlzB,EAAOxM,KAAKm2C,WAChB,CAAC9vC,GACDq5B,GAAc1/B,KAAKsxC,aAAe,aAE9BiL,EAAuBv8C,KAAKq8C,kBAChC,CACE/H,SAAU,SAAC8H,EAAcr0B,GACvB,GAA0B,WAAtBq0B,EAAal0B,KAAmB,CAClCosB,EAAS8H,EAAav8C,OAAQkoB,GAG9B,IACE,EAAK0wB,wBAAwB8D,GAE7B,MAAOe,OAKbp7C,OAAQ,qBACR+5C,kBAAmB,wBAErBzvC,GAEF,OAAO+vC,I,oCAaTgB,SACEl3C,EACAiuC,EACAhsB,GACsB,WACtB,6BACKA,GADL,IAEEoX,WACGpX,GAAWA,EAAQoX,YAAe1/B,KAAKsxC,aAAe,cAHpD5R,EAAP,EAAOA,WAAe2Z,EAAtB,kBAKM7sC,EAAOxM,KAAKm2C,WAChB,CAAC9vC,GACDq5B,OACAt/B,EACAi5C,GAEIkD,EAAuBv8C,KAAKq8C,kBAChC,CACE/H,SAAU,SAAC8H,EAAcr0B,GACvBusB,EAAS8H,EAAcr0B,GAGvB,IACE,EAAK0wB,wBAAwB8D,GAE7B,MAAOe,MAIXp7C,OAAQ,qBACR+5C,kBAAmB,wBAErBzvC,GAEF,OAAO+vC,I,sFAQoB,WAC3BA,GAD2B,2FAGrBv8C,KAAK28C,+BACTJ,EACA,oBALyB,gD,0FAY7BtG,SAAsBmG,GACpB,MAA+Bl7C,GAAOk7C,EAActP,IAA7CjtC,EAAP,EAAOA,OAAQisC,EAAf,EAAeA,aACf9rC,KAAKk8C,0BAA8CpQ,EAAc,CAACjsC,M,0BASpE29C,SAAalJ,GACX,OAAOt0C,KAAKq8C,kBACV,CACE/H,WACApyC,OAAQ,gBACR+5C,kBAAmB,mBAErB,M,uFAS0B,WAC5BM,GAD4B,2FAGtBv8C,KAAK28C,+BACTJ,EACA,eAL0B,gD,8DC3+KnB/yC,G,WASXhJ,WAAYi9C,GAA0B,yBAR9BC,cAQ8B,EACpC19C,KAAK09C,SAAL,OAAgBD,gBAAW1pB,K,2CA0DhB,WACX,OAAO,IAAIhtB,GAAU/G,KAAK09C,SAASh4C,a,qBAMxB,WACX,OAAO1F,KAAK09C,SAAS7zC,a,uBA5DR,WACb,OAAO,IAAIL,EAAQuqB,Q,2BAeD,SAClBlqB,EACAye,GAEA,GAA6B,KAAzBze,EAAU1M,WACZ,MAAM,IAAIO,MAAM,uBAElB,IAAMgI,EAAYmE,EAAUpL,MAAM,GAAI,IACtC,IAAK6pB,IAAYA,EAAQq1B,eAGvB,IAFA,IAAM3pB,EAAgBnqB,EAAUpL,MAAM,EAAG,IACnCm/C,EAAoB73B,GAAaiO,GAC9B6pB,EAAK,EAAGA,EAAK,GAAIA,IACxB,GAAIn4C,EAAUm4C,KAAQD,EAAkBC,GACtC,MAAM,IAAIngD,MAAM,iCAItB,OAAO,IAAI8L,EAAQ,CAAC9D,YAAWmE,gB,sBAQlB,SAACunB,GACd,IAAM1rB,EAAYqgB,GAAaqL,GACzBvnB,EAAY,IAAI7M,WAAW,IAGjC,OAFA6M,EAAU9J,IAAIqxB,GACdvnB,EAAU9J,IAAI2F,EAAW,IAClB,IAAI8D,EAAQ,CAAC9D,YAAWmE,kB,KCUtBi0C,GAAmCtiD,OAAOmd,OAAO,CAC5DolC,kBAAmB,CACjBjmB,MAAO,EACPxnB,OAAQ8lB,UAEN,CACAA,OAAiB,eACjB4nB,GAAiB,cACjB5nB,MAAgB,eAGpB6nB,kBAAmB,CACjBnmB,MAAO,EACPxnB,OAAQ8lB,UAEN,CAACA,OAAiB,kBAEtB8nB,kBAAmB,CACjBpmB,MAAO,EACPxnB,OAAQ8lB,UAEN,CACAA,OAAiB,eACjB4nB,KACA5nB,OACEzmB,KACAymB,UAAoBA,UAAqB,GACzC,gBAIN+nB,sBAAuB,CACrBrmB,MAAO,EACPxnB,OAAQ8lB,UAEN,CAACA,OAAiB,kBAEtBgoB,iBAAkB,CAChBtmB,MAAO,EACPxnB,OAAQ8lB,UAEN,CAACA,OAAiB,oBAuIXioB,G,WAIX79C,aAAc,oB,0DAMU,SAACuF,GACvB,MAAuCgB,GAAU6uB,uBAC/C,CAAC7vB,EAAO8gC,UAAU3S,WAAYgN,sBAAWnzB,OAAOhI,EAAOu4C,YAAa,IACpEt+C,KAAKm1B,WAFP,mBAAOopB,EAAP,KAA2BC,EAA3B,KAMMh/C,EAAO0gC,GADA4d,GAAiCC,kBAChB,CAC5BO,WAAYvwC,OAAOhI,EAAOu4C,YAC1BE,SAAUA,IAGNj0B,EAAO,CACX,CACEoR,OAAQ4iB,EACR3iB,UAAU,EACVC,YAAY,GAEd,CACEF,OAAQ51B,EAAO8gC,UACfjL,UAAU,EACVC,YAAY,GAEd,CACEF,OAAQ51B,EAAOq9B,MACfxH,UAAU,EACVC,YAAY,GAEd,CACEF,OAAQsG,GAAc9M,UACtByG,UAAU,EACVC,YAAY,IAIhB,MAAO,CACL,IAAIH,GAAuB,CACzBvG,UAAWn1B,KAAKm1B,UAChB5K,KAAMA,EACN/qB,KAAMA,IAER++C,K,+BAIoB,SAACx4C,GACvB,IACMvG,EAAO0gC,GADA4d,GAAiCG,mBAGxC1zB,EAAO,CACX,CACEoR,OAAQ51B,EAAO04C,YACf7iB,UAAU,EACVC,YAAY,GAEd,CACEF,OAAQ51B,EAAO8gC,UACfjL,UAAU,EACVC,YAAY,IAIhB,OAAO,IAAIH,GAAuB,CAChCvG,UAAWn1B,KAAKm1B,UAChB5K,KAAMA,EACN/qB,KAAMA,M,+BAIc,SAACuG,GACvB,IACMvG,EAAO0gC,GADA4d,GAAiCI,kBAChB,CAC5BzX,UAAW1gC,EAAO0gC,UAAUvoB,KAAIwgC,YAAI,OAAIA,EAAKxiD,eAGzCquB,EAAO,CACX,CACEoR,OAAQ51B,EAAO04C,YACf7iB,UAAU,EACVC,YAAY,GAEd,CACEF,OAAQ51B,EAAO8gC,UACfjL,UAAU,EACVC,YAAY,IAmBhB,OAfI91B,EAAOq9B,OACT7Y,EAAKvlB,KACH,CACE22B,OAAQ51B,EAAOq9B,MACfxH,UAAU,EACVC,YAAY,GAEd,CACEF,OAAQsG,GAAc9M,UACtByG,UAAU,EACVC,YAAY,IAKX,IAAIH,GAAuB,CAChCvG,UAAWn1B,KAAKm1B,UAChB5K,KAAMA,EACN/qB,KAAMA,M,mCAIkB,SAACuG,GAC3B,IACMvG,EAAO0gC,GADA4d,GAAiCK,uBAGxC5zB,EAAO,CACX,CACEoR,OAAQ51B,EAAO04C,YACf7iB,UAAU,EACVC,YAAY,GAEd,CACEF,OAAQ51B,EAAO8gC,UACfjL,UAAU,EACVC,YAAY,IAIhB,OAAO,IAAIH,GAAuB,CAChCvG,UAAWn1B,KAAKm1B,UAChB5K,KAAMA,EACN/qB,KAAMA,M,8BAIa,SAACuG,GACtB,IACMvG,EAAO0gC,GADA4d,GAAiCM,kBAGxC7zB,EAAO,CACX,CACEoR,OAAQ51B,EAAO04C,YACf7iB,UAAU,EACVC,YAAY,GAEd,CACEF,OAAQ51B,EAAO8gC,UACfjL,UAAU,EACVC,YAAY,GAEd,CACEF,OAAQ51B,EAAO44C,UACf/iB,UAAU,EACVC,YAAY,IAIhB,OAAO,IAAIH,GAAuB,CAChCvG,UAAWn1B,KAAKm1B,UAChB5K,KAAMA,EACN/qB,KAAMA,Q,KAzKC6+C,GAMJlpB,UAAuB,IAAIpuB,GAChC,+C,IC1FS63C,GAAqCpjD,OAAOmd,OAItD,CACDkmC,aAAc,CACZ/mB,MAAO,EACPxnB,OAAQ8lB,UAEN,CACAA,MAAgB,eAChBA,OAAiB,SACjBA,OAAiB,oBAGrB0oB,iBAAkB,CAChBhnB,MAAO,EACPxnB,OAAQ8lB,UAEN,CAACA,MAAgB,eAAgBA,OAAiB,YAEtD2oB,oBAAqB,CACnBjnB,MAAO,EACPxnB,OAAQ8lB,UAEN,CAACA,MAAgB,eAAgBA,OAAiB,YAEtD4oB,oBAAqB,CACnBlnB,MAAO,EACPxnB,OAAQ8lB,UAEN,CAACA,MAAgB,eAAgBwK,GAAI,sBAO9Bqe,G,WAIXz+C,aAAc,oB,qDASK,SAACuF,GAClB,IACMvG,EAAO0gC,GADA0e,GAAmCC,aAClB94C,GAC9B,OAAO,IAAI21B,GAAuB,CAChCnR,KAAM,GACN4K,UAAWn1B,KAAKm1B,UAChB31B,W,8BAImB,SACrBuG,GAEA,IACMvG,EAAO0gC,GADA0e,GAAmCE,iBAClB/4C,GAC9B,OAAO,IAAI21B,GAAuB,CAChCnR,KAAM,GACN4K,UAAWn1B,KAAKm1B,UAChB31B,W,iCAIsB,SACxBuG,GAEA,IACMvG,EAAO0gC,GADA0e,GAAmCG,oBAClBh5C,GAC9B,OAAO,IAAI21B,GAAuB,CAChCnR,KAAM,GACN4K,UAAWn1B,KAAKm1B,UAChB31B,W,iCAIsB,SACxBuG,GAEA,IACMvG,EAAO0gC,GADA0e,GAAmCI,oBAClB,CAC5BE,cAAenxC,OAAOhI,EAAOm5C,iBAE/B,OAAO,IAAIxjB,GAAuB,CAChCnR,KAAM,GACN4K,UAAWn1B,KAAKm1B,UAChB31B,a,KAzDOy/C,GASJ9pB,UAAuB,IAAIpuB,GAChC,+CC1NJ,IAuBMo4C,GAA6B/oB,UAYjC,CACAA,MAAgB,iBAChBA,MAAgB,WAChBA,OAAiB,mBACjBA,OAAiB,6BACjBA,OAAiB,mBACjBA,OAAiB,6BACjBA,OAAiB,qBACjBA,OAAiB,mBACjBA,OAAiB,8B,WAOjB51B,aAAc,oB,uEAcuB,SACnCuF,GAEA,IAAOL,EAAmDK,EAAnDL,UAAW9E,EAAwCmF,EAAxCnF,QAASyF,EAA+BN,EAA/BM,UAAW+4C,EAAoBr5C,EAApBq5C,iBAEtC7vC,GArEqB,KAsEnB7J,EAAU5H,OADN,6BArEe,GAqEf,+BAEyD4H,EAAU5H,OAFnE,WAKNyR,GAzEoB,KA0ElBlJ,EAAUvI,OADN,4BAzEc,GAyEd,+BAEuDuI,EAAUvI,OAFjE,WAKN,IAAMuhD,EAAkBF,GAA2BvvC,KAC7C0vC,EAAkBD,EAAkB35C,EAAU5H,OAC9CyhD,EAAoBD,EAAkBj5C,EAAUvI,OAGhDilC,EAAkBr5B,SAAOurB,MAAMsqB,EAAoB3+C,EAAQ9C,QAE3Dg6B,EACgB,MAApBsnB,EACI,MACAA,EAqBN,OAnBAD,GAA2B5/C,OACzB,CACEigD,cAXkB,EAYlBC,QAAS,EACTH,kBACAI,0BAA2B5nB,EAC3BunB,kBACAM,0BAA2B7nB,EAC3BynB,oBACAK,gBAAiBh/C,EAAQ9C,OACzB+hD,wBAAyB/nB,GAE3BiL,GAGFA,EAAgBn1B,KAAKlI,EAAW25C,GAChCtc,EAAgBn1B,KAAKvH,EAAWi5C,GAChCvc,EAAgBn1B,KAAKhN,EAAS2+C,GAEvB,IAAI7jB,GAAuB,CAChCnR,KAAM,GACN4K,UAAW2qB,EAAe3qB,UAC1B31B,KAAMujC,M,6CAQ4B,SACpCh9B,GAEA,IAAOyE,EAAyCzE,EAAzCyE,WAAY5J,EAA6BmF,EAA7BnF,QAASw+C,EAAoBr5C,EAApBq5C,iBAE5B7vC,GA/HsB,KAgIpB/E,EAAW1M,OADP,8BA/HgB,GA+HhB,+BAE2D0M,EAAW1M,OAFtE,WAKN,IACE,IAAM2/C,EAAUj0C,GAAQC,cAAce,GAChC9E,EAAY+3C,EAAQ/3C,UAAUxJ,UAC9BmK,EAAY4B,GAAKrH,EAAS68C,EAAQ5zC,WAExC,OAAO7J,KAAK+/C,+BAA+B,CACzCr6C,YACA9E,UACAyF,YACA+4C,qBAEF,MAAO71B,GACP,MAAM,IAAI7rB,MAAJ,sCAAyC6rB,S,MAxF5C4L,UAAuB,IAAIpuB,GAChC,+CC5DJi5C,GAAgB7uB,eAAiB,SAACrM,GAA2C,IAC3E,IAAM3W,EAAIkjB,QAAKnwB,OAAOiyB,UAAQrO,GAD6C,mBAAvBm7B,EAAuB,iCAAvBA,EAAuB,kBAG3E,OADAA,EAAKzxC,SAAQpN,YAAG,OAAI+M,EAAEtN,OAAOO,MACtB+M,EAAErN,UAGJ,IAAMo/C,GAAY,SACvBlxB,EACA1lB,GAFuB,OpCs0BzB,SAAkB0lB,EAAS1lB,GAAoB,IAEvCa,EAF4BhK,EAAW,uDAAJ,GACvC,EAAuB6xB,GAAYhD,EAAS1lB,EAASnJ,EAAK8xB,cAAlDb,EAAR,EAAQA,KAAMvO,EAAd,EAAcA,EAAGjK,EAAjB,EAAiBA,EAEXunC,EAAO,IAAInvB,GAEjB,IADAmvB,EAAKC,WAAWhvB,KACPjnB,EAAMqnB,GAAS2uB,EAAKE,eAAgBx9B,EAAGjK,KAC5CunC,EAAKC,aACT,OAAOhuB,GAAYjoB,EAAKhK,GoC10BvB6/C,CAAmBhxB,EAAS1lB,EAAS,CAACipB,KAAK,EAAOC,WAAW,KACjCwtB,GAAgBptB,kBAC1C,IAAM0tB,GpCkvBN,SAAsB91C,GAAkC,IAAtBuiB,EAAsB,wDAC3D,OAAO9Q,GAAMskC,eAAe/1C,GAAY6U,WAAW0N,IqCttBjDyzB,GAA+BpqB,UAcnC,CACAA,MAAgB,iBAChBA,OAAiB,mBACjBA,MAAgB,6BAChBA,OAAiB,oBACjBA,MAAgB,8BAChBA,OAAiB,qBACjBA,OAAiB,mBACjBA,MAAgB,2BAChBA,QAAkB,GAAI,cACtBA,QAAkB,GAAI,aACtBA,MAAgB,iB,WAOhB51B,aAAc,oB,8DAac,SAC1BkF,GAEA6J,GAlFqB,KAmFnB7J,EAAU5H,OADN,6BAlFe,GAkFf,+BAEyD4H,EAAU5H,OAFnE,WAKN,IACE,OAAO4L,SAAO7L,KACZ4iD,KAAKC,WAAW7/C,OAAOqzB,GAASxuB,IAAY5E,UAC5CrC,OA3FuB,IA4FzB,MAAO8qB,GACP,MAAM,IAAI7rB,MAAJ,+CAAkD6rB,O,4CAQvB,SACnCxjB,GAEA,IAAOL,EACLK,EADKL,UAAW9E,EAChBmF,EADgBnF,QAASyF,EACzBN,EADyBM,UAAWs6C,EACpC56C,EADoC46C,WAAYvB,EAChDr5C,EADgDq5C,iBAElD,OAAOwB,EAAiBC,gCAAgC,CACtDC,WAAYF,EAAiBG,sBAAsBr7C,GACnD9E,UACAyF,YACAs6C,aACAvB,uB,6CAQkC,SACpCr5C,GAEA,IAQI+6C,EAPUE,EAKVj7C,EALF+6C,WACAlgD,EAIEmF,EAJFnF,QACAyF,EAGEN,EAHFM,UACAs6C,EAEE56C,EAFF46C,WAJF,EAMI56C,EADFq5C,wBALF,MAKqB,EALrB,EAmBA7vC,GA7I2B,MAqIvBuxC,EAFsB,kBAAfE,EACLA,EAAW1N,WAAW,MACX5pC,SAAO7L,KAAKmjD,EAAWC,OAAO,GAAI,OAElCv3C,SAAO7L,KAAKmjD,EAAY,OAG1BA,GAIFljD,OADP,0BA7IqB,GA6IrB,+BAE4DgjD,EAAWhjD,OAFvE,WAKN,IAEMwhD,EAFY,GAEkBwB,EAAWhjD,OACzCyhD,EAAoBD,EAAkBj5C,EAAUvI,OAAS,EAGzDilC,EAAkBr5B,SAAOurB,MAC7BurB,GAA6B5wC,KAAOhP,EAAQ9C,QAsB9C,OAnBA0iD,GAA6BjhD,OAC3B,CACEigD,cARkB,EASlBF,kBACAI,0BAA2BN,EAC3B8B,iBAfc,GAgBdC,2BAA4B/B,EAC5BG,oBACAK,gBAAiBh/C,EAAQ9C,OACzB+hD,wBAAyBT,EACzB/4C,UAAW6tB,GAAS7tB,GACpBy6C,WAAY5sB,GAAS4sB,GACrBH,cAEF5d,GAGFA,EAAgBn1B,KAAKsmB,GAAStzB,GAAU4/C,GAA6B5wC,MAE9D,IAAI8rB,GAAuB,CAChCnR,KAAM,GACN4K,UAAWyrB,EAAiBzrB,UAC5B31B,KAAMujC,M,6CAQ4B,SACpCh9B,GAEA,IAAmBq7C,EAAmCr7C,EAA/CyE,WAAkB5J,EAA6BmF,EAA7BnF,QAASw+C,EAAoBr5C,EAApBq5C,iBAElC7vC,GAhMsB,KAiMpB6xC,EAAKtjD,OADD,8BAhMgB,GAgMhB,+BAE2DsjD,EAAKtjD,OAFhE,WAKN,IACE,IAAM0M,EAAa0pB,GAASktB,GACtB17C,EAAY46C,GAChB91C,GACA,GACA/L,MAAM,GACF4iD,EAAc33C,SAAO7L,KACzB4iD,KAAKC,WAAW7/C,OAAOqzB,GAAStzB,IAAUE,UAE5C,EAAgCo/C,GAAUmB,EAAa72C,GAAvD,mBAAOnE,EAAP,KAAkBs6C,EAAlB,KAEA,OAAO3gD,KAAK+/C,+BAA+B,CACzCr6C,YACA9E,UACAyF,YACAs6C,aACAvB,qBAEF,MAAO71B,GACP,MAAM,IAAI7rB,MAAJ,sCAAyC6rB,S,MA/I5C4L,UAAuB,IAAIpuB,GAChC,+C,IC7DSu6C,GAAkB,IAAIv6C,GACjC,+CA+BWw6C,G,aAWX/gD,WAAYghD,EAAuBrc,EAAesc,GAAsB,yBATxED,mBASwE,OAPxErc,WAOwE,OALxEsc,eAKwE,EACtEzhD,KAAKwhD,cAAgBA,EACrBxhD,KAAKmlC,MAAQA,EACbnlC,KAAKyhD,UAAYA,KAdRF,GAoBJt0C,QAAkB,IAAIs0C,GAAO,EAAG,EAAGx6C,GAAUkG,S,IAqazCy0C,GAA4BlmD,OAAOmd,OAI7C,CACDgpC,WAAY,CACV7pB,MAAO,EACPxnB,OAAQ8lB,UAA6D,CACnEA,OAAiB,e9B5ZG,WAAqC,IAApCvmB,EAAoC,uDAAjB,aAC5C,OAAOumB,UAKL,CAAC1wB,GAAU,UAAWA,GAAU,eAAgBmK,G8BuZ9CF,G9BjZgB,WAAiC,IAAhCE,EAAgC,uDAAb,SACxC,OAAOumB,UAOL,CACEA,QAAkB,iBAClBA,QAAkB,SAClB1wB,GAAU,cAEZmK,G8BqYEF,MAGJiyC,UAAW,CACT9pB,MAAO,EACPxnB,OAAQ8lB,UAA4D,CAClEA,OAAiB,eACjBzmB,GAAiB,iBACjBymB,OAAiB,6BAGrByrB,SAAU,CACR/pB,MAAO,EACPxnB,OAAQ8lB,UAA2D,CACjEA,OAAiB,kBAGrB0rB,MAAO,CACLhqB,MAAO,EACPxnB,OAAQ8lB,UAAwD,CAC9DA,OAAiB,eACjBA,QAAkB,eAGtB2rB,SAAU,CACRjqB,MAAO,EACPxnB,OAAQ8lB,UAA2D,CACjEA,OAAiB,eACjBA,QAAkB,eAGtB4rB,WAAY,CACVlqB,MAAO,EACPxnB,OAAQ8lB,UAA6D,CACnEA,OAAiB,kBAGrB6rB,MAAO,CACLnqB,MAAO,EACPxnB,OAAQ8lB,UAAwD,CAC9DA,OAAiB,kBAGrB8rB,kBAAmB,CACjBpqB,MAAO,EACPxnB,OAAQ8lB,UACN,CACEA,OAAiB,eACjBzmB,GAAiB,iBACjBymB,OAAiB,0BACjBzmB,GAAkB,iBAClBA,GAAiB,uBA6BZwyC,IAZ2B3mD,OAAOmd,OAAO,CACpDypC,OAAQ,CACNtqB,MAAO,GAETuqB,WAAY,CACVvqB,MAAO,K,WAWTt3B,aAAc,oB,mDAqBG,SAACuF,GAChB,IAAOu8C,EAAgDv8C,EAAhDu8C,YAAaxf,EAAmC/8B,EAAnC+8B,WACdyf,EADiDx8C,EAAvBw8C,QACMhB,GAAOt0C,QAEvCzN,EAAO0gC,GADAwhB,GAA0BC,WACT,CAC5B7e,WAAY,CACV0f,OAAQtuB,GAAS4O,EAAW0f,OAAOtuB,YACnCuuB,WAAYvuB,GAAS4O,EAAW2f,WAAWvuB,aAE7CquB,OAAQ,CACNf,cAAee,EAAOf,cACtBrc,MAAOod,EAAOpd,MACdsc,UAAWvtB,GAASquB,EAAOd,UAAUvtB,eAGnC6O,EAAkB,CACtBxY,KAAM,CACJ,CAACoR,OAAQ2mB,EAAa1mB,UAAU,EAAOC,YAAY,GACnD,CAACF,OAAQyD,GAAoBxD,UAAU,EAAOC,YAAY,IAE5D1G,UAAWn1B,KAAKm1B,UAChB31B,QAEF,OAAO,IAAIk8B,GAAuBqH,K,mCAOR,SAC1Bh9B,GAEA,IAAMC,EAAc,IAAI81B,GACxB91B,EAAYsV,IACV2mB,GAAcQ,sBAAsB,CAClCL,WAAYr8B,EAAOq8B,WACnBC,iBAAkBt8B,EAAOu8C,YACzBhgB,WAAYv8B,EAAOu8B,WACnBlR,KAAMrrB,EAAOqrB,KACb8Q,SAAUn8B,EAAOm8B,SACjBC,MAAOniC,KAAKmiC,MACZhN,UAAWn1B,KAAKm1B,aAIpB,IAAOmtB,EAAmCv8C,EAAnCu8C,YAAaxf,EAAsB/8B,EAAtB+8B,WAAYyf,EAAUx8C,EAAVw8C,OAChC,OAAOv8C,EAAYsV,IAAItb,KAAK0iD,WAAW,CAACJ,cAAaxf,aAAYyf,c,2BAM/C,SAACx8C,GACnB,IAAMC,EAAc,IAAI81B,GACxB91B,EAAYsV,IACV2mB,GAAcU,cAAc,CAC1BP,WAAYr8B,EAAOq8B,WACnBC,iBAAkBt8B,EAAOu8C,YACzBpgB,SAAUn8B,EAAOm8B,SACjBC,MAAOniC,KAAKmiC,MACZhN,UAAWn1B,KAAKm1B,aAIpB,IAAOmtB,EAAmCv8C,EAAnCu8C,YAAaxf,EAAsB/8B,EAAtB+8B,WAAYyf,EAAUx8C,EAAVw8C,OAChC,OAAOv8C,EAAYsV,IAAItb,KAAK0iD,WAAW,CAACJ,cAAaxf,aAAYyf,c,sBAQpD,SAACx8C,GACd,IAAOu8C,EAA6Cv8C,EAA7Cu8C,YAAa7hB,EAAgC16B,EAAhC06B,iBAAkB0M,EAAcpnC,EAAdonC,WAGhC3tC,EAAO0gC,GADAwhB,GAA0BG,UAGvC,OAAO,IAAI/lB,IAAcxgB,IAAI,CAC3BiP,KAAM,CACJ,CAACoR,OAAQ2mB,EAAa1mB,UAAU,EAAOC,YAAY,GACnD,CAACF,OAAQwR,EAAYvR,UAAU,EAAOC,YAAY,GAClD,CAACF,OAAQuD,GAAqBtD,UAAU,EAAOC,YAAY,GAC3D,CACEF,OAAQ0D,GACRzD,UAAU,EACVC,YAAY,GAEd,CAACF,OAAQ2lB,GAAiB1lB,UAAU,EAAOC,YAAY,GACvD,CAACF,OAAQ8E,EAAkB7E,UAAU,EAAMC,YAAY,IAEzD1G,UAAWn1B,KAAKm1B,UAChB31B,W,uBAQY,SAACuG,GACf,IACEu8C,EAKEv8C,EALFu8C,YACA7hB,EAIE16B,EAJF06B,iBACAuC,EAGEj9B,EAHFi9B,oBACA2f,EAEE58C,EAFF48C,uBACAC,EACE78C,EADF68C,gBAIIpjD,EAAO0gC,GADAwhB,GAA0BE,UACT,CAC5BiB,cAAe3uB,GAAS8O,EAAoB9O,YAC5CyuB,uBAAwBA,EAAuB7qB,QAG3CvN,EAAO,CACX,CAACoR,OAAQ2mB,EAAa1mB,UAAU,EAAOC,YAAY,GACnD,CAACF,OAAQuD,GAAqBtD,UAAU,EAAOC,YAAY,GAC3D,CAACF,OAAQ8E,EAAkB7E,UAAU,EAAMC,YAAY,IAKzD,OAHI+mB,GACFr4B,EAAKvlB,KAAK,CAAC22B,OAAQinB,EAAiBhnB,UAAU,EAAOC,YAAY,KAE5D,IAAIC,IAAcxgB,IAAI,CAC3BiP,OACA4K,UAAWn1B,KAAKm1B,UAChB31B,W,+BAQoB,SAACuG,GACvB,IACEu8C,EAOEv8C,EAPFu8C,YACAQ,EAME/8C,EANF+8C,cACAC,EAKEh9C,EALFg9C,cACAC,EAIEj9C,EAJFi9C,eACAhgB,EAGEj9B,EAHFi9B,oBACA2f,EAEE58C,EAFF48C,uBACAC,EACE78C,EADF68C,gBAIIpjD,EAAO0gC,GADAwhB,GAA0BQ,kBACT,CAC5BW,cAAe3uB,GAAS8O,EAAoB9O,YAC5CyuB,uBAAwBA,EAAuB7qB,MAC/CirB,cAAeA,EACfC,eAAgB9uB,GAAS8uB,EAAe9uB,cAGpC3J,EAAO,CACX,CAACoR,OAAQ2mB,EAAa1mB,UAAU,EAAOC,YAAY,GACnD,CAACF,OAAQmnB,EAAelnB,UAAU,EAAMC,YAAY,GACpD,CAACF,OAAQuD,GAAqBtD,UAAU,EAAOC,YAAY,IAK7D,OAHI+mB,GACFr4B,EAAKvlB,KAAK,CAAC22B,OAAQinB,EAAiBhnB,UAAU,EAAOC,YAAY,KAE5D,IAAIC,IAAcxgB,IAAI,CAC3BiP,OACA4K,UAAWn1B,KAAKm1B,UAChB31B,W,8BAOmB,SAACuG,GACtB,IAAOu8C,EAA6Dv8C,EAA7Du8C,YAAa7hB,EAAgD16B,EAAhD06B,iBAAkBwiB,EAA8Bl9C,EAA9Bk9C,iBAAkB/gB,EAAYn8B,EAAZm8B,SAElD1iC,EAAO0gC,GADAwhB,GAA0BI,MACT,CAAC5f,aAC/B,OAAO,IAAIxG,GAAuB,CAChCnR,KAAM,CACJ,CAACoR,OAAQ2mB,EAAa1mB,UAAU,EAAOC,YAAY,GACnD,CAACF,OAAQsnB,EAAkBrnB,UAAU,EAAOC,YAAY,GACxD,CAACF,OAAQ8E,EAAkB7E,UAAU,EAAMC,YAAY,IAEzD1G,UAAWn1B,KAAKm1B,UAChB31B,W,mBAOQ,SAACuG,GACX,IAAMC,EAAc,IAAI81B,GAUxB,OATA91B,EAAYsV,IACV2mB,GAAcU,cAAc,CAC1BP,WAAYr8B,EAAO06B,iBACnB4B,iBAAkBt8B,EAAOk9C,iBACzB/gB,SAAU,EACVC,MAAOniC,KAAKmiC,MACZhN,UAAWn1B,KAAKm1B,aAGbnvB,EAAYsV,IAAItb,KAAKkjD,iBAAiBn9C,M,2BAO3B,SAACA,GACnB,IACEu8C,EAMEv8C,EANFu8C,YACA7hB,EAKE16B,EALF06B,iBACAwiB,EAIEl9C,EAJFk9C,iBACA3gB,EAGEv8B,EAHFu8B,WACAlR,EAEErrB,EAFFqrB,KACA8Q,EACEn8B,EADFm8B,SAEIl8B,EAAc,IAAI81B,GAUxB,OATA91B,EAAYsV,IACV2mB,GAAc0B,SAAS,CACrBnB,cAAeygB,EACf3gB,aACAlR,OACA+Q,MAAOniC,KAAKmiC,MACZhN,UAAWn1B,KAAKm1B,aAGbnvB,EAAYsV,IACjBtb,KAAKkjD,iBAAiB,CACpBZ,cACA7hB,mBACAwiB,mBACA/gB,gB,mBAQM,SAACn8B,GACX,IAAOu8C,EAAoDv8C,EAApDu8C,YAAaa,EAAuCp9C,EAAvCo9C,kBAAmB1iB,EAAoB16B,EAApB06B,iBAEjCjhC,EAAO0gC,GADAwhB,GAA0BO,OAGvC,OAAO,IAAInmB,IAAcxgB,IAAI,CAC3BiP,KAAM,CACJ,CAACoR,OAAQ2mB,EAAa1mB,UAAU,EAAOC,YAAY,GACnD,CAACF,OAAQwnB,EAAmBvnB,UAAU,EAAOC,YAAY,GACzD,CAACF,OAAQuD,GAAqBtD,UAAU,EAAOC,YAAY,GAC3D,CACEF,OAAQ0D,GACRzD,UAAU,EACVC,YAAY,GAEd,CAACF,OAAQ8E,EAAkB7E,UAAU,EAAMC,YAAY,IAEzD1G,UAAWn1B,KAAKm1B,UAChB31B,W,sBAOW,SAACuG,GACd,IAAOu8C,EACLv8C,EADKu8C,YAAa7hB,EAClB16B,EADkB06B,iBAAkB8B,EACpCx8B,EADoCw8B,SAAUL,EAC9Cn8B,EAD8Cm8B,SAAU0gB,EACxD78C,EADwD68C,gBAGpDpjD,EAAO0gC,GADAwhB,GAA0BK,SACT,CAAC7f,aAEzB3X,EAAO,CACX,CAACoR,OAAQ2mB,EAAa1mB,UAAU,EAAOC,YAAY,GACnD,CAACF,OAAQ4G,EAAU3G,UAAU,EAAOC,YAAY,GAChD,CAACF,OAAQuD,GAAqBtD,UAAU,EAAOC,YAAY,GAC3D,CACEF,OAAQ0D,GACRzD,UAAU,EACVC,YAAY,GAEd,CAACF,OAAQ8E,EAAkB7E,UAAU,EAAMC,YAAY,IAKzD,OAHI+mB,GACFr4B,EAAKvlB,KAAK,CAAC22B,OAAQinB,EAAiBhnB,UAAU,EAAOC,YAAY,KAE5D,IAAIC,IAAcxgB,IAAI,CAC3BiP,OACA4K,UAAWn1B,KAAKm1B,UAChB31B,W,wBAOa,SAACuG,GAChB,IAAOu8C,EAAiCv8C,EAAjCu8C,YAAa7hB,EAAoB16B,EAApB06B,iBAEdjhC,EAAO0gC,GADAwhB,GAA0BM,YAGvC,OAAO,IAAIlmB,IAAcxgB,IAAI,CAC3BiP,KAAM,CACJ,CAACoR,OAAQ2mB,EAAa1mB,UAAU,EAAOC,YAAY,GACnD,CAACF,OAAQuD,GAAqBtD,UAAU,EAAOC,YAAY,GAC3D,CAACF,OAAQ8E,EAAkB7E,UAAU,EAAMC,YAAY,IAEzD1G,UAAWn1B,KAAKm1B,UAChB31B,a,MA7UO2iD,GASJhtB,UAAuB,IAAIpuB,GAChC,+CAVSo7C,GAoBJhgB,MAAgB,I,ICrXnBihB,GAA2B5nD,OAAOmd,OAIrC,CACD0qC,kBAAmB,CACjBvrB,MAAO,EACPxnB,OAAQ8lB,UAAmE,CACzEA,OAAiB,e/BrHC,WAAmC,IAAlCvmB,EAAkC,uDAAf,WAC1C,OAAOumB,UAQL,CACE1wB,GAAU,cACVA,GAAU,mBACVA,GAAU,wBACV0wB,MAAgB,eAElBvmB,G+BuGEF,MAGJiyC,UAAW,CACT9pB,MAAO,EACPxnB,OAAQ8lB,UAA2D,CACjEA,OAAiB,eACjBzmB,GAAiB,iBACjBymB,OAAiB,4BAGrB2rB,SAAU,CACRjqB,MAAO,EACPxnB,OAAQ8lB,UAA0D,CAChEA,OAAiB,eACjBA,QAAkB,iBA4BXktB,IAZ0B9nD,OAAOmd,OAAO,CACnD4qC,MAAO,CACLzrB,MAAO,GAETuqB,WAAY,CACVvqB,MAAO,K,WAWTt3B,aAAc,oB,0DAqBU,SACtBuF,GAEA,IAAOonC,EAAoCpnC,EAApConC,WAAYC,EAAwBrnC,EAAxBqnC,WAAYoW,EAAYz9C,EAAZy9C,SAEzBhkD,EAAO0gC,GADAkjB,GAAyBC,kBACR,CAC5BG,SAAU,CACRpW,WAAYlZ,GAASsvB,EAASpW,WAAWlZ,YACzCuvB,gBAAiBvvB,GAASsvB,EAASC,gBAAgBvvB,YACnDwvB,qBAAsBxvB,GACpBsvB,EAASE,qBAAqBxvB,YAEhCsZ,WAAYgW,EAAShW,cAGnBzK,EAAkB,CACtBxY,KAAM,CACJ,CAACoR,OAAQwR,EAAYvR,UAAU,EAAOC,YAAY,GAClD,CAACF,OAAQyD,GAAoBxD,UAAU,EAAOC,YAAY,GAC1D,CAACF,OAAQuD,GAAqBtD,UAAU,EAAOC,YAAY,GAC3D,CAACF,OAAQyR,EAAYxR,UAAU,EAAMC,YAAY,IAEnD1G,UAAWn1B,KAAKm1B,UAChB31B,QAEF,OAAO,IAAIk8B,GAAuBqH,K,2BAMhB,SAACh9B,GACnB,IAAMC,EAAc,IAAI81B,GAWxB,OAVA91B,EAAYsV,IACV2mB,GAAcU,cAAc,CAC1BP,WAAYr8B,EAAOq8B,WACnBC,iBAAkBt8B,EAAOonC,WACzBjL,SAAUn8B,EAAOm8B,SACjBC,MAAOniC,KAAKmiC,MACZhN,UAAWn1B,KAAKm1B,aAIbnvB,EAAYsV,IACjBtb,KAAK2jD,kBAAkB,CACrBxW,WAAYpnC,EAAOonC,WACnBC,WAAYrnC,EAAOy9C,SAASpW,WAC5BoW,SAAUz9C,EAAOy9C,c,uBAQP,SAACz9C,GACf,IACEonC,EAIEpnC,EAJFonC,WACA1M,EAGE16B,EAHF06B,iBACAuC,EAEEj9B,EAFFi9B,oBACA4gB,EACE79C,EADF69C,sBAIIpkD,EAAO0gC,GADAkjB,GAAyBxB,UACR,CAC5BiB,cAAe3uB,GAAS8O,EAAoB9O,YAC5C0vB,sBAAuBA,EAAsB9rB,QAGzCvN,EAAO,CACX,CAACoR,OAAQwR,EAAYvR,UAAU,EAAOC,YAAY,GAClD,CAACF,OAAQuD,GAAqBtD,UAAU,EAAOC,YAAY,GAC3D,CAACF,OAAQ8E,EAAkB7E,UAAU,EAAMC,YAAY,IAGzD,OAAO,IAAIC,IAAcxgB,IAAI,CAC3BiP,OACA4K,UAAWn1B,KAAKm1B,UAChB31B,W,sBAOW,SAACuG,GACd,IAAOonC,EAA8DpnC,EAA9DonC,WAAY0W,EAAkD99C,EAAlD89C,2BAA4B3hB,EAAsBn8B,EAAtBm8B,SAAUK,EAAYx8B,EAAZw8B,SAEnD/iC,EAAO0gC,GADAkjB,GAAyBrB,SACR,CAAC7f,aAEzB3X,EAAO,CACX,CAACoR,OAAQwR,EAAYvR,UAAU,EAAOC,YAAY,GAClD,CAACF,OAAQ4G,EAAU3G,UAAU,EAAOC,YAAY,GAChD,CAACF,OAAQkoB,EAA4BjoB,UAAU,EAAMC,YAAY,IAGnE,OAAO,IAAIC,IAAcxgB,IAAI,CAC3BiP,OACA4K,UAAWn1B,KAAKm1B,UAChB31B,W,0BAYe,SACjBuG,EACA+9C,EACAC,GAEA,GAAIh+C,EAAOm8B,SAAW4hB,EAA4BC,EAChD,MAAM,IAAIrmD,MACR,4DAGJ,OAAO4lD,EAAYU,SAASj+C,O,MAlJnBu9C,GASJnuB,UAAuB,IAAIpuB,GAChC,+CAVSu8C,GAoBJnhB,MAAgB,KCrSS,IAAIp7B,GACpC,+CAyBiBsgC,GAAK,CACtB97B,KAAM6e,KACN65B,QAASj6B,GAASI,MAClB85B,QAASl6B,GAASI,MAClB+5B,gBAAiBn6B,GAASI,QCnCG,IAAIrjB,GACjC,+CAoEwBqvB,UAAqC,CAC7DzmB,GAAiB,cACjBA,GAAiB,wBACjBymB,MAAgB,cAChBA,UACAA,OACEA,UAAoB,CAClBA,QAAkB,QAClBA,OAAiB,uBAEnBA,UAAoBA,UAAqB,GACzC,SAEFA,MAAgB,iBAChBA,QAAkB,YAClBA,UACAA,OACEA,UAAoB,CAClBA,QAAkB,SAClBzmB,GAAiB,qBAEnBymB,UAAoBA,UAAqB,GACzC,oBAEFA,UACE,CACEA,OACEA,UAAoB,CAClBzmB,GAAiB,oBACjBymB,QAAkB,+BAClBA,QAAkB,iBAEpB,GACA,OAEFA,QAAkB,OAClBA,MAAgB,YAElB,eAEFA,UACAA,OACEA,UAAoB,CAClBA,QAAkB,SAClBA,QAAkB,WAClBA,QAAkB,iBAEpBA,UAAoBA,UAAqB,GACzC,gBAEFA,UACE,CAACA,QAAkB,QAASA,QAAkB,cAC9C,oB,uHC/HJ56B,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ0oD,OAAS1oD,EAAQ2oD,WAAa3oD,EAAQ4pB,OAAS5pB,EAAQ4oD,YAAS,EACxE,IAAMC,EAAaznD,EAAQ,MACrB0nD,EAAY1nD,EAAQ,MACpB6P,EAAa7P,EAAQ,MAG3B,IAA+B0nD,EAAUv3C,QAAQqF,MAAM,CACnD,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,sBACpE4L,KAAI,SAAArP,GAAC,OAAId,OAAOc,OArBlB,GAAO41C,EAAP,KAAkBC,EAAlB,KAuBMC,EAAa,IAAIvnD,YAAY,IAC7BwnD,EAAa,IAAIxnD,YAAY,IAC7BknD,E,8BACF,aAAc,wBACV,cAAM,IAAK,GAAI,IAAI,IAKdO,GAAK,WACV,EAAKC,IAAK,UACV,EAAKC,IAAK,WACV,EAAKC,IAAK,WACV,EAAKC,GAAK,WACV,EAAKC,IAAK,SACV,EAAKC,IAAK,WACV,EAAKC,GAAK,WACV,EAAKC,GAAK,WACV,EAAKC,IAAK,WACV,EAAKC,IAAK,WACV,EAAKC,GAAK,UACV,EAAKC,GAAK,UACV,EAAKC,IAAK,SACV,EAAKC,GAAK,WACV,EAAKC,GAAK,UArBA,E,6BAwBd,WAEI,MAAO,CADoE5lD,KAAnE6kD,GAAmE7kD,KAA/D8kD,GAA+D9kD,KAA3D+kD,GAA2D/kD,KAAvDglD,GAAuDhlD,KAAnDilD,GAAmDjlD,KAA/CklD,GAA+CllD,KAA3CmlD,GAA2CnlD,KAAvColD,GAAuCplD,KAAnCqlD,GAAmCrlD,KAA/BslD,GAA+BtlD,KAA3BulD,GAA2BvlD,KAAvBwlD,GAAuBxlD,KAAnBylD,GAAmBzlD,KAAf0lD,GAAe1lD,KAAX2lD,GAAW3lD,KAAP4lD,M,iBAIxE,SAAIf,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAC5D5lD,KAAK6kD,GAAU,EAALA,EACV7kD,KAAK8kD,GAAU,EAALA,EACV9kD,KAAK+kD,GAAU,EAALA,EACV/kD,KAAKglD,GAAU,EAALA,EACVhlD,KAAKilD,GAAU,EAALA,EACVjlD,KAAKklD,GAAU,EAALA,EACVllD,KAAKmlD,GAAU,EAALA,EACVnlD,KAAKolD,GAAU,EAALA,EACVplD,KAAKqlD,GAAU,EAALA,EACVrlD,KAAKslD,GAAU,EAALA,EACVtlD,KAAKulD,GAAU,EAALA,EACVvlD,KAAKwlD,GAAU,EAALA,EACVxlD,KAAKylD,GAAU,EAALA,EACVzlD,KAAK0lD,GAAU,EAALA,EACV1lD,KAAK2lD,GAAU,EAALA,EACV3lD,KAAK4lD,GAAU,EAALA,I,qBAEd,SAAQ54C,EAAM+C,GAEV,IAAK,IAAI/R,EAAI,EAAGA,EAAI,GAAIA,IAAK+R,GAAU,EACnC40C,EAAW3mD,GAAKgP,EAAK64C,UAAU91C,GAC/B60C,EAAW5mD,GAAKgP,EAAK64C,UAAW91C,GAAU,GAE9C,IAAK,IAAI/R,EAAI,GAAIA,EAAI,GAAIA,IAAK,CAE1B,IAAM8nD,EAA4B,EAArBnB,EAAW3mD,EAAI,IACtB+nD,EAA4B,EAArBnB,EAAW5mD,EAAI,IACtBgoD,EAAMxB,EAAUv3C,QAAQg5C,OAAOH,EAAMC,EAAM,GAAKvB,EAAUv3C,QAAQg5C,OAAOH,EAAMC,EAAM,GAAKvB,EAAUv3C,QAAQi5C,MAAMJ,EAAMC,EAAM,GAC9HI,EAAM3B,EAAUv3C,QAAQm5C,OAAON,EAAMC,EAAM,GAAKvB,EAAUv3C,QAAQm5C,OAAON,EAAMC,EAAM,GAAKvB,EAAUv3C,QAAQo5C,MAAMP,EAAMC,EAAM,GAE9HO,EAA0B,EAApB3B,EAAW3mD,EAAI,GACrBuoD,EAA0B,EAApB3B,EAAW5mD,EAAI,GACrBwoD,EAAMhC,EAAUv3C,QAAQg5C,OAAOK,EAAKC,EAAK,IAAM/B,EAAUv3C,QAAQw5C,OAAOH,EAAKC,EAAK,IAAM/B,EAAUv3C,QAAQi5C,MAAMI,EAAKC,EAAK,GAC1HG,EAAMlC,EAAUv3C,QAAQm5C,OAAOE,EAAKC,EAAK,IAAM/B,EAAUv3C,QAAQ05C,OAAOL,EAAKC,EAAK,IAAM/B,EAAUv3C,QAAQo5C,MAAMC,EAAKC,EAAK,GAE1HK,EAAOpC,EAAUv3C,QAAQ45C,MAAMV,EAAKO,EAAK9B,EAAW5mD,EAAI,GAAI4mD,EAAW5mD,EAAI,KAC3E8oD,EAAOtC,EAAUv3C,QAAQ85C,MAAMH,EAAMZ,EAAKQ,EAAK7B,EAAW3mD,EAAI,GAAI2mD,EAAW3mD,EAAI,KACvF2mD,EAAW3mD,GAAY,EAAP8oD,EAChBlC,EAAW5mD,GAAY,EAAP4oD,EAEpB,IAAM/B,EAAmE7kD,KAAnE6kD,GAAIC,EAA+D9kD,KAA/D8kD,GAAIC,EAA2D/kD,KAA3D+kD,GAAIC,EAAuDhlD,KAAvDglD,GAAIC,EAAmDjlD,KAAnDilD,GAAIC,EAA+CllD,KAA/CklD,GAAIC,EAA2CnlD,KAA3CmlD,GAAIC,EAAuCplD,KAAvColD,GAAIC,EAAmCrlD,KAAnCqlD,GAAIC,EAA+BtlD,KAA/BslD,GAAIC,EAA2BvlD,KAA3BulD,GAAIC,EAAuBxlD,KAAvBwlD,GAAIC,EAAmBzlD,KAAnBylD,GAAIC,EAAe1lD,KAAf0lD,GAAIC,EAAW3lD,KAAX2lD,GAAIC,EAAO5lD,KAAP4lD,GAElE,IAAS5nD,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAEzB,IAAMgpD,EAAUxC,EAAUv3C,QAAQg5C,OAAOZ,EAAIC,EAAI,IAAMd,EAAUv3C,QAAQg5C,OAAOZ,EAAIC,EAAI,IAAMd,EAAUv3C,QAAQw5C,OAAOpB,EAAIC,EAAI,IACzH2B,EAAUzC,EAAUv3C,QAAQm5C,OAAOf,EAAIC,EAAI,IAAMd,EAAUv3C,QAAQm5C,OAAOf,EAAIC,EAAI,IAAMd,EAAUv3C,QAAQ05C,OAAOtB,EAAIC,EAAI,IAEzH4B,EAAQ7B,EAAKE,GAAQF,EAAKI,EAC1B0B,EAAQ7B,EAAKE,GAAQF,EAAKI,EAG1B0B,EAAO5C,EAAUv3C,QAAQo6C,MAAMzB,EAAIqB,EAASE,EAAMzC,EAAU1mD,GAAI4mD,EAAW5mD,IAC3EspD,EAAM9C,EAAUv3C,QAAQs6C,MAAMH,EAAMzB,EAAIqB,EAASE,EAAMzC,EAAUzmD,GAAI2mD,EAAW3mD,IAChFwpD,EAAa,EAAPJ,EAENK,EAAUjD,EAAUv3C,QAAQg5C,OAAOpB,EAAIC,EAAI,IAAMN,EAAUv3C,QAAQw5C,OAAO5B,EAAIC,EAAI,IAAMN,EAAUv3C,QAAQw5C,OAAO5B,EAAIC,EAAI,IACzH4C,EAAUlD,EAAUv3C,QAAQm5C,OAAOvB,EAAIC,EAAI,IAAMN,EAAUv3C,QAAQ05C,OAAO9B,EAAIC,EAAI,IAAMN,EAAUv3C,QAAQ05C,OAAO9B,EAAIC,EAAI,IACzH6C,EAAQ9C,EAAKE,EAAOF,EAAKI,EAAOF,EAAKE,EACrC2C,EAAQ9C,EAAKE,EAAOF,EAAKI,EAAOF,EAAKE,EAC3CS,EAAU,EAALF,EACLG,EAAU,EAALF,EACLD,EAAU,EAALF,EACLG,EAAU,EAALF,EACLD,EAAU,EAALF,EACLG,EAAU,EAALF,EAtBoB,MAuBLd,EAAUv3C,QAAQqO,IAAS,EAAL6pC,EAAa,EAALC,EAAc,EAANkC,EAAe,EAANE,GAA7DnC,EAvBmB,EAuBtBl3C,EAAUm3C,EAvBY,EAuBfl3C,EACV+2C,EAAU,EAALF,EACLG,EAAU,EAALF,EACLD,EAAU,EAALF,EACLG,EAAU,EAALF,EACLD,EAAU,EAALF,EACLG,EAAU,EAALF,EACL,IAAM+C,EAAMrD,EAAUv3C,QAAQ66C,MAAMN,EAAKE,EAASE,GAClD/C,EAAKL,EAAUv3C,QAAQ86C,MAAMF,EAAKP,EAAKG,EAASE,GAChD7C,EAAW,EAAN+C,EAzDS,MA4DErD,EAAUv3C,QAAQqO,IAAc,EAAVtb,KAAK6kD,GAAkB,EAAV7kD,KAAK8kD,GAAa,EAALD,EAAa,EAALC,GAAtED,EA5DY,EA4Df12C,EAAU22C,EA5DK,EA4DR12C,EA5DQ,MA6DEo2C,EAAUv3C,QAAQqO,IAAc,EAAVtb,KAAK+kD,GAAkB,EAAV/kD,KAAKglD,GAAa,EAALD,EAAa,EAALC,GAAtED,EA7DY,EA6Df52C,EAAU62C,EA7DK,EA6DR52C,EA7DQ,MA8DEo2C,EAAUv3C,QAAQqO,IAAc,EAAVtb,KAAKilD,GAAkB,EAAVjlD,KAAKklD,GAAa,EAALD,EAAa,EAALC,GAAtED,EA9DY,EA8Df92C,EAAU+2C,EA9DK,EA8DR92C,EA9DQ,MA+DEo2C,EAAUv3C,QAAQqO,IAAc,EAAVtb,KAAKmlD,GAAkB,EAAVnlD,KAAKolD,GAAa,EAALD,EAAa,EAALC,GAAtED,EA/DY,EA+Dfh3C,EAAUi3C,EA/DK,EA+DRh3C,EA/DQ,MAgEEo2C,EAAUv3C,QAAQqO,IAAc,EAAVtb,KAAKqlD,GAAkB,EAAVrlD,KAAKslD,GAAa,EAALD,EAAa,EAALC,GAAtED,EAhEY,EAgEfl3C,EAAUm3C,EAhEK,EAgERl3C,EAhEQ,MAiEEo2C,EAAUv3C,QAAQqO,IAAc,EAAVtb,KAAKulD,GAAkB,EAAVvlD,KAAKwlD,GAAa,EAALD,EAAa,EAALC,GAAtED,EAjEY,EAiEfp3C,EAAUq3C,EAjEK,EAiERp3C,EAjEQ,OAkEEo2C,EAAUv3C,QAAQqO,IAAc,EAAVtb,KAAKylD,GAAkB,EAAVzlD,KAAK0lD,GAAa,EAALD,EAAa,EAALC,GAAtED,EAlEY,GAkEft3C,EAAUu3C,EAlEK,GAkERt3C,EAlEQ,OAmEEo2C,EAAUv3C,QAAQqO,IAAc,EAAVtb,KAAK2lD,GAAkB,EAAV3lD,KAAK4lD,GAAa,EAALD,EAAa,EAALC,GAAtED,EAnEY,GAmEfx3C,EAAUy3C,EAnEK,GAmERx3C,EACVpO,KAAKD,IAAI8kD,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,K,wBAEzE,WACIjB,EAAW/2C,KAAK,GAChBg3C,EAAWh3C,KAAK,K,qBAEpB,WACI5N,KAAK/C,OAAO2Q,KAAK,GACjB5N,KAAKD,IAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,O,GA5HzCwkD,EAAW93C,MA+HhC/Q,EAAQ4oD,OAASA,E,IACX0D,E,8BACF,aAAc,wBACV,gBAEKnD,GAAK,UACV,EAAKC,IAAK,SACV,EAAKC,IAAK,WACV,EAAKC,IAAK,UACV,EAAKC,GAAK,UACV,EAAKC,GAAK,WACV,EAAKC,IAAK,WACV,EAAKC,GAAK,WACV,EAAKC,IAAK,WACV,EAAKC,IAAK,WACV,EAAKC,IAAK,WACV,EAAKC,GAAK,WACV,EAAKC,GAAK,UACV,EAAKC,GAAK,UACV,EAAKC,GAAK,UACV,EAAKC,IAAK,WACV,EAAK5kD,UAAY,GAnBP,E,aADOsjD,GAuBnB2D,E,8BACF,aAAc,wBACV,gBAEKpD,IAAK,UACV,EAAKC,IAAK,WACV,EAAKC,GAAK,WACV,EAAKC,GAAK,UACV,EAAKC,IAAK,WACV,EAAKC,GAAK,UACV,EAAKC,GAAK,UACV,EAAKC,IAAK,UACV,EAAKC,GAAK,WACV,EAAKC,IAAK,QACV,EAAKC,IAAK,WACV,EAAKC,GAAK,WACV,EAAKC,IAAK,UACV,EAAKC,GAAK,WACV,EAAKC,GAAK,WACV,EAAKC,IAAK,WACV,EAAK5kD,UAAY,GAnBP,E,aADGsjD,GAuBrB5oD,EAAQ4pB,QAAS,EAAI3Y,EAAW7Q,kBAAiB,kBAAM,IAAIwoD,KAC3D5oD,EAAQ2oD,YAAa,EAAI13C,EAAW7Q,kBAAiB,kBAAM,IAAIksD,KAC/DtsD,EAAQ0oD,QAAS,EAAIz3C,EAAW7Q,kBAAiB,kBAAM,IAAImsD,M,kCChN3DzsD,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ4F,YAAS,EACjB5F,EAAQ4F,OAAS,CACbG,UAAMrB,EACNmB,IAAqB,kBAAT6kB,MAAqB,WAAYA,KAAOA,KAAK9kB,YAASlB,I,kCCJtE5E,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ4f,IAAM5f,EAAQwsD,MAAQxsD,EAAQ4W,MAAQ5W,EAAQysD,aAAU,EAChE,IAAMC,EAAar6C,OAAO,WAAK,IAAK,GAC9BD,EAAOC,OAAO,IAEpB,SAASo6C,EAAQt5C,GAAe,IAAZw5C,EAAY,wDAC5B,OAAIA,EACO,CAAEl6C,EAAGxP,OAAOkQ,EAAIu5C,GAAah6C,EAAGzP,OAAQkQ,GAAKf,EAAQs6C,IACzD,CAAEj6C,EAAsC,EAAnCxP,OAAQkQ,GAAKf,EAAQs6C,GAAiBh6C,EAA4B,EAAzBzP,OAAOkQ,EAAIu5C,IAGpE,SAAS91C,EAAMg2C,GAGX,IAH4B,IAAZD,EAAY,wDACxBxD,EAAK,IAAIznD,YAAYkrD,EAAIxqD,QACzBgnD,EAAK,IAAI1nD,YAAYkrD,EAAIxqD,QACpBE,EAAI,EAAGA,EAAIsqD,EAAIxqD,OAAQE,IAAK,CACjC,MAAiBmqD,EAAQG,EAAItqD,GAAIqqD,GAAzBl6C,EAAR,EAAQA,EAAGC,EAAX,EAAWA,EADsB,EAEhB,CAACD,EAAGC,GAApBy2C,EAAG7mD,GAF6B,KAEzB8mD,EAAG9mD,GAFsB,KAIrC,MAAO,CAAC6mD,EAAIC,GARhBppD,EAAQysD,QAAUA,EAUlBzsD,EAAQ4W,MAAQA,EAEhB5W,EAAQwsD,MADM,SAAC/5C,EAAGC,GAAJ,OAAWL,OAAOI,IAAM,IAAML,EAAQC,OAAOK,IAAM,IAuBjE,SAASkN,EAAIupC,EAAIC,EAAIC,EAAIC,GACrB,IAAM52C,GAAK02C,IAAO,IAAME,IAAO,GAC/B,MAAO,CAAE72C,EAAI02C,EAAKE,GAAO32C,EAAI,KAAH,IAAG,EAAK,IAAM,GAAM,EAAGA,EAAO,EAAJA,GAExD1S,EAAQ4f,IAAMA,EAEd,IAOMslB,EAAM,CACRunB,UAAS71C,QAAO41C,MAAOxsD,EAAQwsD,MAC/BhC,MAnCU,SAAC/3C,EAAGC,EAAG+Q,GAAP,OAAahR,IAAMgR,GAmCtBknC,MAlCG,SAACl4C,EAAGC,EAAG+Q,GAAP,OAAchR,GAAM,GAAKgR,EAAO/Q,IAAM+Q,GAmChD8mC,OAjCW,SAAC93C,EAAGC,EAAG+Q,GAAP,OAAchR,IAAMgR,EAAM/Q,GAAM,GAAK+Q,GAiCxCinC,OAhCG,SAACj4C,EAAGC,EAAG+Q,GAAP,OAAchR,GAAM,GAAKgR,EAAO/Q,IAAM+Q,GAgCjCsnC,OA9BL,SAACt4C,EAAGC,EAAG+Q,GAAP,OAAchR,GAAM,GAAKgR,EAAO/Q,IAAO+Q,EAAI,IA8B9BwnC,OA7Bb,SAACx4C,EAAGC,EAAG+Q,GAAP,OAAchR,IAAOgR,EAAI,GAAQ/Q,GAAM,GAAK+Q,GA8BvDopC,QA5BY,SAACp6C,EAAGC,GAAJ,OAAUA,GA4Bbo6C,QA3BG,SAACr6C,EAAGC,GAAJ,OAAUD,GA4BtBs6C,OA1BW,SAACt6C,EAAGC,EAAG+Q,GAAP,OAAchR,GAAKgR,EAAM/Q,IAAO,GAAK+Q,GA0BxCupC,OAzBG,SAACv6C,EAAGC,EAAG+Q,GAAP,OAAc/Q,GAAK+Q,EAAMhR,IAAO,GAAKgR,GAyBhCwpC,OAvBL,SAACx6C,EAAGC,EAAG+Q,GAAP,OAAc/Q,GAAM+Q,EAAI,GAAQhR,IAAO,GAAKgR,GAuB/BypC,OAtBb,SAACz6C,EAAGC,EAAG+Q,GAAP,OAAchR,GAAMgR,EAAI,GAAQ/Q,IAAO,GAAK+Q,GAuBvD7D,MAAKwsC,MAbK,SAAChD,EAAIE,EAAIE,GAAT,OAAiBJ,IAAO,IAAME,IAAO,IAAME,IAAO,IAahD6C,MAZF,SAACc,EAAKhE,EAAIE,EAAIE,GAAd,OAAsBJ,EAAKE,EAAKE,GAAO4D,EAAM,KAAH,IAAG,EAAK,IAAM,GAAM,GAYrDhC,MAXT,SAAC/B,EAAIE,EAAIE,EAAIE,GAAb,OAAqBN,IAAO,IAAME,IAAO,IAAME,IAAO,IAAME,IAAO,IAWnD2B,MAVhB,SAAC8B,EAAKhE,EAAIE,EAAIE,EAAIE,GAAlB,OAA0BN,EAAKE,EAAKE,EAAKE,GAAO0D,EAAM,KAAH,IAAG,EAAK,IAAM,GAAM,GAUhDtB,MARvB,SAACsB,EAAKhE,EAAIE,EAAIE,EAAIE,EAAIE,GAAtB,OAA8BR,EAAKE,EAAKE,EAAKE,EAAKE,GAAOwD,EAAM,KAAH,IAAG,EAAK,IAAM,GAAM,GAQlDxB,MAT9B,SAACvC,EAAIE,EAAIE,EAAIE,EAAIE,GAAjB,OAAyBR,IAAO,IAAME,IAAO,IAAME,IAAO,IAAME,IAAO,IAAME,IAAO,KAWlG5pD,EAAQuR,QAAU2zB,G,sBClElB,sBAAWj/B,EAAQjG,GACjB,aAGA,SAAS6T,EAAQuX,EAAK1lB,GACpB,IAAK0lB,EAAK,MAAM,IAAIppB,MAAM0D,GAAO,oBAKnC,SAAS0nD,EAAUC,EAAMC,GACvBD,EAAKE,OAASD,EACd,IAAIE,EAAW,aACfA,EAAS5oD,UAAY0oD,EAAU1oD,UAC/ByoD,EAAKzoD,UAAY,IAAI4oD,EACrBH,EAAKzoD,UAAUE,YAAcuoD,EAK/B,SAASn0B,EAAIhmB,EAAQgN,EAAMutC,GACzB,GAAIv0B,EAAGw0B,KAAKx6C,GACV,OAAOA,EAGT5O,KAAKqpD,SAAW,EAChBrpD,KAAKspD,MAAQ,KACbtpD,KAAKlC,OAAS,EAGdkC,KAAKupD,IAAM,KAEI,OAAX36C,IACW,OAATgN,GAA0B,OAATA,IACnButC,EAASvtC,EACTA,EAAO,IAGT5b,KAAKwpD,MAAM56C,GAAU,EAAGgN,GAAQ,GAAIutC,GAAU,OAYlD,IAAIz/C,EATkB,kBAAX/H,EACTA,EAAOjG,QAAUk5B,EAEjBl5B,EAAQk5B,GAAKA,EAGfA,EAAGA,GAAKA,EACRA,EAAG60B,SAAW,GAGd,IAEI//C,EADoB,qBAAXmS,QAAmD,qBAAlBA,OAAOnS,OACxCmS,OAAOnS,OAEP5M,EAAQ,MAAU4M,OAE7B,MAAOgL,IAgIT,SAASg1C,EAAet/B,EAAQ0N,GAC9B,IAAIhY,EAAIsK,EAAOuJ,WAAWmE,GAE1B,OAAIhY,GAAK,IAAMA,GAAK,GACXA,EAAI,GAEFA,GAAK,IAAMA,GAAK,GAClBA,EAAI,GAEFA,GAAK,IAAMA,GAAK,IAClBA,EAAI,QAEXvQ,GAAO,EAAO,wBAA0B6a,GAI5C,SAASu/B,EAAcv/B,EAAQw/B,EAAY9xB,GACzC,IAAIlY,EAAI8pC,EAAct/B,EAAQ0N,GAI9B,OAHIA,EAAQ,GAAK8xB,IACfhqC,GAAK8pC,EAAct/B,EAAQ0N,EAAQ,IAAM,GAEpClY,EA8CT,SAASiqC,EAAWxqD,EAAKmY,EAAOvV,EAAK6nD,GAInC,IAHA,IAAIlqC,EAAI,EACJ5Q,EAAI,EACJ7B,EAAM9P,KAAKgQ,IAAIhO,EAAIvB,OAAQmE,GACtBjE,EAAIwZ,EAAOxZ,EAAImP,EAAKnP,IAAK,CAChC,IAAI8hB,EAAIzgB,EAAIs0B,WAAW31B,GAAK,GAE5B4hB,GAAKkqC,EAIH96C,EADE8Q,GAAK,GACHA,EAAI,GAAK,GAGJA,GAAK,GACVA,EAAI,GAAK,GAITA,EAENvQ,EAAOuQ,GAAK,GAAK9Q,EAAI86C,EAAK,qBAC1BlqC,GAAK5Q,EAEP,OAAO4Q,EA4DT,SAASmqC,EAAMn1C,EAAM5D,GACnB4D,EAAK00C,MAAQt4C,EAAIs4C,MACjB10C,EAAK9W,OAASkT,EAAIlT,OAClB8W,EAAKy0C,SAAWr4C,EAAIq4C,SACpBz0C,EAAK20C,IAAMv4C,EAAIu4C,IAsCjB,GA9TA30B,EAAGw0B,KAAO,SAAerrC,GACvB,OAAIA,aAAe6W,GAIJ,OAAR7W,GAA+B,kBAARA,GAC5BA,EAAIvd,YAAYipD,WAAa70B,EAAG60B,UAAY7rD,MAAM2W,QAAQwJ,EAAIurC,QAGlE10B,EAAGjQ,IAAM,SAAcuI,EAAM88B,GAC3B,OAAI98B,EAAK+8B,IAAID,GAAS,EAAU98B,EACzB88B,GAGTp1B,EAAGvnB,IAAM,SAAc6f,EAAM88B,GAC3B,OAAI98B,EAAK+8B,IAAID,GAAS,EAAU98B,EACzB88B,GAGTp1B,EAAGt0B,UAAUkpD,MAAQ,SAAe56C,EAAQgN,EAAMutC,GAChD,GAAsB,kBAAXv6C,EACT,OAAO5O,KAAKkqD,YAAYt7C,EAAQgN,EAAMutC,GAGxC,GAAsB,kBAAXv6C,EACT,OAAO5O,KAAKmqD,WAAWv7C,EAAQgN,EAAMutC,GAG1B,QAATvtC,IACFA,EAAO,IAETrM,EAAOqM,KAAiB,EAAPA,IAAaA,GAAQ,GAAKA,GAAQ,IAGnD,IAAIpE,EAAQ,EACM,OAFlB5I,EAASA,EAAO3Q,WAAWmsD,QAAQ,OAAQ,KAEhC,KACT5yC,IACAxX,KAAKqpD,SAAW,GAGd7xC,EAAQ5I,EAAO9Q,SACJ,KAAT8d,EACF5b,KAAKqqD,UAAUz7C,EAAQ4I,EAAO2xC,IAE9BnpD,KAAKsqD,WAAW17C,EAAQgN,EAAMpE,GACf,OAAX2xC,GACFnpD,KAAKmqD,WAAWnqD,KAAKuqD,UAAW3uC,EAAMutC,MAM9Cv0B,EAAGt0B,UAAU4pD,YAAc,SAAsBt7C,EAAQgN,EAAMutC,GACzDv6C,EAAS,IACX5O,KAAKqpD,SAAW,EAChBz6C,GAAUA,GAERA,EAAS,UACX5O,KAAKspD,MAAQ,CAAU,SAAT16C,GACd5O,KAAKlC,OAAS,GACL8Q,EAAS,kBAClB5O,KAAKspD,MAAQ,CACF,SAAT16C,EACCA,EAAS,SAAa,UAEzB5O,KAAKlC,OAAS,IAEdyR,EAAOX,EAAS,kBAChB5O,KAAKspD,MAAQ,CACF,SAAT16C,EACCA,EAAS,SAAa,SACvB,GAEF5O,KAAKlC,OAAS,GAGD,OAAXqrD,GAGJnpD,KAAKmqD,WAAWnqD,KAAKuqD,UAAW3uC,EAAMutC,IAGxCv0B,EAAGt0B,UAAU6pD,WAAa,SAAqBv7C,EAAQgN,EAAMutC,GAG3D,GADA55C,EAAgC,kBAAlBX,EAAO9Q,QACjB8Q,EAAO9Q,QAAU,EAGnB,OAFAkC,KAAKspD,MAAQ,CAAC,GACdtpD,KAAKlC,OAAS,EACPkC,KAGTA,KAAKlC,OAAST,KAAK6lC,KAAKt0B,EAAO9Q,OAAS,GACxCkC,KAAKspD,MAAQ,IAAI1rD,MAAMoC,KAAKlC,QAC5B,IAAK,IAAIE,EAAI,EAAGA,EAAIgC,KAAKlC,OAAQE,IAC/BgC,KAAKspD,MAAMtrD,GAAK,EAGlB,IAAIO,EAAGisD,EACHC,EAAM,EACV,GAAe,OAAXtB,EACF,IAAKnrD,EAAI4Q,EAAO9Q,OAAS,EAAGS,EAAI,EAAGP,GAAK,EAAGA,GAAK,EAC9CwsD,EAAI57C,EAAO5Q,GAAM4Q,EAAO5Q,EAAI,IAAM,EAAM4Q,EAAO5Q,EAAI,IAAM,GACzDgC,KAAKspD,MAAM/qD,IAAOisD,GAAKC,EAAO,SAC9BzqD,KAAKspD,MAAM/qD,EAAI,GAAMisD,IAAO,GAAKC,EAAQ,UACzCA,GAAO,KACI,KACTA,GAAO,GACPlsD,UAGC,GAAe,OAAX4qD,EACT,IAAKnrD,EAAI,EAAGO,EAAI,EAAGP,EAAI4Q,EAAO9Q,OAAQE,GAAK,EACzCwsD,EAAI57C,EAAO5Q,GAAM4Q,EAAO5Q,EAAI,IAAM,EAAM4Q,EAAO5Q,EAAI,IAAM,GACzDgC,KAAKspD,MAAM/qD,IAAOisD,GAAKC,EAAO,SAC9BzqD,KAAKspD,MAAM/qD,EAAI,GAAMisD,IAAO,GAAKC,EAAQ,UACzCA,GAAO,KACI,KACTA,GAAO,GACPlsD,KAIN,OAAOyB,KAAK0qD,UA2Bd91B,EAAGt0B,UAAU+pD,UAAY,SAAoBz7C,EAAQ4I,EAAO2xC,GAE1DnpD,KAAKlC,OAAST,KAAK6lC,MAAMt0B,EAAO9Q,OAAS0Z,GAAS,GAClDxX,KAAKspD,MAAQ,IAAI1rD,MAAMoC,KAAKlC,QAC5B,IAAK,IAAIE,EAAI,EAAGA,EAAIgC,KAAKlC,OAAQE,IAC/BgC,KAAKspD,MAAMtrD,GAAK,EAIlB,IAGIwsD,EAHAC,EAAM,EACNlsD,EAAI,EAGR,GAAe,OAAX4qD,EACF,IAAKnrD,EAAI4Q,EAAO9Q,OAAS,EAAGE,GAAKwZ,EAAOxZ,GAAK,EAC3CwsD,EAAIb,EAAa/6C,EAAQ4I,EAAOxZ,IAAMysD,EACtCzqD,KAAKspD,MAAM/qD,IAAU,SAAJisD,EACbC,GAAO,IACTA,GAAO,GACPlsD,GAAK,EACLyB,KAAKspD,MAAM/qD,IAAMisD,IAAM,IAEvBC,GAAO,OAKX,IAAKzsD,GADa4Q,EAAO9Q,OAAS0Z,GACX,IAAM,EAAIA,EAAQ,EAAIA,EAAOxZ,EAAI4Q,EAAO9Q,OAAQE,GAAK,EAC1EwsD,EAAIb,EAAa/6C,EAAQ4I,EAAOxZ,IAAMysD,EACtCzqD,KAAKspD,MAAM/qD,IAAU,SAAJisD,EACbC,GAAO,IACTA,GAAO,GACPlsD,GAAK,EACLyB,KAAKspD,MAAM/qD,IAAMisD,IAAM,IAEvBC,GAAO,EAKbzqD,KAAK0qD,UA8BP91B,EAAGt0B,UAAUgqD,WAAa,SAAqB17C,EAAQgN,EAAMpE,GAE3DxX,KAAKspD,MAAQ,CAAC,GACdtpD,KAAKlC,OAAS,EAGd,IAAK,IAAI6sD,EAAU,EAAGC,EAAU,EAAGA,GAAW,SAAWA,GAAWhvC,EAClE+uC,IAEFA,IACAC,EAAWA,EAAUhvC,EAAQ,EAO7B,IALA,IAAIuuB,EAAQv7B,EAAO9Q,OAAS0Z,EACxB4C,EAAM+vB,EAAQwgB,EACd1oD,EAAM5E,KAAKgQ,IAAI88B,EAAOA,EAAQ/vB,GAAO5C,EAErCha,EAAO,EACFQ,EAAIwZ,EAAOxZ,EAAIiE,EAAKjE,GAAK2sD,EAChCntD,EAAOqsD,EAAUj7C,EAAQ5Q,EAAGA,EAAI2sD,EAAS/uC,GAEzC5b,KAAK6qD,MAAMD,GACP5qD,KAAKspD,MAAM,GAAK9rD,EAAO,SACzBwC,KAAKspD,MAAM,IAAM9rD,EAEjBwC,KAAK8qD,OAAOttD,GAIhB,GAAY,IAAR4c,EAAW,CACb,IAAIrI,EAAM,EAGV,IAFAvU,EAAOqsD,EAAUj7C,EAAQ5Q,EAAG4Q,EAAO9Q,OAAQ8d,GAEtC5d,EAAI,EAAGA,EAAIoc,EAAKpc,IACnB+T,GAAO6J,EAGT5b,KAAK6qD,MAAM94C,GACP/R,KAAKspD,MAAM,GAAK9rD,EAAO,SACzBwC,KAAKspD,MAAM,IAAM9rD,EAEjBwC,KAAK8qD,OAAOttD,GAIhBwC,KAAK0qD,UAGP91B,EAAGt0B,UAAU2X,KAAO,SAAerD,GACjCA,EAAK00C,MAAQ,IAAI1rD,MAAMoC,KAAKlC,QAC5B,IAAK,IAAIE,EAAI,EAAGA,EAAIgC,KAAKlC,OAAQE,IAC/B4W,EAAK00C,MAAMtrD,GAAKgC,KAAKspD,MAAMtrD,GAE7B4W,EAAK9W,OAASkC,KAAKlC,OACnB8W,EAAKy0C,SAAWrpD,KAAKqpD,SACrBz0C,EAAK20C,IAAMvpD,KAAKupD,KAUlB30B,EAAGt0B,UAAUyqD,MAAQ,SAAgBn2C,GACnCm1C,EAAKn1C,EAAM5U,OAGb40B,EAAGt0B,UAAU0qD,MAAQ,WACnB,IAAIprC,EAAI,IAAIgV,EAAG,MAEf,OADA50B,KAAKiY,KAAK2H,GACHA,GAGTgV,EAAGt0B,UAAU2qD,QAAU,SAAkBj0B,GACvC,KAAOh3B,KAAKlC,OAASk5B,GACnBh3B,KAAKspD,MAAMtpD,KAAKlC,UAAY,EAE9B,OAAOkC,MAIT40B,EAAGt0B,UAAUoqD,OAAS,WACpB,KAAO1qD,KAAKlC,OAAS,GAAqC,IAAhCkC,KAAKspD,MAAMtpD,KAAKlC,OAAS,IACjDkC,KAAKlC,SAEP,OAAOkC,KAAKkrD,aAGdt2B,EAAGt0B,UAAU4qD,UAAY,WAKvB,OAHoB,IAAhBlrD,KAAKlC,QAAkC,IAAlBkC,KAAKspD,MAAM,KAClCtpD,KAAKqpD,SAAW,GAEXrpD,MAKa,qBAAXooB,QAAgD,oBAAfA,OAAO+iC,IACjD,IACEv2B,EAAGt0B,UAAU8nB,OAAO+iC,IAAI,+BAAiCC,EACzD,MAAO12C,GACPkgB,EAAGt0B,UAAU8qD,QAAUA,OAGzBx2B,EAAGt0B,UAAU8qD,QAAUA,EAGzB,SAASA,IACP,OAAQprD,KAAKupD,IAAM,UAAY,SAAWvpD,KAAK/B,SAAS,IAAM,IAiChE,IAAIotD,EAAQ,CACV,GACA,IACA,KACA,MACA,OACA,QACA,SACA,UACA,WACA,YACA,aACA,cACA,eACA,gBACA,iBACA,kBACA,mBACA,oBACA,qBACA,sBACA,uBACA,wBACA,yBACA,0BACA,2BACA,6BAGEC,EAAa,CACf,EAAG,EACH,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EACvB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAGhBC,EAAa,CACf,EAAG,EACH,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAC5D,SAAU,IAAU,SAAU,SAAU,SAAU,QAAS,SAC3D,SAAU,SAAU,SAAU,SAAU,KAAU,QAAS,QAC3D,QAAS,QAAS,QAAS,SAAU,SAAU,SAAU,SACzD,MAAU,SAAU,SAAU,SAAU,SAAU,SAAU,UAG9D32B,EAAGt0B,UAAUrC,SAAW,SAAmB2d,EAAM6jC,GAI/C,IAAI/xC,EACJ,GAHA+xC,EAAoB,EAAVA,GAAe,EAGZ,MAJb7jC,EAAOA,GAAQ,KAIa,QAATA,EAAgB,CACjClO,EAAM,GAGN,IAFA,IAAI+8C,EAAM,EACNe,EAAQ,EACHxtD,EAAI,EAAGA,EAAIgC,KAAKlC,OAAQE,IAAK,CACpC,IAAIwsD,EAAIxqD,KAAKspD,MAAMtrD,GACfR,GAA+B,UAArBgtD,GAAKC,EAAOe,IAAmBvtD,SAAS,IACtDutD,EAAShB,IAAO,GAAKC,EAAQ,UAC7BA,GAAO,IACI,KACTA,GAAO,GACPzsD,KAGA0P,EADY,IAAV89C,GAAextD,IAAMgC,KAAKlC,OAAS,EAC/ButD,EAAM,EAAI7tD,EAAKM,QAAUN,EAAOkQ,EAEhClQ,EAAOkQ,EAMjB,IAHc,IAAV89C,IACF99C,EAAM89C,EAAMvtD,SAAS,IAAMyP,GAEtBA,EAAI5P,OAAS2hD,IAAY,GAC9B/xC,EAAM,IAAMA,EAKd,OAHsB,IAAlB1N,KAAKqpD,WACP37C,EAAM,IAAMA,GAEPA,EAGT,GAAIkO,KAAiB,EAAPA,IAAaA,GAAQ,GAAKA,GAAQ,GAAI,CAElD,IAAI6vC,EAAYH,EAAW1vC,GAEvB8vC,EAAYH,EAAW3vC,GAC3BlO,EAAM,GACN,IAAIoS,EAAI9f,KAAKgrD,QAEb,IADAlrC,EAAEupC,SAAW,GACLvpC,EAAE6rC,UAAU,CAClB,IAAI/rC,EAAIE,EAAE8rC,MAAMF,GAAWztD,SAAS2d,GAMlClO,GALFoS,EAAIA,EAAE+rC,MAAMH,IAELC,SAGC/rC,EAAIlS,EAFJ29C,EAAMI,EAAY7rC,EAAE9hB,QAAU8hB,EAAIlS,EAQ5C,IAHI1N,KAAK2rD,WACPj+C,EAAM,IAAMA,GAEPA,EAAI5P,OAAS2hD,IAAY,GAC9B/xC,EAAM,IAAMA,EAKd,OAHsB,IAAlB1N,KAAKqpD,WACP37C,EAAM,IAAMA,GAEPA,EAGT6B,GAAO,EAAO,oCAGhBqlB,EAAGt0B,UAAUwrD,SAAW,WACtB,IAAIC,EAAM/rD,KAAKspD,MAAM,GASrB,OARoB,IAAhBtpD,KAAKlC,OACPiuD,GAAuB,SAAhB/rD,KAAKspD,MAAM,GACO,IAAhBtpD,KAAKlC,QAAkC,IAAlBkC,KAAKspD,MAAM,GAEzCyC,GAAO,iBAAoC,SAAhB/rD,KAAKspD,MAAM,GAC7BtpD,KAAKlC,OAAS,GACvByR,GAAO,EAAO,8CAEU,IAAlBvP,KAAKqpD,UAAmB0C,EAAMA,GAGxCn3B,EAAGt0B,UAAUw0B,OAAS,WACpB,OAAO90B,KAAK/B,SAAS,GAAI,IAGvByL,IACFkrB,EAAGt0B,UAAU4zB,SAAW,SAAmBi1B,EAAQrrD,GACjD,OAAOkC,KAAK+0B,YAAYrrB,EAAQy/C,EAAQrrD,KAI5C82B,EAAGt0B,UAAUiqD,QAAU,SAAkBpB,EAAQrrD,GAC/C,OAAOkC,KAAK+0B,YAAYn3B,MAAOurD,EAAQrrD,IA4gBzC,SAASkuD,EAAY5lC,EAAMrI,EAAKrQ,GAC9BA,EAAI27C,SAAWtrC,EAAIsrC,SAAWjjC,EAAKijC,SACnC,IAAIl8C,EAAOiZ,EAAKtoB,OAASigB,EAAIjgB,OAAU,EACvC4P,EAAI5P,OAASqP,EACbA,EAAOA,EAAM,EAAK,EAGlB,IAAIxN,EAAoB,EAAhBymB,EAAKkjC,MAAM,GACft6C,EAAmB,EAAf+O,EAAIurC,MAAM,GACd1pC,EAAIjgB,EAAIqP,EAERoB,EAAS,SAAJwP,EACL4rC,EAAS5rC,EAAI,SAAa,EAC9BlS,EAAI47C,MAAM,GAAKl5C,EAEf,IAAK,IAAIwV,EAAI,EAAGA,EAAIzY,EAAKyY,IAAK,CAM5B,IAHA,IAAIqmC,EAAST,IAAU,GACnBU,EAAgB,SAARV,EACRW,EAAO9uD,KAAKgQ,IAAIuY,EAAG7H,EAAIjgB,OAAS,GAC3BS,EAAIlB,KAAKsnB,IAAI,EAAGiB,EAAIQ,EAAKtoB,OAAS,GAAIS,GAAK4tD,EAAM5tD,IAAK,CAC7D,IAAIP,EAAK4nB,EAAIrnB,EAAK,EAIlB0tD,IADArsC,GAFAjgB,EAAoB,EAAhBymB,EAAKkjC,MAAMtrD,KACfgR,EAAmB,EAAf+O,EAAIurC,MAAM/qD,IACF2tD,GACG,SAAa,EAC5BA,EAAY,SAAJtsC,EAEVlS,EAAI47C,MAAM1jC,GAAa,EAARsmC,EACfV,EAAiB,EAATS,EAQV,OANc,IAAVT,EACF99C,EAAI47C,MAAM1jC,GAAa,EAAR4lC,EAEf99C,EAAI5P,SAGC4P,EAAIg9C,SAxiBb91B,EAAGt0B,UAAUy0B,YAAc,SAAsBq3B,EAAWjD,EAAQrrD,GAClEkC,KAAK0qD,SAEL,IAAIvtD,EAAa6C,KAAK7C,aAClBkvD,EAAYvuD,GAAUT,KAAKsnB,IAAI,EAAGxnB,GACtCoS,EAAOpS,GAAckvD,EAAW,yCAChC98C,EAAO88C,EAAY,EAAG,+BAEtB,IAAItqD,EAfS,SAAmBqqD,EAAWp1B,GAC3C,OAAIo1B,EAAUE,YACLF,EAAUE,YAAYt1B,GAExB,IAAIo1B,EAAUp1B,GAWX2M,CAASyoB,EAAWC,GAG9B,OADArsD,KAAK,gBADoB,OAAXmpD,EAAkB,KAAO,OACRpnD,EAAK5E,GAC7B4E,GAGT6yB,EAAGt0B,UAAUisD,eAAiB,SAAyBxqD,EAAK5E,GAI1D,IAHA,IAAIqvD,EAAW,EACXhB,EAAQ,EAEHxtD,EAAI,EAAGP,EAAQ,EAAGO,EAAIgC,KAAKlC,OAAQE,IAAK,CAC/C,IAAIR,EAAQwC,KAAKspD,MAAMtrD,IAAMP,EAAS+tD,EAEtCzpD,EAAIyqD,KAAqB,IAAPhvD,EACdgvD,EAAWzqD,EAAIjE,SACjBiE,EAAIyqD,KAAehvD,GAAQ,EAAK,KAE9BgvD,EAAWzqD,EAAIjE,SACjBiE,EAAIyqD,KAAehvD,GAAQ,GAAM,KAGrB,IAAVC,GACE+uD,EAAWzqD,EAAIjE,SACjBiE,EAAIyqD,KAAehvD,GAAQ,GAAM,KAEnCguD,EAAQ,EACR/tD,EAAQ,IAER+tD,EAAQhuD,IAAS,GACjBC,GAAS,GAIb,GAAI+uD,EAAWzqD,EAAIjE,OAGjB,IAFAiE,EAAIyqD,KAAchB,EAEXgB,EAAWzqD,EAAIjE,QACpBiE,EAAIyqD,KAAc,GAKxB53B,EAAGt0B,UAAUmsD,eAAiB,SAAyB1qD,EAAK5E,GAI1D,IAHA,IAAIqvD,EAAWzqD,EAAIjE,OAAS,EACxB0tD,EAAQ,EAEHxtD,EAAI,EAAGP,EAAQ,EAAGO,EAAIgC,KAAKlC,OAAQE,IAAK,CAC/C,IAAIR,EAAQwC,KAAKspD,MAAMtrD,IAAMP,EAAS+tD,EAEtCzpD,EAAIyqD,KAAqB,IAAPhvD,EACdgvD,GAAY,IACdzqD,EAAIyqD,KAAehvD,GAAQ,EAAK,KAE9BgvD,GAAY,IACdzqD,EAAIyqD,KAAehvD,GAAQ,GAAM,KAGrB,IAAVC,GACE+uD,GAAY,IACdzqD,EAAIyqD,KAAehvD,GAAQ,GAAM,KAEnCguD,EAAQ,EACR/tD,EAAQ,IAER+tD,EAAQhuD,IAAS,GACjBC,GAAS,GAIb,GAAI+uD,GAAY,EAGd,IAFAzqD,EAAIyqD,KAAchB,EAEXgB,GAAY,GACjBzqD,EAAIyqD,KAAc,GAKpBnvD,KAAKqvD,MACP93B,EAAGt0B,UAAUqsD,WAAa,SAAqBnC,GAC7C,OAAO,GAAKntD,KAAKqvD,MAAMlC,IAGzB51B,EAAGt0B,UAAUqsD,WAAa,SAAqBnC,GAC7C,IAAI9wC,EAAI8wC,EACJ5qC,EAAI,EAiBR,OAhBIlG,GAAK,OACPkG,GAAK,GACLlG,KAAO,IAELA,GAAK,KACPkG,GAAK,EACLlG,KAAO,GAELA,GAAK,IACPkG,GAAK,EACLlG,KAAO,GAELA,GAAK,IACPkG,GAAK,EACLlG,KAAO,GAEFkG,EAAIlG,GAIfkb,EAAGt0B,UAAUssD,UAAY,SAAoBpC,GAE3C,GAAU,IAANA,EAAS,OAAO,GAEpB,IAAI9wC,EAAI8wC,EACJ5qC,EAAI,EAoBR,OAnBqB,KAAZ,KAAJlG,KACHkG,GAAK,GACLlG,KAAO,IAEU,KAAV,IAAJA,KACHkG,GAAK,EACLlG,KAAO,GAES,KAAT,GAAJA,KACHkG,GAAK,EACLlG,KAAO,GAES,KAAT,EAAJA,KACHkG,GAAK,EACLlG,KAAO,GAES,KAAT,EAAJA,IACHkG,IAEKA,GAITgV,EAAGt0B,UAAUusD,UAAY,WACvB,IAAIrC,EAAIxqD,KAAKspD,MAAMtpD,KAAKlC,OAAS,GAC7BgvD,EAAK9sD,KAAK2sD,WAAWnC,GACzB,OAA2B,IAAnBxqD,KAAKlC,OAAS,GAAUgvD,GAiBlCl4B,EAAGt0B,UAAUysD,SAAW,WACtB,GAAI/sD,KAAK2rD,SAAU,OAAO,EAG1B,IADA,IAAI/rC,EAAI,EACC5hB,EAAI,EAAGA,EAAIgC,KAAKlC,OAAQE,IAAK,CACpC,IAAIgR,EAAIhP,KAAK4sD,UAAU5sD,KAAKspD,MAAMtrD,IAElC,GADA4hB,GAAK5Q,EACK,KAANA,EAAU,MAEhB,OAAO4Q,GAGTgV,EAAGt0B,UAAUnD,WAAa,WACxB,OAAOE,KAAK6lC,KAAKljC,KAAK6sD,YAAc,IAGtCj4B,EAAGt0B,UAAU0sD,OAAS,SAAiBC,GACrC,OAAsB,IAAlBjtD,KAAKqpD,SACArpD,KAAKgd,MAAMkwC,MAAMD,GAAOE,MAAM,GAEhCntD,KAAKgrD,SAGdp2B,EAAGt0B,UAAU8sD,SAAW,SAAmBH,GACzC,OAAIjtD,KAAKqtD,MAAMJ,EAAQ,GACdjtD,KAAKstD,KAAKL,GAAOE,MAAM,GAAGI,OAE5BvtD,KAAKgrD,SAGdp2B,EAAGt0B,UAAUktD,MAAQ,WACnB,OAAyB,IAAlBxtD,KAAKqpD,UAIdz0B,EAAGt0B,UAAUmtD,IAAM,WACjB,OAAOztD,KAAKgrD,QAAQuC,QAGtB34B,EAAGt0B,UAAUitD,KAAO,WAKlB,OAJKvtD,KAAK2rD,WACR3rD,KAAKqpD,UAAY,GAGZrpD,MAIT40B,EAAGt0B,UAAUotD,KAAO,SAAe3vC,GACjC,KAAO/d,KAAKlC,OAASigB,EAAIjgB,QACvBkC,KAAKspD,MAAMtpD,KAAKlC,UAAY,EAG9B,IAAK,IAAIE,EAAI,EAAGA,EAAI+f,EAAIjgB,OAAQE,IAC9BgC,KAAKspD,MAAMtrD,GAAKgC,KAAKspD,MAAMtrD,GAAK+f,EAAIurC,MAAMtrD,GAG5C,OAAOgC,KAAK0qD,UAGd91B,EAAGt0B,UAAUqtD,IAAM,SAAc5vC,GAE/B,OADAxO,EAA0C,KAAlCvP,KAAKqpD,SAAWtrC,EAAIsrC,WACrBrpD,KAAK0tD,KAAK3vC,IAInB6W,EAAGt0B,UAAUstD,GAAK,SAAa7vC,GAC7B,OAAI/d,KAAKlC,OAASigB,EAAIjgB,OAAekC,KAAKgrD,QAAQ2C,IAAI5vC,GAC/CA,EAAIitC,QAAQ2C,IAAI3tD,OAGzB40B,EAAGt0B,UAAUutD,IAAM,SAAc9vC,GAC/B,OAAI/d,KAAKlC,OAASigB,EAAIjgB,OAAekC,KAAKgrD,QAAQ0C,KAAK3vC,GAChDA,EAAIitC,QAAQ0C,KAAK1tD,OAI1B40B,EAAGt0B,UAAUwtD,MAAQ,SAAgB/vC,GAEnC,IAAI/O,EAEFA,EADEhP,KAAKlC,OAASigB,EAAIjgB,OAChBigB,EAEA/d,KAGN,IAAK,IAAIhC,EAAI,EAAGA,EAAIgR,EAAElR,OAAQE,IAC5BgC,KAAKspD,MAAMtrD,GAAKgC,KAAKspD,MAAMtrD,GAAK+f,EAAIurC,MAAMtrD,GAK5C,OAFAgC,KAAKlC,OAASkR,EAAElR,OAETkC,KAAK0qD,UAGd91B,EAAGt0B,UAAUytD,KAAO,SAAehwC,GAEjC,OADAxO,EAA0C,KAAlCvP,KAAKqpD,SAAWtrC,EAAIsrC,WACrBrpD,KAAK8tD,MAAM/vC,IAIpB6W,EAAGt0B,UAAU0tD,IAAM,SAAcjwC,GAC/B,OAAI/d,KAAKlC,OAASigB,EAAIjgB,OAAekC,KAAKgrD,QAAQ+C,KAAKhwC,GAChDA,EAAIitC,QAAQ+C,KAAK/tD,OAG1B40B,EAAGt0B,UAAU2tD,KAAO,SAAelwC,GACjC,OAAI/d,KAAKlC,OAASigB,EAAIjgB,OAAekC,KAAKgrD,QAAQ8C,MAAM/vC,GACjDA,EAAIitC,QAAQ8C,MAAM9tD,OAI3B40B,EAAGt0B,UAAU4tD,MAAQ,SAAgBnwC,GAEnC,IAAIpe,EACAqP,EACAhP,KAAKlC,OAASigB,EAAIjgB,QACpB6B,EAAIK,KACJgP,EAAI+O,IAEJpe,EAAIoe,EACJ/O,EAAIhP,MAGN,IAAK,IAAIhC,EAAI,EAAGA,EAAIgR,EAAElR,OAAQE,IAC5BgC,KAAKspD,MAAMtrD,GAAK2B,EAAE2pD,MAAMtrD,GAAKgR,EAAEs6C,MAAMtrD,GAGvC,GAAIgC,OAASL,EACX,KAAO3B,EAAI2B,EAAE7B,OAAQE,IACnBgC,KAAKspD,MAAMtrD,GAAK2B,EAAE2pD,MAAMtrD,GAM5B,OAFAgC,KAAKlC,OAAS6B,EAAE7B,OAETkC,KAAK0qD,UAGd91B,EAAGt0B,UAAU6tD,KAAO,SAAepwC,GAEjC,OADAxO,EAA0C,KAAlCvP,KAAKqpD,SAAWtrC,EAAIsrC,WACrBrpD,KAAKkuD,MAAMnwC,IAIpB6W,EAAGt0B,UAAU8tD,IAAM,SAAcrwC,GAC/B,OAAI/d,KAAKlC,OAASigB,EAAIjgB,OAAekC,KAAKgrD,QAAQmD,KAAKpwC,GAChDA,EAAIitC,QAAQmD,KAAKnuD,OAG1B40B,EAAGt0B,UAAU+tD,KAAO,SAAetwC,GACjC,OAAI/d,KAAKlC,OAASigB,EAAIjgB,OAAekC,KAAKgrD,QAAQkD,MAAMnwC,GACjDA,EAAIitC,QAAQkD,MAAMluD,OAI3B40B,EAAGt0B,UAAU4sD,MAAQ,SAAgBD,GACnC19C,EAAwB,kBAAV09C,GAAsBA,GAAS,GAE7C,IAAIqB,EAAsC,EAAxBjxD,KAAK6lC,KAAK+pB,EAAQ,IAChCsB,EAAWtB,EAAQ,GAGvBjtD,KAAKirD,QAAQqD,GAETC,EAAW,GACbD,IAIF,IAAK,IAAItwD,EAAI,EAAGA,EAAIswD,EAAatwD,IAC/BgC,KAAKspD,MAAMtrD,GAAsB,UAAhBgC,KAAKspD,MAAMtrD,GAS9B,OALIuwD,EAAW,IACbvuD,KAAKspD,MAAMtrD,IAAMgC,KAAKspD,MAAMtrD,GAAM,UAAc,GAAKuwD,GAIhDvuD,KAAK0qD,UAGd91B,EAAGt0B,UAAUgtD,KAAO,SAAeL,GACjC,OAAOjtD,KAAKgrD,QAAQkC,MAAMD,IAI5Br4B,EAAGt0B,UAAUkuD,KAAO,SAAeC,EAAK3nC,GACtCvX,EAAsB,kBAARk/C,GAAoBA,GAAO,GAEzC,IAAIhE,EAAOgE,EAAM,GAAM,EACnBC,EAAOD,EAAM,GAUjB,OARAzuD,KAAKirD,QAAQR,EAAM,GAGjBzqD,KAAKspD,MAAMmB,GADT3jC,EACgB9mB,KAAKspD,MAAMmB,GAAQ,GAAKiE,EAExB1uD,KAAKspD,MAAMmB,KAAS,GAAKiE,GAGtC1uD,KAAK0qD,UAId91B,EAAGt0B,UAAUquD,KAAO,SAAe5wC,GACjC,IAAI6B,EAkBAjgB,EAAGqP,EAfP,GAAsB,IAAlBhP,KAAKqpD,UAAmC,IAAjBtrC,EAAIsrC,SAI7B,OAHArpD,KAAKqpD,SAAW,EAChBzpC,EAAI5f,KAAK4uD,KAAK7wC,GACd/d,KAAKqpD,UAAY,EACVrpD,KAAKkrD,YAGP,GAAsB,IAAlBlrD,KAAKqpD,UAAmC,IAAjBtrC,EAAIsrC,SAIpC,OAHAtrC,EAAIsrC,SAAW,EACfzpC,EAAI5f,KAAK4uD,KAAK7wC,GACdA,EAAIsrC,SAAW,EACRzpC,EAAEsrC,YAKPlrD,KAAKlC,OAASigB,EAAIjgB,QACpB6B,EAAIK,KACJgP,EAAI+O,IAEJpe,EAAIoe,EACJ/O,EAAIhP,MAIN,IADA,IAAIwrD,EAAQ,EACHxtD,EAAI,EAAGA,EAAIgR,EAAElR,OAAQE,IAC5B4hB,GAAkB,EAAbjgB,EAAE2pD,MAAMtrD,KAAwB,EAAbgR,EAAEs6C,MAAMtrD,IAAUwtD,EAC1CxrD,KAAKspD,MAAMtrD,GAAS,SAAJ4hB,EAChB4rC,EAAQ5rC,IAAM,GAEhB,KAAiB,IAAV4rC,GAAextD,EAAI2B,EAAE7B,OAAQE,IAClC4hB,GAAkB,EAAbjgB,EAAE2pD,MAAMtrD,IAAUwtD,EACvBxrD,KAAKspD,MAAMtrD,GAAS,SAAJ4hB,EAChB4rC,EAAQ5rC,IAAM,GAIhB,GADA5f,KAAKlC,OAAS6B,EAAE7B,OACF,IAAV0tD,EACFxrD,KAAKspD,MAAMtpD,KAAKlC,QAAU0tD,EAC1BxrD,KAAKlC,cAEA,GAAI6B,IAAMK,KACf,KAAOhC,EAAI2B,EAAE7B,OAAQE,IACnBgC,KAAKspD,MAAMtrD,GAAK2B,EAAE2pD,MAAMtrD,GAI5B,OAAOgC,MAIT40B,EAAGt0B,UAAUgb,IAAM,SAAcyC,GAC/B,IAAIhc,EACJ,OAAqB,IAAjBgc,EAAIsrC,UAAoC,IAAlBrpD,KAAKqpD,UAC7BtrC,EAAIsrC,SAAW,EACftnD,EAAM/B,KAAK6uD,IAAI9wC,GACfA,EAAIsrC,UAAY,EACTtnD,GACmB,IAAjBgc,EAAIsrC,UAAoC,IAAlBrpD,KAAKqpD,UACpCrpD,KAAKqpD,SAAW,EAChBtnD,EAAMgc,EAAI8wC,IAAI7uD,MACdA,KAAKqpD,SAAW,EACTtnD,GAGL/B,KAAKlC,OAASigB,EAAIjgB,OAAekC,KAAKgrD,QAAQ2D,KAAK5wC,GAEhDA,EAAIitC,QAAQ2D,KAAK3uD,OAI1B40B,EAAGt0B,UAAUsuD,KAAO,SAAe7wC,GAEjC,GAAqB,IAAjBA,EAAIsrC,SAAgB,CACtBtrC,EAAIsrC,SAAW,EACf,IAAIzpC,EAAI5f,KAAK2uD,KAAK5wC,GAElB,OADAA,EAAIsrC,SAAW,EACRzpC,EAAEsrC,YAGJ,GAAsB,IAAlBlrD,KAAKqpD,SAId,OAHArpD,KAAKqpD,SAAW,EAChBrpD,KAAK2uD,KAAK5wC,GACV/d,KAAKqpD,SAAW,EACTrpD,KAAKkrD,YAId,IAWIvrD,EAAGqP,EAXHi7C,EAAMjqD,KAAKiqD,IAAIlsC,GAGnB,GAAY,IAARksC,EAIF,OAHAjqD,KAAKqpD,SAAW,EAChBrpD,KAAKlC,OAAS,EACdkC,KAAKspD,MAAM,GAAK,EACTtpD,KAKLiqD,EAAM,GACRtqD,EAAIK,KACJgP,EAAI+O,IAEJpe,EAAIoe,EACJ/O,EAAIhP,MAIN,IADA,IAAIwrD,EAAQ,EACHxtD,EAAI,EAAGA,EAAIgR,EAAElR,OAAQE,IAE5BwtD,GADA5rC,GAAkB,EAAbjgB,EAAE2pD,MAAMtrD,KAAwB,EAAbgR,EAAEs6C,MAAMtrD,IAAUwtD,IAC7B,GACbxrD,KAAKspD,MAAMtrD,GAAS,SAAJ4hB,EAElB,KAAiB,IAAV4rC,GAAextD,EAAI2B,EAAE7B,OAAQE,IAElCwtD,GADA5rC,GAAkB,EAAbjgB,EAAE2pD,MAAMtrD,IAAUwtD,IACV,GACbxrD,KAAKspD,MAAMtrD,GAAS,SAAJ4hB,EAIlB,GAAc,IAAV4rC,GAAextD,EAAI2B,EAAE7B,QAAU6B,IAAMK,KACvC,KAAOhC,EAAI2B,EAAE7B,OAAQE,IACnBgC,KAAKspD,MAAMtrD,GAAK2B,EAAE2pD,MAAMtrD,GAU5B,OANAgC,KAAKlC,OAAST,KAAKsnB,IAAI3kB,KAAKlC,OAAQE,GAEhC2B,IAAMK,OACRA,KAAKqpD,SAAW,GAGXrpD,KAAK0qD,UAId91B,EAAGt0B,UAAUuuD,IAAM,SAAc9wC,GAC/B,OAAO/d,KAAKgrD,QAAQ4D,KAAK7wC,IA+C3B,IAAI+wC,EAAc,SAAsB1oC,EAAMrI,EAAKrQ,GACjD,IAII0C,EACA2+C,EACAjC,EANAntD,EAAIymB,EAAKkjC,MACTt6C,EAAI+O,EAAIurC,MACR0F,EAAIthD,EAAI47C,MACRxpC,EAAI,EAIJmvC,EAAY,EAAPtvD,EAAE,GACPuvD,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbt+B,EAAY,EAAPhxB,EAAE,GACPyvD,EAAW,KAALz+B,EACN0+B,EAAM1+B,IAAO,GACbC,EAAY,EAAPjxB,EAAE,GACP2vD,EAAW,KAAL1+B,EACN2+B,EAAM3+B,IAAO,GACb4+B,EAAY,EAAP7vD,EAAE,GACP8vD,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPhwD,EAAE,GACPiwD,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPnwD,EAAE,GACPowD,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPtwD,EAAE,GACPuwD,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPzwD,EAAE,GACP0wD,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP5wD,EAAE,GACP6wD,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP/wD,EAAE,GACPgxD,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP7hD,EAAE,GACP8hD,EAAW,KAALD,EACNE,EAAMF,IAAO,GACb5vC,EAAY,EAAPjS,EAAE,GACPgiD,EAAW,KAAL/vC,EACNgwC,EAAMhwC,IAAO,GACbC,EAAY,EAAPlS,EAAE,GACPkiD,EAAW,KAALhwC,EACNiwC,EAAMjwC,IAAO,GACb4M,EAAY,EAAP9e,EAAE,GACPoiD,EAAW,KAALtjC,EACNujC,EAAMvjC,IAAO,GACbvK,EAAY,EAAPvU,EAAE,GACPsiD,EAAW,KAAL/tC,EACNguC,GAAMhuC,IAAO,GACbC,GAAY,EAAPxU,EAAE,GACPwiD,GAAW,KAALhuC,GACNiuC,GAAMjuC,KAAO,GACbuK,GAAY,EAAP/e,EAAE,GACP0iD,GAAW,KAAL3jC,GACN4jC,GAAM5jC,KAAO,GACb6jC,GAAY,EAAP5iD,EAAE,GACP6iD,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAP/iD,EAAE,GACPgjD,GAAW,KAALD,GACNE,GAAMF,KAAO,GACb/jC,GAAY,EAAPhf,EAAE,GACPkjD,GAAW,KAALlkC,GACNmkC,GAAMnkC,KAAO,GAEjBtgB,EAAI27C,SAAWjjC,EAAKijC,SAAWtrC,EAAIsrC,SACnC37C,EAAI5P,OAAS,GAMb,IAAIs0D,IAAQtyC,GAJZ1P,EAAK/S,KAAKg1D,KAAKnD,EAAK4B,IAIE,KAAa,MAFnC/B,GADAA,EAAM1xD,KAAKg1D,KAAKnD,EAAK6B,IACR1zD,KAAKg1D,KAAKlD,EAAK2B,GAAQ,KAEU,IAAO,EACrDhxC,IAFAgtC,EAAKzvD,KAAKg1D,KAAKlD,EAAK4B,KAEPhC,IAAQ,IAAO,IAAMqD,KAAO,IAAO,EAChDA,IAAM,SAENhiD,EAAK/S,KAAKg1D,KAAKjD,EAAK0B,GAEpB/B,GADAA,EAAM1xD,KAAKg1D,KAAKjD,EAAK2B,IACR1zD,KAAKg1D,KAAKhD,EAAKyB,GAAQ,EACpChE,EAAKzvD,KAAKg1D,KAAKhD,EAAK0B,GAKpB,IAAIuB,IAAQxyC,GAJZ1P,EAAMA,EAAK/S,KAAKg1D,KAAKnD,EAAK8B,GAAQ,GAIZ,KAAa,MAFnCjC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKnD,EAAK+B,GAAQ,GACvB5zD,KAAKg1D,KAAKlD,EAAK6B,GAAQ,KAEU,IAAO,EACrDlxC,IAFAgtC,EAAMA,EAAKzvD,KAAKg1D,KAAKlD,EAAK8B,GAAQ,IAErBlC,IAAQ,IAAO,IAAMuD,KAAO,IAAO,EAChDA,IAAM,SAENliD,EAAK/S,KAAKg1D,KAAK/C,EAAKwB,GAEpB/B,GADAA,EAAM1xD,KAAKg1D,KAAK/C,EAAKyB,IACR1zD,KAAKg1D,KAAK9C,EAAKuB,GAAQ,EACpChE,EAAKzvD,KAAKg1D,KAAK9C,EAAKwB,GACpB3gD,EAAMA,EAAK/S,KAAKg1D,KAAKjD,EAAK4B,GAAQ,EAElCjC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKjD,EAAK6B,GAAQ,GACvB5zD,KAAKg1D,KAAKhD,EAAK2B,GAAQ,EACpClE,EAAMA,EAAKzvD,KAAKg1D,KAAKhD,EAAK4B,GAAQ,EAKlC,IAAIsB,IAAQzyC,GAJZ1P,EAAMA,EAAK/S,KAAKg1D,KAAKnD,EAAKgC,GAAQ,GAIZ,KAAa,MAFnCnC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKnD,EAAKiC,GAAQ,GACvB9zD,KAAKg1D,KAAKlD,EAAK+B,GAAQ,KAEU,IAAO,EACrDpxC,IAFAgtC,EAAMA,EAAKzvD,KAAKg1D,KAAKlD,EAAKgC,GAAQ,IAErBpC,IAAQ,IAAO,IAAMwD,KAAO,IAAO,EAChDA,IAAM,SAENniD,EAAK/S,KAAKg1D,KAAK5C,EAAKqB,GAEpB/B,GADAA,EAAM1xD,KAAKg1D,KAAK5C,EAAKsB,IACR1zD,KAAKg1D,KAAK3C,EAAKoB,GAAQ,EACpChE,EAAKzvD,KAAKg1D,KAAK3C,EAAKqB,GACpB3gD,EAAMA,EAAK/S,KAAKg1D,KAAK/C,EAAK0B,GAAQ,EAElCjC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAK/C,EAAK2B,GAAQ,GACvB5zD,KAAKg1D,KAAK9C,EAAKyB,GAAQ,EACpClE,EAAMA,EAAKzvD,KAAKg1D,KAAK9C,EAAK0B,GAAQ,EAClC7gD,EAAMA,EAAK/S,KAAKg1D,KAAKjD,EAAK8B,GAAQ,EAElCnC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKjD,EAAK+B,GAAQ,GACvB9zD,KAAKg1D,KAAKhD,EAAK6B,GAAQ,EACpCpE,EAAMA,EAAKzvD,KAAKg1D,KAAKhD,EAAK8B,GAAQ,EAKlC,IAAIqB,IAAQ1yC,GAJZ1P,EAAMA,EAAK/S,KAAKg1D,KAAKnD,EAAKkC,GAAQ,GAIZ,KAAa,MAFnCrC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKnD,EAAKmC,GAAQ,GACvBh0D,KAAKg1D,KAAKlD,EAAKiC,GAAQ,KAEU,IAAO,EACrDtxC,IAFAgtC,EAAMA,EAAKzvD,KAAKg1D,KAAKlD,EAAKkC,GAAQ,IAErBtC,IAAQ,IAAO,IAAMyD,KAAO,IAAO,EAChDA,IAAM,SAENpiD,EAAK/S,KAAKg1D,KAAKzC,EAAKkB,GAEpB/B,GADAA,EAAM1xD,KAAKg1D,KAAKzC,EAAKmB,IACR1zD,KAAKg1D,KAAKxC,EAAKiB,GAAQ,EACpChE,EAAKzvD,KAAKg1D,KAAKxC,EAAKkB,GACpB3gD,EAAMA,EAAK/S,KAAKg1D,KAAK5C,EAAKuB,GAAQ,EAElCjC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAK5C,EAAKwB,GAAQ,GACvB5zD,KAAKg1D,KAAK3C,EAAKsB,GAAQ,EACpClE,EAAMA,EAAKzvD,KAAKg1D,KAAK3C,EAAKuB,GAAQ,EAClC7gD,EAAMA,EAAK/S,KAAKg1D,KAAK/C,EAAK4B,GAAQ,EAElCnC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAK/C,EAAK6B,GAAQ,GACvB9zD,KAAKg1D,KAAK9C,EAAK2B,GAAQ,EACpCpE,EAAMA,EAAKzvD,KAAKg1D,KAAK9C,EAAK4B,GAAQ,EAClC/gD,EAAMA,EAAK/S,KAAKg1D,KAAKjD,EAAKgC,GAAQ,EAElCrC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKjD,EAAKiC,GAAQ,GACvBh0D,KAAKg1D,KAAKhD,EAAK+B,GAAQ,EACpCtE,EAAMA,EAAKzvD,KAAKg1D,KAAKhD,EAAKgC,GAAQ,EAKlC,IAAIoB,IAAQ3yC,GAJZ1P,EAAMA,EAAK/S,KAAKg1D,KAAKnD,EAAKoC,GAAQ,GAIZ,KAAa,MAFnCvC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKnD,EAAKqC,IAAQ,GACvBl0D,KAAKg1D,KAAKlD,EAAKmC,GAAQ,KAEU,IAAO,EACrDxxC,IAFAgtC,EAAMA,EAAKzvD,KAAKg1D,KAAKlD,EAAKoC,IAAQ,IAErBxC,IAAQ,IAAO,IAAM0D,KAAO,IAAO,EAChDA,IAAM,SAENriD,EAAK/S,KAAKg1D,KAAKtC,EAAKe,GAEpB/B,GADAA,EAAM1xD,KAAKg1D,KAAKtC,EAAKgB,IACR1zD,KAAKg1D,KAAKrC,EAAKc,GAAQ,EACpChE,EAAKzvD,KAAKg1D,KAAKrC,EAAKe,GACpB3gD,EAAMA,EAAK/S,KAAKg1D,KAAKzC,EAAKoB,GAAQ,EAElCjC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKzC,EAAKqB,GAAQ,GACvB5zD,KAAKg1D,KAAKxC,EAAKmB,GAAQ,EACpClE,EAAMA,EAAKzvD,KAAKg1D,KAAKxC,EAAKoB,GAAQ,EAClC7gD,EAAMA,EAAK/S,KAAKg1D,KAAK5C,EAAKyB,GAAQ,EAElCnC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAK5C,EAAK0B,GAAQ,GACvB9zD,KAAKg1D,KAAK3C,EAAKwB,GAAQ,EACpCpE,EAAMA,EAAKzvD,KAAKg1D,KAAK3C,EAAKyB,GAAQ,EAClC/gD,EAAMA,EAAK/S,KAAKg1D,KAAK/C,EAAK8B,GAAQ,EAElCrC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAK/C,EAAK+B,GAAQ,GACvBh0D,KAAKg1D,KAAK9C,EAAK6B,GAAQ,EACpCtE,EAAMA,EAAKzvD,KAAKg1D,KAAK9C,EAAK8B,GAAQ,EAClCjhD,EAAMA,EAAK/S,KAAKg1D,KAAKjD,EAAKkC,GAAQ,EAElCvC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKjD,EAAKmC,IAAQ,GACvBl0D,KAAKg1D,KAAKhD,EAAKiC,GAAQ,EACpCxE,EAAMA,EAAKzvD,KAAKg1D,KAAKhD,EAAKkC,IAAQ,EAKlC,IAAImB,IAAQ5yC,GAJZ1P,EAAMA,EAAK/S,KAAKg1D,KAAKnD,EAAKsC,IAAQ,GAIZ,KAAa,MAFnCzC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKnD,EAAKuC,IAAQ,GACvBp0D,KAAKg1D,KAAKlD,EAAKqC,IAAQ,KAEU,IAAO,EACrD1xC,IAFAgtC,EAAMA,EAAKzvD,KAAKg1D,KAAKlD,EAAKsC,IAAQ,IAErB1C,IAAQ,IAAO,IAAM2D,KAAO,IAAO,EAChDA,IAAM,SAENtiD,EAAK/S,KAAKg1D,KAAKnC,EAAKY,GAEpB/B,GADAA,EAAM1xD,KAAKg1D,KAAKnC,EAAKa,IACR1zD,KAAKg1D,KAAKlC,EAAKW,GAAQ,EACpChE,EAAKzvD,KAAKg1D,KAAKlC,EAAKY,GACpB3gD,EAAMA,EAAK/S,KAAKg1D,KAAKtC,EAAKiB,GAAQ,EAElCjC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKtC,EAAKkB,GAAQ,GACvB5zD,KAAKg1D,KAAKrC,EAAKgB,GAAQ,EACpClE,EAAMA,EAAKzvD,KAAKg1D,KAAKrC,EAAKiB,GAAQ,EAClC7gD,EAAMA,EAAK/S,KAAKg1D,KAAKzC,EAAKsB,GAAQ,EAElCnC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKzC,EAAKuB,GAAQ,GACvB9zD,KAAKg1D,KAAKxC,EAAKqB,GAAQ,EACpCpE,EAAMA,EAAKzvD,KAAKg1D,KAAKxC,EAAKsB,GAAQ,EAClC/gD,EAAMA,EAAK/S,KAAKg1D,KAAK5C,EAAK2B,GAAQ,EAElCrC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAK5C,EAAK4B,GAAQ,GACvBh0D,KAAKg1D,KAAK3C,EAAK0B,GAAQ,EACpCtE,EAAMA,EAAKzvD,KAAKg1D,KAAK3C,EAAK2B,GAAQ,EAClCjhD,EAAMA,EAAK/S,KAAKg1D,KAAK/C,EAAKgC,GAAQ,EAElCvC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAK/C,EAAKiC,IAAQ,GACvBl0D,KAAKg1D,KAAK9C,EAAK+B,GAAQ,EACpCxE,EAAMA,EAAKzvD,KAAKg1D,KAAK9C,EAAKgC,IAAQ,EAClCnhD,EAAMA,EAAK/S,KAAKg1D,KAAKjD,EAAKoC,IAAQ,EAElCzC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKjD,EAAKqC,IAAQ,GACvBp0D,KAAKg1D,KAAKhD,EAAKmC,IAAQ,EACpC1E,EAAMA,EAAKzvD,KAAKg1D,KAAKhD,EAAKoC,IAAQ,EAKlC,IAAIkB,IAAQ7yC,GAJZ1P,EAAMA,EAAK/S,KAAKg1D,KAAKnD,EAAKwC,IAAQ,GAIZ,KAAa,MAFnC3C,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKnD,EAAKyC,IAAQ,GACvBt0D,KAAKg1D,KAAKlD,EAAKuC,IAAQ,KAEU,IAAO,EACrD5xC,IAFAgtC,EAAMA,EAAKzvD,KAAKg1D,KAAKlD,EAAKwC,IAAQ,IAErB5C,IAAQ,IAAO,IAAM4D,KAAO,IAAO,EAChDA,IAAM,SAENviD,EAAK/S,KAAKg1D,KAAKhC,EAAKS,GAEpB/B,GADAA,EAAM1xD,KAAKg1D,KAAKhC,EAAKU,IACR1zD,KAAKg1D,KAAK/B,EAAKQ,GAAQ,EACpChE,EAAKzvD,KAAKg1D,KAAK/B,EAAKS,GACpB3gD,EAAMA,EAAK/S,KAAKg1D,KAAKnC,EAAKc,GAAQ,EAElCjC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKnC,EAAKe,GAAQ,GACvB5zD,KAAKg1D,KAAKlC,EAAKa,GAAQ,EACpClE,EAAMA,EAAKzvD,KAAKg1D,KAAKlC,EAAKc,GAAQ,EAClC7gD,EAAMA,EAAK/S,KAAKg1D,KAAKtC,EAAKmB,GAAQ,EAElCnC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKtC,EAAKoB,GAAQ,GACvB9zD,KAAKg1D,KAAKrC,EAAKkB,GAAQ,EACpCpE,EAAMA,EAAKzvD,KAAKg1D,KAAKrC,EAAKmB,GAAQ,EAClC/gD,EAAMA,EAAK/S,KAAKg1D,KAAKzC,EAAKwB,GAAQ,EAElCrC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKzC,EAAKyB,GAAQ,GACvBh0D,KAAKg1D,KAAKxC,EAAKuB,GAAQ,EACpCtE,EAAMA,EAAKzvD,KAAKg1D,KAAKxC,EAAKwB,GAAQ,EAClCjhD,EAAMA,EAAK/S,KAAKg1D,KAAK5C,EAAK6B,GAAQ,EAElCvC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAK5C,EAAK8B,IAAQ,GACvBl0D,KAAKg1D,KAAK3C,EAAK4B,GAAQ,EACpCxE,EAAMA,EAAKzvD,KAAKg1D,KAAK3C,EAAK6B,IAAQ,EAClCnhD,EAAMA,EAAK/S,KAAKg1D,KAAK/C,EAAKkC,IAAQ,EAElCzC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAK/C,EAAKmC,IAAQ,GACvBp0D,KAAKg1D,KAAK9C,EAAKiC,IAAQ,EACpC1E,EAAMA,EAAKzvD,KAAKg1D,KAAK9C,EAAKkC,IAAQ,EAClCrhD,EAAMA,EAAK/S,KAAKg1D,KAAKjD,EAAKsC,IAAQ,EAElC3C,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKjD,EAAKuC,IAAQ,GACvBt0D,KAAKg1D,KAAKhD,EAAKqC,IAAQ,EACpC5E,EAAMA,EAAKzvD,KAAKg1D,KAAKhD,EAAKsC,IAAQ,EAKlC,IAAIiB,IAAQ9yC,GAJZ1P,EAAMA,EAAK/S,KAAKg1D,KAAKnD,EAAK2C,IAAQ,GAIZ,KAAa,MAFnC9C,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKnD,EAAK4C,IAAQ,GACvBz0D,KAAKg1D,KAAKlD,EAAK0C,IAAQ,KAEU,IAAO,EACrD/xC,IAFAgtC,EAAMA,EAAKzvD,KAAKg1D,KAAKlD,EAAK2C,IAAQ,IAErB/C,IAAQ,IAAO,IAAM6D,KAAO,IAAO,EAChDA,IAAM,SAENxiD,EAAK/S,KAAKg1D,KAAK7B,EAAKM,GAEpB/B,GADAA,EAAM1xD,KAAKg1D,KAAK7B,EAAKO,IACR1zD,KAAKg1D,KAAK5B,EAAKK,GAAQ,EACpChE,EAAKzvD,KAAKg1D,KAAK5B,EAAKM,GACpB3gD,EAAMA,EAAK/S,KAAKg1D,KAAKhC,EAAKW,GAAQ,EAElCjC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKhC,EAAKY,GAAQ,GACvB5zD,KAAKg1D,KAAK/B,EAAKU,GAAQ,EACpClE,EAAMA,EAAKzvD,KAAKg1D,KAAK/B,EAAKW,GAAQ,EAClC7gD,EAAMA,EAAK/S,KAAKg1D,KAAKnC,EAAKgB,GAAQ,EAElCnC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKnC,EAAKiB,GAAQ,GACvB9zD,KAAKg1D,KAAKlC,EAAKe,GAAQ,EACpCpE,EAAMA,EAAKzvD,KAAKg1D,KAAKlC,EAAKgB,GAAQ,EAClC/gD,EAAMA,EAAK/S,KAAKg1D,KAAKtC,EAAKqB,GAAQ,EAElCrC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKtC,EAAKsB,GAAQ,GACvBh0D,KAAKg1D,KAAKrC,EAAKoB,GAAQ,EACpCtE,EAAMA,EAAKzvD,KAAKg1D,KAAKrC,EAAKqB,GAAQ,EAClCjhD,EAAMA,EAAK/S,KAAKg1D,KAAKzC,EAAK0B,GAAQ,EAElCvC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKzC,EAAK2B,IAAQ,GACvBl0D,KAAKg1D,KAAKxC,EAAKyB,GAAQ,EACpCxE,EAAMA,EAAKzvD,KAAKg1D,KAAKxC,EAAK0B,IAAQ,EAClCnhD,EAAMA,EAAK/S,KAAKg1D,KAAK5C,EAAK+B,IAAQ,EAElCzC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAK5C,EAAKgC,IAAQ,GACvBp0D,KAAKg1D,KAAK3C,EAAK8B,IAAQ,EACpC1E,EAAMA,EAAKzvD,KAAKg1D,KAAK3C,EAAK+B,IAAQ,EAClCrhD,EAAMA,EAAK/S,KAAKg1D,KAAK/C,EAAKoC,IAAQ,EAElC3C,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAK/C,EAAKqC,IAAQ,GACvBt0D,KAAKg1D,KAAK9C,EAAKmC,IAAQ,EACpC5E,EAAMA,EAAKzvD,KAAKg1D,KAAK9C,EAAKoC,IAAQ,EAClCvhD,EAAMA,EAAK/S,KAAKg1D,KAAKjD,EAAKyC,IAAQ,EAElC9C,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKjD,EAAK0C,IAAQ,GACvBz0D,KAAKg1D,KAAKhD,EAAKwC,IAAQ,EACpC/E,EAAMA,EAAKzvD,KAAKg1D,KAAKhD,EAAKyC,IAAQ,EAKlC,IAAIe,IAAQ/yC,GAJZ1P,EAAMA,EAAK/S,KAAKg1D,KAAKnD,EAAK8C,IAAQ,GAIZ,KAAa,MAFnCjD,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKnD,EAAK+C,IAAQ,GACvB50D,KAAKg1D,KAAKlD,EAAK6C,IAAQ,KAEU,IAAO,EACrDlyC,IAFAgtC,EAAMA,EAAKzvD,KAAKg1D,KAAKlD,EAAK8C,IAAQ,IAErBlD,IAAQ,IAAO,IAAM8D,KAAO,IAAO,EAChDA,IAAM,SAENziD,EAAK/S,KAAKg1D,KAAK1B,EAAKG,GAEpB/B,GADAA,EAAM1xD,KAAKg1D,KAAK1B,EAAKI,IACR1zD,KAAKg1D,KAAKzB,EAAKE,GAAQ,EACpChE,EAAKzvD,KAAKg1D,KAAKzB,EAAKG,GACpB3gD,EAAMA,EAAK/S,KAAKg1D,KAAK7B,EAAKQ,GAAQ,EAElCjC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAK7B,EAAKS,GAAQ,GACvB5zD,KAAKg1D,KAAK5B,EAAKO,GAAQ,EACpClE,EAAMA,EAAKzvD,KAAKg1D,KAAK5B,EAAKQ,GAAQ,EAClC7gD,EAAMA,EAAK/S,KAAKg1D,KAAKhC,EAAKa,GAAQ,EAElCnC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKhC,EAAKc,GAAQ,GACvB9zD,KAAKg1D,KAAK/B,EAAKY,GAAQ,EACpCpE,EAAMA,EAAKzvD,KAAKg1D,KAAK/B,EAAKa,GAAQ,EAClC/gD,EAAMA,EAAK/S,KAAKg1D,KAAKnC,EAAKkB,GAAQ,EAElCrC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKnC,EAAKmB,GAAQ,GACvBh0D,KAAKg1D,KAAKlC,EAAKiB,GAAQ,EACpCtE,EAAMA,EAAKzvD,KAAKg1D,KAAKlC,EAAKkB,GAAQ,EAClCjhD,EAAMA,EAAK/S,KAAKg1D,KAAKtC,EAAKuB,GAAQ,EAElCvC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKtC,EAAKwB,IAAQ,GACvBl0D,KAAKg1D,KAAKrC,EAAKsB,GAAQ,EACpCxE,EAAMA,EAAKzvD,KAAKg1D,KAAKrC,EAAKuB,IAAQ,EAClCnhD,EAAMA,EAAK/S,KAAKg1D,KAAKzC,EAAK4B,IAAQ,EAElCzC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKzC,EAAK6B,IAAQ,GACvBp0D,KAAKg1D,KAAKxC,EAAK2B,IAAQ,EACpC1E,EAAMA,EAAKzvD,KAAKg1D,KAAKxC,EAAK4B,IAAQ,EAClCrhD,EAAMA,EAAK/S,KAAKg1D,KAAK5C,EAAKiC,IAAQ,EAElC3C,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAK5C,EAAKkC,IAAQ,GACvBt0D,KAAKg1D,KAAK3C,EAAKgC,IAAQ,EACpC5E,EAAMA,EAAKzvD,KAAKg1D,KAAK3C,EAAKiC,IAAQ,EAClCvhD,EAAMA,EAAK/S,KAAKg1D,KAAK/C,EAAKuC,IAAQ,EAElC9C,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAK/C,EAAKwC,IAAQ,GACvBz0D,KAAKg1D,KAAK9C,EAAKsC,IAAQ,EACpC/E,EAAMA,EAAKzvD,KAAKg1D,KAAK9C,EAAKuC,IAAQ,EAClC1hD,EAAMA,EAAK/S,KAAKg1D,KAAKjD,EAAK4C,IAAQ,EAElCjD,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKjD,EAAK6C,IAAQ,GACvB50D,KAAKg1D,KAAKhD,EAAK2C,IAAQ,EACpClF,EAAMA,EAAKzvD,KAAKg1D,KAAKhD,EAAK4C,IAAQ,EAKlC,IAAIa,IAAQhzC,GAJZ1P,EAAMA,EAAK/S,KAAKg1D,KAAKnD,EAAKgD,IAAQ,GAIZ,KAAa,MAFnCnD,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKnD,EAAKiD,IAAQ,GACvB90D,KAAKg1D,KAAKlD,EAAK+C,IAAQ,KAEU,IAAO,EACrDpyC,IAFAgtC,EAAMA,EAAKzvD,KAAKg1D,KAAKlD,EAAKgD,IAAQ,IAErBpD,IAAQ,IAAO,IAAM+D,KAAO,IAAO,EAChDA,IAAM,SAEN1iD,EAAK/S,KAAKg1D,KAAK1B,EAAKK,GAEpBjC,GADAA,EAAM1xD,KAAKg1D,KAAK1B,EAAKM,IACR5zD,KAAKg1D,KAAKzB,EAAKI,GAAQ,EACpClE,EAAKzvD,KAAKg1D,KAAKzB,EAAKK,GACpB7gD,EAAMA,EAAK/S,KAAKg1D,KAAK7B,EAAKU,GAAQ,EAElCnC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAK7B,EAAKW,GAAQ,GACvB9zD,KAAKg1D,KAAK5B,EAAKS,GAAQ,EACpCpE,EAAMA,EAAKzvD,KAAKg1D,KAAK5B,EAAKU,GAAQ,EAClC/gD,EAAMA,EAAK/S,KAAKg1D,KAAKhC,EAAKe,GAAQ,EAElCrC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKhC,EAAKgB,GAAQ,GACvBh0D,KAAKg1D,KAAK/B,EAAKc,GAAQ,EACpCtE,EAAMA,EAAKzvD,KAAKg1D,KAAK/B,EAAKe,GAAQ,EAClCjhD,EAAMA,EAAK/S,KAAKg1D,KAAKnC,EAAKoB,GAAQ,EAElCvC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKnC,EAAKqB,IAAQ,GACvBl0D,KAAKg1D,KAAKlC,EAAKmB,GAAQ,EACpCxE,EAAMA,EAAKzvD,KAAKg1D,KAAKlC,EAAKoB,IAAQ,EAClCnhD,EAAMA,EAAK/S,KAAKg1D,KAAKtC,EAAKyB,IAAQ,EAElCzC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKtC,EAAK0B,IAAQ,GACvBp0D,KAAKg1D,KAAKrC,EAAKwB,IAAQ,EACpC1E,EAAMA,EAAKzvD,KAAKg1D,KAAKrC,EAAKyB,IAAQ,EAClCrhD,EAAMA,EAAK/S,KAAKg1D,KAAKzC,EAAK8B,IAAQ,EAElC3C,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKzC,EAAK+B,IAAQ,GACvBt0D,KAAKg1D,KAAKxC,EAAK6B,IAAQ,EACpC5E,EAAMA,EAAKzvD,KAAKg1D,KAAKxC,EAAK8B,IAAQ,EAClCvhD,EAAMA,EAAK/S,KAAKg1D,KAAK5C,EAAKoC,IAAQ,EAElC9C,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAK5C,EAAKqC,IAAQ,GACvBz0D,KAAKg1D,KAAK3C,EAAKmC,IAAQ,EACpC/E,EAAMA,EAAKzvD,KAAKg1D,KAAK3C,EAAKoC,IAAQ,EAClC1hD,EAAMA,EAAK/S,KAAKg1D,KAAK/C,EAAK0C,IAAQ,EAElCjD,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAK/C,EAAK2C,IAAQ,GACvB50D,KAAKg1D,KAAK9C,EAAKyC,IAAQ,EACpClF,EAAMA,EAAKzvD,KAAKg1D,KAAK9C,EAAK0C,IAAQ,EAKlC,IAAIc,IAASjzC,GAJb1P,EAAMA,EAAK/S,KAAKg1D,KAAKjD,EAAK8C,IAAQ,GAIX,KAAa,MAFpCnD,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKjD,EAAK+C,IAAQ,GACvB90D,KAAKg1D,KAAKhD,EAAK6C,IAAQ,KAEW,IAAO,EACtDpyC,IAFAgtC,EAAMA,EAAKzvD,KAAKg1D,KAAKhD,EAAK8C,IAAQ,IAErBpD,IAAQ,IAAO,IAAMgE,KAAQ,IAAO,EACjDA,IAAO,SAEP3iD,EAAK/S,KAAKg1D,KAAK1B,EAAKO,GAEpBnC,GADAA,EAAM1xD,KAAKg1D,KAAK1B,EAAKQ,IACR9zD,KAAKg1D,KAAKzB,EAAKM,GAAQ,EACpCpE,EAAKzvD,KAAKg1D,KAAKzB,EAAKO,GACpB/gD,EAAMA,EAAK/S,KAAKg1D,KAAK7B,EAAKY,GAAQ,EAElCrC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAK7B,EAAKa,GAAQ,GACvBh0D,KAAKg1D,KAAK5B,EAAKW,GAAQ,EACpCtE,EAAMA,EAAKzvD,KAAKg1D,KAAK5B,EAAKY,GAAQ,EAClCjhD,EAAMA,EAAK/S,KAAKg1D,KAAKhC,EAAKiB,GAAQ,EAElCvC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKhC,EAAKkB,IAAQ,GACvBl0D,KAAKg1D,KAAK/B,EAAKgB,GAAQ,EACpCxE,EAAMA,EAAKzvD,KAAKg1D,KAAK/B,EAAKiB,IAAQ,EAClCnhD,EAAMA,EAAK/S,KAAKg1D,KAAKnC,EAAKsB,IAAQ,EAElCzC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKnC,EAAKuB,IAAQ,GACvBp0D,KAAKg1D,KAAKlC,EAAKqB,IAAQ,EACpC1E,EAAMA,EAAKzvD,KAAKg1D,KAAKlC,EAAKsB,IAAQ,EAClCrhD,EAAMA,EAAK/S,KAAKg1D,KAAKtC,EAAK2B,IAAQ,EAElC3C,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKtC,EAAK4B,IAAQ,GACvBt0D,KAAKg1D,KAAKrC,EAAK0B,IAAQ,EACpC5E,EAAMA,EAAKzvD,KAAKg1D,KAAKrC,EAAK2B,IAAQ,EAClCvhD,EAAMA,EAAK/S,KAAKg1D,KAAKzC,EAAKiC,IAAQ,EAElC9C,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKzC,EAAKkC,IAAQ,GACvBz0D,KAAKg1D,KAAKxC,EAAKgC,IAAQ,EACpC/E,EAAMA,EAAKzvD,KAAKg1D,KAAKxC,EAAKiC,IAAQ,EAClC1hD,EAAMA,EAAK/S,KAAKg1D,KAAK5C,EAAKuC,IAAQ,EAElCjD,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAK5C,EAAKwC,IAAQ,GACvB50D,KAAKg1D,KAAK3C,EAAKsC,IAAQ,EACpClF,EAAMA,EAAKzvD,KAAKg1D,KAAK3C,EAAKuC,IAAQ,EAKlC,IAAIe,IAASlzC,GAJb1P,EAAMA,EAAK/S,KAAKg1D,KAAK/C,EAAK4C,IAAQ,GAIX,KAAa,MAFpCnD,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAK/C,EAAK6C,IAAQ,GACvB90D,KAAKg1D,KAAK9C,EAAK2C,IAAQ,KAEW,IAAO,EACtDpyC,IAFAgtC,EAAMA,EAAKzvD,KAAKg1D,KAAK9C,EAAK4C,IAAQ,IAErBpD,IAAQ,IAAO,IAAMiE,KAAQ,IAAO,EACjDA,IAAO,SAEP5iD,EAAK/S,KAAKg1D,KAAK1B,EAAKS,GAEpBrC,GADAA,EAAM1xD,KAAKg1D,KAAK1B,EAAKU,IACRh0D,KAAKg1D,KAAKzB,EAAKQ,GAAQ,EACpCtE,EAAKzvD,KAAKg1D,KAAKzB,EAAKS,GACpBjhD,EAAMA,EAAK/S,KAAKg1D,KAAK7B,EAAKc,GAAQ,EAElCvC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAK7B,EAAKe,IAAQ,GACvBl0D,KAAKg1D,KAAK5B,EAAKa,GAAQ,EACpCxE,EAAMA,EAAKzvD,KAAKg1D,KAAK5B,EAAKc,IAAQ,EAClCnhD,EAAMA,EAAK/S,KAAKg1D,KAAKhC,EAAKmB,IAAQ,EAElCzC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKhC,EAAKoB,IAAQ,GACvBp0D,KAAKg1D,KAAK/B,EAAKkB,IAAQ,EACpC1E,EAAMA,EAAKzvD,KAAKg1D,KAAK/B,EAAKmB,IAAQ,EAClCrhD,EAAMA,EAAK/S,KAAKg1D,KAAKnC,EAAKwB,IAAQ,EAElC3C,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKnC,EAAKyB,IAAQ,GACvBt0D,KAAKg1D,KAAKlC,EAAKuB,IAAQ,EACpC5E,EAAMA,EAAKzvD,KAAKg1D,KAAKlC,EAAKwB,IAAQ,EAClCvhD,EAAMA,EAAK/S,KAAKg1D,KAAKtC,EAAK8B,IAAQ,EAElC9C,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKtC,EAAK+B,IAAQ,GACvBz0D,KAAKg1D,KAAKrC,EAAK6B,IAAQ,EACpC/E,EAAMA,EAAKzvD,KAAKg1D,KAAKrC,EAAK8B,IAAQ,EAClC1hD,EAAMA,EAAK/S,KAAKg1D,KAAKzC,EAAKoC,IAAQ,EAElCjD,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKzC,EAAKqC,IAAQ,GACvB50D,KAAKg1D,KAAKxC,EAAKmC,IAAQ,EACpClF,EAAMA,EAAKzvD,KAAKg1D,KAAKxC,EAAKoC,IAAQ,EAKlC,IAAIgB,IAASnzC,GAJb1P,EAAMA,EAAK/S,KAAKg1D,KAAK5C,EAAKyC,IAAQ,GAIX,KAAa,MAFpCnD,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAK5C,EAAK0C,IAAQ,GACvB90D,KAAKg1D,KAAK3C,EAAKwC,IAAQ,KAEW,IAAO,EACtDpyC,IAFAgtC,EAAMA,EAAKzvD,KAAKg1D,KAAK3C,EAAKyC,IAAQ,IAErBpD,IAAQ,IAAO,IAAMkE,KAAQ,IAAO,EACjDA,IAAO,SAEP7iD,EAAK/S,KAAKg1D,KAAK1B,EAAKW,GAEpBvC,GADAA,EAAM1xD,KAAKg1D,KAAK1B,EAAKY,KACRl0D,KAAKg1D,KAAKzB,EAAKU,GAAQ,EACpCxE,EAAKzvD,KAAKg1D,KAAKzB,EAAKW,IACpBnhD,EAAMA,EAAK/S,KAAKg1D,KAAK7B,EAAKgB,IAAQ,EAElCzC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAK7B,EAAKiB,IAAQ,GACvBp0D,KAAKg1D,KAAK5B,EAAKe,IAAQ,EACpC1E,EAAMA,EAAKzvD,KAAKg1D,KAAK5B,EAAKgB,IAAQ,EAClCrhD,EAAMA,EAAK/S,KAAKg1D,KAAKhC,EAAKqB,IAAQ,EAElC3C,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKhC,EAAKsB,IAAQ,GACvBt0D,KAAKg1D,KAAK/B,EAAKoB,IAAQ,EACpC5E,EAAMA,EAAKzvD,KAAKg1D,KAAK/B,EAAKqB,IAAQ,EAClCvhD,EAAMA,EAAK/S,KAAKg1D,KAAKnC,EAAK2B,IAAQ,EAElC9C,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKnC,EAAK4B,IAAQ,GACvBz0D,KAAKg1D,KAAKlC,EAAK0B,IAAQ,EACpC/E,EAAMA,EAAKzvD,KAAKg1D,KAAKlC,EAAK2B,IAAQ,EAClC1hD,EAAMA,EAAK/S,KAAKg1D,KAAKtC,EAAKiC,IAAQ,EAElCjD,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKtC,EAAKkC,IAAQ,GACvB50D,KAAKg1D,KAAKrC,EAAKgC,IAAQ,EACpClF,EAAMA,EAAKzvD,KAAKg1D,KAAKrC,EAAKiC,IAAQ,EAKlC,IAAIiB,IAASpzC,GAJb1P,EAAMA,EAAK/S,KAAKg1D,KAAKzC,EAAKsC,IAAQ,GAIX,KAAa,MAFpCnD,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKzC,EAAKuC,IAAQ,GACvB90D,KAAKg1D,KAAKxC,EAAKqC,IAAQ,KAEW,IAAO,EACtDpyC,IAFAgtC,EAAMA,EAAKzvD,KAAKg1D,KAAKxC,EAAKsC,IAAQ,IAErBpD,IAAQ,IAAO,IAAMmE,KAAQ,IAAO,EACjDA,IAAO,SAEP9iD,EAAK/S,KAAKg1D,KAAK1B,EAAKa,IAEpBzC,GADAA,EAAM1xD,KAAKg1D,KAAK1B,EAAKc,KACRp0D,KAAKg1D,KAAKzB,EAAKY,IAAQ,EACpC1E,EAAKzvD,KAAKg1D,KAAKzB,EAAKa,IACpBrhD,EAAMA,EAAK/S,KAAKg1D,KAAK7B,EAAKkB,IAAQ,EAElC3C,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAK7B,EAAKmB,IAAQ,GACvBt0D,KAAKg1D,KAAK5B,EAAKiB,IAAQ,EACpC5E,EAAMA,EAAKzvD,KAAKg1D,KAAK5B,EAAKkB,IAAQ,EAClCvhD,EAAMA,EAAK/S,KAAKg1D,KAAKhC,EAAKwB,IAAQ,EAElC9C,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKhC,EAAKyB,IAAQ,GACvBz0D,KAAKg1D,KAAK/B,EAAKuB,IAAQ,EACpC/E,EAAMA,EAAKzvD,KAAKg1D,KAAK/B,EAAKwB,IAAQ,EAClC1hD,EAAMA,EAAK/S,KAAKg1D,KAAKnC,EAAK8B,IAAQ,EAElCjD,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKnC,EAAK+B,IAAQ,GACvB50D,KAAKg1D,KAAKlC,EAAK6B,IAAQ,EACpClF,EAAMA,EAAKzvD,KAAKg1D,KAAKlC,EAAK8B,IAAQ,EAKlC,IAAIkB,IAASrzC,GAJb1P,EAAMA,EAAK/S,KAAKg1D,KAAKtC,EAAKmC,IAAQ,GAIX,KAAa,MAFpCnD,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKtC,EAAKoC,IAAQ,GACvB90D,KAAKg1D,KAAKrC,EAAKkC,IAAQ,KAEW,IAAO,EACtDpyC,IAFAgtC,EAAMA,EAAKzvD,KAAKg1D,KAAKrC,EAAKmC,IAAQ,IAErBpD,IAAQ,IAAO,IAAMoE,KAAQ,IAAO,EACjDA,IAAO,SAEP/iD,EAAK/S,KAAKg1D,KAAK1B,EAAKe,IAEpB3C,GADAA,EAAM1xD,KAAKg1D,KAAK1B,EAAKgB,KACRt0D,KAAKg1D,KAAKzB,EAAKc,IAAQ,EACpC5E,EAAKzvD,KAAKg1D,KAAKzB,EAAKe,IACpBvhD,EAAMA,EAAK/S,KAAKg1D,KAAK7B,EAAKqB,IAAQ,EAElC9C,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAK7B,EAAKsB,IAAQ,GACvBz0D,KAAKg1D,KAAK5B,EAAKoB,IAAQ,EACpC/E,EAAMA,EAAKzvD,KAAKg1D,KAAK5B,EAAKqB,IAAQ,EAClC1hD,EAAMA,EAAK/S,KAAKg1D,KAAKhC,EAAK2B,IAAQ,EAElCjD,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKhC,EAAK4B,IAAQ,GACvB50D,KAAKg1D,KAAK/B,EAAK0B,IAAQ,EACpClF,EAAMA,EAAKzvD,KAAKg1D,KAAK/B,EAAK2B,IAAQ,EAKlC,IAAImB,IAAStzC,GAJb1P,EAAMA,EAAK/S,KAAKg1D,KAAKnC,EAAKgC,IAAQ,GAIX,KAAa,MAFpCnD,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKnC,EAAKiC,IAAQ,GACvB90D,KAAKg1D,KAAKlC,EAAK+B,IAAQ,KAEW,IAAO,EACtDpyC,IAFAgtC,EAAMA,EAAKzvD,KAAKg1D,KAAKlC,EAAKgC,IAAQ,IAErBpD,IAAQ,IAAO,IAAMqE,KAAQ,IAAO,EACjDA,IAAO,SAEPhjD,EAAK/S,KAAKg1D,KAAK1B,EAAKkB,IAEpB9C,GADAA,EAAM1xD,KAAKg1D,KAAK1B,EAAKmB,KACRz0D,KAAKg1D,KAAKzB,EAAKiB,IAAQ,EACpC/E,EAAKzvD,KAAKg1D,KAAKzB,EAAKkB,IACpB1hD,EAAMA,EAAK/S,KAAKg1D,KAAK7B,EAAKwB,IAAQ,EAElCjD,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAK7B,EAAKyB,IAAQ,GACvB50D,KAAKg1D,KAAK5B,EAAKuB,IAAQ,EACpClF,EAAMA,EAAKzvD,KAAKg1D,KAAK5B,EAAKwB,IAAQ,EAKlC,IAAIoB,IAASvzC,GAJb1P,EAAMA,EAAK/S,KAAKg1D,KAAKhC,EAAK6B,IAAQ,GAIX,KAAa,MAFpCnD,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKhC,EAAK8B,IAAQ,GACvB90D,KAAKg1D,KAAK/B,EAAK4B,IAAQ,KAEW,IAAO,EACtDpyC,IAFAgtC,EAAMA,EAAKzvD,KAAKg1D,KAAK/B,EAAK6B,IAAQ,IAErBpD,IAAQ,IAAO,IAAMsE,KAAQ,IAAO,EACjDA,IAAO,SAEPjjD,EAAK/S,KAAKg1D,KAAK1B,EAAKqB,IAEpBjD,GADAA,EAAM1xD,KAAKg1D,KAAK1B,EAAKsB,KACR50D,KAAKg1D,KAAKzB,EAAKoB,IAAQ,EACpClF,EAAKzvD,KAAKg1D,KAAKzB,EAAKqB,IAKpB,IAAIqB,IAASxzC,GAJb1P,EAAMA,EAAK/S,KAAKg1D,KAAK7B,EAAK0B,IAAQ,GAIX,KAAa,MAFpCnD,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAK7B,EAAK2B,IAAQ,GACvB90D,KAAKg1D,KAAK5B,EAAKyB,IAAQ,KAEW,IAAO,EACtDpyC,IAFAgtC,EAAMA,EAAKzvD,KAAKg1D,KAAK5B,EAAK0B,IAAQ,IAErBpD,IAAQ,IAAO,IAAMuE,KAAQ,IAAO,EACjDA,IAAO,SAMP,IAAIC,IAASzzC,GAJb1P,EAAK/S,KAAKg1D,KAAK1B,EAAKuB,KAIG,KAAa,MAFpCnD,GADAA,EAAM1xD,KAAKg1D,KAAK1B,EAAKwB,KACR90D,KAAKg1D,KAAKzB,EAAKsB,IAAQ,KAEW,IAAO,EA0BtD,OAzBApyC,IAFAgtC,EAAKzvD,KAAKg1D,KAAKzB,EAAKuB,MAEPpD,IAAQ,IAAO,IAAMwE,KAAQ,IAAO,EACjDA,IAAO,SACPvE,EAAE,GAAKoD,GACPpD,EAAE,GAAKsD,GACPtD,EAAE,GAAKuD,GACPvD,EAAE,GAAKwD,GACPxD,EAAE,GAAKyD,GACPzD,EAAE,GAAK0D,GACP1D,EAAE,GAAK2D,GACP3D,EAAE,GAAK4D,GACP5D,EAAE,GAAK6D,GACP7D,EAAE,GAAK8D,GACP9D,EAAE,IAAM+D,GACR/D,EAAE,IAAMgE,GACRhE,EAAE,IAAMiE,GACRjE,EAAE,IAAMkE,GACRlE,EAAE,IAAMmE,GACRnE,EAAE,IAAMoE,GACRpE,EAAE,IAAMqE,GACRrE,EAAE,IAAMsE,GACRtE,EAAE,IAAMuE,GACE,IAANzzC,IACFkvC,EAAE,IAAMlvC,EACRpS,EAAI5P,UAEC4P,GAQT,SAAS8lD,EAAUptC,EAAMrI,EAAKrQ,GAC5BA,EAAI27C,SAAWtrC,EAAIsrC,SAAWjjC,EAAKijC,SACnC37C,EAAI5P,OAASsoB,EAAKtoB,OAASigB,EAAIjgB,OAI/B,IAFA,IAAI0tD,EAAQ,EACRiI,EAAU,EACL7tC,EAAI,EAAGA,EAAIlY,EAAI5P,OAAS,EAAG8nB,IAAK,CAGvC,IAAIqmC,EAASwH,EACbA,EAAU,EAGV,IAFA,IAAIvH,EAAgB,SAARV,EACRW,EAAO9uD,KAAKgQ,IAAIuY,EAAG7H,EAAIjgB,OAAS,GAC3BS,EAAIlB,KAAKsnB,IAAI,EAAGiB,EAAIQ,EAAKtoB,OAAS,GAAIS,GAAK4tD,EAAM5tD,IAAK,CAC7D,IAAIP,EAAI4nB,EAAIrnB,EAGRqhB,GAFoB,EAAhBwG,EAAKkjC,MAAMtrD,KACI,EAAf+f,EAAIurC,MAAM/qD,IAGd6R,EAAS,SAAJwP,EAGTssC,EAAa,UADb97C,EAAMA,EAAK87C,EAAS,GAIpBuH,IAFAxH,GAHAA,EAAUA,GAAWrsC,EAAI,SAAa,GAAM,IAGxBxP,IAAO,IAAO,KAEZ,GACtB67C,GAAU,SAEZv+C,EAAI47C,MAAM1jC,GAAKsmC,EACfV,EAAQS,EACRA,EAASwH,EAQX,OANc,IAAVjI,EACF99C,EAAI47C,MAAM1jC,GAAK4lC,EAEf99C,EAAI5P,SAGC4P,EAAIg9C,SAGb,SAASgJ,EAAYttC,EAAMrI,EAAKrQ,GAI9B,OAAO8lD,EAASptC,EAAMrI,EAAKrQ,GAsB7B,SAASimD,EAAMp6C,EAAGC,GAChBxZ,KAAKuZ,EAAIA,EACTvZ,KAAKwZ,EAAIA,EAzENnc,KAAKg1D,OACRvD,EAAc9C,GAmDhBp3B,EAAGt0B,UAAUszD,MAAQ,SAAgB71C,EAAKrQ,GACxC,IACIP,EAAMnN,KAAKlC,OAASigB,EAAIjgB,OAW5B,OAVoB,KAAhBkC,KAAKlC,QAAgC,KAAfigB,EAAIjgB,OACtBgxD,EAAY9uD,KAAM+d,EAAKrQ,GACpBP,EAAM,GACT6+C,EAAWhsD,KAAM+d,EAAKrQ,GACnBP,EAAM,KACTqmD,EAASxzD,KAAM+d,EAAKrQ,GAEpBgmD,EAAW1zD,KAAM+d,EAAKrQ,IAchCimD,EAAKrzD,UAAUuzD,QAAU,SAAkBC,GAGzC,IAFA,IAAIp6C,EAAI,IAAI9b,MAAMk2D,GACd1lD,EAAIwmB,EAAGt0B,UAAUqsD,WAAWmH,GAAK,EAC5B91D,EAAI,EAAGA,EAAI81D,EAAG91D,IACrB0b,EAAE1b,GAAKgC,KAAK+zD,OAAO/1D,EAAGoQ,EAAG0lD,GAG3B,OAAOp6C,GAITi6C,EAAKrzD,UAAUyzD,OAAS,SAAiBx6C,EAAGnL,EAAG0lD,GAC7C,GAAU,IAANv6C,GAAWA,IAAMu6C,EAAI,EAAG,OAAOv6C,EAGnC,IADA,IAAIy6C,EAAK,EACAh2D,EAAI,EAAGA,EAAIoQ,EAAGpQ,IACrBg2D,IAAW,EAAJz6C,IAAWnL,EAAIpQ,EAAI,EAC1Bub,IAAM,EAGR,OAAOy6C,GAKTL,EAAKrzD,UAAU2zD,QAAU,SAAkBC,EAAKC,EAAKC,EAAKC,EAAMC,EAAMR,GACpE,IAAK,IAAI91D,EAAI,EAAGA,EAAI81D,EAAG91D,IACrBq2D,EAAKr2D,GAAKm2D,EAAID,EAAIl2D,IAClBs2D,EAAKt2D,GAAKo2D,EAAIF,EAAIl2D,KAItB21D,EAAKrzD,UAAUi0D,UAAY,SAAoBJ,EAAKC,EAAKC,EAAMC,EAAMR,EAAGI,GACtEl0D,KAAKi0D,QAAQC,EAAKC,EAAKC,EAAKC,EAAMC,EAAMR,GAExC,IAAK,IAAI30C,EAAI,EAAGA,EAAI20C,EAAG30C,IAAM,EAM3B,IALA,IAAI/Q,EAAI+Q,GAAK,EAETq1C,EAAQn3D,KAAKo3D,IAAI,EAAIp3D,KAAKq3D,GAAKtmD,GAC/BumD,EAAQt3D,KAAKu3D,IAAI,EAAIv3D,KAAKq3D,GAAKtmD,GAE1BuN,EAAI,EAAGA,EAAIm4C,EAAGn4C,GAAKvN,EAI1B,IAHA,IAAIymD,EAASL,EACTM,EAASH,EAEJp2D,EAAI,EAAGA,EAAI4gB,EAAG5gB,IAAK,CAC1B,IAAIw2D,EAAKV,EAAK14C,EAAIpd,GACdy2D,EAAKV,EAAK34C,EAAIpd,GAEd02D,EAAKZ,EAAK14C,EAAIpd,EAAI4gB,GAClB+1C,EAAKZ,EAAK34C,EAAIpd,EAAI4gB,GAElBg2C,EAAKN,EAASI,EAAKH,EAASI,EAEhCA,EAAKL,EAASK,EAAKJ,EAASG,EAC5BA,EAAKE,EAELd,EAAK14C,EAAIpd,GAAKw2D,EAAKE,EACnBX,EAAK34C,EAAIpd,GAAKy2D,EAAKE,EAEnBb,EAAK14C,EAAIpd,EAAI4gB,GAAK41C,EAAKE,EACvBX,EAAK34C,EAAIpd,EAAI4gB,GAAK61C,EAAKE,EAGnB32D,IAAM6P,IACR+mD,EAAKX,EAAQK,EAASF,EAAQG,EAE9BA,EAASN,EAAQM,EAASH,EAAQE,EAClCA,EAASM,KAOnBxB,EAAKrzD,UAAU80D,YAAc,SAAsBvmD,EAAGgU,GACpD,IAAIixC,EAAqB,EAAjBz2D,KAAKsnB,IAAI9B,EAAGhU,GAChBwmD,EAAU,EAAJvB,EACN91D,EAAI,EACR,IAAK81D,EAAIA,EAAI,EAAI,EAAGA,EAAGA,KAAU,EAC/B91D,IAGF,OAAO,GAAKA,EAAI,EAAIq3D,GAGtB1B,EAAKrzD,UAAUg1D,UAAY,SAAoBnB,EAAKC,EAAKN,GACvD,KAAIA,GAAK,GAET,IAAK,IAAI91D,EAAI,EAAGA,EAAI81D,EAAI,EAAG91D,IAAK,CAC9B,IAAI0b,EAAIy6C,EAAIn2D,GAEZm2D,EAAIn2D,GAAKm2D,EAAIL,EAAI91D,EAAI,GACrBm2D,EAAIL,EAAI91D,EAAI,GAAK0b,EAEjBA,EAAI06C,EAAIp2D,GAERo2D,EAAIp2D,IAAMo2D,EAAIN,EAAI91D,EAAI,GACtBo2D,EAAIN,EAAI91D,EAAI,IAAM0b,IAItBi6C,EAAKrzD,UAAUi1D,aAAe,SAAuBC,EAAI1B,GAEvD,IADA,IAAItI,EAAQ,EACHxtD,EAAI,EAAGA,EAAI81D,EAAI,EAAG91D,IAAK,CAC9B,IAAIwsD,EAAoC,KAAhCntD,KAAKo4D,MAAMD,EAAG,EAAIx3D,EAAI,GAAK81D,GACjCz2D,KAAKo4D,MAAMD,EAAG,EAAIx3D,GAAK81D,GACvBtI,EAEFgK,EAAGx3D,GAAS,SAAJwsD,EAGNgB,EADEhB,EAAI,SACE,EAEAA,EAAI,SAAY,EAI5B,OAAOgL,GAGT7B,EAAKrzD,UAAUo1D,WAAa,SAAqBF,EAAIroD,EAAKgnD,EAAKL,GAE7D,IADA,IAAItI,EAAQ,EACHxtD,EAAI,EAAGA,EAAImP,EAAKnP,IACvBwtD,GAAyB,EAARgK,EAAGx3D,GAEpBm2D,EAAI,EAAIn2D,GAAa,KAARwtD,EAAgBA,KAAkB,GAC/C2I,EAAI,EAAIn2D,EAAI,GAAa,KAARwtD,EAAgBA,KAAkB,GAIrD,IAAKxtD,EAAI,EAAImP,EAAKnP,EAAI81D,IAAK91D,EACzBm2D,EAAIn2D,GAAK,EAGXuR,EAAiB,IAAVi8C,GACPj8C,EAA6B,MAAb,KAARi8C,KAGVmI,EAAKrzD,UAAUq1D,KAAO,SAAe7B,GAEnC,IADA,IAAI8B,EAAK,IAAIh4D,MAAMk2D,GACV91D,EAAI,EAAGA,EAAI81D,EAAG91D,IACrB43D,EAAG53D,GAAK,EAGV,OAAO43D,GAGTjC,EAAKrzD,UAAUu1D,KAAO,SAAet8C,EAAGC,EAAG9L,GACzC,IAAIomD,EAAI,EAAI9zD,KAAKo1D,YAAY77C,EAAEzb,OAAQ0b,EAAE1b,QAErCo2D,EAAMl0D,KAAK6zD,QAAQC,GAEnBtvD,EAAIxE,KAAK21D,KAAK7B,GAEdK,EAAM,IAAIv2D,MAAMk2D,GAChBgC,EAAO,IAAIl4D,MAAMk2D,GACjBiC,EAAO,IAAIn4D,MAAMk2D,GAEjBkC,EAAO,IAAIp4D,MAAMk2D,GACjBmC,EAAQ,IAAIr4D,MAAMk2D,GAClBoC,EAAQ,IAAIt4D,MAAMk2D,GAElBqC,EAAOzoD,EAAI47C,MACf6M,EAAKr4D,OAASg2D,EAEd9zD,KAAK01D,WAAWn8C,EAAE+vC,MAAO/vC,EAAEzb,OAAQq2D,EAAKL,GACxC9zD,KAAK01D,WAAWl8C,EAAE8vC,MAAO9vC,EAAE1b,OAAQk4D,EAAMlC,GAEzC9zD,KAAKu0D,UAAUJ,EAAK3vD,EAAGsxD,EAAMC,EAAMjC,EAAGI,GACtCl0D,KAAKu0D,UAAUyB,EAAMxxD,EAAGyxD,EAAOC,EAAOpC,EAAGI,GAEzC,IAAK,IAAIl2D,EAAI,EAAGA,EAAI81D,EAAG91D,IAAK,CAC1B,IAAIm3D,EAAKW,EAAK93D,GAAKi4D,EAAMj4D,GAAK+3D,EAAK/3D,GAAKk4D,EAAMl4D,GAC9C+3D,EAAK/3D,GAAK83D,EAAK93D,GAAKk4D,EAAMl4D,GAAK+3D,EAAK/3D,GAAKi4D,EAAMj4D,GAC/C83D,EAAK93D,GAAKm3D,EAUZ,OAPAn1D,KAAKs1D,UAAUQ,EAAMC,EAAMjC,GAC3B9zD,KAAKu0D,UAAUuB,EAAMC,EAAMI,EAAM3xD,EAAGsvD,EAAGI,GACvCl0D,KAAKs1D,UAAUa,EAAM3xD,EAAGsvD,GACxB9zD,KAAKu1D,aAAaY,EAAMrC,GAExBpmD,EAAI27C,SAAW9vC,EAAE8vC,SAAW7vC,EAAE6vC,SAC9B37C,EAAI5P,OAASyb,EAAEzb,OAAS0b,EAAE1b,OACnB4P,EAAIg9C,UAIb91B,EAAGt0B,UAAUwpD,IAAM,SAAc/rC,GAC/B,IAAIrQ,EAAM,IAAIknB,EAAG,MAEjB,OADAlnB,EAAI47C,MAAQ,IAAI1rD,MAAMoC,KAAKlC,OAASigB,EAAIjgB,QACjCkC,KAAK4zD,MAAM71C,EAAKrQ,IAIzBknB,EAAGt0B,UAAU81D,KAAO,SAAer4C,GACjC,IAAIrQ,EAAM,IAAIknB,EAAG,MAEjB,OADAlnB,EAAI47C,MAAQ,IAAI1rD,MAAMoC,KAAKlC,OAASigB,EAAIjgB,QACjC41D,EAAW1zD,KAAM+d,EAAKrQ,IAI/BknB,EAAGt0B,UAAU+xD,KAAO,SAAet0C,GACjC,OAAO/d,KAAKgrD,QAAQ4I,MAAM71C,EAAK/d,OAGjC40B,EAAGt0B,UAAUuqD,MAAQ,SAAgB9sC,GACnC,IAAIs4C,EAAWt4C,EAAM,EACjBs4C,IAAUt4C,GAAOA,GAErBxO,EAAsB,kBAARwO,GACdxO,EAAOwO,EAAM,UAIb,IADA,IAAIytC,EAAQ,EACHxtD,EAAI,EAAGA,EAAIgC,KAAKlC,OAAQE,IAAK,CACpC,IAAIwsD,GAAqB,EAAhBxqD,KAAKspD,MAAMtrD,IAAU+f,EAC1B3N,GAAU,SAAJo6C,IAA0B,SAARgB,GAC5BA,IAAU,GACVA,GAAUhB,EAAI,SAAa,EAE3BgB,GAASp7C,IAAO,GAChBpQ,KAAKspD,MAAMtrD,GAAU,SAALoS,EAQlB,OALc,IAAVo7C,IACFxrD,KAAKspD,MAAMtrD,GAAKwtD,EAChBxrD,KAAKlC,UAGAu4D,EAAWr2D,KAAKutD,OAASvtD,MAGlC40B,EAAGt0B,UAAUg2D,KAAO,SAAev4C,GACjC,OAAO/d,KAAKgrD,QAAQH,MAAM9sC,IAI5B6W,EAAGt0B,UAAUi2D,IAAM,WACjB,OAAOv2D,KAAK8pD,IAAI9pD,OAIlB40B,EAAGt0B,UAAUk2D,KAAO,WAClB,OAAOx2D,KAAKqyD,KAAKryD,KAAKgrD,UAIxBp2B,EAAGt0B,UAAUyR,IAAM,SAAcgM,GAC/B,IAAIysC,EA7xCN,SAAqBzsC,GAGnB,IAFA,IAAIysC,EAAI,IAAI5sD,MAAMmgB,EAAI8uC,aAEb4B,EAAM,EAAGA,EAAMjE,EAAE1sD,OAAQ2wD,IAAO,CACvC,IAAIhE,EAAOgE,EAAM,GAAM,EACnBC,EAAOD,EAAM,GAEjBjE,EAAEiE,GAAQ1wC,EAAIurC,MAAMmB,KAASiE,EAAQ,EAGvC,OAAOlE,EAmxCCiM,CAAW14C,GACnB,GAAiB,IAAbysC,EAAE1sD,OAAc,OAAO,IAAI82B,EAAG,GAIlC,IADA,IAAI7yB,EAAM/B,KACDhC,EAAI,EAAGA,EAAIwsD,EAAE1sD,QACP,IAAT0sD,EAAExsD,GADsBA,IAAK+D,EAAMA,EAAIw0D,OAI7C,KAAMv4D,EAAIwsD,EAAE1sD,OACV,IAAK,IAAI8kB,EAAI7gB,EAAIw0D,MAAOv4D,EAAIwsD,EAAE1sD,OAAQE,IAAK4kB,EAAIA,EAAE2zC,MAClC,IAAT/L,EAAExsD,KAEN+D,EAAMA,EAAI+nD,IAAIlnC,IAIlB,OAAO7gB,GAIT6yB,EAAGt0B,UAAUo2D,OAAS,SAAiB3/C,GACrCxH,EAAuB,kBAATwH,GAAqBA,GAAQ,GAC3C,IAGI/Y,EAHA4hB,EAAI7I,EAAO,GACXoI,GAAKpI,EAAO6I,GAAK,GACjB+2C,EAAa,WAAe,GAAK/2C,GAAQ,GAAKA,EAGlD,GAAU,IAANA,EAAS,CACX,IAAI4rC,EAAQ,EAEZ,IAAKxtD,EAAI,EAAGA,EAAIgC,KAAKlC,OAAQE,IAAK,CAChC,IAAI44D,EAAW52D,KAAKspD,MAAMtrD,GAAK24D,EAC3B72C,GAAsB,EAAhB9f,KAAKspD,MAAMtrD,IAAU44D,GAAah3C,EAC5C5f,KAAKspD,MAAMtrD,GAAK8hB,EAAI0rC,EACpBA,EAAQoL,IAAc,GAAKh3C,EAGzB4rC,IACFxrD,KAAKspD,MAAMtrD,GAAKwtD,EAChBxrD,KAAKlC,UAIT,GAAU,IAANqhB,EAAS,CACX,IAAKnhB,EAAIgC,KAAKlC,OAAS,EAAGE,GAAK,EAAGA,IAChCgC,KAAKspD,MAAMtrD,EAAImhB,GAAKnf,KAAKspD,MAAMtrD,GAGjC,IAAKA,EAAI,EAAGA,EAAImhB,EAAGnhB,IACjBgC,KAAKspD,MAAMtrD,GAAK,EAGlBgC,KAAKlC,QAAUqhB,EAGjB,OAAOnf,KAAK0qD,UAGd91B,EAAGt0B,UAAUu2D,MAAQ,SAAgB9/C,GAGnC,OADAxH,EAAyB,IAAlBvP,KAAKqpD,UACLrpD,KAAK02D,OAAO3/C,IAMrB6d,EAAGt0B,UAAUw2D,OAAS,SAAiB//C,EAAMggD,EAAMC,GAEjD,IAAI7oD,EADJoB,EAAuB,kBAATwH,GAAqBA,GAAQ,GAGzC5I,EADE4oD,GACGA,EAAQA,EAAO,IAAO,GAEvB,EAGN,IAAIn3C,EAAI7I,EAAO,GACXoI,EAAI9hB,KAAKgQ,KAAK0J,EAAO6I,GAAK,GAAI5f,KAAKlC,QACnC4e,EAAO,SAAc,WAAckD,GAAMA,EACzCq3C,EAAcD,EAMlB,GAJA7oD,GAAKgR,EACLhR,EAAI9Q,KAAKsnB,IAAI,EAAGxW,GAGZ8oD,EAAa,CACf,IAAK,IAAIj5D,EAAI,EAAGA,EAAImhB,EAAGnhB,IACrBi5D,EAAY3N,MAAMtrD,GAAKgC,KAAKspD,MAAMtrD,GAEpCi5D,EAAYn5D,OAASqhB,EAGvB,GAAU,IAANA,QAEG,GAAInf,KAAKlC,OAASqhB,EAEvB,IADAnf,KAAKlC,QAAUqhB,EACVnhB,EAAI,EAAGA,EAAIgC,KAAKlC,OAAQE,IAC3BgC,KAAKspD,MAAMtrD,GAAKgC,KAAKspD,MAAMtrD,EAAImhB,QAGjCnf,KAAKspD,MAAM,GAAK,EAChBtpD,KAAKlC,OAAS,EAGhB,IAAI0tD,EAAQ,EACZ,IAAKxtD,EAAIgC,KAAKlC,OAAS,EAAGE,GAAK,IAAgB,IAAVwtD,GAAextD,GAAKmQ,GAAInQ,IAAK,CAChE,IAAIR,EAAuB,EAAhBwC,KAAKspD,MAAMtrD,GACtBgC,KAAKspD,MAAMtrD,GAAMwtD,GAAU,GAAK5rC,EAAOpiB,IAASoiB,EAChD4rC,EAAQhuD,EAAOkf,EAajB,OATIu6C,GAAyB,IAAVzL,IACjByL,EAAY3N,MAAM2N,EAAYn5D,UAAY0tD,GAGxB,IAAhBxrD,KAAKlC,SACPkC,KAAKspD,MAAM,GAAK,EAChBtpD,KAAKlC,OAAS,GAGTkC,KAAK0qD,UAGd91B,EAAGt0B,UAAU42D,MAAQ,SAAgBngD,EAAMggD,EAAMC,GAG/C,OADAznD,EAAyB,IAAlBvP,KAAKqpD,UACLrpD,KAAK82D,OAAO//C,EAAMggD,EAAMC,IAIjCpiC,EAAGt0B,UAAU62D,KAAO,SAAepgD,GACjC,OAAO/W,KAAKgrD,QAAQ6L,MAAM9/C,IAG5B6d,EAAGt0B,UAAU82D,MAAQ,SAAgBrgD,GACnC,OAAO/W,KAAKgrD,QAAQ0L,OAAO3/C,IAI7B6d,EAAGt0B,UAAU+2D,KAAO,SAAetgD,GACjC,OAAO/W,KAAKgrD,QAAQkM,MAAMngD,IAG5B6d,EAAGt0B,UAAUg3D,MAAQ,SAAgBvgD,GACnC,OAAO/W,KAAKgrD,QAAQ8L,OAAO//C,IAI7B6d,EAAGt0B,UAAU+sD,MAAQ,SAAgBoB,GACnCl/C,EAAsB,kBAARk/C,GAAoBA,GAAO,GACzC,IAAI7uC,EAAI6uC,EAAM,GACVtvC,GAAKsvC,EAAM7uC,GAAK,GAChBgD,EAAI,GAAKhD,EAGb,QAAI5f,KAAKlC,QAAUqhB,OAGXnf,KAAKspD,MAAMnqC,GAELyD,IAIhBgS,EAAGt0B,UAAUi3D,OAAS,SAAiBxgD,GACrCxH,EAAuB,kBAATwH,GAAqBA,GAAQ,GAC3C,IAAI6I,EAAI7I,EAAO,GACXoI,GAAKpI,EAAO6I,GAAK,GAIrB,GAFArQ,EAAyB,IAAlBvP,KAAKqpD,SAAgB,2CAExBrpD,KAAKlC,QAAUqhB,EACjB,OAAOnf,KAQT,GALU,IAAN4f,GACFT,IAEFnf,KAAKlC,OAAST,KAAKgQ,IAAI8R,EAAGnf,KAAKlC,QAErB,IAAN8hB,EAAS,CACX,IAAIlD,EAAO,SAAc,WAAckD,GAAMA,EAC7C5f,KAAKspD,MAAMtpD,KAAKlC,OAAS,IAAM4e,EAGjC,OAAO1c,KAAK0qD,UAId91B,EAAGt0B,UAAUk3D,MAAQ,SAAgBzgD,GACnC,OAAO/W,KAAKgrD,QAAQuM,OAAOxgD,IAI7B6d,EAAGt0B,UAAU6sD,MAAQ,SAAgBpvC,GAGnC,OAFAxO,EAAsB,kBAARwO,GACdxO,EAAOwO,EAAM,UACTA,EAAM,EAAU/d,KAAKy3D,OAAO15C,GAGV,IAAlB/d,KAAKqpD,SACa,IAAhBrpD,KAAKlC,SAAiC,EAAhBkC,KAAKspD,MAAM,KAAWvrC,GAC9C/d,KAAKspD,MAAM,GAAKvrC,GAAuB,EAAhB/d,KAAKspD,MAAM,IAClCtpD,KAAKqpD,SAAW,EACTrpD,OAGTA,KAAKqpD,SAAW,EAChBrpD,KAAKy3D,MAAM15C,GACX/d,KAAKqpD,SAAW,EACTrpD,MAIFA,KAAK8qD,OAAO/sC,IAGrB6W,EAAGt0B,UAAUwqD,OAAS,SAAiB/sC,GACrC/d,KAAKspD,MAAM,IAAMvrC,EAGjB,IAAK,IAAI/f,EAAI,EAAGA,EAAIgC,KAAKlC,QAAUkC,KAAKspD,MAAMtrD,IAAM,SAAWA,IAC7DgC,KAAKspD,MAAMtrD,IAAM,SACbA,IAAMgC,KAAKlC,OAAS,EACtBkC,KAAKspD,MAAMtrD,EAAI,GAAK,EAEpBgC,KAAKspD,MAAMtrD,EAAI,KAKnB,OAFAgC,KAAKlC,OAAST,KAAKsnB,IAAI3kB,KAAKlC,OAAQE,EAAI,GAEjCgC,MAIT40B,EAAGt0B,UAAUm3D,MAAQ,SAAgB15C,GAGnC,GAFAxO,EAAsB,kBAARwO,GACdxO,EAAOwO,EAAM,UACTA,EAAM,EAAG,OAAO/d,KAAKmtD,OAAOpvC,GAEhC,GAAsB,IAAlB/d,KAAKqpD,SAIP,OAHArpD,KAAKqpD,SAAW,EAChBrpD,KAAKmtD,MAAMpvC,GACX/d,KAAKqpD,SAAW,EACTrpD,KAKT,GAFAA,KAAKspD,MAAM,IAAMvrC,EAEG,IAAhB/d,KAAKlC,QAAgBkC,KAAKspD,MAAM,GAAK,EACvCtpD,KAAKspD,MAAM,IAAMtpD,KAAKspD,MAAM,GAC5BtpD,KAAKqpD,SAAW,OAGhB,IAAK,IAAIrrD,EAAI,EAAGA,EAAIgC,KAAKlC,QAAUkC,KAAKspD,MAAMtrD,GAAK,EAAGA,IACpDgC,KAAKspD,MAAMtrD,IAAM,SACjBgC,KAAKspD,MAAMtrD,EAAI,IAAM,EAIzB,OAAOgC,KAAK0qD,UAGd91B,EAAGt0B,UAAUo3D,KAAO,SAAe35C,GACjC,OAAO/d,KAAKgrD,QAAQmC,MAAMpvC,IAG5B6W,EAAGt0B,UAAUq3D,KAAO,SAAe55C,GACjC,OAAO/d,KAAKgrD,QAAQyM,MAAM15C,IAG5B6W,EAAGt0B,UAAUs3D,KAAO,WAGlB,OAFA53D,KAAKqpD,SAAW,EAETrpD,MAGT40B,EAAGt0B,UAAU0c,IAAM,WACjB,OAAOhd,KAAKgrD,QAAQ4M,QAGtBhjC,EAAGt0B,UAAUu3D,aAAe,SAAuB95C,EAAK+rC,EAAKrsD,GAC3D,IACIO,EAIAwsD,EALAr9C,EAAM4Q,EAAIjgB,OAASL,EAGvBuC,KAAKirD,QAAQ99C,GAGb,IAAIq+C,EAAQ,EACZ,IAAKxtD,EAAI,EAAGA,EAAI+f,EAAIjgB,OAAQE,IAAK,CAC/BwsD,GAA6B,EAAxBxqD,KAAKspD,MAAMtrD,EAAIP,IAAc+tD,EAClC,IAAIxB,GAAwB,EAAfjsC,EAAIurC,MAAMtrD,IAAU8rD,EAEjC0B,IADAhB,GAAa,SAARR,IACS,KAAQA,EAAQ,SAAa,GAC3ChqD,KAAKspD,MAAMtrD,EAAIP,GAAa,SAAJ+sD,EAE1B,KAAOxsD,EAAIgC,KAAKlC,OAASL,EAAOO,IAE9BwtD,GADAhB,GAA6B,EAAxBxqD,KAAKspD,MAAMtrD,EAAIP,IAAc+tD,IACrB,GACbxrD,KAAKspD,MAAMtrD,EAAIP,GAAa,SAAJ+sD,EAG1B,GAAc,IAAVgB,EAAa,OAAOxrD,KAAK0qD,SAK7B,IAFAn7C,GAAkB,IAAXi8C,GACPA,EAAQ,EACHxtD,EAAI,EAAGA,EAAIgC,KAAKlC,OAAQE,IAE3BwtD,GADAhB,IAAsB,EAAhBxqD,KAAKspD,MAAMtrD,IAAUwtD,IACd,GACbxrD,KAAKspD,MAAMtrD,GAAS,SAAJwsD,EAIlB,OAFAxqD,KAAKqpD,SAAW,EAETrpD,KAAK0qD,UAGd91B,EAAGt0B,UAAUw3D,SAAW,SAAmB/5C,EAAKg6C,GAC9C,IAAIt6D,GAAQuC,KAAKlC,OAASigB,EAAIjgB,QAE1B6B,EAAIK,KAAKgrD,QACTh8C,EAAI+O,EAGJi6C,EAA8B,EAAxBhpD,EAAEs6C,MAAMt6C,EAAElR,OAAS,GAGf,KADdL,EAAQ,GADMuC,KAAK2sD,WAAWqL,MAG5BhpD,EAAIA,EAAEooD,MAAM35D,GACZkC,EAAE+2D,OAAOj5D,GACTu6D,EAA8B,EAAxBhpD,EAAEs6C,MAAMt6C,EAAElR,OAAS,IAI3B,IACI8kB,EADAC,EAAIljB,EAAE7B,OAASkR,EAAElR,OAGrB,GAAa,QAATi6D,EAAgB,EAClBn1C,EAAI,IAAIgS,EAAG,OACT92B,OAAS+kB,EAAI,EACfD,EAAE0mC,MAAQ,IAAI1rD,MAAMglB,EAAE9kB,QACtB,IAAK,IAAIE,EAAI,EAAGA,EAAI4kB,EAAE9kB,OAAQE,IAC5B4kB,EAAE0mC,MAAMtrD,GAAK,EAIjB,IAAIoB,EAAOO,EAAEqrD,QAAQ6M,aAAa7oD,EAAG,EAAG6T,GAClB,IAAlBzjB,EAAKiqD,WACP1pD,EAAIP,EACAwjB,IACFA,EAAE0mC,MAAMzmC,GAAK,IAIjB,IAAK,IAAItkB,EAAIskB,EAAI,EAAGtkB,GAAK,EAAGA,IAAK,CAC/B,IAAI05D,EAAmC,UAAL,EAAxBt4D,EAAE2pD,MAAMt6C,EAAElR,OAASS,KACE,EAA5BoB,EAAE2pD,MAAMt6C,EAAElR,OAASS,EAAI,IAO1B,IAHA05D,EAAK56D,KAAKgQ,IAAK4qD,EAAKD,EAAO,EAAG,UAE9Br4D,EAAEk4D,aAAa7oD,EAAGipD,EAAI15D,GACA,IAAfoB,EAAE0pD,UACP4O,IACAt4D,EAAE0pD,SAAW,EACb1pD,EAAEk4D,aAAa7oD,EAAG,EAAGzQ,GAChBoB,EAAEgsD,WACLhsD,EAAE0pD,UAAY,GAGdzmC,IACFA,EAAE0mC,MAAM/qD,GAAK05D,GAajB,OAVIr1C,GACFA,EAAE8nC,SAEJ/qD,EAAE+qD,SAGW,QAATqN,GAA4B,IAAVt6D,GACpBkC,EAAEm3D,OAAOr5D,GAGJ,CACLy6D,IAAKt1C,GAAK,KACVxI,IAAKza,IAQTi1B,EAAGt0B,UAAU63D,OAAS,SAAiBp6C,EAAKg6C,EAAMK,GAGhD,OAFA7oD,GAAQwO,EAAI4tC,UAER3rD,KAAK2rD,SACA,CACLuM,IAAK,IAAItjC,EAAG,GACZxa,IAAK,IAAIwa,EAAG,IAKM,IAAlB50B,KAAKqpD,UAAmC,IAAjBtrC,EAAIsrC,UAC7BtnD,EAAM/B,KAAKytD,MAAM0K,OAAOp6C,EAAKg6C,GAEhB,QAATA,IACFG,EAAMn2D,EAAIm2D,IAAIzK,OAGH,QAATsK,IACF39C,EAAMrY,EAAIqY,IAAIqzC,MACV2K,GAA6B,IAAjBh+C,EAAIivC,UAClBjvC,EAAIu0C,KAAK5wC,IAIN,CACLm6C,IAAKA,EACL99C,IAAKA,IAIa,IAAlBpa,KAAKqpD,UAAmC,IAAjBtrC,EAAIsrC,UAC7BtnD,EAAM/B,KAAKm4D,OAAOp6C,EAAI0vC,MAAOsK,GAEhB,QAATA,IACFG,EAAMn2D,EAAIm2D,IAAIzK,OAGT,CACLyK,IAAKA,EACL99C,IAAKrY,EAAIqY,MAI0B,KAAlCpa,KAAKqpD,SAAWtrC,EAAIsrC,WACvBtnD,EAAM/B,KAAKytD,MAAM0K,OAAOp6C,EAAI0vC,MAAOsK,GAEtB,QAATA,IACF39C,EAAMrY,EAAIqY,IAAIqzC,MACV2K,GAA6B,IAAjBh+C,EAAIivC,UAClBjvC,EAAIw0C,KAAK7wC,IAIN,CACLm6C,IAAKn2D,EAAIm2D,IACT99C,IAAKA,IAOL2D,EAAIjgB,OAASkC,KAAKlC,QAAUkC,KAAKiqD,IAAIlsC,GAAO,EACvC,CACLm6C,IAAK,IAAItjC,EAAG,GACZxa,IAAKpa,MAKU,IAAf+d,EAAIjgB,OACO,QAATi6D,EACK,CACLG,IAAKl4D,KAAKq4D,KAAKt6C,EAAIurC,MAAM,IACzBlvC,IAAK,MAII,QAAT29C,EACK,CACLG,IAAK,KACL99C,IAAK,IAAIwa,EAAG50B,KAAK4rD,MAAM7tC,EAAIurC,MAAM,MAI9B,CACL4O,IAAKl4D,KAAKq4D,KAAKt6C,EAAIurC,MAAM,IACzBlvC,IAAK,IAAIwa,EAAG50B,KAAK4rD,MAAM7tC,EAAIurC,MAAM,MAI9BtpD,KAAK83D,SAAS/5C,EAAKg6C,GAlF1B,IAAIG,EAAK99C,EAAKrY,GAsFhB6yB,EAAGt0B,UAAU43D,IAAM,SAAcn6C,GAC/B,OAAO/d,KAAKm4D,OAAOp6C,EAAK,OAAO,GAAOm6C,KAIxCtjC,EAAGt0B,UAAU8Z,IAAM,SAAc2D,GAC/B,OAAO/d,KAAKm4D,OAAOp6C,EAAK,OAAO,GAAO3D,KAGxCwa,EAAGt0B,UAAUg4D,KAAO,SAAev6C,GACjC,OAAO/d,KAAKm4D,OAAOp6C,EAAK,OAAO,GAAM3D,KAIvCwa,EAAGt0B,UAAUi4D,SAAW,SAAmBx6C,GACzC,IAAIy6C,EAAKx4D,KAAKm4D,OAAOp6C,GAGrB,GAAIy6C,EAAGp+C,IAAIuxC,SAAU,OAAO6M,EAAGN,IAE/B,IAAI99C,EAA0B,IAApBo+C,EAAGN,IAAI7O,SAAiBmP,EAAGp+C,IAAIw0C,KAAK7wC,GAAOy6C,EAAGp+C,IAEpDq+C,EAAO16C,EAAIu5C,MAAM,GACjBx2C,EAAK/C,EAAI26C,MAAM,GACfzO,EAAM7vC,EAAI6vC,IAAIwO,GAGlB,OAAIxO,EAAM,GAAa,IAAPnpC,GAAoB,IAARmpC,EAAmBuO,EAAGN,IAGvB,IAApBM,EAAGN,IAAI7O,SAAiBmP,EAAGN,IAAIT,MAAM,GAAKe,EAAGN,IAAI/K,MAAM,IAGhEv4B,EAAGt0B,UAAUsrD,MAAQ,SAAgB7tC,GACnC,IAAIs4C,EAAWt4C,EAAM,EACjBs4C,IAAUt4C,GAAOA,GAErBxO,EAAOwO,GAAO,UAId,IAHA,IAAIpC,GAAK,GAAK,IAAMoC,EAEhBvJ,EAAM,EACDxW,EAAIgC,KAAKlC,OAAS,EAAGE,GAAK,EAAGA,IACpCwW,GAAOmH,EAAInH,GAAuB,EAAhBxU,KAAKspD,MAAMtrD,KAAW+f,EAG1C,OAAOs4C,GAAY7hD,EAAMA,GAI3BogB,EAAGt0B,UAAUq4D,KAAO,SAAe56C,GACjC,OAAO/d,KAAK4rD,MAAM7tC,IAIpB6W,EAAGt0B,UAAUurD,MAAQ,SAAgB9tC,GACnC,IAAIs4C,EAAWt4C,EAAM,EACjBs4C,IAAUt4C,GAAOA,GAErBxO,EAAOwO,GAAO,UAGd,IADA,IAAIytC,EAAQ,EACHxtD,EAAIgC,KAAKlC,OAAS,EAAGE,GAAK,EAAGA,IAAK,CACzC,IAAIwsD,GAAqB,EAAhBxqD,KAAKspD,MAAMtrD,IAAkB,SAARwtD,EAC9BxrD,KAAKspD,MAAMtrD,GAAMwsD,EAAIzsC,EAAO,EAC5BytC,EAAQhB,EAAIzsC,EAId,OADA/d,KAAK0qD,SACE2L,EAAWr2D,KAAKutD,OAASvtD,MAGlC40B,EAAGt0B,UAAU+3D,KAAO,SAAet6C,GACjC,OAAO/d,KAAKgrD,QAAQa,MAAM9tC,IAG5B6W,EAAGt0B,UAAUs4D,KAAO,SAAej9C,GACjCpM,EAAsB,IAAfoM,EAAE0tC,UACT95C,GAAQoM,EAAEgwC,UAEV,IAAIpyC,EAAIvZ,KACJwZ,EAAImC,EAAEqvC,QAGRzxC,EADiB,IAAfA,EAAE8vC,SACA9vC,EAAE++C,KAAK38C,GAEPpC,EAAEyxC,QAaR,IATA,IAAIxwC,EAAI,IAAIoa,EAAG,GACXna,EAAI,IAAIma,EAAG,GAGXla,EAAI,IAAIka,EAAG,GACXja,EAAI,IAAIia,EAAG,GAEXikC,EAAI,EAEDt/C,EAAEu/C,UAAYt/C,EAAEs/C,UACrBv/C,EAAEu9C,OAAO,GACTt9C,EAAEs9C,OAAO,KACP+B,EAMJ,IAHA,IAAIE,EAAKv/C,EAAEwxC,QACPgO,EAAKz/C,EAAEyxC,SAEHzxC,EAAEoyC,UAAU,CAClB,IAAK,IAAI3tD,EAAI,EAAGi7D,EAAK,EAAyB,KAArB1/C,EAAE+vC,MAAM,GAAK2P,IAAaj7D,EAAI,KAAMA,EAAGi7D,IAAO,GACvE,GAAIj7D,EAAI,EAEN,IADAub,EAAEu9C,OAAO94D,GACFA,KAAM,IACPwc,EAAE0+C,SAAWz+C,EAAEy+C,WACjB1+C,EAAEm0C,KAAKoK,GACPt+C,EAAEm0C,KAAKoK,IAGTx+C,EAAEs8C,OAAO,GACTr8C,EAAEq8C,OAAO,GAIb,IAAK,IAAIv4D,EAAI,EAAG46D,EAAK,EAAyB,KAArB3/C,EAAE8vC,MAAM,GAAK6P,IAAa56D,EAAI,KAAMA,EAAG46D,IAAO,GACvE,GAAI56D,EAAI,EAEN,IADAib,EAAEs9C,OAAOv4D,GACFA,KAAM,IACPmc,EAAEw+C,SAAWv+C,EAAEu+C,WACjBx+C,EAAEi0C,KAAKoK,GACPp+C,EAAEi0C,KAAKoK,IAGTt+C,EAAEo8C,OAAO,GACTn8C,EAAEm8C,OAAO,GAITv9C,EAAE0wC,IAAIzwC,IAAM,GACdD,EAAEq1C,KAAKp1C,GACPgB,EAAEo0C,KAAKl0C,GACPD,EAAEm0C,KAAKj0C,KAEPnB,EAAEo1C,KAAKr1C,GACPmB,EAAEk0C,KAAKp0C,GACPG,EAAEi0C,KAAKn0C,IAIX,MAAO,CACL9a,EAAG+a,EACH1L,EAAG2L,EACHmI,IAAKtJ,EAAEk9C,OAAOmC,KAOlBjkC,EAAGt0B,UAAU84D,OAAS,SAAiBz9C,GACrCpM,EAAsB,IAAfoM,EAAE0tC,UACT95C,GAAQoM,EAAEgwC,UAEV,IAAIhsD,EAAIK,KACJgP,EAAI2M,EAAEqvC,QAGRrrD,EADiB,IAAfA,EAAE0pD,SACA1pD,EAAE24D,KAAK38C,GAEPhc,EAAEqrD,QAQR,IALA,IAuCIjpD,EAvCAs3D,EAAK,IAAIzkC,EAAG,GACZxJ,EAAK,IAAIwJ,EAAG,GAEZ7D,EAAQ/hB,EAAEg8C,QAEPrrD,EAAE25D,KAAK,GAAK,GAAKtqD,EAAEsqD,KAAK,GAAK,GAAG,CACrC,IAAK,IAAIt7D,EAAI,EAAGi7D,EAAK,EAAyB,KAArBt5D,EAAE2pD,MAAM,GAAK2P,IAAaj7D,EAAI,KAAMA,EAAGi7D,IAAO,GACvE,GAAIj7D,EAAI,EAEN,IADA2B,EAAEm3D,OAAO94D,GACFA,KAAM,GACPq7D,EAAGH,SACLG,EAAG1K,KAAK59B,GAGVsoC,EAAGvC,OAAO,GAId,IAAK,IAAIv4D,EAAI,EAAG46D,EAAK,EAAyB,KAArBnqD,EAAEs6C,MAAM,GAAK6P,IAAa56D,EAAI,KAAMA,EAAG46D,IAAO,GACvE,GAAI56D,EAAI,EAEN,IADAyQ,EAAE8nD,OAAOv4D,GACFA,KAAM,GACP6sB,EAAG8tC,SACL9tC,EAAGujC,KAAK59B,GAGV3F,EAAG0rC,OAAO,GAIVn3D,EAAEsqD,IAAIj7C,IAAM,GACdrP,EAAEivD,KAAK5/C,GACPqqD,EAAGzK,KAAKxjC,KAERpc,EAAE4/C,KAAKjvD,GACPyrB,EAAGwjC,KAAKyK,IAeZ,OATEt3D,EADgB,IAAdpC,EAAE25D,KAAK,GACHD,EAEAjuC,GAGAkuC,KAAK,GAAK,GAChBv3D,EAAI4sD,KAAKhzC,GAGJ5Z,GAGT6yB,EAAGt0B,UAAUwiB,IAAM,SAAc/E,GAC/B,GAAI/d,KAAK2rD,SAAU,OAAO5tC,EAAIf,MAC9B,GAAIe,EAAI4tC,SAAU,OAAO3rD,KAAKgd,MAE9B,IAAIrd,EAAIK,KAAKgrD,QACTh8C,EAAI+O,EAAIitC,QACZrrD,EAAE0pD,SAAW,EACbr6C,EAAEq6C,SAAW,EAGb,IAAK,IAAI5rD,EAAQ,EAAGkC,EAAEm5D,UAAY9pD,EAAE8pD,SAAUr7D,IAC5CkC,EAAEm3D,OAAO,GACT9nD,EAAE8nD,OAAO,GAGX,OAAG,CACD,KAAOn3D,EAAEm5D,UACPn5D,EAAEm3D,OAAO,GAEX,KAAO9nD,EAAE8pD,UACP9pD,EAAE8nD,OAAO,GAGX,IAAIl3C,EAAIjgB,EAAEsqD,IAAIj7C,GACd,GAAI4Q,EAAI,EAAG,CAET,IAAIlG,EAAI/Z,EACRA,EAAIqP,EACJA,EAAI0K,OACC,GAAU,IAANkG,GAAyB,IAAd5Q,EAAEsqD,KAAK,GAC3B,MAGF35D,EAAEivD,KAAK5/C,GAGT,OAAOA,EAAE0nD,OAAOj5D,IAIlBm3B,EAAGt0B,UAAUi5D,KAAO,SAAex7C,GACjC,OAAO/d,KAAK44D,KAAK76C,GAAKpe,EAAE24D,KAAKv6C,IAG/B6W,EAAGt0B,UAAUw4D,OAAS,WACpB,OAA+B,KAAP,EAAhB94D,KAAKspD,MAAM,KAGrB10B,EAAGt0B,UAAU44D,MAAQ,WACnB,OAA+B,KAAP,EAAhBl5D,KAAKspD,MAAM,KAIrB10B,EAAGt0B,UAAUo4D,MAAQ,SAAgB36C,GACnC,OAAO/d,KAAKspD,MAAM,GAAKvrC,GAIzB6W,EAAGt0B,UAAUk5D,MAAQ,SAAgB/K,GACnCl/C,EAAsB,kBAARk/C,GACd,IAAI7uC,EAAI6uC,EAAM,GACVtvC,GAAKsvC,EAAM7uC,GAAK,GAChBgD,EAAI,GAAKhD,EAGb,GAAI5f,KAAKlC,QAAUqhB,EAGjB,OAFAnf,KAAKirD,QAAQ9rC,EAAI,GACjBnf,KAAKspD,MAAMnqC,IAAMyD,EACV5iB,KAKT,IADA,IAAIwrD,EAAQ5oC,EACH5kB,EAAImhB,EAAa,IAAVqsC,GAAextD,EAAIgC,KAAKlC,OAAQE,IAAK,CACnD,IAAIwsD,EAAoB,EAAhBxqD,KAAKspD,MAAMtrD,GAEnBwtD,GADAhB,GAAKgB,KACS,GACdhB,GAAK,SACLxqD,KAAKspD,MAAMtrD,GAAKwsD,EAMlB,OAJc,IAAVgB,IACFxrD,KAAKspD,MAAMtrD,GAAKwtD,EAChBxrD,KAAKlC,UAEAkC,MAGT40B,EAAGt0B,UAAUqrD,OAAS,WACpB,OAAuB,IAAhB3rD,KAAKlC,QAAkC,IAAlBkC,KAAKspD,MAAM,IAGzC10B,EAAGt0B,UAAUg5D,KAAO,SAAev7C,GACjC,IAOIhc,EAPAsnD,EAAWtrC,EAAM,EAErB,GAAsB,IAAlB/d,KAAKqpD,WAAmBA,EAAU,OAAQ,EAC9C,GAAsB,IAAlBrpD,KAAKqpD,UAAkBA,EAAU,OAAO,EAK5C,GAHArpD,KAAK0qD,SAGD1qD,KAAKlC,OAAS,EAChBiE,EAAM,MACD,CACDsnD,IACFtrC,GAAOA,GAGTxO,EAAOwO,GAAO,SAAW,qBAEzB,IAAIysC,EAAoB,EAAhBxqD,KAAKspD,MAAM,GACnBvnD,EAAMyoD,IAAMzsC,EAAM,EAAIysC,EAAIzsC,GAAO,EAAI,EAEvC,OAAsB,IAAlB/d,KAAKqpD,SAA8B,GAANtnD,EAC1BA,GAOT6yB,EAAGt0B,UAAU2pD,IAAM,SAAclsC,GAC/B,GAAsB,IAAlB/d,KAAKqpD,UAAmC,IAAjBtrC,EAAIsrC,SAAgB,OAAQ,EACvD,GAAsB,IAAlBrpD,KAAKqpD,UAAmC,IAAjBtrC,EAAIsrC,SAAgB,OAAO,EAEtD,IAAItnD,EAAM/B,KAAKy5D,KAAK17C,GACpB,OAAsB,IAAlB/d,KAAKqpD,SAA8B,GAANtnD,EAC1BA,GAIT6yB,EAAGt0B,UAAUm5D,KAAO,SAAe17C,GAEjC,GAAI/d,KAAKlC,OAASigB,EAAIjgB,OAAQ,OAAO,EACrC,GAAIkC,KAAKlC,OAASigB,EAAIjgB,OAAQ,OAAQ,EAGtC,IADA,IAAIiE,EAAM,EACD/D,EAAIgC,KAAKlC,OAAS,EAAGE,GAAK,EAAGA,IAAK,CACzC,IAAI2B,EAAoB,EAAhBK,KAAKspD,MAAMtrD,GACfgR,EAAmB,EAAf+O,EAAIurC,MAAMtrD,GAElB,GAAI2B,IAAMqP,EAAV,CACIrP,EAAIqP,EACNjN,GAAO,EACEpC,EAAIqP,IACbjN,EAAM,GAER,OAEF,OAAOA,GAGT6yB,EAAGt0B,UAAUo5D,IAAM,SAAc37C,GAC/B,OAA0B,IAAnB/d,KAAKs5D,KAAKv7C,IAGnB6W,EAAGt0B,UAAUq5D,GAAK,SAAa57C,GAC7B,OAAyB,IAAlB/d,KAAKiqD,IAAIlsC,IAGlB6W,EAAGt0B,UAAUs5D,KAAO,SAAe77C,GACjC,OAAO/d,KAAKs5D,KAAKv7C,IAAQ,GAG3B6W,EAAGt0B,UAAUu5D,IAAM,SAAc97C,GAC/B,OAAO/d,KAAKiqD,IAAIlsC,IAAQ,GAG1B6W,EAAGt0B,UAAUw5D,IAAM,SAAc/7C,GAC/B,OAA2B,IAApB/d,KAAKs5D,KAAKv7C,IAGnB6W,EAAGt0B,UAAUy5D,GAAK,SAAah8C,GAC7B,OAA0B,IAAnB/d,KAAKiqD,IAAIlsC,IAGlB6W,EAAGt0B,UAAU05D,KAAO,SAAej8C,GACjC,OAAO/d,KAAKs5D,KAAKv7C,IAAQ,GAG3B6W,EAAGt0B,UAAU25D,IAAM,SAAcl8C,GAC/B,OAAO/d,KAAKiqD,IAAIlsC,IAAQ,GAG1B6W,EAAGt0B,UAAU45D,IAAM,SAAcn8C,GAC/B,OAA0B,IAAnB/d,KAAKs5D,KAAKv7C,IAGnB6W,EAAGt0B,UAAUu0B,GAAK,SAAa9W,GAC7B,OAAyB,IAAlB/d,KAAKiqD,IAAIlsC,IAOlB6W,EAAG20B,IAAM,SAAcxrC,GACrB,OAAO,IAAIo8C,EAAIp8C,IAGjB6W,EAAGt0B,UAAU85D,MAAQ,SAAgB5xC,GAGnC,OAFAjZ,GAAQvP,KAAKupD,IAAK,yCAClBh6C,EAAyB,IAAlBvP,KAAKqpD,SAAgB,iCACrB7gC,EAAI6xC,UAAUr6D,MAAMs6D,UAAU9xC,IAGvCoM,EAAGt0B,UAAUi6D,QAAU,WAErB,OADAhrD,EAAOvP,KAAKupD,IAAK,wDACVvpD,KAAKupD,IAAIiR,YAAYx6D,OAG9B40B,EAAGt0B,UAAUg6D,UAAY,SAAoB9xC,GAE3C,OADAxoB,KAAKupD,IAAM/gC,EACJxoB,MAGT40B,EAAGt0B,UAAUm6D,SAAW,SAAmBjyC,GAEzC,OADAjZ,GAAQvP,KAAKupD,IAAK,yCACXvpD,KAAKs6D,UAAU9xC,IAGxBoM,EAAGt0B,UAAUo6D,OAAS,SAAiB38C,GAErC,OADAxO,EAAOvP,KAAKupD,IAAK,sCACVvpD,KAAKupD,IAAIjuC,IAAItb,KAAM+d,IAG5B6W,EAAGt0B,UAAUq6D,QAAU,SAAkB58C,GAEvC,OADAxO,EAAOvP,KAAKupD,IAAK,uCACVvpD,KAAKupD,IAAIoF,KAAK3uD,KAAM+d,IAG7B6W,EAAGt0B,UAAUs6D,OAAS,SAAiB78C,GAErC,OADAxO,EAAOvP,KAAKupD,IAAK,sCACVvpD,KAAKupD,IAAIsF,IAAI7uD,KAAM+d,IAG5B6W,EAAGt0B,UAAUu6D,QAAU,SAAkB98C,GAEvC,OADAxO,EAAOvP,KAAKupD,IAAK,uCACVvpD,KAAKupD,IAAIqF,KAAK5uD,KAAM+d,IAG7B6W,EAAGt0B,UAAUw6D,OAAS,SAAiB/8C,GAErC,OADAxO,EAAOvP,KAAKupD,IAAK,sCACVvpD,KAAKupD,IAAIwR,IAAI/6D,KAAM+d,IAG5B6W,EAAGt0B,UAAU06D,OAAS,SAAiBj9C,GAGrC,OAFAxO,EAAOvP,KAAKupD,IAAK,sCACjBvpD,KAAKupD,IAAI0R,SAASj7D,KAAM+d,GACjB/d,KAAKupD,IAAIO,IAAI9pD,KAAM+d,IAG5B6W,EAAGt0B,UAAU46D,QAAU,SAAkBn9C,GAGvC,OAFAxO,EAAOvP,KAAKupD,IAAK,sCACjBvpD,KAAKupD,IAAI0R,SAASj7D,KAAM+d,GACjB/d,KAAKupD,IAAI8I,KAAKryD,KAAM+d,IAG7B6W,EAAGt0B,UAAU66D,OAAS,WAGpB,OAFA5rD,EAAOvP,KAAKupD,IAAK,sCACjBvpD,KAAKupD,IAAI6R,SAASp7D,MACXA,KAAKupD,IAAIgN,IAAIv2D,OAGtB40B,EAAGt0B,UAAU+6D,QAAU,WAGrB,OAFA9rD,EAAOvP,KAAKupD,IAAK,uCACjBvpD,KAAKupD,IAAI6R,SAASp7D,MACXA,KAAKupD,IAAIiN,KAAKx2D,OAIvB40B,EAAGt0B,UAAUg7D,QAAU,WAGrB,OAFA/rD,EAAOvP,KAAKupD,IAAK,uCACjBvpD,KAAKupD,IAAI6R,SAASp7D,MACXA,KAAKupD,IAAIgS,KAAKv7D,OAGvB40B,EAAGt0B,UAAUk7D,QAAU,WAGrB,OAFAjsD,EAAOvP,KAAKupD,IAAK,uCACjBvpD,KAAKupD,IAAI6R,SAASp7D,MACXA,KAAKupD,IAAIgQ,KAAKv5D,OAIvB40B,EAAGt0B,UAAUm7D,OAAS,WAGpB,OAFAlsD,EAAOvP,KAAKupD,IAAK,sCACjBvpD,KAAKupD,IAAI6R,SAASp7D,MACXA,KAAKupD,IAAIkE,IAAIztD,OAGtB40B,EAAGt0B,UAAUo7D,OAAS,SAAiB39C,GAGrC,OAFAxO,EAAOvP,KAAKupD,MAAQxrC,EAAIwrC,IAAK,qBAC7BvpD,KAAKupD,IAAI6R,SAASp7D,MACXA,KAAKupD,IAAIx3C,IAAI/R,KAAM+d,IAI5B,IAAI49C,EAAS,CACXC,KAAM,KACNC,KAAM,KACNC,KAAM,KACNC,OAAQ,MAIV,SAASC,EAAQzwD,EAAMoQ,GAErB3b,KAAKuL,KAAOA,EACZvL,KAAK2b,EAAI,IAAIiZ,EAAGjZ,EAAG,IACnB3b,KAAK6O,EAAI7O,KAAK2b,EAAEkxC,YAChB7sD,KAAK4lB,EAAI,IAAIgP,EAAG,GAAG8hC,OAAO12D,KAAK6O,GAAG+/C,KAAK5uD,KAAK2b,GAE5C3b,KAAKe,IAAMf,KAAKi8D,OAiDlB,SAASC,IACPF,EAAOz7D,KACLP,KACA,OACA,2EA+DJ,SAASm8D,IACPH,EAAOz7D,KACLP,KACA,OACA,kEAIJ,SAASo8D,IACPJ,EAAOz7D,KACLP,KACA,OACA,yDAIJ,SAASq8D,IAEPL,EAAOz7D,KACLP,KACA,QACA,uEA8CJ,SAASm6D,EAAKt3C,GACZ,GAAiB,kBAANA,EAAgB,CACzB,IAAIy5C,EAAQ1nC,EAAG2nC,OAAO15C,GACtB7iB,KAAK6iB,EAAIy5C,EAAM3gD,EACf3b,KAAKs8D,MAAQA,OAEb/sD,EAAOsT,EAAE62C,IAAI,GAAI,kCACjB15D,KAAK6iB,EAAIA,EACT7iB,KAAKs8D,MAAQ,KAoOjB,SAASE,EAAM35C,GACbs3C,EAAI55D,KAAKP,KAAM6iB,GAEf7iB,KAAKvC,MAAQuC,KAAK6iB,EAAEgqC,YAChB7sD,KAAKvC,MAAQ,KAAO,IACtBuC,KAAKvC,OAAS,GAAMuC,KAAKvC,MAAQ,IAGnCuC,KAAK4f,EAAI,IAAIgV,EAAG,GAAG8hC,OAAO12D,KAAKvC,OAC/BuC,KAAK8gB,GAAK9gB,KAAKy8D,KAAKz8D,KAAK4f,EAAE22C,OAC3Bv2D,KAAKovB,KAAOpvB,KAAK4f,EAAEw5C,OAAOp5D,KAAK6iB,GAE/B7iB,KAAK08D,KAAO18D,KAAKovB,KAAK06B,IAAI9pD,KAAK4f,GAAG63C,MAAM,GAAGS,IAAIl4D,KAAK6iB,GACpD7iB,KAAK08D,KAAO18D,KAAK08D,KAAKpE,KAAKt4D,KAAK4f,GAChC5f,KAAK08D,KAAO18D,KAAK4f,EAAEivC,IAAI7uD,KAAK08D,MA9a9BV,EAAO17D,UAAU27D,KAAO,WACtB,IAAIl7D,EAAM,IAAI6zB,EAAG,MAEjB,OADA7zB,EAAIuoD,MAAQ,IAAI1rD,MAAMP,KAAK6lC,KAAKljC,KAAK6O,EAAI,KAClC9N,GAGTi7D,EAAO17D,UAAUq8D,QAAU,SAAkB5+C,GAG3C,IACI6+C,EADAh9C,EAAI7B,EAGR,GACE/d,KAAKsS,MAAMsN,EAAG5f,KAAKe,KAGnB67D,GADAh9C,GADAA,EAAI5f,KAAK68D,MAAMj9C,IACT+uC,KAAK3uD,KAAKe,MACP8rD,kBACF+P,EAAO58D,KAAK6O,GAErB,IAAIo7C,EAAM2S,EAAO58D,KAAK6O,GAAK,EAAI+Q,EAAE65C,KAAKz5D,KAAK2b,GAgB3C,OAfY,IAARsuC,GACFrqC,EAAE0pC,MAAM,GAAK,EACb1pC,EAAE9hB,OAAS,GACFmsD,EAAM,EACfrqC,EAAEgvC,KAAK5uD,KAAK2b,QAEIvb,IAAZwf,EAAEk9C,MAEJl9C,EAAEk9C,QAGFl9C,EAAE8qC,SAIC9qC,GAGTo8C,EAAO17D,UAAUgS,MAAQ,SAAgBsV,EAAOla,GAC9Cka,EAAMkvC,OAAO92D,KAAK6O,EAAG,EAAGnB,IAG1BsuD,EAAO17D,UAAUu8D,MAAQ,SAAgB9+C,GACvC,OAAOA,EAAIs0C,KAAKryD,KAAK4lB,IASvBkjC,EAASoT,EAAMF,GAEfE,EAAK57D,UAAUgS,MAAQ,SAAgBsV,EAAOja,GAK5C,IAHA,IAAI+O,EAAO,QAEPqgD,EAAS1/D,KAAKgQ,IAAIua,EAAM9pB,OAAQ,GAC3BE,EAAI,EAAGA,EAAI++D,EAAQ/+D,IAC1B2P,EAAO27C,MAAMtrD,GAAK4pB,EAAM0hC,MAAMtrD,GAIhC,GAFA2P,EAAO7P,OAASi/D,EAEZn1C,EAAM9pB,QAAU,EAGlB,OAFA8pB,EAAM0hC,MAAM,GAAK,OACjB1hC,EAAM9pB,OAAS,GAKjB,IAAIk/D,EAAOp1C,EAAM0hC,MAAM,GAGvB,IAFA37C,EAAO27C,MAAM37C,EAAO7P,UAAYk/D,EAAOtgD,EAElC1e,EAAI,GAAIA,EAAI4pB,EAAM9pB,OAAQE,IAAK,CAClC,IAAIgE,EAAwB,EAAjB4lB,EAAM0hC,MAAMtrD,GACvB4pB,EAAM0hC,MAAMtrD,EAAI,KAAQgE,EAAO0a,IAAS,EAAMsgD,IAAS,GACvDA,EAAOh7D,EAETg7D,KAAU,GACVp1C,EAAM0hC,MAAMtrD,EAAI,IAAMg/D,EACT,IAATA,GAAcp1C,EAAM9pB,OAAS,GAC/B8pB,EAAM9pB,QAAU,GAEhB8pB,EAAM9pB,QAAU,GAIpBo+D,EAAK57D,UAAUu8D,MAAQ,SAAgB9+C,GAErCA,EAAIurC,MAAMvrC,EAAIjgB,QAAU,EACxBigB,EAAIurC,MAAMvrC,EAAIjgB,OAAS,GAAK,EAC5BigB,EAAIjgB,QAAU,EAId,IADA,IAAIsS,EAAK,EACApS,EAAI,EAAGA,EAAI+f,EAAIjgB,OAAQE,IAAK,CACnC,IAAIwsD,EAAmB,EAAfzsC,EAAIurC,MAAMtrD,GAClBoS,GAAU,IAAJo6C,EACNzsC,EAAIurC,MAAMtrD,GAAU,SAALoS,EACfA,EAAS,GAAJo6C,GAAap6C,EAAK,SAAa,GAUtC,OANkC,IAA9B2N,EAAIurC,MAAMvrC,EAAIjgB,OAAS,KACzBigB,EAAIjgB,SAC8B,IAA9BigB,EAAIurC,MAAMvrC,EAAIjgB,OAAS,IACzBigB,EAAIjgB,UAGDigB,GAST+qC,EAASqT,EAAMH,GAQflT,EAASsT,EAAMJ,GASflT,EAASuT,EAAQL,GAEjBK,EAAO/7D,UAAUu8D,MAAQ,SAAgB9+C,GAGvC,IADA,IAAIytC,EAAQ,EACHxtD,EAAI,EAAGA,EAAI+f,EAAIjgB,OAAQE,IAAK,CACnC,IAAI8uD,EAA0B,IAAL,EAAf/uC,EAAIurC,MAAMtrD,IAAiBwtD,EACjCp7C,EAAU,SAAL08C,EACTA,KAAQ,GAER/uC,EAAIurC,MAAMtrD,GAAKoS,EACfo7C,EAAQsB,EAKV,OAHc,IAAVtB,IACFztC,EAAIurC,MAAMvrC,EAAIjgB,UAAY0tD,GAErBztC,GAIT6W,EAAG2nC,OAAS,SAAgBhxD,GAE1B,GAAIowD,EAAOpwD,GAAO,OAAOowD,EAAOpwD,GAEhC,IAAI+wD,EACJ,GAAa,SAAT/wD,EACF+wD,EAAQ,IAAIJ,OACP,GAAa,SAAT3wD,EACT+wD,EAAQ,IAAIH,OACP,GAAa,SAAT5wD,EACT+wD,EAAQ,IAAIF,MACP,IAAa,WAAT7wD,EAGT,MAAM,IAAI7N,MAAM,iBAAmB6N,GAFnC+wD,EAAQ,IAAID,EAMd,OAFAV,EAAOpwD,GAAQ+wD,EAERA,GAkBTnC,EAAI75D,UAAU86D,SAAW,SAAmBz7D,GAC1C4P,EAAsB,IAAf5P,EAAE0pD,SAAgB,iCACzB95C,EAAO5P,EAAE4pD,IAAK,oCAGhB4Q,EAAI75D,UAAU26D,SAAW,SAAmBt7D,EAAGqP,GAC7CO,EAAqC,KAA7B5P,EAAE0pD,SAAWr6C,EAAEq6C,UAAiB,iCACxC95C,EAAO5P,EAAE4pD,KAAO5pD,EAAE4pD,MAAQv6C,EAAEu6C,IAC1B,oCAGJ4Q,EAAI75D,UAAUm8D,KAAO,SAAe98D,GAClC,OAAIK,KAAKs8D,MAAct8D,KAAKs8D,MAAMK,QAAQh9D,GAAG26D,UAAUt6D,OAEvD+pD,EAAKpqD,EAAGA,EAAE24D,KAAKt4D,KAAK6iB,GAAGy3C,UAAUt6D,OAC1BL,IAGTw6D,EAAI75D,UAAUmtD,IAAM,SAAc9tD,GAChC,OAAIA,EAAEgsD,SACGhsD,EAAEqrD,QAGJhrD,KAAK6iB,EAAEgsC,IAAIlvD,GAAG26D,UAAUt6D,OAGjCm6D,EAAI75D,UAAUgb,IAAM,SAAc3b,EAAGqP,GACnChP,KAAKi7D,SAASt7D,EAAGqP,GAEjB,IAAIjN,EAAMpC,EAAE2b,IAAItM,GAIhB,OAHIjN,EAAIkoD,IAAIjqD,KAAK6iB,IAAM,GACrB9gB,EAAI6sD,KAAK5uD,KAAK6iB,GAET9gB,EAAIu4D,UAAUt6D,OAGvBm6D,EAAI75D,UAAUquD,KAAO,SAAehvD,EAAGqP,GACrChP,KAAKi7D,SAASt7D,EAAGqP,GAEjB,IAAIjN,EAAMpC,EAAEgvD,KAAK3/C,GAIjB,OAHIjN,EAAIkoD,IAAIjqD,KAAK6iB,IAAM,GACrB9gB,EAAI6sD,KAAK5uD,KAAK6iB,GAET9gB,GAGTo4D,EAAI75D,UAAUuuD,IAAM,SAAclvD,EAAGqP,GACnChP,KAAKi7D,SAASt7D,EAAGqP,GAEjB,IAAIjN,EAAMpC,EAAEkvD,IAAI7/C,GAIhB,OAHIjN,EAAIu3D,KAAK,GAAK,GAChBv3D,EAAI4sD,KAAK3uD,KAAK6iB,GAET9gB,EAAIu4D,UAAUt6D,OAGvBm6D,EAAI75D,UAAUsuD,KAAO,SAAejvD,EAAGqP,GACrChP,KAAKi7D,SAASt7D,EAAGqP,GAEjB,IAAIjN,EAAMpC,EAAEivD,KAAK5/C,GAIjB,OAHIjN,EAAIu3D,KAAK,GAAK,GAChBv3D,EAAI4sD,KAAK3uD,KAAK6iB,GAET9gB,GAGTo4D,EAAI75D,UAAUy6D,IAAM,SAAcp7D,EAAGoe,GAEnC,OADA/d,KAAKo7D,SAASz7D,GACPK,KAAKy8D,KAAK98D,EAAEy3D,MAAMr5C,KAG3Bo8C,EAAI75D,UAAU+xD,KAAO,SAAe1yD,EAAGqP,GAErC,OADAhP,KAAKi7D,SAASt7D,EAAGqP,GACVhP,KAAKy8D,KAAK98D,EAAE0yD,KAAKrjD,KAG1BmrD,EAAI75D,UAAUwpD,IAAM,SAAcnqD,EAAGqP,GAEnC,OADAhP,KAAKi7D,SAASt7D,EAAGqP,GACVhP,KAAKy8D,KAAK98D,EAAEmqD,IAAI96C,KAGzBmrD,EAAI75D,UAAUk2D,KAAO,SAAe72D,GAClC,OAAOK,KAAKqyD,KAAK1yD,EAAGA,EAAEqrD,UAGxBmP,EAAI75D,UAAUi2D,IAAM,SAAc52D,GAChC,OAAOK,KAAK8pD,IAAInqD,EAAGA,IAGrBw6D,EAAI75D,UAAUi7D,KAAO,SAAe57D,GAClC,GAAIA,EAAEgsD,SAAU,OAAOhsD,EAAEqrD,QAEzB,IAAIiS,EAAOj9D,KAAK6iB,EAAE61C,MAAM,GAIxB,GAHAnpD,EAAO0tD,EAAO,IAAM,GAGP,IAATA,EAAY,CACd,IAAIlrD,EAAM/R,KAAK6iB,EAAEvH,IAAI,IAAIsZ,EAAG,IAAIkiC,OAAO,GACvC,OAAO92D,KAAK+R,IAAIpS,EAAGoS,GAQrB,IAFA,IAAI6Q,EAAI5iB,KAAK6iB,EAAE80C,KAAK,GAChBx4C,EAAI,GACAyD,EAAE+oC,UAA2B,IAAf/oC,EAAE81C,MAAM,IAC5Bv5C,IACAyD,EAAEk0C,OAAO,GAEXvnD,GAAQqT,EAAE+oC,UAEV,IAAIpsC,EAAM,IAAIqV,EAAG,GAAGwlC,MAAMp6D,MACtBk9D,EAAO39C,EAAIk8C,SAIX0B,EAAOn9D,KAAK6iB,EAAE80C,KAAK,GAAGb,OAAO,GAC7Br9C,EAAIzZ,KAAK6iB,EAAEgqC,YAGf,IAFApzC,EAAI,IAAImb,EAAG,EAAInb,EAAIA,GAAG2gD,MAAMp6D,MAEW,IAAhCA,KAAK+R,IAAI0H,EAAG0jD,GAAMlT,IAAIiT,IAC3BzjD,EAAEkhD,QAAQuC,GAOZ,IAJA,IAAIp9C,EAAI9f,KAAK+R,IAAI0H,EAAGmJ,GAChBhD,EAAI5f,KAAK+R,IAAIpS,EAAGijB,EAAE80C,KAAK,GAAGZ,OAAO,IACjCp9C,EAAI1Z,KAAK+R,IAAIpS,EAAGijB,GAChBC,EAAI1D,EACc,IAAfzF,EAAEuwC,IAAI1qC,IAAY,CAEvB,IADA,IAAIxe,EAAM2Y,EACD1b,EAAI,EAAoB,IAAjB+C,EAAIkpD,IAAI1qC,GAAYvhB,IAClC+C,EAAMA,EAAIo6D,SAEZ5rD,EAAOvR,EAAI6kB,GACX,IAAI7T,EAAIhP,KAAK+R,IAAI+N,EAAG,IAAI8U,EAAG,GAAG8hC,OAAO7zC,EAAI7kB,EAAI,IAE7C4hB,EAAIA,EAAEo7C,OAAOhsD,GACb8Q,EAAI9Q,EAAEmsD,SACNzhD,EAAIA,EAAEshD,OAAOl7C,GACb+C,EAAI7kB,EAGN,OAAO4hB,GAGTu6C,EAAI75D,UAAUi5D,KAAO,SAAe55D,GAClC,IAAIy9D,EAAMz9D,EAAEy5D,OAAOp5D,KAAK6iB,GACxB,OAAqB,IAAjBu6C,EAAI/T,UACN+T,EAAI/T,SAAW,EACRrpD,KAAKy8D,KAAKW,GAAK3B,UAEfz7D,KAAKy8D,KAAKW,IAIrBjD,EAAI75D,UAAUyR,IAAM,SAAcpS,EAAGoe,GACnC,GAAIA,EAAI4tC,SAAU,OAAO,IAAI/2B,EAAG,GAAGwlC,MAAMp6D,MACzC,GAAoB,IAAhB+d,EAAIu7C,KAAK,GAAU,OAAO35D,EAAEqrD,QAEhC,IACIqS,EAAM,IAAIz/D,MAAM,IACpBy/D,EAAI,GAAK,IAAIzoC,EAAG,GAAGwlC,MAAMp6D,MACzBq9D,EAAI,GAAK19D,EACT,IAAK,IAAI3B,EAAI,EAAGA,EAAIq/D,EAAIv/D,OAAQE,IAC9Bq/D,EAAIr/D,GAAKgC,KAAK8pD,IAAIuT,EAAIr/D,EAAI,GAAI2B,GAGhC,IAAIoC,EAAMs7D,EAAI,GACVzvB,EAAU,EACV0vB,EAAa,EACb9lD,EAAQuG,EAAI8uC,YAAc,GAK9B,IAJc,IAAVr1C,IACFA,EAAQ,IAGLxZ,EAAI+f,EAAIjgB,OAAS,EAAGE,GAAK,EAAGA,IAAK,CAEpC,IADA,IAAIR,EAAOugB,EAAIurC,MAAMtrD,GACZO,EAAIiZ,EAAQ,EAAGjZ,GAAK,EAAGA,IAAK,CACnC,IAAIkwD,EAAOjxD,GAAQe,EAAK,EACpBwD,IAAQs7D,EAAI,KACdt7D,EAAM/B,KAAKu2D,IAAIx0D,IAGL,IAAR0sD,GAAyB,IAAZ7gB,GAKjBA,IAAY,EACZA,GAAW6gB,GA9BE,MA+Bb6O,GACwC,IAANt/D,GAAiB,IAANO,KAE7CwD,EAAM/B,KAAK8pD,IAAI/nD,EAAKs7D,EAAIzvB,IACxB0vB,EAAa,EACb1vB,EAAU,IAXR0vB,EAAa,EAajB9lD,EAAQ,GAGV,OAAOzV,GAGTo4D,EAAI75D,UAAU+5D,UAAY,SAAoBt8C,GAC5C,IAAI6B,EAAI7B,EAAIu6C,KAAKt4D,KAAK6iB,GAEtB,OAAOjD,IAAM7B,EAAM6B,EAAEorC,QAAUprC,GAGjCu6C,EAAI75D,UAAUk6D,YAAc,SAAsBz8C,GAChD,IAAIhc,EAAMgc,EAAIitC,QAEd,OADAjpD,EAAIwnD,IAAM,KACHxnD,GAOT6yB,EAAG2oC,KAAO,SAAex/C,GACvB,OAAO,IAAIy+C,EAAKz+C,IAmBlB+qC,EAAS0T,EAAMrC,GAEfqC,EAAKl8D,UAAU+5D,UAAY,SAAoBt8C,GAC7C,OAAO/d,KAAKy8D,KAAK1+C,EAAIq5C,MAAMp3D,KAAKvC,SAGlC++D,EAAKl8D,UAAUk6D,YAAc,SAAsBz8C,GACjD,IAAI6B,EAAI5f,KAAKy8D,KAAK1+C,EAAI+rC,IAAI9pD,KAAKovB,OAE/B,OADAxP,EAAE2pC,IAAM,KACD3pC,GAGT48C,EAAKl8D,UAAU+xD,KAAO,SAAe1yD,EAAGqP,GACtC,GAAIrP,EAAEgsD,UAAY38C,EAAE28C,SAGlB,OAFAhsD,EAAE2pD,MAAM,GAAK,EACb3pD,EAAE7B,OAAS,EACJ6B,EAGT,IAAI+Z,EAAI/Z,EAAE0yD,KAAKrjD,GACX8Q,EAAIpG,EAAE89C,MAAMx3D,KAAKvC,OAAOqsD,IAAI9pD,KAAK08D,MAAMnF,OAAOv3D,KAAKvC,OAAOqsD,IAAI9pD,KAAK6iB,GACnEb,EAAItI,EAAEk1C,KAAK9uC,GAAGg3C,OAAO92D,KAAKvC,OAC1BsE,EAAMigB,EAQV,OANIA,EAAEioC,IAAIjqD,KAAK6iB,IAAM,EACnB9gB,EAAMigB,EAAE4sC,KAAK5uD,KAAK6iB,GACTb,EAAEs3C,KAAK,GAAK,IACrBv3D,EAAMigB,EAAE2sC,KAAK3uD,KAAK6iB,IAGb9gB,EAAIu4D,UAAUt6D,OAGvBw8D,EAAKl8D,UAAUwpD,IAAM,SAAcnqD,EAAGqP,GACpC,GAAIrP,EAAEgsD,UAAY38C,EAAE28C,SAAU,OAAO,IAAI/2B,EAAG,GAAG0lC,UAAUt6D,MAEzD,IAAI0Z,EAAI/Z,EAAEmqD,IAAI96C,GACV8Q,EAAIpG,EAAE89C,MAAMx3D,KAAKvC,OAAOqsD,IAAI9pD,KAAK08D,MAAMnF,OAAOv3D,KAAKvC,OAAOqsD,IAAI9pD,KAAK6iB,GACnEb,EAAItI,EAAEk1C,KAAK9uC,GAAGg3C,OAAO92D,KAAKvC,OAC1BsE,EAAMigB,EAOV,OANIA,EAAEioC,IAAIjqD,KAAK6iB,IAAM,EACnB9gB,EAAMigB,EAAE4sC,KAAK5uD,KAAK6iB,GACTb,EAAEs3C,KAAK,GAAK,IACrBv3D,EAAMigB,EAAE2sC,KAAK3uD,KAAK6iB,IAGb9gB,EAAIu4D,UAAUt6D,OAGvBw8D,EAAKl8D,UAAUi5D,KAAO,SAAe55D,GAGnC,OADUK,KAAKy8D,KAAK98D,EAAEy5D,OAAOp5D,KAAK6iB,GAAGinC,IAAI9pD,KAAK8gB,KACnCw5C,UAAUt6D,OAx9GzB,CA09GoC2B,EAAQ3B,Q,wDCn9G5C,IAAIw9D,EAAU1gE,EAAQ,IAAe4M,OA+GrC/H,EAAOjG,QA9GP,SAAe+hE,GACb,GAAIA,EAAS3/D,QAAU,IAAO,MAAM,IAAIO,UAAU,qBAElD,IADA,IAAIq/D,EAAW,IAAI1gE,WAAW,KACrBuB,EAAI,EAAGA,EAAIm/D,EAAS5/D,OAAQS,IACnCm/D,EAASn/D,GAAK,IAEhB,IAAK,IAAIP,EAAI,EAAGA,EAAIy/D,EAAS3/D,OAAQE,IAAK,CACxC,IAAIub,EAAIkkD,EAASE,OAAO3/D,GACpB4/D,EAAKrkD,EAAEoa,WAAW,GACtB,GAAqB,MAAjB+pC,EAASE,GAAe,MAAM,IAAIv/D,UAAUkb,EAAI,iBACpDmkD,EAASE,GAAM5/D,EAEjB,IAAIge,EAAOyhD,EAAS3/D,OAChB+/D,EAASJ,EAASE,OAAO,GACzBG,EAASzgE,KAAKu3C,IAAI54B,GAAQ3e,KAAKu3C,IAAI,KACnCmpB,EAAU1gE,KAAKu3C,IAAI,KAAOv3C,KAAKu3C,IAAI54B,GAyCvC,SAASgiD,EAAcC,GACrB,GAAsB,kBAAXA,EAAuB,MAAM,IAAI5/D,UAAU,mBACtD,GAAsB,IAAlB4/D,EAAOngE,OAAgB,OAAO0/D,EAAQvoC,MAAM,GAKhD,IAJA,IAAIipC,EAAM,EAENC,EAAS,EACTrgE,EAAS,EACNmgE,EAAOC,KAASL,GACrBM,IACAD,IAMF,IAHA,IAAIlnC,GAAUinC,EAAOngE,OAASogE,GAAOJ,EAAU,IAAO,EAClDM,EAAO,IAAIphE,WAAWg6B,GAEnBinC,EAAOC,IAAM,CAElB,IAAI1S,EAAQkS,EAASO,EAAOtqC,WAAWuqC,IAEvC,GAAc,MAAV1S,EAAiB,OAErB,IADA,IAAIxtD,EAAI,EACCqgE,EAAMrnC,EAAO,GAAc,IAAVw0B,GAAextD,EAAIF,KAAqB,IAATugE,EAAaA,IAAOrgE,IAC3EwtD,GAAUxvC,EAAOoiD,EAAKC,KAAU,EAChCD,EAAKC,GAAQ7S,EAAQ,MAAS,EAC9BA,EAASA,EAAQ,MAAS,EAE5B,GAAc,IAAVA,EAAe,MAAM,IAAI9tD,MAAM,kBACnCI,EAASE,EACTkgE,IAIF,IADA,IAAII,EAAMtnC,EAAOl5B,EACVwgE,IAAQtnC,GAAsB,IAAdonC,EAAKE,IAC1BA,IAEF,IAAIC,EAAMf,EAAQlR,YAAY6R,GAAUnnC,EAAOsnC,IAC/CC,EAAI3wD,KAAK,EAAM,EAAGuwD,GAElB,IADA,IAAI5/D,EAAI4/D,EACDG,IAAQtnC,GACbunC,EAAIhgE,KAAO6/D,EAAKE,KAElB,OAAOC,EAOT,MAAO,CACLh/D,OAzFF,SAAiB0+D,GAEf,IADIrgE,MAAM2W,QAAQ0pD,IAAWA,aAAkBjhE,cAAcihE,EAAST,EAAQ3/D,KAAKogE,KAC9ET,EAAQrpC,SAAS8pC,GAAW,MAAM,IAAI5/D,UAAU,mBACrD,GAAsB,IAAlB4/D,EAAOngE,OAAgB,MAAO,GAMlC,IAJA,IAAIqgE,EAAS,EACTrgE,EAAS,EACT0gE,EAAS,EACTC,EAAOR,EAAOngE,OACX0gE,IAAWC,GAA2B,IAAnBR,EAAOO,IAC/BA,IACAL,IAMF,IAHA,IAAInnC,GAASynC,EAAOD,GAAUT,EAAU,IAAO,EAC3CW,EAAM,IAAI1hE,WAAWg6B,GAElBwnC,IAAWC,GAAM,CAItB,IAHA,IAAIjT,EAAQyS,EAAOO,GAEfxgE,EAAI,EACC2gE,EAAM3nC,EAAO,GAAc,IAAVw0B,GAAextD,EAAIF,KAAqB,IAAT6gE,EAAaA,IAAO3gE,IAC3EwtD,GAAU,IAAMkT,EAAIC,KAAU,EAC9BD,EAAIC,GAAQnT,EAAQxvC,IAAU,EAC9BwvC,EAASA,EAAQxvC,IAAU,EAE7B,GAAc,IAAVwvC,EAAe,MAAM,IAAI9tD,MAAM,kBACnCI,EAASE,EACTwgE,IAIF,IADA,IAAII,EAAM5nC,EAAOl5B,EACV8gE,IAAQ5nC,GAAqB,IAAb0nC,EAAIE,IACzBA,IAIF,IADA,IAAIv/D,EAAMw+D,EAAOgB,OAAOV,GACjBS,EAAM5nC,IAAQ4nC,EAAOv/D,GAAOo+D,EAASE,OAAOe,EAAIE,IACvD,OAAOv/D,GAoDP2+D,aAAcA,EACdh3D,OARF,SAAiBojB,GACf,IAAIntB,EAAS+gE,EAAa5zC,GAC1B,GAAIntB,EAAU,OAAOA,EACrB,MAAM,IAAIS,MAAM,WAAase,EAAO,kB,sGC7GxCxgB,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQy3B,YAAS,EACjB,IAAMoxB,EAAaznD,EAAQ,MACrB6P,EAAa7P,EAAQ,MAIrBgiE,EAAM,SAACn/D,EAAGqP,EAAG8Q,GAAP,OAAcngB,EAAIqP,EAAMrP,EAAImgB,EAAM9Q,EAAI8Q,GAI5Ci/C,EAAW,IAAI3hE,YAAY,CAC7B,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WACpF,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UACpF,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UACpF,UAAY,UAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAIlF4hE,EAAK,IAAI5hE,YAAY,CACvB,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,aAIlF6hE,EAAW,IAAI7hE,YAAY,IAC3B8hE,E,8BACF,aAAc,wBACV,cAAM,GAAI,GAAI,GAAG,IAGZ1kD,EAAY,EAARwkD,EAAG,GACZ,EAAKvkD,EAAY,EAARukD,EAAG,GACZ,EAAKtkD,EAAY,EAARskD,EAAG,GACZ,EAAKrkD,EAAY,EAARqkD,EAAG,GACZ,EAAKpkD,EAAY,EAARokD,EAAG,GACZ,EAAKlkD,EAAY,EAARkkD,EAAG,GACZ,EAAKnkD,EAAY,EAARmkD,EAAG,GACZ,EAAKjkD,EAAY,EAARikD,EAAG,GAXF,E,6BAad,WAEI,MAAO,CAD4Bh/D,KAA3Bwa,EAA2Bxa,KAAxBya,EAAwBza,KAArB0a,EAAqB1a,KAAlB2a,EAAkB3a,KAAf4a,EAAe5a,KAAZ8a,EAAY9a,KAAT6a,EAAS7a,KAAN+a,K,iBAIjC,SAAIP,EAAGC,EAAGC,EAAGC,EAAGC,EAAGE,EAAGD,EAAGE,GACrB/a,KAAKwa,EAAQ,EAAJA,EACTxa,KAAKya,EAAQ,EAAJA,EACTza,KAAK0a,EAAQ,EAAJA,EACT1a,KAAK2a,EAAQ,EAAJA,EACT3a,KAAK4a,EAAQ,EAAJA,EACT5a,KAAK8a,EAAQ,EAAJA,EACT9a,KAAK6a,EAAQ,EAAJA,EACT7a,KAAK+a,EAAQ,EAAJA,I,qBAEb,SAAQ/N,EAAM+C,GAEV,IAAK,IAAI/R,EAAI,EAAGA,EAAI,GAAIA,IAAK+R,GAAU,EACnCkvD,EAASjhE,GAAKgP,EAAK64C,UAAU91C,GAAQ,GACzC,IAAK,IAAI/R,EAAI,GAAIA,EAAI,GAAIA,IAAK,CAC1B,IAAMmhE,EAAMF,EAASjhE,EAAI,IACnBuiB,EAAK0+C,EAASjhE,EAAI,GAClBohE,GAAK,EAAIzyD,EAAWlQ,MAAM0iE,EAAK,IAAK,EAAIxyD,EAAWlQ,MAAM0iE,EAAK,IAAOA,IAAQ,EAC7EE,GAAK,EAAI1yD,EAAWlQ,MAAM8jB,EAAI,KAAM,EAAI5T,EAAWlQ,MAAM8jB,EAAI,IAAOA,IAAO,GACjF0+C,EAASjhE,GAAMqhE,EAAKJ,EAASjhE,EAAI,GAAKohE,EAAKH,EAASjhE,EAAI,IAAO,EAGnE,IAjEK2B,EAiEC6a,EAA2Bxa,KAA3Bwa,EAAGC,EAAwBza,KAAxBya,EAAGC,EAAqB1a,KAArB0a,EAAGC,EAAkB3a,KAAlB2a,EAAGC,EAAe5a,KAAf4a,EAAGE,EAAY9a,KAAZ8a,EAAGD,EAAS7a,KAAT6a,EAAGE,EAAM/a,KAAN+a,EAC3B,IAAS/c,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,IACMmd,EAAMJ,IADG,EAAIpO,EAAWlQ,MAAMme,EAAG,IAAK,EAAIjO,EAAWlQ,MAAMme,EAAG,KAAM,EAAIjO,EAAWlQ,MAAMme,EAAG,OAnEjGjb,EAoE4Bib,GAAGE,GApEPnb,EAoEUkb,GAAKkkD,EAAS/gE,GAAKihE,EAASjhE,GAAM,EAE/Dod,IADS,EAAIzO,EAAWlQ,MAAM+d,EAAG,IAAK,EAAI7N,EAAWlQ,MAAM+d,EAAG,KAAM,EAAI7N,EAAWlQ,MAAM+d,EAAG,KAC7EskD,EAAItkD,EAAGC,EAAGC,GAAM,EACrCK,EAAIF,EACJA,EAAIC,EACJA,EAAIF,EACJA,EAAKD,EAAIQ,EAAM,EACfR,EAAID,EACJA,EAAID,EACJA,EAAID,EACJA,EAAKW,EAAKC,EAAM,EAGpBZ,EAAKA,EAAIxa,KAAKwa,EAAK,EACnBC,EAAKA,EAAIza,KAAKya,EAAK,EACnBC,EAAKA,EAAI1a,KAAK0a,EAAK,EACnBC,EAAKA,EAAI3a,KAAK2a,EAAK,EACnBC,EAAKA,EAAI5a,KAAK4a,EAAK,EACnBE,EAAKA,EAAI9a,KAAK8a,EAAK,EACnBD,EAAKA,EAAI7a,KAAK6a,EAAK,EACnBE,EAAKA,EAAI/a,KAAK+a,EAAK,EACnB/a,KAAKD,IAAIya,EAAGC,EAAGC,EAAGC,EAAGC,EAAGE,EAAGD,EAAGE,K,wBAElC,WACIkkD,EAASrxD,KAAK,K,qBAElB,WACI5N,KAAKD,IAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC9BC,KAAK/C,OAAO2Q,KAAK,O,GAxEJ22C,EAAW93C,MA+EhC/Q,EAAQy3B,QAAS,EAAIxmB,EAAW7Q,kBAAiB,kBAAM,IAAIojE,M,mCC7G3D,Y,uIACII,EAAmBt/D,MAAQA,KAAKs/D,kBAAqB9jE,OAAO0F,OAAU,SAAS8tD,EAAGnsC,EAAG+C,EAAGyG,QAC7EjsB,IAAPisB,IAAkBA,EAAKzG,GAC3BpqB,OAAOC,eAAeuzD,EAAG3iC,EAAI,CAAEkzC,YAAY,EAAMhxD,IAAK,WAAa,OAAOsU,EAAE+C,OAC1E,SAASopC,EAAGnsC,EAAG+C,EAAGyG,QACTjsB,IAAPisB,IAAkBA,EAAKzG,GAC3BopC,EAAE3iC,GAAMxJ,EAAE+C,KAEV45C,EAAsBx/D,MAAQA,KAAKw/D,qBAAwBhkE,OAAO0F,OAAU,SAAS8tD,EAAGjxD,GACxFvC,OAAOC,eAAeuzD,EAAG,UAAW,CAAEuQ,YAAY,EAAM5jE,MAAOoC,KAC9D,SAASixD,EAAGjxD,GACbixD,EAAC,QAAcjxD,IAEf0hE,EAAcz/D,MAAQA,KAAKy/D,YAAe,SAAUC,EAAYC,EAAQ76C,EAAK86C,GAC7E,IAA2HhnD,EAAvHkH,EAAI+/C,UAAU/hE,OAAQ8hB,EAAIE,EAAI,EAAI6/C,EAAkB,OAATC,EAAgBA,EAAOpkE,OAAOskE,yBAAyBH,EAAQ76C,GAAO86C,EACrH,GAAuB,kBAAZG,SAAoD,oBAArBA,QAAQC,SAAyBpgD,EAAImgD,QAAQC,SAASN,EAAYC,EAAQ76C,EAAK86C,QACpH,IAAK,IAAI5hE,EAAI0hE,EAAW5hE,OAAS,EAAGE,GAAK,EAAGA,KAAS4a,EAAI8mD,EAAW1hE,MAAI4hB,GAAKE,EAAI,EAAIlH,EAAEgH,GAAKE,EAAI,EAAIlH,EAAE+mD,EAAQ76C,EAAKlF,GAAKhH,EAAE+mD,EAAQ76C,KAASlF,GAChJ,OAAOE,EAAI,GAAKF,GAAKpkB,OAAOC,eAAekkE,EAAQ76C,EAAKlF,GAAIA,GAE5DqgD,EAAgBjgE,MAAQA,KAAKigE,cAAiB,SAAU7lD,GACxD,GAAIA,GAAOA,EAAI8lD,WAAY,OAAO9lD,EAClC,IAAIva,EAAS,GACb,GAAW,MAAPua,EAAa,IAAK,IAAIwL,KAAKxL,EAAe,YAANwL,GAAmBpqB,OAAO+U,eAAehQ,KAAK6Z,EAAKwL,IAAI05C,EAAgBz/D,EAAQua,EAAKwL,GAE5H,OADA45C,EAAmB3/D,EAAQua,GACpBva,GAEPsgE,EAAmBngE,MAAQA,KAAKmgE,iBAAoB,SAAU/lD,GAC9D,OAAQA,GAAOA,EAAI8lD,WAAc9lD,EAAM,CAAE,QAAWA,IAExD5e,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ64B,qBAAuB74B,EAAQ44B,YAAc54B,EAAQ6L,UAAY7L,EAAQ0kE,aAAe1kE,EAAQ2kE,aAAe3kE,EAAQ4kE,WAAa5kE,EAAQ6kE,WAAa7kE,EAAQ8kE,gBAAa,EACtL,IAAMC,EAAUN,EAAgBrjE,EAAQ,OAClC4jE,EAASP,EAAgBrjE,EAAQ,OAEjCq6C,EAAW8oB,EAAanjE,EAAQ,OAEhC6jE,EAAc,IAD+B,oBAAhBC,YAA6BzpB,EAASypB,YAAcA,aAC3C,QAAS,CAAEC,OAAO,IAO9DnlE,EAAQ8kE,WANR,SAAoB7kE,GAIhB,MAHqB,kBAAVA,IACPA,EAAQ+N,EAAO7L,KAAKlC,EAAO,SAExB+kE,EAAOzzD,QAAQ1N,OAAOmK,EAAO7L,KAAKlC,KAM7CD,EAAQ6kE,WAHR,SAAoB5kE,GAChB,OAAO+N,EAAO7L,KAAK6iE,EAAOzzD,QAAQjG,OAAOrL,KAG7C,IAAMmlE,EAAiB,KACjBR,E,8BACF,WAAY1/D,GAAS,wBACjB,cAAMA,IACDmgE,UAAY,GACjB,EAAKC,gBAAkBpgE,EAHN,E,wCAKrB,SAAeqgE,GACXjhE,KAAK+gE,UAAU3lC,OAAO,EAAG,EAAG6lC,GAE5BjhE,KAAKY,QAAUZ,KAAKghE,gBAAkB,KAAOhhE,KAAK+gE,UAAUz5C,KAAK,S,KAThD5pB,QAYzBhC,EAAQ4kE,WAAaA,E,IAEfD,E,WACF,aAAc,UACVrgE,KAAKkhE,IAAMx3D,EAAOurB,MAAM6rC,GACxB9gE,KAAKlC,OAAS,E,qCAElB,WACQkC,KAAKkhE,IAAIpjE,OAAS,GAAKkC,KAAKlC,SAC5BkC,KAAKkhE,IAAMx3D,EAAO0rB,OAAO,CAACp1B,KAAKkhE,IAAKx3D,EAAOurB,MAAM6rC,Q,qBAGzD,SAAQnlE,GACJqE,KAAKmhE,cACLnhE,KAAKkhE,IAAIE,WAAWzlE,EAAOqE,KAAKlC,QAChCkC,KAAKlC,QAAU,I,sBAEnB,SAASnC,GACLqE,KAAKmhE,cACLnhE,KAAKkhE,IAAIG,cAAc1lE,EAAOqE,KAAKlC,QACnCkC,KAAKlC,QAAU,I,sBAEnB,SAASnC,GACLqE,KAAKmhE,cACLnhE,KAAKkhE,IAAI3uD,cAAc5W,EAAOqE,KAAKlC,QACnCkC,KAAKlC,QAAU,I,sBAEnB,SAASnC,GACLqE,KAAKmhE,cACLnhE,KAAKshE,YAAY53D,EAAO7L,KAAK,IAAI4iE,EAAQxzD,QAAQtR,GAAO4uD,QAAQ,KAAM,O,uBAE1E,SAAU5uD,GACNqE,KAAKmhE,cACLnhE,KAAKshE,YAAY53D,EAAO7L,KAAK,IAAI4iE,EAAQxzD,QAAQtR,GAAO4uD,QAAQ,KAAM,Q,uBAE1E,SAAU5uD,GACNqE,KAAKmhE,cACLnhE,KAAKshE,YAAY53D,EAAO7L,KAAK,IAAI4iE,EAAQxzD,QAAQtR,GAAO4uD,QAAQ,KAAM,Q,uBAE1E,SAAU5uD,GACNqE,KAAKmhE,cACLnhE,KAAKshE,YAAY53D,EAAO7L,KAAK,IAAI4iE,EAAQxzD,QAAQtR,GAAO4uD,QAAQ,KAAM,Q,yBAE1E,SAAYttD,GAER+C,KAAKkhE,IAAMx3D,EAAO0rB,OAAO,CACrB1rB,EAAO7L,KAAKmC,KAAKkhE,IAAI5zD,SAAS,EAAGtN,KAAKlC,SACtCb,EACAyM,EAAOurB,MAAM6rC,KAEjB9gE,KAAKlC,QAAUb,EAAOa,S,yBAE1B,SAAYuB,GACRW,KAAKmhE,cACL,IAAMnyD,EAAItF,EAAO7L,KAAKwB,EAAK,QAC3BW,KAAKuhE,SAASvyD,EAAElR,QAChBkC,KAAKshE,YAAYtyD,K,6BAErB,SAAgB1Q,GACZ0B,KAAKshE,YAAY53D,EAAO7L,KAAKS,M,wBAEjC,SAAWA,EAAOkjE,GACdxhE,KAAKmhE,cACLnhE,KAAKuhE,SAASjjE,EAAMR,QAFF,UAGCQ,GAHD,IAGlB,IAAK,EAAL,qBAA0B,KAAf24B,EAAe,QACtBj3B,KAAKmhE,cACLK,EAAGvqC,IALW,iC,qBAQtB,WACI,OAAOj3B,KAAKkhE,IAAI5zD,SAAS,EAAGtN,KAAKlC,Y,KAIzC,SAAS2jE,EAAmB9B,EAAQ+B,EAAaC,GAC7C,IAAMC,EAAiBD,EAAmBhmE,MAC1CgmE,EAAmBhmE,MAAQ,WACvB,IAAI,2BADgC6Q,EAChC,yBADgCA,EAChC,gBACA,OAAOo1D,EAAeC,MAAM7hE,KAAMwM,GAEtC,MAAOkI,GACH,GAAIA,aAAa1E,WAAY,CACzB,IAAM7I,EAAOuN,EAAEvN,KACf,GAAI,CAAC,2BAA4B,oBAAoBq2B,QAAQr2B,IAAS,EAClE,MAAM,IAAIm5D,EAAW,gDAG7B,MAAM5rD,IAdlBhZ,EAAQ2kE,aAAeA,E,IAkBjBD,E,WACF,WAAYc,GAAK,UACblhE,KAAKkhE,IAAMA,EACXlhE,KAAK+P,OAAS,E,gCAElB,WACI,IAAMpU,EAAQqE,KAAKkhE,IAAIY,UAAU9hE,KAAK+P,QAEtC,OADA/P,KAAK+P,QAAU,EACRpU,I,qBAEX,WACI,IAAMA,EAAQqE,KAAKkhE,IAAIa,aAAa/hE,KAAK+P,QAEzC,OADA/P,KAAK+P,QAAU,EACRpU,I,qBAEX,WACI,IAAMA,EAAQqE,KAAKkhE,IAAI7uD,aAAarS,KAAK+P,QAEzC,OADA/P,KAAK+P,QAAU,EACRpU,I,qBAEX,WACI,IAAMulE,EAAMlhE,KAAKgiE,WAAW,GAC5B,OAAO,IAAIvB,EAAQxzD,QAAQi0D,EAAK,Q,sBAEpC,WACI,IAAMA,EAAMlhE,KAAKgiE,WAAW,IAC5B,OAAO,IAAIvB,EAAQxzD,QAAQi0D,EAAK,Q,sBAEpC,WACI,IAAMA,EAAMlhE,KAAKgiE,WAAW,IAC5B,OAAO,IAAIvB,EAAQxzD,QAAQi0D,EAAK,Q,sBAEpC,WACI,IAAMA,EAAMlhE,KAAKgiE,WAAW,IAC5B,OAAO,IAAIvB,EAAQxzD,QAAQi0D,EAAK,Q,wBAEpC,SAAW/zD,GACP,GAAInN,KAAK+P,OAAS5C,EAAMnN,KAAKkhE,IAAIpjE,OAC7B,MAAM,IAAIwiE,EAAJ,iCAAyCnzD,EAAzC,yBAEV,IAAMtN,EAASG,KAAKkhE,IAAIziE,MAAMuB,KAAK+P,OAAQ/P,KAAK+P,OAAS5C,GAEzD,OADAnN,KAAK+P,QAAU5C,EACRtN,I,wBAEX,WACI,IAAMsN,EAAMnN,KAAKiiE,UACXf,EAAMlhE,KAAKgiE,WAAW70D,GAC5B,IAEI,OAAOwzD,EAAY35D,OAAOk6D,GAE9B,MAAOxsD,GACH,MAAM,IAAI4rD,EAAJ,uCAA+C5rD,O,4BAG7D,SAAevH,GACX,OAAO,IAAInQ,WAAWgD,KAAKgiE,WAAW70D,M,uBAE1C,SAAUq0D,GAGN,IAFA,IAAMr0D,EAAMnN,KAAKiiE,UACXpiE,EAASjC,QACNI,EAAI,EAAGA,EAAImP,IAAOnP,EACvB6B,EAAOmF,KAAKw8D,KAEhB,OAAO3hE,M,KAkCf,SAASqiE,EAAsB93C,GAC3B,OAAOA,EAAOuzC,OAAO,GAAGwE,cAAgB/3C,EAAO3rB,MAAM,GAEzD,SAAS2jE,EAAe15C,EAAQu4C,EAAWtlE,EAAO0mE,EAAWC,GACzD,IAEI,GAAyB,kBAAdD,EACPC,EAAO,QAAD,OAASJ,EAAsBG,KAAc1mE,QAElD,GAAI0mE,aAAqBzkE,MAC1B,GAA4B,kBAAjBykE,EAAU,GAAiB,CAClC,GAAI1mE,EAAMmC,SAAWukE,EAAU,GAC3B,MAAM,IAAI/B,EAAJ,yCAAiD+B,EAAU,GAA3D,qBAA0E1mE,EAAMmC,OAAhF,WAEVwkE,EAAOC,gBAAgB5mE,QAEtB,GAAyB,IAArB0mE,EAAUvkE,QAAwC,kBAAjBukE,EAAU,GAAiB,CACjE,GAAI1mE,EAAMmC,SAAWukE,EAAU,GAC3B,MAAM,IAAI/B,EAAJ,yCAAiD+B,EAAU,GAA3D,qBAA0E1mE,EAAMmC,OAAhF,WAEV,IAAK,IAAIE,EAAI,EAAGA,EAAIqkE,EAAU,GAAIrkE,IAC9BokE,EAAe15C,EAAQ,KAAM/sB,EAAMqC,GAAIqkE,EAAU,GAAIC,QAIzDA,EAAOE,WAAW7mE,GAAO,SAACk7B,GACtBurC,EAAe15C,EAAQu4C,EAAWpqC,EAAMwrC,EAAU,GAAIC,WAI7D,QAAuBliE,IAAnBiiE,EAAUvsC,KACf,OAAQusC,EAAUvsC,MACd,IAAK,SACa,OAAVn6B,QAA4ByE,IAAVzE,EAClB2mE,EAAOG,QAAQ,IAGfH,EAAOG,QAAQ,GACfL,EAAe15C,EAAQu4C,EAAWtlE,EAAO0mE,EAAUn6C,KAAMo6C,IAE7D,MAEJ,IAAK,MACDA,EAAOf,SAAS5lE,EAAMq7B,MACtBr7B,EAAM6S,SAAQ,SAACsY,EAAKhC,GAChBs9C,EAAe15C,EAAQu4C,EAAWn8C,EAAKu9C,EAAUv9C,IAAKw9C,GACtDF,EAAe15C,EAAQu4C,EAAWn6C,EAAKu7C,EAAU1mE,MAAO2mE,MAE5D,MAEJ,QACI,MAAM,IAAIhC,EAAJ,oBAA4B+B,EAA5B,uBAIdK,EAAgBh6C,EAAQ/sB,EAAO2mE,GAGvC,MAAO/4C,GAIH,MAHIA,aAAiB+2C,GACjB/2C,EAAMo5C,eAAe1B,GAEnB13C,GAGd,SAASm5C,EAAgBh6C,EAAQroB,EAAKiiE,GAClC,GAAkC,oBAAvBjiE,EAAIuiE,eAAf,CAIA,IAAMC,EAAen6C,EAAOna,IAAIlO,EAAIG,aACpC,IAAKqiE,EACD,MAAM,IAAIvC,EAAJ,gBAAwBjgE,EAAIG,YAAY+K,KAAxC,0BAEV,GAA0B,WAAtBs3D,EAAa/sC,KACb+sC,EAAaxuD,OAAO6J,KAAI,YAA4B,aAA1B+iD,EAA0B,KAAfoB,EAAe,KAChDD,EAAe15C,EAAQu4C,EAAW5gE,EAAI4gE,GAAYoB,EAAWC,UAGhE,IAA0B,SAAtBO,EAAa/sC,KAYlB,MAAM,IAAIwqC,EAAJ,kCAA0CuC,EAAa/sC,KAAvD,gBAAmEz1B,EAAIG,YAAY+K,OAVzF,IADA,IAAMA,EAAOlL,EAAIwiE,EAAa/rC,OACrB7iB,EAAM,EAAGA,EAAM4uD,EAAa3yD,OAAOpS,SAAUmW,EAAK,CACvD,QAA+B4uD,EAAa3yD,OAAO+D,GAAnD,GAAOgtD,EAAP,KAAkBoB,EAAlB,KACA,GAAIpB,IAAc11D,EAAM,CACpB+2D,EAAOG,QAAQxuD,GACfmuD,EAAe15C,EAAQu4C,EAAW5gE,EAAI4gE,GAAYoB,EAAWC,GAC7D,cAnBRjiE,EAAIuiE,eAAeN,GAmC3B,SAASQ,EAAiBp6C,EAAQu4C,EAAWoB,EAAWU,GACpD,IACI,GAAyB,kBAAdV,EACP,OAAOU,EAAO,OAAD,OAAQb,EAAsBG,OAE/C,GAAIA,aAAqBzkE,MAAO,CAC5B,GAA4B,kBAAjBykE,EAAU,GACjB,OAAOU,EAAOC,eAAeX,EAAU,IAEtC,GAA4B,kBAAjBA,EAAU,GAAiB,CAEvC,IADA,IAAMtlE,EAAM,GACHiB,EAAI,EAAGA,EAAIqkE,EAAU,GAAIrkE,IAC9BjB,EAAIiI,KAAK89D,EAAiBp6C,EAAQ,KAAM25C,EAAU,GAAIU,IAE1D,OAAOhmE,EAGP,OAAOgmE,EAAOE,WAAU,kBAAMH,EAAiBp6C,EAAQu4C,EAAWoB,EAAU,GAAIU,MAGxF,GAAuB,WAAnBV,EAAUvsC,KAEV,OADeitC,EAAOG,SAEXJ,EAAiBp6C,EAAQu4C,EAAWoB,EAAUn6C,KAAM66C,QAE/D,EAEJ,GAAuB,QAAnBV,EAAUvsC,KAAgB,CAG1B,IAFA,IAAI5X,EAAM,IAAI4K,IACRhrB,EAASilE,EAAOd,UACbjkE,EAAI,EAAGA,EAAIF,EAAQE,IAAK,CAC7B,IAAM8mB,EAAMg+C,EAAiBp6C,EAAQu4C,EAAWoB,EAAUv9C,IAAKi+C,GACzDj8C,EAAMg8C,EAAiBp6C,EAAQu4C,EAAWoB,EAAU1mE,MAAOonE,GACjE7kD,EAAIne,IAAI+kB,EAAKgC,GAEjB,OAAO5I,EAEX,OAAOilD,EAAkBz6C,EAAQ25C,EAAWU,GAEhD,MAAOx5C,GAIH,MAHIA,aAAiB+2C,GACjB/2C,EAAMo5C,eAAe1B,GAEnB13C,GAGd,SAAS45C,EAAkBz6C,EAAQ06C,EAAWL,GAC1C,GAA0C,oBAA/BK,EAAUC,iBACjB,OAAOD,EAAUC,iBAAiBN,GAEtC,IAAMF,EAAen6C,EAAOna,IAAI60D,GAChC,IAAKP,EACD,MAAM,IAAIvC,EAAJ,gBAAwB8C,EAAU73D,KAAlC,0BAEV,GAA0B,WAAtBs3D,EAAa/sC,KAAmB,CAChC,IADgC,EAC1Bj2B,EAAS,GADiB,IAEK6oB,EAAOna,IAAI60D,GAAW/uD,QAF3B,IAEhC,IAAK,EAAL,qBAAmE,oBAAvD4sD,EAAuD,KAA5CoB,EAA4C,KAC/DxiE,EAAOohE,GAAa6B,EAAiBp6C,EAAQu4C,EAAWoB,EAAWU,IAHvC,8BAKhC,OAAO,IAAIK,EAAUvjE,GAEzB,GAA0B,SAAtBgjE,EAAa/sC,KAAiB,CAC9B,IAAM7hB,EAAM8uD,EAAOG,SACnB,GAAIjvD,GAAO4uD,EAAa3yD,OAAOpS,OAC3B,MAAM,IAAIwiE,EAAJ,sBAA8BrsD,EAA9B,qBAEV,QAA+B4uD,EAAa3yD,OAAO+D,GAAnD,GAAOgtD,EAAP,KACMqC,EAAaR,EAAiBp6C,EAAQu4C,EAD5C,KACkE8B,GAClE,OAAO,IAAIK,EAAJ,KAAiBnC,EAAYqC,IAExC,MAAM,IAAIhD,EAAJ,kCAA0CuC,EAAa/sC,KAAvD,gBAAmEstC,EAAU5iE,YAAY+K,OA3MnGk0D,EAAW,CACPgC,GACDrB,EAAa9/D,UAAW,SAAU,MACrCm/D,EAAW,CACPgC,GACDrB,EAAa9/D,UAAW,UAAW,MACtCm/D,EAAW,CACPgC,GACDrB,EAAa9/D,UAAW,UAAW,MACtCm/D,EAAW,CACPgC,GACDrB,EAAa9/D,UAAW,UAAW,MACtCm/D,EAAW,CACPgC,GACDrB,EAAa9/D,UAAW,WAAY,MACvCm/D,EAAW,CACPgC,GACDrB,EAAa9/D,UAAW,WAAY,MACvCm/D,EAAW,CACPgC,GACDrB,EAAa9/D,UAAW,WAAY,MACvCm/D,EAAW,CACPgC,GACDrB,EAAa9/D,UAAW,aAAc,MACzCm/D,EAAW,CACPgC,GACDrB,EAAa9/D,UAAW,iBAAkB,MAC7Cm/D,EAAW,CACPgC,GACDrB,EAAa9/D,UAAW,YAAa,MACxC5E,EAAQ0kE,aAAeA,EAsGvB1kE,EAAQ6L,UALR,SAAmBmhB,EAAQroB,GAA4B,IAAvBkjE,EAAuB,uDAAdlD,EAC/BiC,EAAS,IAAIiB,EAEnB,OADAb,EAAgBh6C,EAAQroB,EAAKiiE,GACtBA,EAAO/X,WAoFlB7uD,EAAQ44B,YARR,SAAqB5L,EAAQ06C,EAAWnmE,GAA+B,IAAvBumE,EAAuB,uDAAdpD,EAC/C2C,EAAS,IAAIS,EAAOvmE,GACpB4C,EAASsjE,EAAkBz6C,EAAQ06C,EAAWL,GACpD,GAAIA,EAAOhzD,OAAS9S,EAAOa,OACvB,MAAM,IAAIwiE,EAAJ,qBAA6BrjE,EAAOa,OAASilE,EAAOhzD,OAApD,mCAEV,OAAOlQ,GAQXnE,EAAQ64B,qBAJR,SAA8B7L,EAAQ06C,EAAWnmE,GAA+B,IAAvBumE,EAAuB,uDAAdpD,EACxD2C,EAAS,IAAIS,EAAOvmE,GAC1B,OAAOkmE,EAAkBz6C,EAAQ06C,EAAWL,M,+CCrbhD,sBAAWphE,EAAQjG,GACjB,aAGA,SAAS6T,EAAQuX,EAAK1lB,GACpB,IAAK0lB,EAAK,MAAM,IAAIppB,MAAM0D,GAAO,oBAKnC,SAAS0nD,EAAUC,EAAMC,GACvBD,EAAKE,OAASD,EACd,IAAIE,EAAW,aACfA,EAAS5oD,UAAY0oD,EAAU1oD,UAC/ByoD,EAAKzoD,UAAY,IAAI4oD,EACrBH,EAAKzoD,UAAUE,YAAcuoD,EAK/B,SAASn0B,EAAIhmB,EAAQgN,EAAMutC,GACzB,GAAIv0B,EAAGw0B,KAAKx6C,GACV,OAAOA,EAGT5O,KAAKqpD,SAAW,EAChBrpD,KAAKspD,MAAQ,KACbtpD,KAAKlC,OAAS,EAGdkC,KAAKupD,IAAM,KAEI,OAAX36C,IACW,OAATgN,GAA0B,OAATA,IACnButC,EAASvtC,EACTA,EAAO,IAGT5b,KAAKwpD,MAAM56C,GAAU,EAAGgN,GAAQ,GAAIutC,GAAU,OAYlD,IAAIz/C,EATkB,kBAAX/H,EACTA,EAAOjG,QAAUk5B,EAEjBl5B,EAAQk5B,GAAKA,EAGfA,EAAGA,GAAKA,EACRA,EAAG60B,SAAW,GAGd,IAEI//C,EADoB,qBAAXmS,QAAmD,qBAAlBA,OAAOnS,OACxCmS,OAAOnS,OAEP5M,EAAQ,MAAU4M,OAE7B,MAAOgL,IAgIT,SAASg1C,EAAet/B,EAAQ0N,GAC9B,IAAIhY,EAAIsK,EAAOuJ,WAAWmE,GAE1B,OAAIhY,GAAK,IAAMA,GAAK,GACXA,EAAI,GAEFA,GAAK,IAAMA,GAAK,GAClBA,EAAI,GAEFA,GAAK,IAAMA,GAAK,IAClBA,EAAI,QAEXvQ,GAAO,EAAO,wBAA0B6a,GAI5C,SAASu/B,EAAcv/B,EAAQw/B,EAAY9xB,GACzC,IAAIlY,EAAI8pC,EAAct/B,EAAQ0N,GAI9B,OAHIA,EAAQ,GAAK8xB,IACfhqC,GAAK8pC,EAAct/B,EAAQ0N,EAAQ,IAAM,GAEpClY,EA8CT,SAASiqC,EAAWxqD,EAAKmY,EAAOvV,EAAK6nD,GAInC,IAHA,IAAIlqC,EAAI,EACJ5Q,EAAI,EACJ7B,EAAM9P,KAAKgQ,IAAIhO,EAAIvB,OAAQmE,GACtBjE,EAAIwZ,EAAOxZ,EAAImP,EAAKnP,IAAK,CAChC,IAAI8hB,EAAIzgB,EAAIs0B,WAAW31B,GAAK,GAE5B4hB,GAAKkqC,EAIH96C,EADE8Q,GAAK,GACHA,EAAI,GAAK,GAGJA,GAAK,GACVA,EAAI,GAAK,GAITA,EAENvQ,EAAOuQ,GAAK,GAAK9Q,EAAI86C,EAAK,qBAC1BlqC,GAAK5Q,EAEP,OAAO4Q,EA4DT,SAASmqC,EAAMn1C,EAAM5D,GACnB4D,EAAK00C,MAAQt4C,EAAIs4C,MACjB10C,EAAK9W,OAASkT,EAAIlT,OAClB8W,EAAKy0C,SAAWr4C,EAAIq4C,SACpBz0C,EAAK20C,IAAMv4C,EAAIu4C,IAsCjB,GA9TA30B,EAAGw0B,KAAO,SAAerrC,GACvB,OAAIA,aAAe6W,GAIJ,OAAR7W,GAA+B,kBAARA,GAC5BA,EAAIvd,YAAYipD,WAAa70B,EAAG60B,UAAY7rD,MAAM2W,QAAQwJ,EAAIurC,QAGlE10B,EAAGjQ,IAAM,SAAcuI,EAAM88B,GAC3B,OAAI98B,EAAK+8B,IAAID,GAAS,EAAU98B,EACzB88B,GAGTp1B,EAAGvnB,IAAM,SAAc6f,EAAM88B,GAC3B,OAAI98B,EAAK+8B,IAAID,GAAS,EAAU98B,EACzB88B,GAGTp1B,EAAGt0B,UAAUkpD,MAAQ,SAAe56C,EAAQgN,EAAMutC,GAChD,GAAsB,kBAAXv6C,EACT,OAAO5O,KAAKkqD,YAAYt7C,EAAQgN,EAAMutC,GAGxC,GAAsB,kBAAXv6C,EACT,OAAO5O,KAAKmqD,WAAWv7C,EAAQgN,EAAMutC,GAG1B,QAATvtC,IACFA,EAAO,IAETrM,EAAOqM,KAAiB,EAAPA,IAAaA,GAAQ,GAAKA,GAAQ,IAGnD,IAAIpE,EAAQ,EACM,OAFlB5I,EAASA,EAAO3Q,WAAWmsD,QAAQ,OAAQ,KAEhC,KACT5yC,IACAxX,KAAKqpD,SAAW,GAGd7xC,EAAQ5I,EAAO9Q,SACJ,KAAT8d,EACF5b,KAAKqqD,UAAUz7C,EAAQ4I,EAAO2xC,IAE9BnpD,KAAKsqD,WAAW17C,EAAQgN,EAAMpE,GACf,OAAX2xC,GACFnpD,KAAKmqD,WAAWnqD,KAAKuqD,UAAW3uC,EAAMutC,MAM9Cv0B,EAAGt0B,UAAU4pD,YAAc,SAAsBt7C,EAAQgN,EAAMutC,GACzDv6C,EAAS,IACX5O,KAAKqpD,SAAW,EAChBz6C,GAAUA,GAERA,EAAS,UACX5O,KAAKspD,MAAQ,CAAU,SAAT16C,GACd5O,KAAKlC,OAAS,GACL8Q,EAAS,kBAClB5O,KAAKspD,MAAQ,CACF,SAAT16C,EACCA,EAAS,SAAa,UAEzB5O,KAAKlC,OAAS,IAEdyR,EAAOX,EAAS,kBAChB5O,KAAKspD,MAAQ,CACF,SAAT16C,EACCA,EAAS,SAAa,SACvB,GAEF5O,KAAKlC,OAAS,GAGD,OAAXqrD,GAGJnpD,KAAKmqD,WAAWnqD,KAAKuqD,UAAW3uC,EAAMutC,IAGxCv0B,EAAGt0B,UAAU6pD,WAAa,SAAqBv7C,EAAQgN,EAAMutC,GAG3D,GADA55C,EAAgC,kBAAlBX,EAAO9Q,QACjB8Q,EAAO9Q,QAAU,EAGnB,OAFAkC,KAAKspD,MAAQ,CAAC,GACdtpD,KAAKlC,OAAS,EACPkC,KAGTA,KAAKlC,OAAST,KAAK6lC,KAAKt0B,EAAO9Q,OAAS,GACxCkC,KAAKspD,MAAQ,IAAI1rD,MAAMoC,KAAKlC,QAC5B,IAAK,IAAIE,EAAI,EAAGA,EAAIgC,KAAKlC,OAAQE,IAC/BgC,KAAKspD,MAAMtrD,GAAK,EAGlB,IAAIO,EAAGisD,EACHC,EAAM,EACV,GAAe,OAAXtB,EACF,IAAKnrD,EAAI4Q,EAAO9Q,OAAS,EAAGS,EAAI,EAAGP,GAAK,EAAGA,GAAK,EAC9CwsD,EAAI57C,EAAO5Q,GAAM4Q,EAAO5Q,EAAI,IAAM,EAAM4Q,EAAO5Q,EAAI,IAAM,GACzDgC,KAAKspD,MAAM/qD,IAAOisD,GAAKC,EAAO,SAC9BzqD,KAAKspD,MAAM/qD,EAAI,GAAMisD,IAAO,GAAKC,EAAQ,UACzCA,GAAO,KACI,KACTA,GAAO,GACPlsD,UAGC,GAAe,OAAX4qD,EACT,IAAKnrD,EAAI,EAAGO,EAAI,EAAGP,EAAI4Q,EAAO9Q,OAAQE,GAAK,EACzCwsD,EAAI57C,EAAO5Q,GAAM4Q,EAAO5Q,EAAI,IAAM,EAAM4Q,EAAO5Q,EAAI,IAAM,GACzDgC,KAAKspD,MAAM/qD,IAAOisD,GAAKC,EAAO,SAC9BzqD,KAAKspD,MAAM/qD,EAAI,GAAMisD,IAAO,GAAKC,EAAQ,UACzCA,GAAO,KACI,KACTA,GAAO,GACPlsD,KAIN,OAAOyB,KAAK0qD,UA2Bd91B,EAAGt0B,UAAU+pD,UAAY,SAAoBz7C,EAAQ4I,EAAO2xC,GAE1DnpD,KAAKlC,OAAST,KAAK6lC,MAAMt0B,EAAO9Q,OAAS0Z,GAAS,GAClDxX,KAAKspD,MAAQ,IAAI1rD,MAAMoC,KAAKlC,QAC5B,IAAK,IAAIE,EAAI,EAAGA,EAAIgC,KAAKlC,OAAQE,IAC/BgC,KAAKspD,MAAMtrD,GAAK,EAIlB,IAGIwsD,EAHAC,EAAM,EACNlsD,EAAI,EAGR,GAAe,OAAX4qD,EACF,IAAKnrD,EAAI4Q,EAAO9Q,OAAS,EAAGE,GAAKwZ,EAAOxZ,GAAK,EAC3CwsD,EAAIb,EAAa/6C,EAAQ4I,EAAOxZ,IAAMysD,EACtCzqD,KAAKspD,MAAM/qD,IAAU,SAAJisD,EACbC,GAAO,IACTA,GAAO,GACPlsD,GAAK,EACLyB,KAAKspD,MAAM/qD,IAAMisD,IAAM,IAEvBC,GAAO,OAKX,IAAKzsD,GADa4Q,EAAO9Q,OAAS0Z,GACX,IAAM,EAAIA,EAAQ,EAAIA,EAAOxZ,EAAI4Q,EAAO9Q,OAAQE,GAAK,EAC1EwsD,EAAIb,EAAa/6C,EAAQ4I,EAAOxZ,IAAMysD,EACtCzqD,KAAKspD,MAAM/qD,IAAU,SAAJisD,EACbC,GAAO,IACTA,GAAO,GACPlsD,GAAK,EACLyB,KAAKspD,MAAM/qD,IAAMisD,IAAM,IAEvBC,GAAO,EAKbzqD,KAAK0qD,UA8BP91B,EAAGt0B,UAAUgqD,WAAa,SAAqB17C,EAAQgN,EAAMpE,GAE3DxX,KAAKspD,MAAQ,CAAC,GACdtpD,KAAKlC,OAAS,EAGd,IAAK,IAAI6sD,EAAU,EAAGC,EAAU,EAAGA,GAAW,SAAWA,GAAWhvC,EAClE+uC,IAEFA,IACAC,EAAWA,EAAUhvC,EAAQ,EAO7B,IALA,IAAIuuB,EAAQv7B,EAAO9Q,OAAS0Z,EACxB4C,EAAM+vB,EAAQwgB,EACd1oD,EAAM5E,KAAKgQ,IAAI88B,EAAOA,EAAQ/vB,GAAO5C,EAErCha,EAAO,EACFQ,EAAIwZ,EAAOxZ,EAAIiE,EAAKjE,GAAK2sD,EAChCntD,EAAOqsD,EAAUj7C,EAAQ5Q,EAAGA,EAAI2sD,EAAS/uC,GAEzC5b,KAAK6qD,MAAMD,GACP5qD,KAAKspD,MAAM,GAAK9rD,EAAO,SACzBwC,KAAKspD,MAAM,IAAM9rD,EAEjBwC,KAAK8qD,OAAOttD,GAIhB,GAAY,IAAR4c,EAAW,CACb,IAAIrI,EAAM,EAGV,IAFAvU,EAAOqsD,EAAUj7C,EAAQ5Q,EAAG4Q,EAAO9Q,OAAQ8d,GAEtC5d,EAAI,EAAGA,EAAIoc,EAAKpc,IACnB+T,GAAO6J,EAGT5b,KAAK6qD,MAAM94C,GACP/R,KAAKspD,MAAM,GAAK9rD,EAAO,SACzBwC,KAAKspD,MAAM,IAAM9rD,EAEjBwC,KAAK8qD,OAAOttD,GAIhBwC,KAAK0qD,UAGP91B,EAAGt0B,UAAU2X,KAAO,SAAerD,GACjCA,EAAK00C,MAAQ,IAAI1rD,MAAMoC,KAAKlC,QAC5B,IAAK,IAAIE,EAAI,EAAGA,EAAIgC,KAAKlC,OAAQE,IAC/B4W,EAAK00C,MAAMtrD,GAAKgC,KAAKspD,MAAMtrD,GAE7B4W,EAAK9W,OAASkC,KAAKlC,OACnB8W,EAAKy0C,SAAWrpD,KAAKqpD,SACrBz0C,EAAK20C,IAAMvpD,KAAKupD,KAUlB30B,EAAGt0B,UAAUyqD,MAAQ,SAAgBn2C,GACnCm1C,EAAKn1C,EAAM5U,OAGb40B,EAAGt0B,UAAU0qD,MAAQ,WACnB,IAAIprC,EAAI,IAAIgV,EAAG,MAEf,OADA50B,KAAKiY,KAAK2H,GACHA,GAGTgV,EAAGt0B,UAAU2qD,QAAU,SAAkBj0B,GACvC,KAAOh3B,KAAKlC,OAASk5B,GACnBh3B,KAAKspD,MAAMtpD,KAAKlC,UAAY,EAE9B,OAAOkC,MAIT40B,EAAGt0B,UAAUoqD,OAAS,WACpB,KAAO1qD,KAAKlC,OAAS,GAAqC,IAAhCkC,KAAKspD,MAAMtpD,KAAKlC,OAAS,IACjDkC,KAAKlC,SAEP,OAAOkC,KAAKkrD,aAGdt2B,EAAGt0B,UAAU4qD,UAAY,WAKvB,OAHoB,IAAhBlrD,KAAKlC,QAAkC,IAAlBkC,KAAKspD,MAAM,KAClCtpD,KAAKqpD,SAAW,GAEXrpD,MAKa,qBAAXooB,QAAgD,oBAAfA,OAAO+iC,IACjD,IACEv2B,EAAGt0B,UAAU8nB,OAAO+iC,IAAI,+BAAiCC,EACzD,MAAO12C,GACPkgB,EAAGt0B,UAAU8qD,QAAUA,OAGzBx2B,EAAGt0B,UAAU8qD,QAAUA,EAGzB,SAASA,IACP,OAAQprD,KAAKupD,IAAM,UAAY,SAAWvpD,KAAK/B,SAAS,IAAM,IAiChE,IAAIotD,EAAQ,CACV,GACA,IACA,KACA,MACA,OACA,QACA,SACA,UACA,WACA,YACA,aACA,cACA,eACA,gBACA,iBACA,kBACA,mBACA,oBACA,qBACA,sBACA,uBACA,wBACA,yBACA,0BACA,2BACA,6BAGEC,EAAa,CACf,EAAG,EACH,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EACvB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAGhBC,EAAa,CACf,EAAG,EACH,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAC5D,SAAU,IAAU,SAAU,SAAU,SAAU,QAAS,SAC3D,SAAU,SAAU,SAAU,SAAU,KAAU,QAAS,QAC3D,QAAS,QAAS,QAAS,SAAU,SAAU,SAAU,SACzD,MAAU,SAAU,SAAU,SAAU,SAAU,SAAU,UAG9D32B,EAAGt0B,UAAUrC,SAAW,SAAmB2d,EAAM6jC,GAI/C,IAAI/xC,EACJ,GAHA+xC,EAAoB,EAAVA,GAAe,EAGZ,MAJb7jC,EAAOA,GAAQ,KAIa,QAATA,EAAgB,CACjClO,EAAM,GAGN,IAFA,IAAI+8C,EAAM,EACNe,EAAQ,EACHxtD,EAAI,EAAGA,EAAIgC,KAAKlC,OAAQE,IAAK,CACpC,IAAIwsD,EAAIxqD,KAAKspD,MAAMtrD,GACfR,GAA+B,UAArBgtD,GAAKC,EAAOe,IAAmBvtD,SAAS,IACtDutD,EAAShB,IAAO,GAAKC,EAAQ,UAC7BA,GAAO,IACI,KACTA,GAAO,GACPzsD,KAGA0P,EADY,IAAV89C,GAAextD,IAAMgC,KAAKlC,OAAS,EAC/ButD,EAAM,EAAI7tD,EAAKM,QAAUN,EAAOkQ,EAEhClQ,EAAOkQ,EAMjB,IAHc,IAAV89C,IACF99C,EAAM89C,EAAMvtD,SAAS,IAAMyP,GAEtBA,EAAI5P,OAAS2hD,IAAY,GAC9B/xC,EAAM,IAAMA,EAKd,OAHsB,IAAlB1N,KAAKqpD,WACP37C,EAAM,IAAMA,GAEPA,EAGT,GAAIkO,KAAiB,EAAPA,IAAaA,GAAQ,GAAKA,GAAQ,GAAI,CAElD,IAAI6vC,EAAYH,EAAW1vC,GAEvB8vC,EAAYH,EAAW3vC,GAC3BlO,EAAM,GACN,IAAIoS,EAAI9f,KAAKgrD,QAEb,IADAlrC,EAAEupC,SAAW,GACLvpC,EAAE6rC,UAAU,CAClB,IAAI/rC,EAAIE,EAAE8rC,MAAMF,GAAWztD,SAAS2d,GAMlClO,GALFoS,EAAIA,EAAE+rC,MAAMH,IAELC,SAGC/rC,EAAIlS,EAFJ29C,EAAMI,EAAY7rC,EAAE9hB,QAAU8hB,EAAIlS,EAQ5C,IAHI1N,KAAK2rD,WACPj+C,EAAM,IAAMA,GAEPA,EAAI5P,OAAS2hD,IAAY,GAC9B/xC,EAAM,IAAMA,EAKd,OAHsB,IAAlB1N,KAAKqpD,WACP37C,EAAM,IAAMA,GAEPA,EAGT6B,GAAO,EAAO,oCAGhBqlB,EAAGt0B,UAAUwrD,SAAW,WACtB,IAAIC,EAAM/rD,KAAKspD,MAAM,GASrB,OARoB,IAAhBtpD,KAAKlC,OACPiuD,GAAuB,SAAhB/rD,KAAKspD,MAAM,GACO,IAAhBtpD,KAAKlC,QAAkC,IAAlBkC,KAAKspD,MAAM,GAEzCyC,GAAO,iBAAoC,SAAhB/rD,KAAKspD,MAAM,GAC7BtpD,KAAKlC,OAAS,GACvByR,GAAO,EAAO,8CAEU,IAAlBvP,KAAKqpD,UAAmB0C,EAAMA,GAGxCn3B,EAAGt0B,UAAUw0B,OAAS,WACpB,OAAO90B,KAAK/B,SAAS,GAAI,IAGvByL,IACFkrB,EAAGt0B,UAAU4zB,SAAW,SAAmBi1B,EAAQrrD,GACjD,OAAOkC,KAAK+0B,YAAYrrB,EAAQy/C,EAAQrrD,KAI5C82B,EAAGt0B,UAAUiqD,QAAU,SAAkBpB,EAAQrrD,GAC/C,OAAOkC,KAAK+0B,YAAYn3B,MAAOurD,EAAQrrD,IA4gBzC,SAASkuD,EAAY5lC,EAAMrI,EAAKrQ,GAC9BA,EAAI27C,SAAWtrC,EAAIsrC,SAAWjjC,EAAKijC,SACnC,IAAIl8C,EAAOiZ,EAAKtoB,OAASigB,EAAIjgB,OAAU,EACvC4P,EAAI5P,OAASqP,EACbA,EAAOA,EAAM,EAAK,EAGlB,IAAIxN,EAAoB,EAAhBymB,EAAKkjC,MAAM,GACft6C,EAAmB,EAAf+O,EAAIurC,MAAM,GACd1pC,EAAIjgB,EAAIqP,EAERoB,EAAS,SAAJwP,EACL4rC,EAAS5rC,EAAI,SAAa,EAC9BlS,EAAI47C,MAAM,GAAKl5C,EAEf,IAAK,IAAIwV,EAAI,EAAGA,EAAIzY,EAAKyY,IAAK,CAM5B,IAHA,IAAIqmC,EAAST,IAAU,GACnBU,EAAgB,SAARV,EACRW,EAAO9uD,KAAKgQ,IAAIuY,EAAG7H,EAAIjgB,OAAS,GAC3BS,EAAIlB,KAAKsnB,IAAI,EAAGiB,EAAIQ,EAAKtoB,OAAS,GAAIS,GAAK4tD,EAAM5tD,IAAK,CAC7D,IAAIP,EAAK4nB,EAAIrnB,EAAK,EAIlB0tD,IADArsC,GAFAjgB,EAAoB,EAAhBymB,EAAKkjC,MAAMtrD,KACfgR,EAAmB,EAAf+O,EAAIurC,MAAM/qD,IACF2tD,GACG,SAAa,EAC5BA,EAAY,SAAJtsC,EAEVlS,EAAI47C,MAAM1jC,GAAa,EAARsmC,EACfV,EAAiB,EAATS,EAQV,OANc,IAAVT,EACF99C,EAAI47C,MAAM1jC,GAAa,EAAR4lC,EAEf99C,EAAI5P,SAGC4P,EAAIg9C,SAxiBb91B,EAAGt0B,UAAUy0B,YAAc,SAAsBq3B,EAAWjD,EAAQrrD,GAClEkC,KAAK0qD,SAEL,IAAIvtD,EAAa6C,KAAK7C,aAClBkvD,EAAYvuD,GAAUT,KAAKsnB,IAAI,EAAGxnB,GACtCoS,EAAOpS,GAAckvD,EAAW,yCAChC98C,EAAO88C,EAAY,EAAG,+BAEtB,IAAItqD,EAfS,SAAmBqqD,EAAWp1B,GAC3C,OAAIo1B,EAAUE,YACLF,EAAUE,YAAYt1B,GAExB,IAAIo1B,EAAUp1B,GAWX2M,CAASyoB,EAAWC,GAG9B,OADArsD,KAAK,gBADoB,OAAXmpD,EAAkB,KAAO,OACRpnD,EAAK5E,GAC7B4E,GAGT6yB,EAAGt0B,UAAUisD,eAAiB,SAAyBxqD,EAAK5E,GAI1D,IAHA,IAAIqvD,EAAW,EACXhB,EAAQ,EAEHxtD,EAAI,EAAGP,EAAQ,EAAGO,EAAIgC,KAAKlC,OAAQE,IAAK,CAC/C,IAAIR,EAAQwC,KAAKspD,MAAMtrD,IAAMP,EAAS+tD,EAEtCzpD,EAAIyqD,KAAqB,IAAPhvD,EACdgvD,EAAWzqD,EAAIjE,SACjBiE,EAAIyqD,KAAehvD,GAAQ,EAAK,KAE9BgvD,EAAWzqD,EAAIjE,SACjBiE,EAAIyqD,KAAehvD,GAAQ,GAAM,KAGrB,IAAVC,GACE+uD,EAAWzqD,EAAIjE,SACjBiE,EAAIyqD,KAAehvD,GAAQ,GAAM,KAEnCguD,EAAQ,EACR/tD,EAAQ,IAER+tD,EAAQhuD,IAAS,GACjBC,GAAS,GAIb,GAAI+uD,EAAWzqD,EAAIjE,OAGjB,IAFAiE,EAAIyqD,KAAchB,EAEXgB,EAAWzqD,EAAIjE,QACpBiE,EAAIyqD,KAAc,GAKxB53B,EAAGt0B,UAAUmsD,eAAiB,SAAyB1qD,EAAK5E,GAI1D,IAHA,IAAIqvD,EAAWzqD,EAAIjE,OAAS,EACxB0tD,EAAQ,EAEHxtD,EAAI,EAAGP,EAAQ,EAAGO,EAAIgC,KAAKlC,OAAQE,IAAK,CAC/C,IAAIR,EAAQwC,KAAKspD,MAAMtrD,IAAMP,EAAS+tD,EAEtCzpD,EAAIyqD,KAAqB,IAAPhvD,EACdgvD,GAAY,IACdzqD,EAAIyqD,KAAehvD,GAAQ,EAAK,KAE9BgvD,GAAY,IACdzqD,EAAIyqD,KAAehvD,GAAQ,GAAM,KAGrB,IAAVC,GACE+uD,GAAY,IACdzqD,EAAIyqD,KAAehvD,GAAQ,GAAM,KAEnCguD,EAAQ,EACR/tD,EAAQ,IAER+tD,EAAQhuD,IAAS,GACjBC,GAAS,GAIb,GAAI+uD,GAAY,EAGd,IAFAzqD,EAAIyqD,KAAchB,EAEXgB,GAAY,GACjBzqD,EAAIyqD,KAAc,GAKpBnvD,KAAKqvD,MACP93B,EAAGt0B,UAAUqsD,WAAa,SAAqBnC,GAC7C,OAAO,GAAKntD,KAAKqvD,MAAMlC,IAGzB51B,EAAGt0B,UAAUqsD,WAAa,SAAqBnC,GAC7C,IAAI9wC,EAAI8wC,EACJ5qC,EAAI,EAiBR,OAhBIlG,GAAK,OACPkG,GAAK,GACLlG,KAAO,IAELA,GAAK,KACPkG,GAAK,EACLlG,KAAO,GAELA,GAAK,IACPkG,GAAK,EACLlG,KAAO,GAELA,GAAK,IACPkG,GAAK,EACLlG,KAAO,GAEFkG,EAAIlG,GAIfkb,EAAGt0B,UAAUssD,UAAY,SAAoBpC,GAE3C,GAAU,IAANA,EAAS,OAAO,GAEpB,IAAI9wC,EAAI8wC,EACJ5qC,EAAI,EAoBR,OAnBqB,KAAZ,KAAJlG,KACHkG,GAAK,GACLlG,KAAO,IAEU,KAAV,IAAJA,KACHkG,GAAK,EACLlG,KAAO,GAES,KAAT,GAAJA,KACHkG,GAAK,EACLlG,KAAO,GAES,KAAT,EAAJA,KACHkG,GAAK,EACLlG,KAAO,GAES,KAAT,EAAJA,IACHkG,IAEKA,GAITgV,EAAGt0B,UAAUusD,UAAY,WACvB,IAAIrC,EAAIxqD,KAAKspD,MAAMtpD,KAAKlC,OAAS,GAC7BgvD,EAAK9sD,KAAK2sD,WAAWnC,GACzB,OAA2B,IAAnBxqD,KAAKlC,OAAS,GAAUgvD,GAiBlCl4B,EAAGt0B,UAAUysD,SAAW,WACtB,GAAI/sD,KAAK2rD,SAAU,OAAO,EAG1B,IADA,IAAI/rC,EAAI,EACC5hB,EAAI,EAAGA,EAAIgC,KAAKlC,OAAQE,IAAK,CACpC,IAAIgR,EAAIhP,KAAK4sD,UAAU5sD,KAAKspD,MAAMtrD,IAElC,GADA4hB,GAAK5Q,EACK,KAANA,EAAU,MAEhB,OAAO4Q,GAGTgV,EAAGt0B,UAAUnD,WAAa,WACxB,OAAOE,KAAK6lC,KAAKljC,KAAK6sD,YAAc,IAGtCj4B,EAAGt0B,UAAU0sD,OAAS,SAAiBC,GACrC,OAAsB,IAAlBjtD,KAAKqpD,SACArpD,KAAKgd,MAAMkwC,MAAMD,GAAOE,MAAM,GAEhCntD,KAAKgrD,SAGdp2B,EAAGt0B,UAAU8sD,SAAW,SAAmBH,GACzC,OAAIjtD,KAAKqtD,MAAMJ,EAAQ,GACdjtD,KAAKstD,KAAKL,GAAOE,MAAM,GAAGI,OAE5BvtD,KAAKgrD,SAGdp2B,EAAGt0B,UAAUktD,MAAQ,WACnB,OAAyB,IAAlBxtD,KAAKqpD,UAIdz0B,EAAGt0B,UAAUmtD,IAAM,WACjB,OAAOztD,KAAKgrD,QAAQuC,QAGtB34B,EAAGt0B,UAAUitD,KAAO,WAKlB,OAJKvtD,KAAK2rD,WACR3rD,KAAKqpD,UAAY,GAGZrpD,MAIT40B,EAAGt0B,UAAUotD,KAAO,SAAe3vC,GACjC,KAAO/d,KAAKlC,OAASigB,EAAIjgB,QACvBkC,KAAKspD,MAAMtpD,KAAKlC,UAAY,EAG9B,IAAK,IAAIE,EAAI,EAAGA,EAAI+f,EAAIjgB,OAAQE,IAC9BgC,KAAKspD,MAAMtrD,GAAKgC,KAAKspD,MAAMtrD,GAAK+f,EAAIurC,MAAMtrD,GAG5C,OAAOgC,KAAK0qD,UAGd91B,EAAGt0B,UAAUqtD,IAAM,SAAc5vC,GAE/B,OADAxO,EAA0C,KAAlCvP,KAAKqpD,SAAWtrC,EAAIsrC,WACrBrpD,KAAK0tD,KAAK3vC,IAInB6W,EAAGt0B,UAAUstD,GAAK,SAAa7vC,GAC7B,OAAI/d,KAAKlC,OAASigB,EAAIjgB,OAAekC,KAAKgrD,QAAQ2C,IAAI5vC,GAC/CA,EAAIitC,QAAQ2C,IAAI3tD,OAGzB40B,EAAGt0B,UAAUutD,IAAM,SAAc9vC,GAC/B,OAAI/d,KAAKlC,OAASigB,EAAIjgB,OAAekC,KAAKgrD,QAAQ0C,KAAK3vC,GAChDA,EAAIitC,QAAQ0C,KAAK1tD,OAI1B40B,EAAGt0B,UAAUwtD,MAAQ,SAAgB/vC,GAEnC,IAAI/O,EAEFA,EADEhP,KAAKlC,OAASigB,EAAIjgB,OAChBigB,EAEA/d,KAGN,IAAK,IAAIhC,EAAI,EAAGA,EAAIgR,EAAElR,OAAQE,IAC5BgC,KAAKspD,MAAMtrD,GAAKgC,KAAKspD,MAAMtrD,GAAK+f,EAAIurC,MAAMtrD,GAK5C,OAFAgC,KAAKlC,OAASkR,EAAElR,OAETkC,KAAK0qD,UAGd91B,EAAGt0B,UAAUytD,KAAO,SAAehwC,GAEjC,OADAxO,EAA0C,KAAlCvP,KAAKqpD,SAAWtrC,EAAIsrC,WACrBrpD,KAAK8tD,MAAM/vC,IAIpB6W,EAAGt0B,UAAU0tD,IAAM,SAAcjwC,GAC/B,OAAI/d,KAAKlC,OAASigB,EAAIjgB,OAAekC,KAAKgrD,QAAQ+C,KAAKhwC,GAChDA,EAAIitC,QAAQ+C,KAAK/tD,OAG1B40B,EAAGt0B,UAAU2tD,KAAO,SAAelwC,GACjC,OAAI/d,KAAKlC,OAASigB,EAAIjgB,OAAekC,KAAKgrD,QAAQ8C,MAAM/vC,GACjDA,EAAIitC,QAAQ8C,MAAM9tD,OAI3B40B,EAAGt0B,UAAU4tD,MAAQ,SAAgBnwC,GAEnC,IAAIpe,EACAqP,EACAhP,KAAKlC,OAASigB,EAAIjgB,QACpB6B,EAAIK,KACJgP,EAAI+O,IAEJpe,EAAIoe,EACJ/O,EAAIhP,MAGN,IAAK,IAAIhC,EAAI,EAAGA,EAAIgR,EAAElR,OAAQE,IAC5BgC,KAAKspD,MAAMtrD,GAAK2B,EAAE2pD,MAAMtrD,GAAKgR,EAAEs6C,MAAMtrD,GAGvC,GAAIgC,OAASL,EACX,KAAO3B,EAAI2B,EAAE7B,OAAQE,IACnBgC,KAAKspD,MAAMtrD,GAAK2B,EAAE2pD,MAAMtrD,GAM5B,OAFAgC,KAAKlC,OAAS6B,EAAE7B,OAETkC,KAAK0qD,UAGd91B,EAAGt0B,UAAU6tD,KAAO,SAAepwC,GAEjC,OADAxO,EAA0C,KAAlCvP,KAAKqpD,SAAWtrC,EAAIsrC,WACrBrpD,KAAKkuD,MAAMnwC,IAIpB6W,EAAGt0B,UAAU8tD,IAAM,SAAcrwC,GAC/B,OAAI/d,KAAKlC,OAASigB,EAAIjgB,OAAekC,KAAKgrD,QAAQmD,KAAKpwC,GAChDA,EAAIitC,QAAQmD,KAAKnuD,OAG1B40B,EAAGt0B,UAAU+tD,KAAO,SAAetwC,GACjC,OAAI/d,KAAKlC,OAASigB,EAAIjgB,OAAekC,KAAKgrD,QAAQkD,MAAMnwC,GACjDA,EAAIitC,QAAQkD,MAAMluD,OAI3B40B,EAAGt0B,UAAU4sD,MAAQ,SAAgBD,GACnC19C,EAAwB,kBAAV09C,GAAsBA,GAAS,GAE7C,IAAIqB,EAAsC,EAAxBjxD,KAAK6lC,KAAK+pB,EAAQ,IAChCsB,EAAWtB,EAAQ,GAGvBjtD,KAAKirD,QAAQqD,GAETC,EAAW,GACbD,IAIF,IAAK,IAAItwD,EAAI,EAAGA,EAAIswD,EAAatwD,IAC/BgC,KAAKspD,MAAMtrD,GAAsB,UAAhBgC,KAAKspD,MAAMtrD,GAS9B,OALIuwD,EAAW,IACbvuD,KAAKspD,MAAMtrD,IAAMgC,KAAKspD,MAAMtrD,GAAM,UAAc,GAAKuwD,GAIhDvuD,KAAK0qD,UAGd91B,EAAGt0B,UAAUgtD,KAAO,SAAeL,GACjC,OAAOjtD,KAAKgrD,QAAQkC,MAAMD,IAI5Br4B,EAAGt0B,UAAUkuD,KAAO,SAAeC,EAAK3nC,GACtCvX,EAAsB,kBAARk/C,GAAoBA,GAAO,GAEzC,IAAIhE,EAAOgE,EAAM,GAAM,EACnBC,EAAOD,EAAM,GAUjB,OARAzuD,KAAKirD,QAAQR,EAAM,GAGjBzqD,KAAKspD,MAAMmB,GADT3jC,EACgB9mB,KAAKspD,MAAMmB,GAAQ,GAAKiE,EAExB1uD,KAAKspD,MAAMmB,KAAS,GAAKiE,GAGtC1uD,KAAK0qD,UAId91B,EAAGt0B,UAAUquD,KAAO,SAAe5wC,GACjC,IAAI6B,EAkBAjgB,EAAGqP,EAfP,GAAsB,IAAlBhP,KAAKqpD,UAAmC,IAAjBtrC,EAAIsrC,SAI7B,OAHArpD,KAAKqpD,SAAW,EAChBzpC,EAAI5f,KAAK4uD,KAAK7wC,GACd/d,KAAKqpD,UAAY,EACVrpD,KAAKkrD,YAGP,GAAsB,IAAlBlrD,KAAKqpD,UAAmC,IAAjBtrC,EAAIsrC,SAIpC,OAHAtrC,EAAIsrC,SAAW,EACfzpC,EAAI5f,KAAK4uD,KAAK7wC,GACdA,EAAIsrC,SAAW,EACRzpC,EAAEsrC,YAKPlrD,KAAKlC,OAASigB,EAAIjgB,QACpB6B,EAAIK,KACJgP,EAAI+O,IAEJpe,EAAIoe,EACJ/O,EAAIhP,MAIN,IADA,IAAIwrD,EAAQ,EACHxtD,EAAI,EAAGA,EAAIgR,EAAElR,OAAQE,IAC5B4hB,GAAkB,EAAbjgB,EAAE2pD,MAAMtrD,KAAwB,EAAbgR,EAAEs6C,MAAMtrD,IAAUwtD,EAC1CxrD,KAAKspD,MAAMtrD,GAAS,SAAJ4hB,EAChB4rC,EAAQ5rC,IAAM,GAEhB,KAAiB,IAAV4rC,GAAextD,EAAI2B,EAAE7B,OAAQE,IAClC4hB,GAAkB,EAAbjgB,EAAE2pD,MAAMtrD,IAAUwtD,EACvBxrD,KAAKspD,MAAMtrD,GAAS,SAAJ4hB,EAChB4rC,EAAQ5rC,IAAM,GAIhB,GADA5f,KAAKlC,OAAS6B,EAAE7B,OACF,IAAV0tD,EACFxrD,KAAKspD,MAAMtpD,KAAKlC,QAAU0tD,EAC1BxrD,KAAKlC,cAEA,GAAI6B,IAAMK,KACf,KAAOhC,EAAI2B,EAAE7B,OAAQE,IACnBgC,KAAKspD,MAAMtrD,GAAK2B,EAAE2pD,MAAMtrD,GAI5B,OAAOgC,MAIT40B,EAAGt0B,UAAUgb,IAAM,SAAcyC,GAC/B,IAAIhc,EACJ,OAAqB,IAAjBgc,EAAIsrC,UAAoC,IAAlBrpD,KAAKqpD,UAC7BtrC,EAAIsrC,SAAW,EACftnD,EAAM/B,KAAK6uD,IAAI9wC,GACfA,EAAIsrC,UAAY,EACTtnD,GACmB,IAAjBgc,EAAIsrC,UAAoC,IAAlBrpD,KAAKqpD,UACpCrpD,KAAKqpD,SAAW,EAChBtnD,EAAMgc,EAAI8wC,IAAI7uD,MACdA,KAAKqpD,SAAW,EACTtnD,GAGL/B,KAAKlC,OAASigB,EAAIjgB,OAAekC,KAAKgrD,QAAQ2D,KAAK5wC,GAEhDA,EAAIitC,QAAQ2D,KAAK3uD,OAI1B40B,EAAGt0B,UAAUsuD,KAAO,SAAe7wC,GAEjC,GAAqB,IAAjBA,EAAIsrC,SAAgB,CACtBtrC,EAAIsrC,SAAW,EACf,IAAIzpC,EAAI5f,KAAK2uD,KAAK5wC,GAElB,OADAA,EAAIsrC,SAAW,EACRzpC,EAAEsrC,YAGJ,GAAsB,IAAlBlrD,KAAKqpD,SAId,OAHArpD,KAAKqpD,SAAW,EAChBrpD,KAAK2uD,KAAK5wC,GACV/d,KAAKqpD,SAAW,EACTrpD,KAAKkrD,YAId,IAWIvrD,EAAGqP,EAXHi7C,EAAMjqD,KAAKiqD,IAAIlsC,GAGnB,GAAY,IAARksC,EAIF,OAHAjqD,KAAKqpD,SAAW,EAChBrpD,KAAKlC,OAAS,EACdkC,KAAKspD,MAAM,GAAK,EACTtpD,KAKLiqD,EAAM,GACRtqD,EAAIK,KACJgP,EAAI+O,IAEJpe,EAAIoe,EACJ/O,EAAIhP,MAIN,IADA,IAAIwrD,EAAQ,EACHxtD,EAAI,EAAGA,EAAIgR,EAAElR,OAAQE,IAE5BwtD,GADA5rC,GAAkB,EAAbjgB,EAAE2pD,MAAMtrD,KAAwB,EAAbgR,EAAEs6C,MAAMtrD,IAAUwtD,IAC7B,GACbxrD,KAAKspD,MAAMtrD,GAAS,SAAJ4hB,EAElB,KAAiB,IAAV4rC,GAAextD,EAAI2B,EAAE7B,OAAQE,IAElCwtD,GADA5rC,GAAkB,EAAbjgB,EAAE2pD,MAAMtrD,IAAUwtD,IACV,GACbxrD,KAAKspD,MAAMtrD,GAAS,SAAJ4hB,EAIlB,GAAc,IAAV4rC,GAAextD,EAAI2B,EAAE7B,QAAU6B,IAAMK,KACvC,KAAOhC,EAAI2B,EAAE7B,OAAQE,IACnBgC,KAAKspD,MAAMtrD,GAAK2B,EAAE2pD,MAAMtrD,GAU5B,OANAgC,KAAKlC,OAAST,KAAKsnB,IAAI3kB,KAAKlC,OAAQE,GAEhC2B,IAAMK,OACRA,KAAKqpD,SAAW,GAGXrpD,KAAK0qD,UAId91B,EAAGt0B,UAAUuuD,IAAM,SAAc9wC,GAC/B,OAAO/d,KAAKgrD,QAAQ4D,KAAK7wC,IA+C3B,IAAI+wC,EAAc,SAAsB1oC,EAAMrI,EAAKrQ,GACjD,IAII0C,EACA2+C,EACAjC,EANAntD,EAAIymB,EAAKkjC,MACTt6C,EAAI+O,EAAIurC,MACR0F,EAAIthD,EAAI47C,MACRxpC,EAAI,EAIJmvC,EAAY,EAAPtvD,EAAE,GACPuvD,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbt+B,EAAY,EAAPhxB,EAAE,GACPyvD,EAAW,KAALz+B,EACN0+B,EAAM1+B,IAAO,GACbC,EAAY,EAAPjxB,EAAE,GACP2vD,EAAW,KAAL1+B,EACN2+B,EAAM3+B,IAAO,GACb4+B,EAAY,EAAP7vD,EAAE,GACP8vD,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPhwD,EAAE,GACPiwD,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPnwD,EAAE,GACPowD,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPtwD,EAAE,GACPuwD,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPzwD,EAAE,GACP0wD,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP5wD,EAAE,GACP6wD,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP/wD,EAAE,GACPgxD,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP7hD,EAAE,GACP8hD,EAAW,KAALD,EACNE,EAAMF,IAAO,GACb5vC,EAAY,EAAPjS,EAAE,GACPgiD,EAAW,KAAL/vC,EACNgwC,EAAMhwC,IAAO,GACbC,EAAY,EAAPlS,EAAE,GACPkiD,EAAW,KAALhwC,EACNiwC,EAAMjwC,IAAO,GACb4M,EAAY,EAAP9e,EAAE,GACPoiD,EAAW,KAALtjC,EACNujC,EAAMvjC,IAAO,GACbvK,EAAY,EAAPvU,EAAE,GACPsiD,EAAW,KAAL/tC,EACNguC,GAAMhuC,IAAO,GACbC,GAAY,EAAPxU,EAAE,GACPwiD,GAAW,KAALhuC,GACNiuC,GAAMjuC,KAAO,GACbuK,GAAY,EAAP/e,EAAE,GACP0iD,GAAW,KAAL3jC,GACN4jC,GAAM5jC,KAAO,GACb6jC,GAAY,EAAP5iD,EAAE,GACP6iD,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAP/iD,EAAE,GACPgjD,GAAW,KAALD,GACNE,GAAMF,KAAO,GACb/jC,GAAY,EAAPhf,EAAE,GACPkjD,GAAW,KAALlkC,GACNmkC,GAAMnkC,KAAO,GAEjBtgB,EAAI27C,SAAWjjC,EAAKijC,SAAWtrC,EAAIsrC,SACnC37C,EAAI5P,OAAS,GAMb,IAAIs0D,IAAQtyC,GAJZ1P,EAAK/S,KAAKg1D,KAAKnD,EAAK4B,IAIE,KAAa,MAFnC/B,GADAA,EAAM1xD,KAAKg1D,KAAKnD,EAAK6B,IACR1zD,KAAKg1D,KAAKlD,EAAK2B,GAAQ,KAEU,IAAO,EACrDhxC,IAFAgtC,EAAKzvD,KAAKg1D,KAAKlD,EAAK4B,KAEPhC,IAAQ,IAAO,IAAMqD,KAAO,IAAO,EAChDA,IAAM,SAENhiD,EAAK/S,KAAKg1D,KAAKjD,EAAK0B,GAEpB/B,GADAA,EAAM1xD,KAAKg1D,KAAKjD,EAAK2B,IACR1zD,KAAKg1D,KAAKhD,EAAKyB,GAAQ,EACpChE,EAAKzvD,KAAKg1D,KAAKhD,EAAK0B,GAKpB,IAAIuB,IAAQxyC,GAJZ1P,EAAMA,EAAK/S,KAAKg1D,KAAKnD,EAAK8B,GAAQ,GAIZ,KAAa,MAFnCjC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKnD,EAAK+B,GAAQ,GACvB5zD,KAAKg1D,KAAKlD,EAAK6B,GAAQ,KAEU,IAAO,EACrDlxC,IAFAgtC,EAAMA,EAAKzvD,KAAKg1D,KAAKlD,EAAK8B,GAAQ,IAErBlC,IAAQ,IAAO,IAAMuD,KAAO,IAAO,EAChDA,IAAM,SAENliD,EAAK/S,KAAKg1D,KAAK/C,EAAKwB,GAEpB/B,GADAA,EAAM1xD,KAAKg1D,KAAK/C,EAAKyB,IACR1zD,KAAKg1D,KAAK9C,EAAKuB,GAAQ,EACpChE,EAAKzvD,KAAKg1D,KAAK9C,EAAKwB,GACpB3gD,EAAMA,EAAK/S,KAAKg1D,KAAKjD,EAAK4B,GAAQ,EAElCjC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKjD,EAAK6B,GAAQ,GACvB5zD,KAAKg1D,KAAKhD,EAAK2B,GAAQ,EACpClE,EAAMA,EAAKzvD,KAAKg1D,KAAKhD,EAAK4B,GAAQ,EAKlC,IAAIsB,IAAQzyC,GAJZ1P,EAAMA,EAAK/S,KAAKg1D,KAAKnD,EAAKgC,GAAQ,GAIZ,KAAa,MAFnCnC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKnD,EAAKiC,GAAQ,GACvB9zD,KAAKg1D,KAAKlD,EAAK+B,GAAQ,KAEU,IAAO,EACrDpxC,IAFAgtC,EAAMA,EAAKzvD,KAAKg1D,KAAKlD,EAAKgC,GAAQ,IAErBpC,IAAQ,IAAO,IAAMwD,KAAO,IAAO,EAChDA,IAAM,SAENniD,EAAK/S,KAAKg1D,KAAK5C,EAAKqB,GAEpB/B,GADAA,EAAM1xD,KAAKg1D,KAAK5C,EAAKsB,IACR1zD,KAAKg1D,KAAK3C,EAAKoB,GAAQ,EACpChE,EAAKzvD,KAAKg1D,KAAK3C,EAAKqB,GACpB3gD,EAAMA,EAAK/S,KAAKg1D,KAAK/C,EAAK0B,GAAQ,EAElCjC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAK/C,EAAK2B,GAAQ,GACvB5zD,KAAKg1D,KAAK9C,EAAKyB,GAAQ,EACpClE,EAAMA,EAAKzvD,KAAKg1D,KAAK9C,EAAK0B,GAAQ,EAClC7gD,EAAMA,EAAK/S,KAAKg1D,KAAKjD,EAAK8B,GAAQ,EAElCnC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKjD,EAAK+B,GAAQ,GACvB9zD,KAAKg1D,KAAKhD,EAAK6B,GAAQ,EACpCpE,EAAMA,EAAKzvD,KAAKg1D,KAAKhD,EAAK8B,GAAQ,EAKlC,IAAIqB,IAAQ1yC,GAJZ1P,EAAMA,EAAK/S,KAAKg1D,KAAKnD,EAAKkC,GAAQ,GAIZ,KAAa,MAFnCrC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKnD,EAAKmC,GAAQ,GACvBh0D,KAAKg1D,KAAKlD,EAAKiC,GAAQ,KAEU,IAAO,EACrDtxC,IAFAgtC,EAAMA,EAAKzvD,KAAKg1D,KAAKlD,EAAKkC,GAAQ,IAErBtC,IAAQ,IAAO,IAAMyD,KAAO,IAAO,EAChDA,IAAM,SAENpiD,EAAK/S,KAAKg1D,KAAKzC,EAAKkB,GAEpB/B,GADAA,EAAM1xD,KAAKg1D,KAAKzC,EAAKmB,IACR1zD,KAAKg1D,KAAKxC,EAAKiB,GAAQ,EACpChE,EAAKzvD,KAAKg1D,KAAKxC,EAAKkB,GACpB3gD,EAAMA,EAAK/S,KAAKg1D,KAAK5C,EAAKuB,GAAQ,EAElCjC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAK5C,EAAKwB,GAAQ,GACvB5zD,KAAKg1D,KAAK3C,EAAKsB,GAAQ,EACpClE,EAAMA,EAAKzvD,KAAKg1D,KAAK3C,EAAKuB,GAAQ,EAClC7gD,EAAMA,EAAK/S,KAAKg1D,KAAK/C,EAAK4B,GAAQ,EAElCnC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAK/C,EAAK6B,GAAQ,GACvB9zD,KAAKg1D,KAAK9C,EAAK2B,GAAQ,EACpCpE,EAAMA,EAAKzvD,KAAKg1D,KAAK9C,EAAK4B,GAAQ,EAClC/gD,EAAMA,EAAK/S,KAAKg1D,KAAKjD,EAAKgC,GAAQ,EAElCrC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKjD,EAAKiC,GAAQ,GACvBh0D,KAAKg1D,KAAKhD,EAAK+B,GAAQ,EACpCtE,EAAMA,EAAKzvD,KAAKg1D,KAAKhD,EAAKgC,GAAQ,EAKlC,IAAIoB,IAAQ3yC,GAJZ1P,EAAMA,EAAK/S,KAAKg1D,KAAKnD,EAAKoC,GAAQ,GAIZ,KAAa,MAFnCvC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKnD,EAAKqC,IAAQ,GACvBl0D,KAAKg1D,KAAKlD,EAAKmC,GAAQ,KAEU,IAAO,EACrDxxC,IAFAgtC,EAAMA,EAAKzvD,KAAKg1D,KAAKlD,EAAKoC,IAAQ,IAErBxC,IAAQ,IAAO,IAAM0D,KAAO,IAAO,EAChDA,IAAM,SAENriD,EAAK/S,KAAKg1D,KAAKtC,EAAKe,GAEpB/B,GADAA,EAAM1xD,KAAKg1D,KAAKtC,EAAKgB,IACR1zD,KAAKg1D,KAAKrC,EAAKc,GAAQ,EACpChE,EAAKzvD,KAAKg1D,KAAKrC,EAAKe,GACpB3gD,EAAMA,EAAK/S,KAAKg1D,KAAKzC,EAAKoB,GAAQ,EAElCjC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKzC,EAAKqB,GAAQ,GACvB5zD,KAAKg1D,KAAKxC,EAAKmB,GAAQ,EACpClE,EAAMA,EAAKzvD,KAAKg1D,KAAKxC,EAAKoB,GAAQ,EAClC7gD,EAAMA,EAAK/S,KAAKg1D,KAAK5C,EAAKyB,GAAQ,EAElCnC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAK5C,EAAK0B,GAAQ,GACvB9zD,KAAKg1D,KAAK3C,EAAKwB,GAAQ,EACpCpE,EAAMA,EAAKzvD,KAAKg1D,KAAK3C,EAAKyB,GAAQ,EAClC/gD,EAAMA,EAAK/S,KAAKg1D,KAAK/C,EAAK8B,GAAQ,EAElCrC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAK/C,EAAK+B,GAAQ,GACvBh0D,KAAKg1D,KAAK9C,EAAK6B,GAAQ,EACpCtE,EAAMA,EAAKzvD,KAAKg1D,KAAK9C,EAAK8B,GAAQ,EAClCjhD,EAAMA,EAAK/S,KAAKg1D,KAAKjD,EAAKkC,GAAQ,EAElCvC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKjD,EAAKmC,IAAQ,GACvBl0D,KAAKg1D,KAAKhD,EAAKiC,GAAQ,EACpCxE,EAAMA,EAAKzvD,KAAKg1D,KAAKhD,EAAKkC,IAAQ,EAKlC,IAAImB,IAAQ5yC,GAJZ1P,EAAMA,EAAK/S,KAAKg1D,KAAKnD,EAAKsC,IAAQ,GAIZ,KAAa,MAFnCzC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKnD,EAAKuC,IAAQ,GACvBp0D,KAAKg1D,KAAKlD,EAAKqC,IAAQ,KAEU,IAAO,EACrD1xC,IAFAgtC,EAAMA,EAAKzvD,KAAKg1D,KAAKlD,EAAKsC,IAAQ,IAErB1C,IAAQ,IAAO,IAAM2D,KAAO,IAAO,EAChDA,IAAM,SAENtiD,EAAK/S,KAAKg1D,KAAKnC,EAAKY,GAEpB/B,GADAA,EAAM1xD,KAAKg1D,KAAKnC,EAAKa,IACR1zD,KAAKg1D,KAAKlC,EAAKW,GAAQ,EACpChE,EAAKzvD,KAAKg1D,KAAKlC,EAAKY,GACpB3gD,EAAMA,EAAK/S,KAAKg1D,KAAKtC,EAAKiB,GAAQ,EAElCjC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKtC,EAAKkB,GAAQ,GACvB5zD,KAAKg1D,KAAKrC,EAAKgB,GAAQ,EACpClE,EAAMA,EAAKzvD,KAAKg1D,KAAKrC,EAAKiB,GAAQ,EAClC7gD,EAAMA,EAAK/S,KAAKg1D,KAAKzC,EAAKsB,GAAQ,EAElCnC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKzC,EAAKuB,GAAQ,GACvB9zD,KAAKg1D,KAAKxC,EAAKqB,GAAQ,EACpCpE,EAAMA,EAAKzvD,KAAKg1D,KAAKxC,EAAKsB,GAAQ,EAClC/gD,EAAMA,EAAK/S,KAAKg1D,KAAK5C,EAAK2B,GAAQ,EAElCrC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAK5C,EAAK4B,GAAQ,GACvBh0D,KAAKg1D,KAAK3C,EAAK0B,GAAQ,EACpCtE,EAAMA,EAAKzvD,KAAKg1D,KAAK3C,EAAK2B,GAAQ,EAClCjhD,EAAMA,EAAK/S,KAAKg1D,KAAK/C,EAAKgC,GAAQ,EAElCvC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAK/C,EAAKiC,IAAQ,GACvBl0D,KAAKg1D,KAAK9C,EAAK+B,GAAQ,EACpCxE,EAAMA,EAAKzvD,KAAKg1D,KAAK9C,EAAKgC,IAAQ,EAClCnhD,EAAMA,EAAK/S,KAAKg1D,KAAKjD,EAAKoC,IAAQ,EAElCzC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKjD,EAAKqC,IAAQ,GACvBp0D,KAAKg1D,KAAKhD,EAAKmC,IAAQ,EACpC1E,EAAMA,EAAKzvD,KAAKg1D,KAAKhD,EAAKoC,IAAQ,EAKlC,IAAIkB,IAAQ7yC,GAJZ1P,EAAMA,EAAK/S,KAAKg1D,KAAKnD,EAAKwC,IAAQ,GAIZ,KAAa,MAFnC3C,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKnD,EAAKyC,IAAQ,GACvBt0D,KAAKg1D,KAAKlD,EAAKuC,IAAQ,KAEU,IAAO,EACrD5xC,IAFAgtC,EAAMA,EAAKzvD,KAAKg1D,KAAKlD,EAAKwC,IAAQ,IAErB5C,IAAQ,IAAO,IAAM4D,KAAO,IAAO,EAChDA,IAAM,SAENviD,EAAK/S,KAAKg1D,KAAKhC,EAAKS,GAEpB/B,GADAA,EAAM1xD,KAAKg1D,KAAKhC,EAAKU,IACR1zD,KAAKg1D,KAAK/B,EAAKQ,GAAQ,EACpChE,EAAKzvD,KAAKg1D,KAAK/B,EAAKS,GACpB3gD,EAAMA,EAAK/S,KAAKg1D,KAAKnC,EAAKc,GAAQ,EAElCjC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKnC,EAAKe,GAAQ,GACvB5zD,KAAKg1D,KAAKlC,EAAKa,GAAQ,EACpClE,EAAMA,EAAKzvD,KAAKg1D,KAAKlC,EAAKc,GAAQ,EAClC7gD,EAAMA,EAAK/S,KAAKg1D,KAAKtC,EAAKmB,GAAQ,EAElCnC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKtC,EAAKoB,GAAQ,GACvB9zD,KAAKg1D,KAAKrC,EAAKkB,GAAQ,EACpCpE,EAAMA,EAAKzvD,KAAKg1D,KAAKrC,EAAKmB,GAAQ,EAClC/gD,EAAMA,EAAK/S,KAAKg1D,KAAKzC,EAAKwB,GAAQ,EAElCrC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKzC,EAAKyB,GAAQ,GACvBh0D,KAAKg1D,KAAKxC,EAAKuB,GAAQ,EACpCtE,EAAMA,EAAKzvD,KAAKg1D,KAAKxC,EAAKwB,GAAQ,EAClCjhD,EAAMA,EAAK/S,KAAKg1D,KAAK5C,EAAK6B,GAAQ,EAElCvC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAK5C,EAAK8B,IAAQ,GACvBl0D,KAAKg1D,KAAK3C,EAAK4B,GAAQ,EACpCxE,EAAMA,EAAKzvD,KAAKg1D,KAAK3C,EAAK6B,IAAQ,EAClCnhD,EAAMA,EAAK/S,KAAKg1D,KAAK/C,EAAKkC,IAAQ,EAElCzC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAK/C,EAAKmC,IAAQ,GACvBp0D,KAAKg1D,KAAK9C,EAAKiC,IAAQ,EACpC1E,EAAMA,EAAKzvD,KAAKg1D,KAAK9C,EAAKkC,IAAQ,EAClCrhD,EAAMA,EAAK/S,KAAKg1D,KAAKjD,EAAKsC,IAAQ,EAElC3C,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKjD,EAAKuC,IAAQ,GACvBt0D,KAAKg1D,KAAKhD,EAAKqC,IAAQ,EACpC5E,EAAMA,EAAKzvD,KAAKg1D,KAAKhD,EAAKsC,IAAQ,EAKlC,IAAIiB,IAAQ9yC,GAJZ1P,EAAMA,EAAK/S,KAAKg1D,KAAKnD,EAAK2C,IAAQ,GAIZ,KAAa,MAFnC9C,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKnD,EAAK4C,IAAQ,GACvBz0D,KAAKg1D,KAAKlD,EAAK0C,IAAQ,KAEU,IAAO,EACrD/xC,IAFAgtC,EAAMA,EAAKzvD,KAAKg1D,KAAKlD,EAAK2C,IAAQ,IAErB/C,IAAQ,IAAO,IAAM6D,KAAO,IAAO,EAChDA,IAAM,SAENxiD,EAAK/S,KAAKg1D,KAAK7B,EAAKM,GAEpB/B,GADAA,EAAM1xD,KAAKg1D,KAAK7B,EAAKO,IACR1zD,KAAKg1D,KAAK5B,EAAKK,GAAQ,EACpChE,EAAKzvD,KAAKg1D,KAAK5B,EAAKM,GACpB3gD,EAAMA,EAAK/S,KAAKg1D,KAAKhC,EAAKW,GAAQ,EAElCjC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKhC,EAAKY,GAAQ,GACvB5zD,KAAKg1D,KAAK/B,EAAKU,GAAQ,EACpClE,EAAMA,EAAKzvD,KAAKg1D,KAAK/B,EAAKW,GAAQ,EAClC7gD,EAAMA,EAAK/S,KAAKg1D,KAAKnC,EAAKgB,GAAQ,EAElCnC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKnC,EAAKiB,GAAQ,GACvB9zD,KAAKg1D,KAAKlC,EAAKe,GAAQ,EACpCpE,EAAMA,EAAKzvD,KAAKg1D,KAAKlC,EAAKgB,GAAQ,EAClC/gD,EAAMA,EAAK/S,KAAKg1D,KAAKtC,EAAKqB,GAAQ,EAElCrC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKtC,EAAKsB,GAAQ,GACvBh0D,KAAKg1D,KAAKrC,EAAKoB,GAAQ,EACpCtE,EAAMA,EAAKzvD,KAAKg1D,KAAKrC,EAAKqB,GAAQ,EAClCjhD,EAAMA,EAAK/S,KAAKg1D,KAAKzC,EAAK0B,GAAQ,EAElCvC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKzC,EAAK2B,IAAQ,GACvBl0D,KAAKg1D,KAAKxC,EAAKyB,GAAQ,EACpCxE,EAAMA,EAAKzvD,KAAKg1D,KAAKxC,EAAK0B,IAAQ,EAClCnhD,EAAMA,EAAK/S,KAAKg1D,KAAK5C,EAAK+B,IAAQ,EAElCzC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAK5C,EAAKgC,IAAQ,GACvBp0D,KAAKg1D,KAAK3C,EAAK8B,IAAQ,EACpC1E,EAAMA,EAAKzvD,KAAKg1D,KAAK3C,EAAK+B,IAAQ,EAClCrhD,EAAMA,EAAK/S,KAAKg1D,KAAK/C,EAAKoC,IAAQ,EAElC3C,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAK/C,EAAKqC,IAAQ,GACvBt0D,KAAKg1D,KAAK9C,EAAKmC,IAAQ,EACpC5E,EAAMA,EAAKzvD,KAAKg1D,KAAK9C,EAAKoC,IAAQ,EAClCvhD,EAAMA,EAAK/S,KAAKg1D,KAAKjD,EAAKyC,IAAQ,EAElC9C,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKjD,EAAK0C,IAAQ,GACvBz0D,KAAKg1D,KAAKhD,EAAKwC,IAAQ,EACpC/E,EAAMA,EAAKzvD,KAAKg1D,KAAKhD,EAAKyC,IAAQ,EAKlC,IAAIe,IAAQ/yC,GAJZ1P,EAAMA,EAAK/S,KAAKg1D,KAAKnD,EAAK8C,IAAQ,GAIZ,KAAa,MAFnCjD,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKnD,EAAK+C,IAAQ,GACvB50D,KAAKg1D,KAAKlD,EAAK6C,IAAQ,KAEU,IAAO,EACrDlyC,IAFAgtC,EAAMA,EAAKzvD,KAAKg1D,KAAKlD,EAAK8C,IAAQ,IAErBlD,IAAQ,IAAO,IAAM8D,KAAO,IAAO,EAChDA,IAAM,SAENziD,EAAK/S,KAAKg1D,KAAK1B,EAAKG,GAEpB/B,GADAA,EAAM1xD,KAAKg1D,KAAK1B,EAAKI,IACR1zD,KAAKg1D,KAAKzB,EAAKE,GAAQ,EACpChE,EAAKzvD,KAAKg1D,KAAKzB,EAAKG,GACpB3gD,EAAMA,EAAK/S,KAAKg1D,KAAK7B,EAAKQ,GAAQ,EAElCjC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAK7B,EAAKS,GAAQ,GACvB5zD,KAAKg1D,KAAK5B,EAAKO,GAAQ,EACpClE,EAAMA,EAAKzvD,KAAKg1D,KAAK5B,EAAKQ,GAAQ,EAClC7gD,EAAMA,EAAK/S,KAAKg1D,KAAKhC,EAAKa,GAAQ,EAElCnC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKhC,EAAKc,GAAQ,GACvB9zD,KAAKg1D,KAAK/B,EAAKY,GAAQ,EACpCpE,EAAMA,EAAKzvD,KAAKg1D,KAAK/B,EAAKa,GAAQ,EAClC/gD,EAAMA,EAAK/S,KAAKg1D,KAAKnC,EAAKkB,GAAQ,EAElCrC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKnC,EAAKmB,GAAQ,GACvBh0D,KAAKg1D,KAAKlC,EAAKiB,GAAQ,EACpCtE,EAAMA,EAAKzvD,KAAKg1D,KAAKlC,EAAKkB,GAAQ,EAClCjhD,EAAMA,EAAK/S,KAAKg1D,KAAKtC,EAAKuB,GAAQ,EAElCvC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKtC,EAAKwB,IAAQ,GACvBl0D,KAAKg1D,KAAKrC,EAAKsB,GAAQ,EACpCxE,EAAMA,EAAKzvD,KAAKg1D,KAAKrC,EAAKuB,IAAQ,EAClCnhD,EAAMA,EAAK/S,KAAKg1D,KAAKzC,EAAK4B,IAAQ,EAElCzC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKzC,EAAK6B,IAAQ,GACvBp0D,KAAKg1D,KAAKxC,EAAK2B,IAAQ,EACpC1E,EAAMA,EAAKzvD,KAAKg1D,KAAKxC,EAAK4B,IAAQ,EAClCrhD,EAAMA,EAAK/S,KAAKg1D,KAAK5C,EAAKiC,IAAQ,EAElC3C,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAK5C,EAAKkC,IAAQ,GACvBt0D,KAAKg1D,KAAK3C,EAAKgC,IAAQ,EACpC5E,EAAMA,EAAKzvD,KAAKg1D,KAAK3C,EAAKiC,IAAQ,EAClCvhD,EAAMA,EAAK/S,KAAKg1D,KAAK/C,EAAKuC,IAAQ,EAElC9C,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAK/C,EAAKwC,IAAQ,GACvBz0D,KAAKg1D,KAAK9C,EAAKsC,IAAQ,EACpC/E,EAAMA,EAAKzvD,KAAKg1D,KAAK9C,EAAKuC,IAAQ,EAClC1hD,EAAMA,EAAK/S,KAAKg1D,KAAKjD,EAAK4C,IAAQ,EAElCjD,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKjD,EAAK6C,IAAQ,GACvB50D,KAAKg1D,KAAKhD,EAAK2C,IAAQ,EACpClF,EAAMA,EAAKzvD,KAAKg1D,KAAKhD,EAAK4C,IAAQ,EAKlC,IAAIa,IAAQhzC,GAJZ1P,EAAMA,EAAK/S,KAAKg1D,KAAKnD,EAAKgD,IAAQ,GAIZ,KAAa,MAFnCnD,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKnD,EAAKiD,IAAQ,GACvB90D,KAAKg1D,KAAKlD,EAAK+C,IAAQ,KAEU,IAAO,EACrDpyC,IAFAgtC,EAAMA,EAAKzvD,KAAKg1D,KAAKlD,EAAKgD,IAAQ,IAErBpD,IAAQ,IAAO,IAAM+D,KAAO,IAAO,EAChDA,IAAM,SAEN1iD,EAAK/S,KAAKg1D,KAAK1B,EAAKK,GAEpBjC,GADAA,EAAM1xD,KAAKg1D,KAAK1B,EAAKM,IACR5zD,KAAKg1D,KAAKzB,EAAKI,GAAQ,EACpClE,EAAKzvD,KAAKg1D,KAAKzB,EAAKK,GACpB7gD,EAAMA,EAAK/S,KAAKg1D,KAAK7B,EAAKU,GAAQ,EAElCnC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAK7B,EAAKW,GAAQ,GACvB9zD,KAAKg1D,KAAK5B,EAAKS,GAAQ,EACpCpE,EAAMA,EAAKzvD,KAAKg1D,KAAK5B,EAAKU,GAAQ,EAClC/gD,EAAMA,EAAK/S,KAAKg1D,KAAKhC,EAAKe,GAAQ,EAElCrC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKhC,EAAKgB,GAAQ,GACvBh0D,KAAKg1D,KAAK/B,EAAKc,GAAQ,EACpCtE,EAAMA,EAAKzvD,KAAKg1D,KAAK/B,EAAKe,GAAQ,EAClCjhD,EAAMA,EAAK/S,KAAKg1D,KAAKnC,EAAKoB,GAAQ,EAElCvC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKnC,EAAKqB,IAAQ,GACvBl0D,KAAKg1D,KAAKlC,EAAKmB,GAAQ,EACpCxE,EAAMA,EAAKzvD,KAAKg1D,KAAKlC,EAAKoB,IAAQ,EAClCnhD,EAAMA,EAAK/S,KAAKg1D,KAAKtC,EAAKyB,IAAQ,EAElCzC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKtC,EAAK0B,IAAQ,GACvBp0D,KAAKg1D,KAAKrC,EAAKwB,IAAQ,EACpC1E,EAAMA,EAAKzvD,KAAKg1D,KAAKrC,EAAKyB,IAAQ,EAClCrhD,EAAMA,EAAK/S,KAAKg1D,KAAKzC,EAAK8B,IAAQ,EAElC3C,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKzC,EAAK+B,IAAQ,GACvBt0D,KAAKg1D,KAAKxC,EAAK6B,IAAQ,EACpC5E,EAAMA,EAAKzvD,KAAKg1D,KAAKxC,EAAK8B,IAAQ,EAClCvhD,EAAMA,EAAK/S,KAAKg1D,KAAK5C,EAAKoC,IAAQ,EAElC9C,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAK5C,EAAKqC,IAAQ,GACvBz0D,KAAKg1D,KAAK3C,EAAKmC,IAAQ,EACpC/E,EAAMA,EAAKzvD,KAAKg1D,KAAK3C,EAAKoC,IAAQ,EAClC1hD,EAAMA,EAAK/S,KAAKg1D,KAAK/C,EAAK0C,IAAQ,EAElCjD,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAK/C,EAAK2C,IAAQ,GACvB50D,KAAKg1D,KAAK9C,EAAKyC,IAAQ,EACpClF,EAAMA,EAAKzvD,KAAKg1D,KAAK9C,EAAK0C,IAAQ,EAKlC,IAAIc,IAASjzC,GAJb1P,EAAMA,EAAK/S,KAAKg1D,KAAKjD,EAAK8C,IAAQ,GAIX,KAAa,MAFpCnD,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKjD,EAAK+C,IAAQ,GACvB90D,KAAKg1D,KAAKhD,EAAK6C,IAAQ,KAEW,IAAO,EACtDpyC,IAFAgtC,EAAMA,EAAKzvD,KAAKg1D,KAAKhD,EAAK8C,IAAQ,IAErBpD,IAAQ,IAAO,IAAMgE,KAAQ,IAAO,EACjDA,IAAO,SAEP3iD,EAAK/S,KAAKg1D,KAAK1B,EAAKO,GAEpBnC,GADAA,EAAM1xD,KAAKg1D,KAAK1B,EAAKQ,IACR9zD,KAAKg1D,KAAKzB,EAAKM,GAAQ,EACpCpE,EAAKzvD,KAAKg1D,KAAKzB,EAAKO,GACpB/gD,EAAMA,EAAK/S,KAAKg1D,KAAK7B,EAAKY,GAAQ,EAElCrC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAK7B,EAAKa,GAAQ,GACvBh0D,KAAKg1D,KAAK5B,EAAKW,GAAQ,EACpCtE,EAAMA,EAAKzvD,KAAKg1D,KAAK5B,EAAKY,GAAQ,EAClCjhD,EAAMA,EAAK/S,KAAKg1D,KAAKhC,EAAKiB,GAAQ,EAElCvC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKhC,EAAKkB,IAAQ,GACvBl0D,KAAKg1D,KAAK/B,EAAKgB,GAAQ,EACpCxE,EAAMA,EAAKzvD,KAAKg1D,KAAK/B,EAAKiB,IAAQ,EAClCnhD,EAAMA,EAAK/S,KAAKg1D,KAAKnC,EAAKsB,IAAQ,EAElCzC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKnC,EAAKuB,IAAQ,GACvBp0D,KAAKg1D,KAAKlC,EAAKqB,IAAQ,EACpC1E,EAAMA,EAAKzvD,KAAKg1D,KAAKlC,EAAKsB,IAAQ,EAClCrhD,EAAMA,EAAK/S,KAAKg1D,KAAKtC,EAAK2B,IAAQ,EAElC3C,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKtC,EAAK4B,IAAQ,GACvBt0D,KAAKg1D,KAAKrC,EAAK0B,IAAQ,EACpC5E,EAAMA,EAAKzvD,KAAKg1D,KAAKrC,EAAK2B,IAAQ,EAClCvhD,EAAMA,EAAK/S,KAAKg1D,KAAKzC,EAAKiC,IAAQ,EAElC9C,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKzC,EAAKkC,IAAQ,GACvBz0D,KAAKg1D,KAAKxC,EAAKgC,IAAQ,EACpC/E,EAAMA,EAAKzvD,KAAKg1D,KAAKxC,EAAKiC,IAAQ,EAClC1hD,EAAMA,EAAK/S,KAAKg1D,KAAK5C,EAAKuC,IAAQ,EAElCjD,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAK5C,EAAKwC,IAAQ,GACvB50D,KAAKg1D,KAAK3C,EAAKsC,IAAQ,EACpClF,EAAMA,EAAKzvD,KAAKg1D,KAAK3C,EAAKuC,IAAQ,EAKlC,IAAIe,IAASlzC,GAJb1P,EAAMA,EAAK/S,KAAKg1D,KAAK/C,EAAK4C,IAAQ,GAIX,KAAa,MAFpCnD,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAK/C,EAAK6C,IAAQ,GACvB90D,KAAKg1D,KAAK9C,EAAK2C,IAAQ,KAEW,IAAO,EACtDpyC,IAFAgtC,EAAMA,EAAKzvD,KAAKg1D,KAAK9C,EAAK4C,IAAQ,IAErBpD,IAAQ,IAAO,IAAMiE,KAAQ,IAAO,EACjDA,IAAO,SAEP5iD,EAAK/S,KAAKg1D,KAAK1B,EAAKS,GAEpBrC,GADAA,EAAM1xD,KAAKg1D,KAAK1B,EAAKU,IACRh0D,KAAKg1D,KAAKzB,EAAKQ,GAAQ,EACpCtE,EAAKzvD,KAAKg1D,KAAKzB,EAAKS,GACpBjhD,EAAMA,EAAK/S,KAAKg1D,KAAK7B,EAAKc,GAAQ,EAElCvC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAK7B,EAAKe,IAAQ,GACvBl0D,KAAKg1D,KAAK5B,EAAKa,GAAQ,EACpCxE,EAAMA,EAAKzvD,KAAKg1D,KAAK5B,EAAKc,IAAQ,EAClCnhD,EAAMA,EAAK/S,KAAKg1D,KAAKhC,EAAKmB,IAAQ,EAElCzC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKhC,EAAKoB,IAAQ,GACvBp0D,KAAKg1D,KAAK/B,EAAKkB,IAAQ,EACpC1E,EAAMA,EAAKzvD,KAAKg1D,KAAK/B,EAAKmB,IAAQ,EAClCrhD,EAAMA,EAAK/S,KAAKg1D,KAAKnC,EAAKwB,IAAQ,EAElC3C,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKnC,EAAKyB,IAAQ,GACvBt0D,KAAKg1D,KAAKlC,EAAKuB,IAAQ,EACpC5E,EAAMA,EAAKzvD,KAAKg1D,KAAKlC,EAAKwB,IAAQ,EAClCvhD,EAAMA,EAAK/S,KAAKg1D,KAAKtC,EAAK8B,IAAQ,EAElC9C,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKtC,EAAK+B,IAAQ,GACvBz0D,KAAKg1D,KAAKrC,EAAK6B,IAAQ,EACpC/E,EAAMA,EAAKzvD,KAAKg1D,KAAKrC,EAAK8B,IAAQ,EAClC1hD,EAAMA,EAAK/S,KAAKg1D,KAAKzC,EAAKoC,IAAQ,EAElCjD,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKzC,EAAKqC,IAAQ,GACvB50D,KAAKg1D,KAAKxC,EAAKmC,IAAQ,EACpClF,EAAMA,EAAKzvD,KAAKg1D,KAAKxC,EAAKoC,IAAQ,EAKlC,IAAIgB,IAASnzC,GAJb1P,EAAMA,EAAK/S,KAAKg1D,KAAK5C,EAAKyC,IAAQ,GAIX,KAAa,MAFpCnD,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAK5C,EAAK0C,IAAQ,GACvB90D,KAAKg1D,KAAK3C,EAAKwC,IAAQ,KAEW,IAAO,EACtDpyC,IAFAgtC,EAAMA,EAAKzvD,KAAKg1D,KAAK3C,EAAKyC,IAAQ,IAErBpD,IAAQ,IAAO,IAAMkE,KAAQ,IAAO,EACjDA,IAAO,SAEP7iD,EAAK/S,KAAKg1D,KAAK1B,EAAKW,GAEpBvC,GADAA,EAAM1xD,KAAKg1D,KAAK1B,EAAKY,KACRl0D,KAAKg1D,KAAKzB,EAAKU,GAAQ,EACpCxE,EAAKzvD,KAAKg1D,KAAKzB,EAAKW,IACpBnhD,EAAMA,EAAK/S,KAAKg1D,KAAK7B,EAAKgB,IAAQ,EAElCzC,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAK7B,EAAKiB,IAAQ,GACvBp0D,KAAKg1D,KAAK5B,EAAKe,IAAQ,EACpC1E,EAAMA,EAAKzvD,KAAKg1D,KAAK5B,EAAKgB,IAAQ,EAClCrhD,EAAMA,EAAK/S,KAAKg1D,KAAKhC,EAAKqB,IAAQ,EAElC3C,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKhC,EAAKsB,IAAQ,GACvBt0D,KAAKg1D,KAAK/B,EAAKoB,IAAQ,EACpC5E,EAAMA,EAAKzvD,KAAKg1D,KAAK/B,EAAKqB,IAAQ,EAClCvhD,EAAMA,EAAK/S,KAAKg1D,KAAKnC,EAAK2B,IAAQ,EAElC9C,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKnC,EAAK4B,IAAQ,GACvBz0D,KAAKg1D,KAAKlC,EAAK0B,IAAQ,EACpC/E,EAAMA,EAAKzvD,KAAKg1D,KAAKlC,EAAK2B,IAAQ,EAClC1hD,EAAMA,EAAK/S,KAAKg1D,KAAKtC,EAAKiC,IAAQ,EAElCjD,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKtC,EAAKkC,IAAQ,GACvB50D,KAAKg1D,KAAKrC,EAAKgC,IAAQ,EACpClF,EAAMA,EAAKzvD,KAAKg1D,KAAKrC,EAAKiC,IAAQ,EAKlC,IAAIiB,IAASpzC,GAJb1P,EAAMA,EAAK/S,KAAKg1D,KAAKzC,EAAKsC,IAAQ,GAIX,KAAa,MAFpCnD,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKzC,EAAKuC,IAAQ,GACvB90D,KAAKg1D,KAAKxC,EAAKqC,IAAQ,KAEW,IAAO,EACtDpyC,IAFAgtC,EAAMA,EAAKzvD,KAAKg1D,KAAKxC,EAAKsC,IAAQ,IAErBpD,IAAQ,IAAO,IAAMmE,KAAQ,IAAO,EACjDA,IAAO,SAEP9iD,EAAK/S,KAAKg1D,KAAK1B,EAAKa,IAEpBzC,GADAA,EAAM1xD,KAAKg1D,KAAK1B,EAAKc,KACRp0D,KAAKg1D,KAAKzB,EAAKY,IAAQ,EACpC1E,EAAKzvD,KAAKg1D,KAAKzB,EAAKa,IACpBrhD,EAAMA,EAAK/S,KAAKg1D,KAAK7B,EAAKkB,IAAQ,EAElC3C,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAK7B,EAAKmB,IAAQ,GACvBt0D,KAAKg1D,KAAK5B,EAAKiB,IAAQ,EACpC5E,EAAMA,EAAKzvD,KAAKg1D,KAAK5B,EAAKkB,IAAQ,EAClCvhD,EAAMA,EAAK/S,KAAKg1D,KAAKhC,EAAKwB,IAAQ,EAElC9C,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKhC,EAAKyB,IAAQ,GACvBz0D,KAAKg1D,KAAK/B,EAAKuB,IAAQ,EACpC/E,EAAMA,EAAKzvD,KAAKg1D,KAAK/B,EAAKwB,IAAQ,EAClC1hD,EAAMA,EAAK/S,KAAKg1D,KAAKnC,EAAK8B,IAAQ,EAElCjD,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKnC,EAAK+B,IAAQ,GACvB50D,KAAKg1D,KAAKlC,EAAK6B,IAAQ,EACpClF,EAAMA,EAAKzvD,KAAKg1D,KAAKlC,EAAK8B,IAAQ,EAKlC,IAAIkB,IAASrzC,GAJb1P,EAAMA,EAAK/S,KAAKg1D,KAAKtC,EAAKmC,IAAQ,GAIX,KAAa,MAFpCnD,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKtC,EAAKoC,IAAQ,GACvB90D,KAAKg1D,KAAKrC,EAAKkC,IAAQ,KAEW,IAAO,EACtDpyC,IAFAgtC,EAAMA,EAAKzvD,KAAKg1D,KAAKrC,EAAKmC,IAAQ,IAErBpD,IAAQ,IAAO,IAAMoE,KAAQ,IAAO,EACjDA,IAAO,SAEP/iD,EAAK/S,KAAKg1D,KAAK1B,EAAKe,IAEpB3C,GADAA,EAAM1xD,KAAKg1D,KAAK1B,EAAKgB,KACRt0D,KAAKg1D,KAAKzB,EAAKc,IAAQ,EACpC5E,EAAKzvD,KAAKg1D,KAAKzB,EAAKe,IACpBvhD,EAAMA,EAAK/S,KAAKg1D,KAAK7B,EAAKqB,IAAQ,EAElC9C,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAK7B,EAAKsB,IAAQ,GACvBz0D,KAAKg1D,KAAK5B,EAAKoB,IAAQ,EACpC/E,EAAMA,EAAKzvD,KAAKg1D,KAAK5B,EAAKqB,IAAQ,EAClC1hD,EAAMA,EAAK/S,KAAKg1D,KAAKhC,EAAK2B,IAAQ,EAElCjD,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKhC,EAAK4B,IAAQ,GACvB50D,KAAKg1D,KAAK/B,EAAK0B,IAAQ,EACpClF,EAAMA,EAAKzvD,KAAKg1D,KAAK/B,EAAK2B,IAAQ,EAKlC,IAAImB,IAAStzC,GAJb1P,EAAMA,EAAK/S,KAAKg1D,KAAKnC,EAAKgC,IAAQ,GAIX,KAAa,MAFpCnD,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKnC,EAAKiC,IAAQ,GACvB90D,KAAKg1D,KAAKlC,EAAK+B,IAAQ,KAEW,IAAO,EACtDpyC,IAFAgtC,EAAMA,EAAKzvD,KAAKg1D,KAAKlC,EAAKgC,IAAQ,IAErBpD,IAAQ,IAAO,IAAMqE,KAAQ,IAAO,EACjDA,IAAO,SAEPhjD,EAAK/S,KAAKg1D,KAAK1B,EAAKkB,IAEpB9C,GADAA,EAAM1xD,KAAKg1D,KAAK1B,EAAKmB,KACRz0D,KAAKg1D,KAAKzB,EAAKiB,IAAQ,EACpC/E,EAAKzvD,KAAKg1D,KAAKzB,EAAKkB,IACpB1hD,EAAMA,EAAK/S,KAAKg1D,KAAK7B,EAAKwB,IAAQ,EAElCjD,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAK7B,EAAKyB,IAAQ,GACvB50D,KAAKg1D,KAAK5B,EAAKuB,IAAQ,EACpClF,EAAMA,EAAKzvD,KAAKg1D,KAAK5B,EAAKwB,IAAQ,EAKlC,IAAIoB,IAASvzC,GAJb1P,EAAMA,EAAK/S,KAAKg1D,KAAKhC,EAAK6B,IAAQ,GAIX,KAAa,MAFpCnD,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAKhC,EAAK8B,IAAQ,GACvB90D,KAAKg1D,KAAK/B,EAAK4B,IAAQ,KAEW,IAAO,EACtDpyC,IAFAgtC,EAAMA,EAAKzvD,KAAKg1D,KAAK/B,EAAK6B,IAAQ,IAErBpD,IAAQ,IAAO,IAAMsE,KAAQ,IAAO,EACjDA,IAAO,SAEPjjD,EAAK/S,KAAKg1D,KAAK1B,EAAKqB,IAEpBjD,GADAA,EAAM1xD,KAAKg1D,KAAK1B,EAAKsB,KACR50D,KAAKg1D,KAAKzB,EAAKoB,IAAQ,EACpClF,EAAKzvD,KAAKg1D,KAAKzB,EAAKqB,IAKpB,IAAIqB,IAASxzC,GAJb1P,EAAMA,EAAK/S,KAAKg1D,KAAK7B,EAAK0B,IAAQ,GAIX,KAAa,MAFpCnD,GADAA,EAAOA,EAAM1xD,KAAKg1D,KAAK7B,EAAK2B,IAAQ,GACvB90D,KAAKg1D,KAAK5B,EAAKyB,IAAQ,KAEW,IAAO,EACtDpyC,IAFAgtC,EAAMA,EAAKzvD,KAAKg1D,KAAK5B,EAAK0B,IAAQ,IAErBpD,IAAQ,IAAO,IAAMuE,KAAQ,IAAO,EACjDA,IAAO,SAMP,IAAIC,IAASzzC,GAJb1P,EAAK/S,KAAKg1D,KAAK1B,EAAKuB,KAIG,KAAa,MAFpCnD,GADAA,EAAM1xD,KAAKg1D,KAAK1B,EAAKwB,KACR90D,KAAKg1D,KAAKzB,EAAKsB,IAAQ,KAEW,IAAO,EA0BtD,OAzBApyC,IAFAgtC,EAAKzvD,KAAKg1D,KAAKzB,EAAKuB,MAEPpD,IAAQ,IAAO,IAAMwE,KAAQ,IAAO,EACjDA,IAAO,SACPvE,EAAE,GAAKoD,GACPpD,EAAE,GAAKsD,GACPtD,EAAE,GAAKuD,GACPvD,EAAE,GAAKwD,GACPxD,EAAE,GAAKyD,GACPzD,EAAE,GAAK0D,GACP1D,EAAE,GAAK2D,GACP3D,EAAE,GAAK4D,GACP5D,EAAE,GAAK6D,GACP7D,EAAE,GAAK8D,GACP9D,EAAE,IAAM+D,GACR/D,EAAE,IAAMgE,GACRhE,EAAE,IAAMiE,GACRjE,EAAE,IAAMkE,GACRlE,EAAE,IAAMmE,GACRnE,EAAE,IAAMoE,GACRpE,EAAE,IAAMqE,GACRrE,EAAE,IAAMsE,GACRtE,EAAE,IAAMuE,GACE,IAANzzC,IACFkvC,EAAE,IAAMlvC,EACRpS,EAAI5P,UAEC4P,GAQT,SAAS8lD,EAAUptC,EAAMrI,EAAKrQ,GAC5BA,EAAI27C,SAAWtrC,EAAIsrC,SAAWjjC,EAAKijC,SACnC37C,EAAI5P,OAASsoB,EAAKtoB,OAASigB,EAAIjgB,OAI/B,IAFA,IAAI0tD,EAAQ,EACRiI,EAAU,EACL7tC,EAAI,EAAGA,EAAIlY,EAAI5P,OAAS,EAAG8nB,IAAK,CAGvC,IAAIqmC,EAASwH,EACbA,EAAU,EAGV,IAFA,IAAIvH,EAAgB,SAARV,EACRW,EAAO9uD,KAAKgQ,IAAIuY,EAAG7H,EAAIjgB,OAAS,GAC3BS,EAAIlB,KAAKsnB,IAAI,EAAGiB,EAAIQ,EAAKtoB,OAAS,GAAIS,GAAK4tD,EAAM5tD,IAAK,CAC7D,IAAIP,EAAI4nB,EAAIrnB,EAGRqhB,GAFoB,EAAhBwG,EAAKkjC,MAAMtrD,KACI,EAAf+f,EAAIurC,MAAM/qD,IAGd6R,EAAS,SAAJwP,EAGTssC,EAAa,UADb97C,EAAMA,EAAK87C,EAAS,GAIpBuH,IAFAxH,GAHAA,EAAUA,GAAWrsC,EAAI,SAAa,GAAM,IAGxBxP,IAAO,IAAO,KAEZ,GACtB67C,GAAU,SAEZv+C,EAAI47C,MAAM1jC,GAAKsmC,EACfV,EAAQS,EACRA,EAASwH,EAQX,OANc,IAAVjI,EACF99C,EAAI47C,MAAM1jC,GAAK4lC,EAEf99C,EAAI5P,SAGC4P,EAAIg9C,SAGb,SAASgJ,EAAYttC,EAAMrI,EAAKrQ,GAI9B,OAAO8lD,EAASptC,EAAMrI,EAAKrQ,GAsB7B,SAASimD,EAAMp6C,EAAGC,GAChBxZ,KAAKuZ,EAAIA,EACTvZ,KAAKwZ,EAAIA,EAzENnc,KAAKg1D,OACRvD,EAAc9C,GAmDhBp3B,EAAGt0B,UAAUszD,MAAQ,SAAgB71C,EAAKrQ,GACxC,IACIP,EAAMnN,KAAKlC,OAASigB,EAAIjgB,OAW5B,OAVoB,KAAhBkC,KAAKlC,QAAgC,KAAfigB,EAAIjgB,OACtBgxD,EAAY9uD,KAAM+d,EAAKrQ,GACpBP,EAAM,GACT6+C,EAAWhsD,KAAM+d,EAAKrQ,GACnBP,EAAM,KACTqmD,EAASxzD,KAAM+d,EAAKrQ,GAEpBgmD,EAAW1zD,KAAM+d,EAAKrQ,IAchCimD,EAAKrzD,UAAUuzD,QAAU,SAAkBC,GAGzC,IAFA,IAAIp6C,EAAI,IAAI9b,MAAMk2D,GACd1lD,EAAIwmB,EAAGt0B,UAAUqsD,WAAWmH,GAAK,EAC5B91D,EAAI,EAAGA,EAAI81D,EAAG91D,IACrB0b,EAAE1b,GAAKgC,KAAK+zD,OAAO/1D,EAAGoQ,EAAG0lD,GAG3B,OAAOp6C,GAITi6C,EAAKrzD,UAAUyzD,OAAS,SAAiBx6C,EAAGnL,EAAG0lD,GAC7C,GAAU,IAANv6C,GAAWA,IAAMu6C,EAAI,EAAG,OAAOv6C,EAGnC,IADA,IAAIy6C,EAAK,EACAh2D,EAAI,EAAGA,EAAIoQ,EAAGpQ,IACrBg2D,IAAW,EAAJz6C,IAAWnL,EAAIpQ,EAAI,EAC1Bub,IAAM,EAGR,OAAOy6C,GAKTL,EAAKrzD,UAAU2zD,QAAU,SAAkBC,EAAKC,EAAKC,EAAKC,EAAMC,EAAMR,GACpE,IAAK,IAAI91D,EAAI,EAAGA,EAAI81D,EAAG91D,IACrBq2D,EAAKr2D,GAAKm2D,EAAID,EAAIl2D,IAClBs2D,EAAKt2D,GAAKo2D,EAAIF,EAAIl2D,KAItB21D,EAAKrzD,UAAUi0D,UAAY,SAAoBJ,EAAKC,EAAKC,EAAMC,EAAMR,EAAGI,GACtEl0D,KAAKi0D,QAAQC,EAAKC,EAAKC,EAAKC,EAAMC,EAAMR,GAExC,IAAK,IAAI30C,EAAI,EAAGA,EAAI20C,EAAG30C,IAAM,EAM3B,IALA,IAAI/Q,EAAI+Q,GAAK,EAETq1C,EAAQn3D,KAAKo3D,IAAI,EAAIp3D,KAAKq3D,GAAKtmD,GAC/BumD,EAAQt3D,KAAKu3D,IAAI,EAAIv3D,KAAKq3D,GAAKtmD,GAE1BuN,EAAI,EAAGA,EAAIm4C,EAAGn4C,GAAKvN,EAI1B,IAHA,IAAIymD,EAASL,EACTM,EAASH,EAEJp2D,EAAI,EAAGA,EAAI4gB,EAAG5gB,IAAK,CAC1B,IAAIw2D,EAAKV,EAAK14C,EAAIpd,GACdy2D,EAAKV,EAAK34C,EAAIpd,GAEd02D,EAAKZ,EAAK14C,EAAIpd,EAAI4gB,GAClB+1C,EAAKZ,EAAK34C,EAAIpd,EAAI4gB,GAElBg2C,EAAKN,EAASI,EAAKH,EAASI,EAEhCA,EAAKL,EAASK,EAAKJ,EAASG,EAC5BA,EAAKE,EAELd,EAAK14C,EAAIpd,GAAKw2D,EAAKE,EACnBX,EAAK34C,EAAIpd,GAAKy2D,EAAKE,EAEnBb,EAAK14C,EAAIpd,EAAI4gB,GAAK41C,EAAKE,EACvBX,EAAK34C,EAAIpd,EAAI4gB,GAAK61C,EAAKE,EAGnB32D,IAAM6P,IACR+mD,EAAKX,EAAQK,EAASF,EAAQG,EAE9BA,EAASN,EAAQM,EAASH,EAAQE,EAClCA,EAASM,KAOnBxB,EAAKrzD,UAAU80D,YAAc,SAAsBvmD,EAAGgU,GACpD,IAAIixC,EAAqB,EAAjBz2D,KAAKsnB,IAAI9B,EAAGhU,GAChBwmD,EAAU,EAAJvB,EACN91D,EAAI,EACR,IAAK81D,EAAIA,EAAI,EAAI,EAAGA,EAAGA,KAAU,EAC/B91D,IAGF,OAAO,GAAKA,EAAI,EAAIq3D,GAGtB1B,EAAKrzD,UAAUg1D,UAAY,SAAoBnB,EAAKC,EAAKN,GACvD,KAAIA,GAAK,GAET,IAAK,IAAI91D,EAAI,EAAGA,EAAI81D,EAAI,EAAG91D,IAAK,CAC9B,IAAI0b,EAAIy6C,EAAIn2D,GAEZm2D,EAAIn2D,GAAKm2D,EAAIL,EAAI91D,EAAI,GACrBm2D,EAAIL,EAAI91D,EAAI,GAAK0b,EAEjBA,EAAI06C,EAAIp2D,GAERo2D,EAAIp2D,IAAMo2D,EAAIN,EAAI91D,EAAI,GACtBo2D,EAAIN,EAAI91D,EAAI,IAAM0b,IAItBi6C,EAAKrzD,UAAUi1D,aAAe,SAAuBC,EAAI1B,GAEvD,IADA,IAAItI,EAAQ,EACHxtD,EAAI,EAAGA,EAAI81D,EAAI,EAAG91D,IAAK,CAC9B,IAAIwsD,EAAoC,KAAhCntD,KAAKo4D,MAAMD,EAAG,EAAIx3D,EAAI,GAAK81D,GACjCz2D,KAAKo4D,MAAMD,EAAG,EAAIx3D,GAAK81D,GACvBtI,EAEFgK,EAAGx3D,GAAS,SAAJwsD,EAGNgB,EADEhB,EAAI,SACE,EAEAA,EAAI,SAAY,EAI5B,OAAOgL,GAGT7B,EAAKrzD,UAAUo1D,WAAa,SAAqBF,EAAIroD,EAAKgnD,EAAKL,GAE7D,IADA,IAAItI,EAAQ,EACHxtD,EAAI,EAAGA,EAAImP,EAAKnP,IACvBwtD,GAAyB,EAARgK,EAAGx3D,GAEpBm2D,EAAI,EAAIn2D,GAAa,KAARwtD,EAAgBA,KAAkB,GAC/C2I,EAAI,EAAIn2D,EAAI,GAAa,KAARwtD,EAAgBA,KAAkB,GAIrD,IAAKxtD,EAAI,EAAImP,EAAKnP,EAAI81D,IAAK91D,EACzBm2D,EAAIn2D,GAAK,EAGXuR,EAAiB,IAAVi8C,GACPj8C,EAA6B,MAAb,KAARi8C,KAGVmI,EAAKrzD,UAAUq1D,KAAO,SAAe7B,GAEnC,IADA,IAAI8B,EAAK,IAAIh4D,MAAMk2D,GACV91D,EAAI,EAAGA,EAAI81D,EAAG91D,IACrB43D,EAAG53D,GAAK,EAGV,OAAO43D,GAGTjC,EAAKrzD,UAAUu1D,KAAO,SAAet8C,EAAGC,EAAG9L,GACzC,IAAIomD,EAAI,EAAI9zD,KAAKo1D,YAAY77C,EAAEzb,OAAQ0b,EAAE1b,QAErCo2D,EAAMl0D,KAAK6zD,QAAQC,GAEnBtvD,EAAIxE,KAAK21D,KAAK7B,GAEdK,EAAM,IAAIv2D,MAAMk2D,GAChBgC,EAAO,IAAIl4D,MAAMk2D,GACjBiC,EAAO,IAAIn4D,MAAMk2D,GAEjBkC,EAAO,IAAIp4D,MAAMk2D,GACjBmC,EAAQ,IAAIr4D,MAAMk2D,GAClBoC,EAAQ,IAAIt4D,MAAMk2D,GAElBqC,EAAOzoD,EAAI47C,MACf6M,EAAKr4D,OAASg2D,EAEd9zD,KAAK01D,WAAWn8C,EAAE+vC,MAAO/vC,EAAEzb,OAAQq2D,EAAKL,GACxC9zD,KAAK01D,WAAWl8C,EAAE8vC,MAAO9vC,EAAE1b,OAAQk4D,EAAMlC,GAEzC9zD,KAAKu0D,UAAUJ,EAAK3vD,EAAGsxD,EAAMC,EAAMjC,EAAGI,GACtCl0D,KAAKu0D,UAAUyB,EAAMxxD,EAAGyxD,EAAOC,EAAOpC,EAAGI,GAEzC,IAAK,IAAIl2D,EAAI,EAAGA,EAAI81D,EAAG91D,IAAK,CAC1B,IAAIm3D,EAAKW,EAAK93D,GAAKi4D,EAAMj4D,GAAK+3D,EAAK/3D,GAAKk4D,EAAMl4D,GAC9C+3D,EAAK/3D,GAAK83D,EAAK93D,GAAKk4D,EAAMl4D,GAAK+3D,EAAK/3D,GAAKi4D,EAAMj4D,GAC/C83D,EAAK93D,GAAKm3D,EAUZ,OAPAn1D,KAAKs1D,UAAUQ,EAAMC,EAAMjC,GAC3B9zD,KAAKu0D,UAAUuB,EAAMC,EAAMI,EAAM3xD,EAAGsvD,EAAGI,GACvCl0D,KAAKs1D,UAAUa,EAAM3xD,EAAGsvD,GACxB9zD,KAAKu1D,aAAaY,EAAMrC,GAExBpmD,EAAI27C,SAAW9vC,EAAE8vC,SAAW7vC,EAAE6vC,SAC9B37C,EAAI5P,OAASyb,EAAEzb,OAAS0b,EAAE1b,OACnB4P,EAAIg9C,UAIb91B,EAAGt0B,UAAUwpD,IAAM,SAAc/rC,GAC/B,IAAIrQ,EAAM,IAAIknB,EAAG,MAEjB,OADAlnB,EAAI47C,MAAQ,IAAI1rD,MAAMoC,KAAKlC,OAASigB,EAAIjgB,QACjCkC,KAAK4zD,MAAM71C,EAAKrQ,IAIzBknB,EAAGt0B,UAAU81D,KAAO,SAAer4C,GACjC,IAAIrQ,EAAM,IAAIknB,EAAG,MAEjB,OADAlnB,EAAI47C,MAAQ,IAAI1rD,MAAMoC,KAAKlC,OAASigB,EAAIjgB,QACjC41D,EAAW1zD,KAAM+d,EAAKrQ,IAI/BknB,EAAGt0B,UAAU+xD,KAAO,SAAet0C,GACjC,OAAO/d,KAAKgrD,QAAQ4I,MAAM71C,EAAK/d,OAGjC40B,EAAGt0B,UAAUuqD,MAAQ,SAAgB9sC,GACnC,IAAIs4C,EAAWt4C,EAAM,EACjBs4C,IAAUt4C,GAAOA,GAErBxO,EAAsB,kBAARwO,GACdxO,EAAOwO,EAAM,UAIb,IADA,IAAIytC,EAAQ,EACHxtD,EAAI,EAAGA,EAAIgC,KAAKlC,OAAQE,IAAK,CACpC,IAAIwsD,GAAqB,EAAhBxqD,KAAKspD,MAAMtrD,IAAU+f,EAC1B3N,GAAU,SAAJo6C,IAA0B,SAARgB,GAC5BA,IAAU,GACVA,GAAUhB,EAAI,SAAa,EAE3BgB,GAASp7C,IAAO,GAChBpQ,KAAKspD,MAAMtrD,GAAU,SAALoS,EAQlB,OALc,IAAVo7C,IACFxrD,KAAKspD,MAAMtrD,GAAKwtD,EAChBxrD,KAAKlC,UAGAu4D,EAAWr2D,KAAKutD,OAASvtD,MAGlC40B,EAAGt0B,UAAUg2D,KAAO,SAAev4C,GACjC,OAAO/d,KAAKgrD,QAAQH,MAAM9sC,IAI5B6W,EAAGt0B,UAAUi2D,IAAM,WACjB,OAAOv2D,KAAK8pD,IAAI9pD,OAIlB40B,EAAGt0B,UAAUk2D,KAAO,WAClB,OAAOx2D,KAAKqyD,KAAKryD,KAAKgrD,UAIxBp2B,EAAGt0B,UAAUyR,IAAM,SAAcgM,GAC/B,IAAIysC,EA7xCN,SAAqBzsC,GAGnB,IAFA,IAAIysC,EAAI,IAAI5sD,MAAMmgB,EAAI8uC,aAEb4B,EAAM,EAAGA,EAAMjE,EAAE1sD,OAAQ2wD,IAAO,CACvC,IAAIhE,EAAOgE,EAAM,GAAM,EACnBC,EAAOD,EAAM,GAEjBjE,EAAEiE,GAAQ1wC,EAAIurC,MAAMmB,KAASiE,EAAQ,EAGvC,OAAOlE,EAmxCCiM,CAAW14C,GACnB,GAAiB,IAAbysC,EAAE1sD,OAAc,OAAO,IAAI82B,EAAG,GAIlC,IADA,IAAI7yB,EAAM/B,KACDhC,EAAI,EAAGA,EAAIwsD,EAAE1sD,QACP,IAAT0sD,EAAExsD,GADsBA,IAAK+D,EAAMA,EAAIw0D,OAI7C,KAAMv4D,EAAIwsD,EAAE1sD,OACV,IAAK,IAAI8kB,EAAI7gB,EAAIw0D,MAAOv4D,EAAIwsD,EAAE1sD,OAAQE,IAAK4kB,EAAIA,EAAE2zC,MAClC,IAAT/L,EAAExsD,KAEN+D,EAAMA,EAAI+nD,IAAIlnC,IAIlB,OAAO7gB,GAIT6yB,EAAGt0B,UAAUo2D,OAAS,SAAiB3/C,GACrCxH,EAAuB,kBAATwH,GAAqBA,GAAQ,GAC3C,IAGI/Y,EAHA4hB,EAAI7I,EAAO,GACXoI,GAAKpI,EAAO6I,GAAK,GACjB+2C,EAAa,WAAe,GAAK/2C,GAAQ,GAAKA,EAGlD,GAAU,IAANA,EAAS,CACX,IAAI4rC,EAAQ,EAEZ,IAAKxtD,EAAI,EAAGA,EAAIgC,KAAKlC,OAAQE,IAAK,CAChC,IAAI44D,EAAW52D,KAAKspD,MAAMtrD,GAAK24D,EAC3B72C,GAAsB,EAAhB9f,KAAKspD,MAAMtrD,IAAU44D,GAAah3C,EAC5C5f,KAAKspD,MAAMtrD,GAAK8hB,EAAI0rC,EACpBA,EAAQoL,IAAc,GAAKh3C,EAGzB4rC,IACFxrD,KAAKspD,MAAMtrD,GAAKwtD,EAChBxrD,KAAKlC,UAIT,GAAU,IAANqhB,EAAS,CACX,IAAKnhB,EAAIgC,KAAKlC,OAAS,EAAGE,GAAK,EAAGA,IAChCgC,KAAKspD,MAAMtrD,EAAImhB,GAAKnf,KAAKspD,MAAMtrD,GAGjC,IAAKA,EAAI,EAAGA,EAAImhB,EAAGnhB,IACjBgC,KAAKspD,MAAMtrD,GAAK,EAGlBgC,KAAKlC,QAAUqhB,EAGjB,OAAOnf,KAAK0qD,UAGd91B,EAAGt0B,UAAUu2D,MAAQ,SAAgB9/C,GAGnC,OADAxH,EAAyB,IAAlBvP,KAAKqpD,UACLrpD,KAAK02D,OAAO3/C,IAMrB6d,EAAGt0B,UAAUw2D,OAAS,SAAiB//C,EAAMggD,EAAMC,GAEjD,IAAI7oD,EADJoB,EAAuB,kBAATwH,GAAqBA,GAAQ,GAGzC5I,EADE4oD,GACGA,EAAQA,EAAO,IAAO,GAEvB,EAGN,IAAIn3C,EAAI7I,EAAO,GACXoI,EAAI9hB,KAAKgQ,KAAK0J,EAAO6I,GAAK,GAAI5f,KAAKlC,QACnC4e,EAAO,SAAc,WAAckD,GAAMA,EACzCq3C,EAAcD,EAMlB,GAJA7oD,GAAKgR,EACLhR,EAAI9Q,KAAKsnB,IAAI,EAAGxW,GAGZ8oD,EAAa,CACf,IAAK,IAAIj5D,EAAI,EAAGA,EAAImhB,EAAGnhB,IACrBi5D,EAAY3N,MAAMtrD,GAAKgC,KAAKspD,MAAMtrD,GAEpCi5D,EAAYn5D,OAASqhB,EAGvB,GAAU,IAANA,QAEG,GAAInf,KAAKlC,OAASqhB,EAEvB,IADAnf,KAAKlC,QAAUqhB,EACVnhB,EAAI,EAAGA,EAAIgC,KAAKlC,OAAQE,IAC3BgC,KAAKspD,MAAMtrD,GAAKgC,KAAKspD,MAAMtrD,EAAImhB,QAGjCnf,KAAKspD,MAAM,GAAK,EAChBtpD,KAAKlC,OAAS,EAGhB,IAAI0tD,EAAQ,EACZ,IAAKxtD,EAAIgC,KAAKlC,OAAS,EAAGE,GAAK,IAAgB,IAAVwtD,GAAextD,GAAKmQ,GAAInQ,IAAK,CAChE,IAAIR,EAAuB,EAAhBwC,KAAKspD,MAAMtrD,GACtBgC,KAAKspD,MAAMtrD,GAAMwtD,GAAU,GAAK5rC,EAAOpiB,IAASoiB,EAChD4rC,EAAQhuD,EAAOkf,EAajB,OATIu6C,GAAyB,IAAVzL,IACjByL,EAAY3N,MAAM2N,EAAYn5D,UAAY0tD,GAGxB,IAAhBxrD,KAAKlC,SACPkC,KAAKspD,MAAM,GAAK,EAChBtpD,KAAKlC,OAAS,GAGTkC,KAAK0qD,UAGd91B,EAAGt0B,UAAU42D,MAAQ,SAAgBngD,EAAMggD,EAAMC,GAG/C,OADAznD,EAAyB,IAAlBvP,KAAKqpD,UACLrpD,KAAK82D,OAAO//C,EAAMggD,EAAMC,IAIjCpiC,EAAGt0B,UAAU62D,KAAO,SAAepgD,GACjC,OAAO/W,KAAKgrD,QAAQ6L,MAAM9/C,IAG5B6d,EAAGt0B,UAAU82D,MAAQ,SAAgBrgD,GACnC,OAAO/W,KAAKgrD,QAAQ0L,OAAO3/C,IAI7B6d,EAAGt0B,UAAU+2D,KAAO,SAAetgD,GACjC,OAAO/W,KAAKgrD,QAAQkM,MAAMngD,IAG5B6d,EAAGt0B,UAAUg3D,MAAQ,SAAgBvgD,GACnC,OAAO/W,KAAKgrD,QAAQ8L,OAAO//C,IAI7B6d,EAAGt0B,UAAU+sD,MAAQ,SAAgBoB,GACnCl/C,EAAsB,kBAARk/C,GAAoBA,GAAO,GACzC,IAAI7uC,EAAI6uC,EAAM,GACVtvC,GAAKsvC,EAAM7uC,GAAK,GAChBgD,EAAI,GAAKhD,EAGb,QAAI5f,KAAKlC,QAAUqhB,OAGXnf,KAAKspD,MAAMnqC,GAELyD,IAIhBgS,EAAGt0B,UAAUi3D,OAAS,SAAiBxgD,GACrCxH,EAAuB,kBAATwH,GAAqBA,GAAQ,GAC3C,IAAI6I,EAAI7I,EAAO,GACXoI,GAAKpI,EAAO6I,GAAK,GAIrB,GAFArQ,EAAyB,IAAlBvP,KAAKqpD,SAAgB,2CAExBrpD,KAAKlC,QAAUqhB,EACjB,OAAOnf,KAQT,GALU,IAAN4f,GACFT,IAEFnf,KAAKlC,OAAST,KAAKgQ,IAAI8R,EAAGnf,KAAKlC,QAErB,IAAN8hB,EAAS,CACX,IAAIlD,EAAO,SAAc,WAAckD,GAAMA,EAC7C5f,KAAKspD,MAAMtpD,KAAKlC,OAAS,IAAM4e,EAGjC,OAAO1c,KAAK0qD,UAId91B,EAAGt0B,UAAUk3D,MAAQ,SAAgBzgD,GACnC,OAAO/W,KAAKgrD,QAAQuM,OAAOxgD,IAI7B6d,EAAGt0B,UAAU6sD,MAAQ,SAAgBpvC,GAGnC,OAFAxO,EAAsB,kBAARwO,GACdxO,EAAOwO,EAAM,UACTA,EAAM,EAAU/d,KAAKy3D,OAAO15C,GAGV,IAAlB/d,KAAKqpD,SACa,IAAhBrpD,KAAKlC,SAAiC,EAAhBkC,KAAKspD,MAAM,KAAWvrC,GAC9C/d,KAAKspD,MAAM,GAAKvrC,GAAuB,EAAhB/d,KAAKspD,MAAM,IAClCtpD,KAAKqpD,SAAW,EACTrpD,OAGTA,KAAKqpD,SAAW,EAChBrpD,KAAKy3D,MAAM15C,GACX/d,KAAKqpD,SAAW,EACTrpD,MAIFA,KAAK8qD,OAAO/sC,IAGrB6W,EAAGt0B,UAAUwqD,OAAS,SAAiB/sC,GACrC/d,KAAKspD,MAAM,IAAMvrC,EAGjB,IAAK,IAAI/f,EAAI,EAAGA,EAAIgC,KAAKlC,QAAUkC,KAAKspD,MAAMtrD,IAAM,SAAWA,IAC7DgC,KAAKspD,MAAMtrD,IAAM,SACbA,IAAMgC,KAAKlC,OAAS,EACtBkC,KAAKspD,MAAMtrD,EAAI,GAAK,EAEpBgC,KAAKspD,MAAMtrD,EAAI,KAKnB,OAFAgC,KAAKlC,OAAST,KAAKsnB,IAAI3kB,KAAKlC,OAAQE,EAAI,GAEjCgC,MAIT40B,EAAGt0B,UAAUm3D,MAAQ,SAAgB15C,GAGnC,GAFAxO,EAAsB,kBAARwO,GACdxO,EAAOwO,EAAM,UACTA,EAAM,EAAG,OAAO/d,KAAKmtD,OAAOpvC,GAEhC,GAAsB,IAAlB/d,KAAKqpD,SAIP,OAHArpD,KAAKqpD,SAAW,EAChBrpD,KAAKmtD,MAAMpvC,GACX/d,KAAKqpD,SAAW,EACTrpD,KAKT,GAFAA,KAAKspD,MAAM,IAAMvrC,EAEG,IAAhB/d,KAAKlC,QAAgBkC,KAAKspD,MAAM,GAAK,EACvCtpD,KAAKspD,MAAM,IAAMtpD,KAAKspD,MAAM,GAC5BtpD,KAAKqpD,SAAW,OAGhB,IAAK,IAAIrrD,EAAI,EAAGA,EAAIgC,KAAKlC,QAAUkC,KAAKspD,MAAMtrD,GAAK,EAAGA,IACpDgC,KAAKspD,MAAMtrD,IAAM,SACjBgC,KAAKspD,MAAMtrD,EAAI,IAAM,EAIzB,OAAOgC,KAAK0qD,UAGd91B,EAAGt0B,UAAUo3D,KAAO,SAAe35C,GACjC,OAAO/d,KAAKgrD,QAAQmC,MAAMpvC,IAG5B6W,EAAGt0B,UAAUq3D,KAAO,SAAe55C,GACjC,OAAO/d,KAAKgrD,QAAQyM,MAAM15C,IAG5B6W,EAAGt0B,UAAUs3D,KAAO,WAGlB,OAFA53D,KAAKqpD,SAAW,EAETrpD,MAGT40B,EAAGt0B,UAAU0c,IAAM,WACjB,OAAOhd,KAAKgrD,QAAQ4M,QAGtBhjC,EAAGt0B,UAAUu3D,aAAe,SAAuB95C,EAAK+rC,EAAKrsD,GAC3D,IACIO,EAIAwsD,EALAr9C,EAAM4Q,EAAIjgB,OAASL,EAGvBuC,KAAKirD,QAAQ99C,GAGb,IAAIq+C,EAAQ,EACZ,IAAKxtD,EAAI,EAAGA,EAAI+f,EAAIjgB,OAAQE,IAAK,CAC/BwsD,GAA6B,EAAxBxqD,KAAKspD,MAAMtrD,EAAIP,IAAc+tD,EAClC,IAAIxB,GAAwB,EAAfjsC,EAAIurC,MAAMtrD,IAAU8rD,EAEjC0B,IADAhB,GAAa,SAARR,IACS,KAAQA,EAAQ,SAAa,GAC3ChqD,KAAKspD,MAAMtrD,EAAIP,GAAa,SAAJ+sD,EAE1B,KAAOxsD,EAAIgC,KAAKlC,OAASL,EAAOO,IAE9BwtD,GADAhB,GAA6B,EAAxBxqD,KAAKspD,MAAMtrD,EAAIP,IAAc+tD,IACrB,GACbxrD,KAAKspD,MAAMtrD,EAAIP,GAAa,SAAJ+sD,EAG1B,GAAc,IAAVgB,EAAa,OAAOxrD,KAAK0qD,SAK7B,IAFAn7C,GAAkB,IAAXi8C,GACPA,EAAQ,EACHxtD,EAAI,EAAGA,EAAIgC,KAAKlC,OAAQE,IAE3BwtD,GADAhB,IAAsB,EAAhBxqD,KAAKspD,MAAMtrD,IAAUwtD,IACd,GACbxrD,KAAKspD,MAAMtrD,GAAS,SAAJwsD,EAIlB,OAFAxqD,KAAKqpD,SAAW,EAETrpD,KAAK0qD,UAGd91B,EAAGt0B,UAAUw3D,SAAW,SAAmB/5C,EAAKg6C,GAC9C,IAAIt6D,GAAQuC,KAAKlC,OAASigB,EAAIjgB,QAE1B6B,EAAIK,KAAKgrD,QACTh8C,EAAI+O,EAGJi6C,EAA8B,EAAxBhpD,EAAEs6C,MAAMt6C,EAAElR,OAAS,GAGf,KADdL,EAAQ,GADMuC,KAAK2sD,WAAWqL,MAG5BhpD,EAAIA,EAAEooD,MAAM35D,GACZkC,EAAE+2D,OAAOj5D,GACTu6D,EAA8B,EAAxBhpD,EAAEs6C,MAAMt6C,EAAElR,OAAS,IAI3B,IACI8kB,EADAC,EAAIljB,EAAE7B,OAASkR,EAAElR,OAGrB,GAAa,QAATi6D,EAAgB,EAClBn1C,EAAI,IAAIgS,EAAG,OACT92B,OAAS+kB,EAAI,EACfD,EAAE0mC,MAAQ,IAAI1rD,MAAMglB,EAAE9kB,QACtB,IAAK,IAAIE,EAAI,EAAGA,EAAI4kB,EAAE9kB,OAAQE,IAC5B4kB,EAAE0mC,MAAMtrD,GAAK,EAIjB,IAAIoB,EAAOO,EAAEqrD,QAAQ6M,aAAa7oD,EAAG,EAAG6T,GAClB,IAAlBzjB,EAAKiqD,WACP1pD,EAAIP,EACAwjB,IACFA,EAAE0mC,MAAMzmC,GAAK,IAIjB,IAAK,IAAItkB,EAAIskB,EAAI,EAAGtkB,GAAK,EAAGA,IAAK,CAC/B,IAAI05D,EAAmC,UAAL,EAAxBt4D,EAAE2pD,MAAMt6C,EAAElR,OAASS,KACE,EAA5BoB,EAAE2pD,MAAMt6C,EAAElR,OAASS,EAAI,IAO1B,IAHA05D,EAAK56D,KAAKgQ,IAAK4qD,EAAKD,EAAO,EAAG,UAE9Br4D,EAAEk4D,aAAa7oD,EAAGipD,EAAI15D,GACA,IAAfoB,EAAE0pD,UACP4O,IACAt4D,EAAE0pD,SAAW,EACb1pD,EAAEk4D,aAAa7oD,EAAG,EAAGzQ,GAChBoB,EAAEgsD,WACLhsD,EAAE0pD,UAAY,GAGdzmC,IACFA,EAAE0mC,MAAM/qD,GAAK05D,GAajB,OAVIr1C,GACFA,EAAE8nC,SAEJ/qD,EAAE+qD,SAGW,QAATqN,GAA4B,IAAVt6D,GACpBkC,EAAEm3D,OAAOr5D,GAGJ,CACLy6D,IAAKt1C,GAAK,KACVxI,IAAKza,IAQTi1B,EAAGt0B,UAAU63D,OAAS,SAAiBp6C,EAAKg6C,EAAMK,GAGhD,OAFA7oD,GAAQwO,EAAI4tC,UAER3rD,KAAK2rD,SACA,CACLuM,IAAK,IAAItjC,EAAG,GACZxa,IAAK,IAAIwa,EAAG,IAKM,IAAlB50B,KAAKqpD,UAAmC,IAAjBtrC,EAAIsrC,UAC7BtnD,EAAM/B,KAAKytD,MAAM0K,OAAOp6C,EAAKg6C,GAEhB,QAATA,IACFG,EAAMn2D,EAAIm2D,IAAIzK,OAGH,QAATsK,IACF39C,EAAMrY,EAAIqY,IAAIqzC,MACV2K,GAA6B,IAAjBh+C,EAAIivC,UAClBjvC,EAAIu0C,KAAK5wC,IAIN,CACLm6C,IAAKA,EACL99C,IAAKA,IAIa,IAAlBpa,KAAKqpD,UAAmC,IAAjBtrC,EAAIsrC,UAC7BtnD,EAAM/B,KAAKm4D,OAAOp6C,EAAI0vC,MAAOsK,GAEhB,QAATA,IACFG,EAAMn2D,EAAIm2D,IAAIzK,OAGT,CACLyK,IAAKA,EACL99C,IAAKrY,EAAIqY,MAI0B,KAAlCpa,KAAKqpD,SAAWtrC,EAAIsrC,WACvBtnD,EAAM/B,KAAKytD,MAAM0K,OAAOp6C,EAAI0vC,MAAOsK,GAEtB,QAATA,IACF39C,EAAMrY,EAAIqY,IAAIqzC,MACV2K,GAA6B,IAAjBh+C,EAAIivC,UAClBjvC,EAAIw0C,KAAK7wC,IAIN,CACLm6C,IAAKn2D,EAAIm2D,IACT99C,IAAKA,IAOL2D,EAAIjgB,OAASkC,KAAKlC,QAAUkC,KAAKiqD,IAAIlsC,GAAO,EACvC,CACLm6C,IAAK,IAAItjC,EAAG,GACZxa,IAAKpa,MAKU,IAAf+d,EAAIjgB,OACO,QAATi6D,EACK,CACLG,IAAKl4D,KAAKq4D,KAAKt6C,EAAIurC,MAAM,IACzBlvC,IAAK,MAII,QAAT29C,EACK,CACLG,IAAK,KACL99C,IAAK,IAAIwa,EAAG50B,KAAK4rD,MAAM7tC,EAAIurC,MAAM,MAI9B,CACL4O,IAAKl4D,KAAKq4D,KAAKt6C,EAAIurC,MAAM,IACzBlvC,IAAK,IAAIwa,EAAG50B,KAAK4rD,MAAM7tC,EAAIurC,MAAM,MAI9BtpD,KAAK83D,SAAS/5C,EAAKg6C,GAlF1B,IAAIG,EAAK99C,EAAKrY,GAsFhB6yB,EAAGt0B,UAAU43D,IAAM,SAAcn6C,GAC/B,OAAO/d,KAAKm4D,OAAOp6C,EAAK,OAAO,GAAOm6C,KAIxCtjC,EAAGt0B,UAAU8Z,IAAM,SAAc2D,GAC/B,OAAO/d,KAAKm4D,OAAOp6C,EAAK,OAAO,GAAO3D,KAGxCwa,EAAGt0B,UAAUg4D,KAAO,SAAev6C,GACjC,OAAO/d,KAAKm4D,OAAOp6C,EAAK,OAAO,GAAM3D,KAIvCwa,EAAGt0B,UAAUi4D,SAAW,SAAmBx6C,GACzC,IAAIy6C,EAAKx4D,KAAKm4D,OAAOp6C,GAGrB,GAAIy6C,EAAGp+C,IAAIuxC,SAAU,OAAO6M,EAAGN,IAE/B,IAAI99C,EAA0B,IAApBo+C,EAAGN,IAAI7O,SAAiBmP,EAAGp+C,IAAIw0C,KAAK7wC,GAAOy6C,EAAGp+C,IAEpDq+C,EAAO16C,EAAIu5C,MAAM,GACjBx2C,EAAK/C,EAAI26C,MAAM,GACfzO,EAAM7vC,EAAI6vC,IAAIwO,GAGlB,OAAIxO,EAAM,GAAa,IAAPnpC,GAAoB,IAARmpC,EAAmBuO,EAAGN,IAGvB,IAApBM,EAAGN,IAAI7O,SAAiBmP,EAAGN,IAAIT,MAAM,GAAKe,EAAGN,IAAI/K,MAAM,IAGhEv4B,EAAGt0B,UAAUsrD,MAAQ,SAAgB7tC,GACnC,IAAIs4C,EAAWt4C,EAAM,EACjBs4C,IAAUt4C,GAAOA,GAErBxO,EAAOwO,GAAO,UAId,IAHA,IAAIpC,GAAK,GAAK,IAAMoC,EAEhBvJ,EAAM,EACDxW,EAAIgC,KAAKlC,OAAS,EAAGE,GAAK,EAAGA,IACpCwW,GAAOmH,EAAInH,GAAuB,EAAhBxU,KAAKspD,MAAMtrD,KAAW+f,EAG1C,OAAOs4C,GAAY7hD,EAAMA,GAI3BogB,EAAGt0B,UAAUq4D,KAAO,SAAe56C,GACjC,OAAO/d,KAAK4rD,MAAM7tC,IAIpB6W,EAAGt0B,UAAUurD,MAAQ,SAAgB9tC,GACnC,IAAIs4C,EAAWt4C,EAAM,EACjBs4C,IAAUt4C,GAAOA,GAErBxO,EAAOwO,GAAO,UAGd,IADA,IAAIytC,EAAQ,EACHxtD,EAAIgC,KAAKlC,OAAS,EAAGE,GAAK,EAAGA,IAAK,CACzC,IAAIwsD,GAAqB,EAAhBxqD,KAAKspD,MAAMtrD,IAAkB,SAARwtD,EAC9BxrD,KAAKspD,MAAMtrD,GAAMwsD,EAAIzsC,EAAO,EAC5BytC,EAAQhB,EAAIzsC,EAId,OADA/d,KAAK0qD,SACE2L,EAAWr2D,KAAKutD,OAASvtD,MAGlC40B,EAAGt0B,UAAU+3D,KAAO,SAAet6C,GACjC,OAAO/d,KAAKgrD,QAAQa,MAAM9tC,IAG5B6W,EAAGt0B,UAAUs4D,KAAO,SAAej9C,GACjCpM,EAAsB,IAAfoM,EAAE0tC,UACT95C,GAAQoM,EAAEgwC,UAEV,IAAIpyC,EAAIvZ,KACJwZ,EAAImC,EAAEqvC,QAGRzxC,EADiB,IAAfA,EAAE8vC,SACA9vC,EAAE++C,KAAK38C,GAEPpC,EAAEyxC,QAaR,IATA,IAAIxwC,EAAI,IAAIoa,EAAG,GACXna,EAAI,IAAIma,EAAG,GAGXla,EAAI,IAAIka,EAAG,GACXja,EAAI,IAAIia,EAAG,GAEXikC,EAAI,EAEDt/C,EAAEu/C,UAAYt/C,EAAEs/C,UACrBv/C,EAAEu9C,OAAO,GACTt9C,EAAEs9C,OAAO,KACP+B,EAMJ,IAHA,IAAIE,EAAKv/C,EAAEwxC,QACPgO,EAAKz/C,EAAEyxC,SAEHzxC,EAAEoyC,UAAU,CAClB,IAAK,IAAI3tD,EAAI,EAAGi7D,EAAK,EAAyB,KAArB1/C,EAAE+vC,MAAM,GAAK2P,IAAaj7D,EAAI,KAAMA,EAAGi7D,IAAO,GACvE,GAAIj7D,EAAI,EAEN,IADAub,EAAEu9C,OAAO94D,GACFA,KAAM,IACPwc,EAAE0+C,SAAWz+C,EAAEy+C,WACjB1+C,EAAEm0C,KAAKoK,GACPt+C,EAAEm0C,KAAKoK,IAGTx+C,EAAEs8C,OAAO,GACTr8C,EAAEq8C,OAAO,GAIb,IAAK,IAAIv4D,EAAI,EAAG46D,EAAK,EAAyB,KAArB3/C,EAAE8vC,MAAM,GAAK6P,IAAa56D,EAAI,KAAMA,EAAG46D,IAAO,GACvE,GAAI56D,EAAI,EAEN,IADAib,EAAEs9C,OAAOv4D,GACFA,KAAM,IACPmc,EAAEw+C,SAAWv+C,EAAEu+C,WACjBx+C,EAAEi0C,KAAKoK,GACPp+C,EAAEi0C,KAAKoK,IAGTt+C,EAAEo8C,OAAO,GACTn8C,EAAEm8C,OAAO,GAITv9C,EAAE0wC,IAAIzwC,IAAM,GACdD,EAAEq1C,KAAKp1C,GACPgB,EAAEo0C,KAAKl0C,GACPD,EAAEm0C,KAAKj0C,KAEPnB,EAAEo1C,KAAKr1C,GACPmB,EAAEk0C,KAAKp0C,GACPG,EAAEi0C,KAAKn0C,IAIX,MAAO,CACL9a,EAAG+a,EACH1L,EAAG2L,EACHmI,IAAKtJ,EAAEk9C,OAAOmC,KAOlBjkC,EAAGt0B,UAAU84D,OAAS,SAAiBz9C,GACrCpM,EAAsB,IAAfoM,EAAE0tC,UACT95C,GAAQoM,EAAEgwC,UAEV,IAAIhsD,EAAIK,KACJgP,EAAI2M,EAAEqvC,QAGRrrD,EADiB,IAAfA,EAAE0pD,SACA1pD,EAAE24D,KAAK38C,GAEPhc,EAAEqrD,QAQR,IALA,IAuCIjpD,EAvCAs3D,EAAK,IAAIzkC,EAAG,GACZxJ,EAAK,IAAIwJ,EAAG,GAEZ7D,EAAQ/hB,EAAEg8C,QAEPrrD,EAAE25D,KAAK,GAAK,GAAKtqD,EAAEsqD,KAAK,GAAK,GAAG,CACrC,IAAK,IAAIt7D,EAAI,EAAGi7D,EAAK,EAAyB,KAArBt5D,EAAE2pD,MAAM,GAAK2P,IAAaj7D,EAAI,KAAMA,EAAGi7D,IAAO,GACvE,GAAIj7D,EAAI,EAEN,IADA2B,EAAEm3D,OAAO94D,GACFA,KAAM,GACPq7D,EAAGH,SACLG,EAAG1K,KAAK59B,GAGVsoC,EAAGvC,OAAO,GAId,IAAK,IAAIv4D,EAAI,EAAG46D,EAAK,EAAyB,KAArBnqD,EAAEs6C,MAAM,GAAK6P,IAAa56D,EAAI,KAAMA,EAAG46D,IAAO,GACvE,GAAI56D,EAAI,EAEN,IADAyQ,EAAE8nD,OAAOv4D,GACFA,KAAM,GACP6sB,EAAG8tC,SACL9tC,EAAGujC,KAAK59B,GAGV3F,EAAG0rC,OAAO,GAIVn3D,EAAEsqD,IAAIj7C,IAAM,GACdrP,EAAEivD,KAAK5/C,GACPqqD,EAAGzK,KAAKxjC,KAERpc,EAAE4/C,KAAKjvD,GACPyrB,EAAGwjC,KAAKyK,IAeZ,OATEt3D,EADgB,IAAdpC,EAAE25D,KAAK,GACHD,EAEAjuC,GAGAkuC,KAAK,GAAK,GAChBv3D,EAAI4sD,KAAKhzC,GAGJ5Z,GAGT6yB,EAAGt0B,UAAUwiB,IAAM,SAAc/E,GAC/B,GAAI/d,KAAK2rD,SAAU,OAAO5tC,EAAIf,MAC9B,GAAIe,EAAI4tC,SAAU,OAAO3rD,KAAKgd,MAE9B,IAAIrd,EAAIK,KAAKgrD,QACTh8C,EAAI+O,EAAIitC,QACZrrD,EAAE0pD,SAAW,EACbr6C,EAAEq6C,SAAW,EAGb,IAAK,IAAI5rD,EAAQ,EAAGkC,EAAEm5D,UAAY9pD,EAAE8pD,SAAUr7D,IAC5CkC,EAAEm3D,OAAO,GACT9nD,EAAE8nD,OAAO,GAGX,OAAG,CACD,KAAOn3D,EAAEm5D,UACPn5D,EAAEm3D,OAAO,GAEX,KAAO9nD,EAAE8pD,UACP9pD,EAAE8nD,OAAO,GAGX,IAAIl3C,EAAIjgB,EAAEsqD,IAAIj7C,GACd,GAAI4Q,EAAI,EAAG,CAET,IAAIlG,EAAI/Z,EACRA,EAAIqP,EACJA,EAAI0K,OACC,GAAU,IAANkG,GAAyB,IAAd5Q,EAAEsqD,KAAK,GAC3B,MAGF35D,EAAEivD,KAAK5/C,GAGT,OAAOA,EAAE0nD,OAAOj5D,IAIlBm3B,EAAGt0B,UAAUi5D,KAAO,SAAex7C,GACjC,OAAO/d,KAAK44D,KAAK76C,GAAKpe,EAAE24D,KAAKv6C,IAG/B6W,EAAGt0B,UAAUw4D,OAAS,WACpB,OAA+B,KAAP,EAAhB94D,KAAKspD,MAAM,KAGrB10B,EAAGt0B,UAAU44D,MAAQ,WACnB,OAA+B,KAAP,EAAhBl5D,KAAKspD,MAAM,KAIrB10B,EAAGt0B,UAAUo4D,MAAQ,SAAgB36C,GACnC,OAAO/d,KAAKspD,MAAM,GAAKvrC,GAIzB6W,EAAGt0B,UAAUk5D,MAAQ,SAAgB/K,GACnCl/C,EAAsB,kBAARk/C,GACd,IAAI7uC,EAAI6uC,EAAM,GACVtvC,GAAKsvC,EAAM7uC,GAAK,GAChBgD,EAAI,GAAKhD,EAGb,GAAI5f,KAAKlC,QAAUqhB,EAGjB,OAFAnf,KAAKirD,QAAQ9rC,EAAI,GACjBnf,KAAKspD,MAAMnqC,IAAMyD,EACV5iB,KAKT,IADA,IAAIwrD,EAAQ5oC,EACH5kB,EAAImhB,EAAa,IAAVqsC,GAAextD,EAAIgC,KAAKlC,OAAQE,IAAK,CACnD,IAAIwsD,EAAoB,EAAhBxqD,KAAKspD,MAAMtrD,GAEnBwtD,GADAhB,GAAKgB,KACS,GACdhB,GAAK,SACLxqD,KAAKspD,MAAMtrD,GAAKwsD,EAMlB,OAJc,IAAVgB,IACFxrD,KAAKspD,MAAMtrD,GAAKwtD,EAChBxrD,KAAKlC,UAEAkC,MAGT40B,EAAGt0B,UAAUqrD,OAAS,WACpB,OAAuB,IAAhB3rD,KAAKlC,QAAkC,IAAlBkC,KAAKspD,MAAM,IAGzC10B,EAAGt0B,UAAUg5D,KAAO,SAAev7C,GACjC,IAOIhc,EAPAsnD,EAAWtrC,EAAM,EAErB,GAAsB,IAAlB/d,KAAKqpD,WAAmBA,EAAU,OAAQ,EAC9C,GAAsB,IAAlBrpD,KAAKqpD,UAAkBA,EAAU,OAAO,EAK5C,GAHArpD,KAAK0qD,SAGD1qD,KAAKlC,OAAS,EAChBiE,EAAM,MACD,CACDsnD,IACFtrC,GAAOA,GAGTxO,EAAOwO,GAAO,SAAW,qBAEzB,IAAIysC,EAAoB,EAAhBxqD,KAAKspD,MAAM,GACnBvnD,EAAMyoD,IAAMzsC,EAAM,EAAIysC,EAAIzsC,GAAO,EAAI,EAEvC,OAAsB,IAAlB/d,KAAKqpD,SAA8B,GAANtnD,EAC1BA,GAOT6yB,EAAGt0B,UAAU2pD,IAAM,SAAclsC,GAC/B,GAAsB,IAAlB/d,KAAKqpD,UAAmC,IAAjBtrC,EAAIsrC,SAAgB,OAAQ,EACvD,GAAsB,IAAlBrpD,KAAKqpD,UAAmC,IAAjBtrC,EAAIsrC,SAAgB,OAAO,EAEtD,IAAItnD,EAAM/B,KAAKy5D,KAAK17C,GACpB,OAAsB,IAAlB/d,KAAKqpD,SAA8B,GAANtnD,EAC1BA,GAIT6yB,EAAGt0B,UAAUm5D,KAAO,SAAe17C,GAEjC,GAAI/d,KAAKlC,OAASigB,EAAIjgB,OAAQ,OAAO,EACrC,GAAIkC,KAAKlC,OAASigB,EAAIjgB,OAAQ,OAAQ,EAGtC,IADA,IAAIiE,EAAM,EACD/D,EAAIgC,KAAKlC,OAAS,EAAGE,GAAK,EAAGA,IAAK,CACzC,IAAI2B,EAAoB,EAAhBK,KAAKspD,MAAMtrD,GACfgR,EAAmB,EAAf+O,EAAIurC,MAAMtrD,GAElB,GAAI2B,IAAMqP,EAAV,CACIrP,EAAIqP,EACNjN,GAAO,EACEpC,EAAIqP,IACbjN,EAAM,GAER,OAEF,OAAOA,GAGT6yB,EAAGt0B,UAAUo5D,IAAM,SAAc37C,GAC/B,OAA0B,IAAnB/d,KAAKs5D,KAAKv7C,IAGnB6W,EAAGt0B,UAAUq5D,GAAK,SAAa57C,GAC7B,OAAyB,IAAlB/d,KAAKiqD,IAAIlsC,IAGlB6W,EAAGt0B,UAAUs5D,KAAO,SAAe77C,GACjC,OAAO/d,KAAKs5D,KAAKv7C,IAAQ,GAG3B6W,EAAGt0B,UAAUu5D,IAAM,SAAc97C,GAC/B,OAAO/d,KAAKiqD,IAAIlsC,IAAQ,GAG1B6W,EAAGt0B,UAAUw5D,IAAM,SAAc/7C,GAC/B,OAA2B,IAApB/d,KAAKs5D,KAAKv7C,IAGnB6W,EAAGt0B,UAAUy5D,GAAK,SAAah8C,GAC7B,OAA0B,IAAnB/d,KAAKiqD,IAAIlsC,IAGlB6W,EAAGt0B,UAAU05D,KAAO,SAAej8C,GACjC,OAAO/d,KAAKs5D,KAAKv7C,IAAQ,GAG3B6W,EAAGt0B,UAAU25D,IAAM,SAAcl8C,GAC/B,OAAO/d,KAAKiqD,IAAIlsC,IAAQ,GAG1B6W,EAAGt0B,UAAU45D,IAAM,SAAcn8C,GAC/B,OAA0B,IAAnB/d,KAAKs5D,KAAKv7C,IAGnB6W,EAAGt0B,UAAUu0B,GAAK,SAAa9W,GAC7B,OAAyB,IAAlB/d,KAAKiqD,IAAIlsC,IAOlB6W,EAAG20B,IAAM,SAAcxrC,GACrB,OAAO,IAAIo8C,EAAIp8C,IAGjB6W,EAAGt0B,UAAU85D,MAAQ,SAAgB5xC,GAGnC,OAFAjZ,GAAQvP,KAAKupD,IAAK,yCAClBh6C,EAAyB,IAAlBvP,KAAKqpD,SAAgB,iCACrB7gC,EAAI6xC,UAAUr6D,MAAMs6D,UAAU9xC,IAGvCoM,EAAGt0B,UAAUi6D,QAAU,WAErB,OADAhrD,EAAOvP,KAAKupD,IAAK,wDACVvpD,KAAKupD,IAAIiR,YAAYx6D,OAG9B40B,EAAGt0B,UAAUg6D,UAAY,SAAoB9xC,GAE3C,OADAxoB,KAAKupD,IAAM/gC,EACJxoB,MAGT40B,EAAGt0B,UAAUm6D,SAAW,SAAmBjyC,GAEzC,OADAjZ,GAAQvP,KAAKupD,IAAK,yCACXvpD,KAAKs6D,UAAU9xC,IAGxBoM,EAAGt0B,UAAUo6D,OAAS,SAAiB38C,GAErC,OADAxO,EAAOvP,KAAKupD,IAAK,sCACVvpD,KAAKupD,IAAIjuC,IAAItb,KAAM+d,IAG5B6W,EAAGt0B,UAAUq6D,QAAU,SAAkB58C,GAEvC,OADAxO,EAAOvP,KAAKupD,IAAK,uCACVvpD,KAAKupD,IAAIoF,KAAK3uD,KAAM+d,IAG7B6W,EAAGt0B,UAAUs6D,OAAS,SAAiB78C,GAErC,OADAxO,EAAOvP,KAAKupD,IAAK,sCACVvpD,KAAKupD,IAAIsF,IAAI7uD,KAAM+d,IAG5B6W,EAAGt0B,UAAUu6D,QAAU,SAAkB98C,GAEvC,OADAxO,EAAOvP,KAAKupD,IAAK,uCACVvpD,KAAKupD,IAAIqF,KAAK5uD,KAAM+d,IAG7B6W,EAAGt0B,UAAUw6D,OAAS,SAAiB/8C,GAErC,OADAxO,EAAOvP,KAAKupD,IAAK,sCACVvpD,KAAKupD,IAAIwR,IAAI/6D,KAAM+d,IAG5B6W,EAAGt0B,UAAU06D,OAAS,SAAiBj9C,GAGrC,OAFAxO,EAAOvP,KAAKupD,IAAK,sCACjBvpD,KAAKupD,IAAI0R,SAASj7D,KAAM+d,GACjB/d,KAAKupD,IAAIO,IAAI9pD,KAAM+d,IAG5B6W,EAAGt0B,UAAU46D,QAAU,SAAkBn9C,GAGvC,OAFAxO,EAAOvP,KAAKupD,IAAK,sCACjBvpD,KAAKupD,IAAI0R,SAASj7D,KAAM+d,GACjB/d,KAAKupD,IAAI8I,KAAKryD,KAAM+d,IAG7B6W,EAAGt0B,UAAU66D,OAAS,WAGpB,OAFA5rD,EAAOvP,KAAKupD,IAAK,sCACjBvpD,KAAKupD,IAAI6R,SAASp7D,MACXA,KAAKupD,IAAIgN,IAAIv2D,OAGtB40B,EAAGt0B,UAAU+6D,QAAU,WAGrB,OAFA9rD,EAAOvP,KAAKupD,IAAK,uCACjBvpD,KAAKupD,IAAI6R,SAASp7D,MACXA,KAAKupD,IAAIiN,KAAKx2D,OAIvB40B,EAAGt0B,UAAUg7D,QAAU,WAGrB,OAFA/rD,EAAOvP,KAAKupD,IAAK,uCACjBvpD,KAAKupD,IAAI6R,SAASp7D,MACXA,KAAKupD,IAAIgS,KAAKv7D,OAGvB40B,EAAGt0B,UAAUk7D,QAAU,WAGrB,OAFAjsD,EAAOvP,KAAKupD,IAAK,uCACjBvpD,KAAKupD,IAAI6R,SAASp7D,MACXA,KAAKupD,IAAIgQ,KAAKv5D,OAIvB40B,EAAGt0B,UAAUm7D,OAAS,WAGpB,OAFAlsD,EAAOvP,KAAKupD,IAAK,sCACjBvpD,KAAKupD,IAAI6R,SAASp7D,MACXA,KAAKupD,IAAIkE,IAAIztD,OAGtB40B,EAAGt0B,UAAUo7D,OAAS,SAAiB39C,GAGrC,OAFAxO,EAAOvP,KAAKupD,MAAQxrC,EAAIwrC,IAAK,qBAC7BvpD,KAAKupD,IAAI6R,SAASp7D,MACXA,KAAKupD,IAAIx3C,IAAI/R,KAAM+d,IAI5B,IAAI49C,EAAS,CACXC,KAAM,KACNC,KAAM,KACNC,KAAM,KACNC,OAAQ,MAIV,SAASC,EAAQzwD,EAAMoQ,GAErB3b,KAAKuL,KAAOA,EACZvL,KAAK2b,EAAI,IAAIiZ,EAAGjZ,EAAG,IACnB3b,KAAK6O,EAAI7O,KAAK2b,EAAEkxC,YAChB7sD,KAAK4lB,EAAI,IAAIgP,EAAG,GAAG8hC,OAAO12D,KAAK6O,GAAG+/C,KAAK5uD,KAAK2b,GAE5C3b,KAAKe,IAAMf,KAAKi8D,OAiDlB,SAASC,IACPF,EAAOz7D,KACLP,KACA,OACA,2EA+DJ,SAASm8D,IACPH,EAAOz7D,KACLP,KACA,OACA,kEAIJ,SAASo8D,IACPJ,EAAOz7D,KACLP,KACA,OACA,yDAIJ,SAASq8D,IAEPL,EAAOz7D,KACLP,KACA,QACA,uEA8CJ,SAASm6D,EAAKt3C,GACZ,GAAiB,kBAANA,EAAgB,CACzB,IAAIy5C,EAAQ1nC,EAAG2nC,OAAO15C,GACtB7iB,KAAK6iB,EAAIy5C,EAAM3gD,EACf3b,KAAKs8D,MAAQA,OAEb/sD,EAAOsT,EAAE62C,IAAI,GAAI,kCACjB15D,KAAK6iB,EAAIA,EACT7iB,KAAKs8D,MAAQ,KAoOjB,SAASE,EAAM35C,GACbs3C,EAAI55D,KAAKP,KAAM6iB,GAEf7iB,KAAKvC,MAAQuC,KAAK6iB,EAAEgqC,YAChB7sD,KAAKvC,MAAQ,KAAO,IACtBuC,KAAKvC,OAAS,GAAMuC,KAAKvC,MAAQ,IAGnCuC,KAAK4f,EAAI,IAAIgV,EAAG,GAAG8hC,OAAO12D,KAAKvC,OAC/BuC,KAAK8gB,GAAK9gB,KAAKy8D,KAAKz8D,KAAK4f,EAAE22C,OAC3Bv2D,KAAKovB,KAAOpvB,KAAK4f,EAAEw5C,OAAOp5D,KAAK6iB,GAE/B7iB,KAAK08D,KAAO18D,KAAKovB,KAAK06B,IAAI9pD,KAAK4f,GAAG63C,MAAM,GAAGS,IAAIl4D,KAAK6iB,GACpD7iB,KAAK08D,KAAO18D,KAAK08D,KAAKpE,KAAKt4D,KAAK4f,GAChC5f,KAAK08D,KAAO18D,KAAK4f,EAAEivC,IAAI7uD,KAAK08D,MA9a9BV,EAAO17D,UAAU27D,KAAO,WACtB,IAAIl7D,EAAM,IAAI6zB,EAAG,MAEjB,OADA7zB,EAAIuoD,MAAQ,IAAI1rD,MAAMP,KAAK6lC,KAAKljC,KAAK6O,EAAI,KAClC9N,GAGTi7D,EAAO17D,UAAUq8D,QAAU,SAAkB5+C,GAG3C,IACI6+C,EADAh9C,EAAI7B,EAGR,GACE/d,KAAKsS,MAAMsN,EAAG5f,KAAKe,KAGnB67D,GADAh9C,GADAA,EAAI5f,KAAK68D,MAAMj9C,IACT+uC,KAAK3uD,KAAKe,MACP8rD,kBACF+P,EAAO58D,KAAK6O,GAErB,IAAIo7C,EAAM2S,EAAO58D,KAAK6O,GAAK,EAAI+Q,EAAE65C,KAAKz5D,KAAK2b,GAgB3C,OAfY,IAARsuC,GACFrqC,EAAE0pC,MAAM,GAAK,EACb1pC,EAAE9hB,OAAS,GACFmsD,EAAM,EACfrqC,EAAEgvC,KAAK5uD,KAAK2b,QAEIvb,IAAZwf,EAAEk9C,MAEJl9C,EAAEk9C,QAGFl9C,EAAE8qC,SAIC9qC,GAGTo8C,EAAO17D,UAAUgS,MAAQ,SAAgBsV,EAAOla,GAC9Cka,EAAMkvC,OAAO92D,KAAK6O,EAAG,EAAGnB,IAG1BsuD,EAAO17D,UAAUu8D,MAAQ,SAAgB9+C,GACvC,OAAOA,EAAIs0C,KAAKryD,KAAK4lB,IASvBkjC,EAASoT,EAAMF,GAEfE,EAAK57D,UAAUgS,MAAQ,SAAgBsV,EAAOja,GAK5C,IAHA,IAAI+O,EAAO,QAEPqgD,EAAS1/D,KAAKgQ,IAAIua,EAAM9pB,OAAQ,GAC3BE,EAAI,EAAGA,EAAI++D,EAAQ/+D,IAC1B2P,EAAO27C,MAAMtrD,GAAK4pB,EAAM0hC,MAAMtrD,GAIhC,GAFA2P,EAAO7P,OAASi/D,EAEZn1C,EAAM9pB,QAAU,EAGlB,OAFA8pB,EAAM0hC,MAAM,GAAK,OACjB1hC,EAAM9pB,OAAS,GAKjB,IAAIk/D,EAAOp1C,EAAM0hC,MAAM,GAGvB,IAFA37C,EAAO27C,MAAM37C,EAAO7P,UAAYk/D,EAAOtgD,EAElC1e,EAAI,GAAIA,EAAI4pB,EAAM9pB,OAAQE,IAAK,CAClC,IAAIgE,EAAwB,EAAjB4lB,EAAM0hC,MAAMtrD,GACvB4pB,EAAM0hC,MAAMtrD,EAAI,KAAQgE,EAAO0a,IAAS,EAAMsgD,IAAS,GACvDA,EAAOh7D,EAETg7D,KAAU,GACVp1C,EAAM0hC,MAAMtrD,EAAI,IAAMg/D,EACT,IAATA,GAAcp1C,EAAM9pB,OAAS,GAC/B8pB,EAAM9pB,QAAU,GAEhB8pB,EAAM9pB,QAAU,GAIpBo+D,EAAK57D,UAAUu8D,MAAQ,SAAgB9+C,GAErCA,EAAIurC,MAAMvrC,EAAIjgB,QAAU,EACxBigB,EAAIurC,MAAMvrC,EAAIjgB,OAAS,GAAK,EAC5BigB,EAAIjgB,QAAU,EAId,IADA,IAAIsS,EAAK,EACApS,EAAI,EAAGA,EAAI+f,EAAIjgB,OAAQE,IAAK,CACnC,IAAIwsD,EAAmB,EAAfzsC,EAAIurC,MAAMtrD,GAClBoS,GAAU,IAAJo6C,EACNzsC,EAAIurC,MAAMtrD,GAAU,SAALoS,EACfA,EAAS,GAAJo6C,GAAap6C,EAAK,SAAa,GAUtC,OANkC,IAA9B2N,EAAIurC,MAAMvrC,EAAIjgB,OAAS,KACzBigB,EAAIjgB,SAC8B,IAA9BigB,EAAIurC,MAAMvrC,EAAIjgB,OAAS,IACzBigB,EAAIjgB,UAGDigB,GAST+qC,EAASqT,EAAMH,GAQflT,EAASsT,EAAMJ,GASflT,EAASuT,EAAQL,GAEjBK,EAAO/7D,UAAUu8D,MAAQ,SAAgB9+C,GAGvC,IADA,IAAIytC,EAAQ,EACHxtD,EAAI,EAAGA,EAAI+f,EAAIjgB,OAAQE,IAAK,CACnC,IAAI8uD,EAA0B,IAAL,EAAf/uC,EAAIurC,MAAMtrD,IAAiBwtD,EACjCp7C,EAAU,SAAL08C,EACTA,KAAQ,GAER/uC,EAAIurC,MAAMtrD,GAAKoS,EACfo7C,EAAQsB,EAKV,OAHc,IAAVtB,IACFztC,EAAIurC,MAAMvrC,EAAIjgB,UAAY0tD,GAErBztC,GAIT6W,EAAG2nC,OAAS,SAAgBhxD,GAE1B,GAAIowD,EAAOpwD,GAAO,OAAOowD,EAAOpwD,GAEhC,IAAI+wD,EACJ,GAAa,SAAT/wD,EACF+wD,EAAQ,IAAIJ,OACP,GAAa,SAAT3wD,EACT+wD,EAAQ,IAAIH,OACP,GAAa,SAAT5wD,EACT+wD,EAAQ,IAAIF,MACP,IAAa,WAAT7wD,EAGT,MAAM,IAAI7N,MAAM,iBAAmB6N,GAFnC+wD,EAAQ,IAAID,EAMd,OAFAV,EAAOpwD,GAAQ+wD,EAERA,GAkBTnC,EAAI75D,UAAU86D,SAAW,SAAmBz7D,GAC1C4P,EAAsB,IAAf5P,EAAE0pD,SAAgB,iCACzB95C,EAAO5P,EAAE4pD,IAAK,oCAGhB4Q,EAAI75D,UAAU26D,SAAW,SAAmBt7D,EAAGqP,GAC7CO,EAAqC,KAA7B5P,EAAE0pD,SAAWr6C,EAAEq6C,UAAiB,iCACxC95C,EAAO5P,EAAE4pD,KAAO5pD,EAAE4pD,MAAQv6C,EAAEu6C,IAC1B,oCAGJ4Q,EAAI75D,UAAUm8D,KAAO,SAAe98D,GAClC,OAAIK,KAAKs8D,MAAct8D,KAAKs8D,MAAMK,QAAQh9D,GAAG26D,UAAUt6D,OAEvD+pD,EAAKpqD,EAAGA,EAAE24D,KAAKt4D,KAAK6iB,GAAGy3C,UAAUt6D,OAC1BL,IAGTw6D,EAAI75D,UAAUmtD,IAAM,SAAc9tD,GAChC,OAAIA,EAAEgsD,SACGhsD,EAAEqrD,QAGJhrD,KAAK6iB,EAAEgsC,IAAIlvD,GAAG26D,UAAUt6D,OAGjCm6D,EAAI75D,UAAUgb,IAAM,SAAc3b,EAAGqP,GACnChP,KAAKi7D,SAASt7D,EAAGqP,GAEjB,IAAIjN,EAAMpC,EAAE2b,IAAItM,GAIhB,OAHIjN,EAAIkoD,IAAIjqD,KAAK6iB,IAAM,GACrB9gB,EAAI6sD,KAAK5uD,KAAK6iB,GAET9gB,EAAIu4D,UAAUt6D,OAGvBm6D,EAAI75D,UAAUquD,KAAO,SAAehvD,EAAGqP,GACrChP,KAAKi7D,SAASt7D,EAAGqP,GAEjB,IAAIjN,EAAMpC,EAAEgvD,KAAK3/C,GAIjB,OAHIjN,EAAIkoD,IAAIjqD,KAAK6iB,IAAM,GACrB9gB,EAAI6sD,KAAK5uD,KAAK6iB,GAET9gB,GAGTo4D,EAAI75D,UAAUuuD,IAAM,SAAclvD,EAAGqP,GACnChP,KAAKi7D,SAASt7D,EAAGqP,GAEjB,IAAIjN,EAAMpC,EAAEkvD,IAAI7/C,GAIhB,OAHIjN,EAAIu3D,KAAK,GAAK,GAChBv3D,EAAI4sD,KAAK3uD,KAAK6iB,GAET9gB,EAAIu4D,UAAUt6D,OAGvBm6D,EAAI75D,UAAUsuD,KAAO,SAAejvD,EAAGqP,GACrChP,KAAKi7D,SAASt7D,EAAGqP,GAEjB,IAAIjN,EAAMpC,EAAEivD,KAAK5/C,GAIjB,OAHIjN,EAAIu3D,KAAK,GAAK,GAChBv3D,EAAI4sD,KAAK3uD,KAAK6iB,GAET9gB,GAGTo4D,EAAI75D,UAAUy6D,IAAM,SAAcp7D,EAAGoe,GAEnC,OADA/d,KAAKo7D,SAASz7D,GACPK,KAAKy8D,KAAK98D,EAAEy3D,MAAMr5C,KAG3Bo8C,EAAI75D,UAAU+xD,KAAO,SAAe1yD,EAAGqP,GAErC,OADAhP,KAAKi7D,SAASt7D,EAAGqP,GACVhP,KAAKy8D,KAAK98D,EAAE0yD,KAAKrjD,KAG1BmrD,EAAI75D,UAAUwpD,IAAM,SAAcnqD,EAAGqP,GAEnC,OADAhP,KAAKi7D,SAASt7D,EAAGqP,GACVhP,KAAKy8D,KAAK98D,EAAEmqD,IAAI96C,KAGzBmrD,EAAI75D,UAAUk2D,KAAO,SAAe72D,GAClC,OAAOK,KAAKqyD,KAAK1yD,EAAGA,EAAEqrD,UAGxBmP,EAAI75D,UAAUi2D,IAAM,SAAc52D,GAChC,OAAOK,KAAK8pD,IAAInqD,EAAGA,IAGrBw6D,EAAI75D,UAAUi7D,KAAO,SAAe57D,GAClC,GAAIA,EAAEgsD,SAAU,OAAOhsD,EAAEqrD,QAEzB,IAAIiS,EAAOj9D,KAAK6iB,EAAE61C,MAAM,GAIxB,GAHAnpD,EAAO0tD,EAAO,IAAM,GAGP,IAATA,EAAY,CACd,IAAIlrD,EAAM/R,KAAK6iB,EAAEvH,IAAI,IAAIsZ,EAAG,IAAIkiC,OAAO,GACvC,OAAO92D,KAAK+R,IAAIpS,EAAGoS,GAQrB,IAFA,IAAI6Q,EAAI5iB,KAAK6iB,EAAE80C,KAAK,GAChBx4C,EAAI,GACAyD,EAAE+oC,UAA2B,IAAf/oC,EAAE81C,MAAM,IAC5Bv5C,IACAyD,EAAEk0C,OAAO,GAEXvnD,GAAQqT,EAAE+oC,UAEV,IAAIpsC,EAAM,IAAIqV,EAAG,GAAGwlC,MAAMp6D,MACtBk9D,EAAO39C,EAAIk8C,SAIX0B,EAAOn9D,KAAK6iB,EAAE80C,KAAK,GAAGb,OAAO,GAC7Br9C,EAAIzZ,KAAK6iB,EAAEgqC,YAGf,IAFApzC,EAAI,IAAImb,EAAG,EAAInb,EAAIA,GAAG2gD,MAAMp6D,MAEW,IAAhCA,KAAK+R,IAAI0H,EAAG0jD,GAAMlT,IAAIiT,IAC3BzjD,EAAEkhD,QAAQuC,GAOZ,IAJA,IAAIp9C,EAAI9f,KAAK+R,IAAI0H,EAAGmJ,GAChBhD,EAAI5f,KAAK+R,IAAIpS,EAAGijB,EAAE80C,KAAK,GAAGZ,OAAO,IACjCp9C,EAAI1Z,KAAK+R,IAAIpS,EAAGijB,GAChBC,EAAI1D,EACc,IAAfzF,EAAEuwC,IAAI1qC,IAAY,CAEvB,IADA,IAAIxe,EAAM2Y,EACD1b,EAAI,EAAoB,IAAjB+C,EAAIkpD,IAAI1qC,GAAYvhB,IAClC+C,EAAMA,EAAIo6D,SAEZ5rD,EAAOvR,EAAI6kB,GACX,IAAI7T,EAAIhP,KAAK+R,IAAI+N,EAAG,IAAI8U,EAAG,GAAG8hC,OAAO7zC,EAAI7kB,EAAI,IAE7C4hB,EAAIA,EAAEo7C,OAAOhsD,GACb8Q,EAAI9Q,EAAEmsD,SACNzhD,EAAIA,EAAEshD,OAAOl7C,GACb+C,EAAI7kB,EAGN,OAAO4hB,GAGTu6C,EAAI75D,UAAUi5D,KAAO,SAAe55D,GAClC,IAAIy9D,EAAMz9D,EAAEy5D,OAAOp5D,KAAK6iB,GACxB,OAAqB,IAAjBu6C,EAAI/T,UACN+T,EAAI/T,SAAW,EACRrpD,KAAKy8D,KAAKW,GAAK3B,UAEfz7D,KAAKy8D,KAAKW,IAIrBjD,EAAI75D,UAAUyR,IAAM,SAAcpS,EAAGoe,GACnC,GAAIA,EAAI4tC,SAAU,OAAO,IAAI/2B,EAAG,GAAGwlC,MAAMp6D,MACzC,GAAoB,IAAhB+d,EAAIu7C,KAAK,GAAU,OAAO35D,EAAEqrD,QAEhC,IACIqS,EAAM,IAAIz/D,MAAM,IACpBy/D,EAAI,GAAK,IAAIzoC,EAAG,GAAGwlC,MAAMp6D,MACzBq9D,EAAI,GAAK19D,EACT,IAAK,IAAI3B,EAAI,EAAGA,EAAIq/D,EAAIv/D,OAAQE,IAC9Bq/D,EAAIr/D,GAAKgC,KAAK8pD,IAAIuT,EAAIr/D,EAAI,GAAI2B,GAGhC,IAAIoC,EAAMs7D,EAAI,GACVzvB,EAAU,EACV0vB,EAAa,EACb9lD,EAAQuG,EAAI8uC,YAAc,GAK9B,IAJc,IAAVr1C,IACFA,EAAQ,IAGLxZ,EAAI+f,EAAIjgB,OAAS,EAAGE,GAAK,EAAGA,IAAK,CAEpC,IADA,IAAIR,EAAOugB,EAAIurC,MAAMtrD,GACZO,EAAIiZ,EAAQ,EAAGjZ,GAAK,EAAGA,IAAK,CACnC,IAAIkwD,EAAOjxD,GAAQe,EAAK,EACpBwD,IAAQs7D,EAAI,KACdt7D,EAAM/B,KAAKu2D,IAAIx0D,IAGL,IAAR0sD,GAAyB,IAAZ7gB,GAKjBA,IAAY,EACZA,GAAW6gB,GA9BE,MA+Bb6O,GACwC,IAANt/D,GAAiB,IAANO,KAE7CwD,EAAM/B,KAAK8pD,IAAI/nD,EAAKs7D,EAAIzvB,IACxB0vB,EAAa,EACb1vB,EAAU,IAXR0vB,EAAa,EAajB9lD,EAAQ,GAGV,OAAOzV,GAGTo4D,EAAI75D,UAAU+5D,UAAY,SAAoBt8C,GAC5C,IAAI6B,EAAI7B,EAAIu6C,KAAKt4D,KAAK6iB,GAEtB,OAAOjD,IAAM7B,EAAM6B,EAAEorC,QAAUprC,GAGjCu6C,EAAI75D,UAAUk6D,YAAc,SAAsBz8C,GAChD,IAAIhc,EAAMgc,EAAIitC,QAEd,OADAjpD,EAAIwnD,IAAM,KACHxnD,GAOT6yB,EAAG2oC,KAAO,SAAex/C,GACvB,OAAO,IAAIy+C,EAAKz+C,IAmBlB+qC,EAAS0T,EAAMrC,GAEfqC,EAAKl8D,UAAU+5D,UAAY,SAAoBt8C,GAC7C,OAAO/d,KAAKy8D,KAAK1+C,EAAIq5C,MAAMp3D,KAAKvC,SAGlC++D,EAAKl8D,UAAUk6D,YAAc,SAAsBz8C,GACjD,IAAI6B,EAAI5f,KAAKy8D,KAAK1+C,EAAI+rC,IAAI9pD,KAAKovB,OAE/B,OADAxP,EAAE2pC,IAAM,KACD3pC,GAGT48C,EAAKl8D,UAAU+xD,KAAO,SAAe1yD,EAAGqP,GACtC,GAAIrP,EAAEgsD,UAAY38C,EAAE28C,SAGlB,OAFAhsD,EAAE2pD,MAAM,GAAK,EACb3pD,EAAE7B,OAAS,EACJ6B,EAGT,IAAI+Z,EAAI/Z,EAAE0yD,KAAKrjD,GACX8Q,EAAIpG,EAAE89C,MAAMx3D,KAAKvC,OAAOqsD,IAAI9pD,KAAK08D,MAAMnF,OAAOv3D,KAAKvC,OAAOqsD,IAAI9pD,KAAK6iB,GACnEb,EAAItI,EAAEk1C,KAAK9uC,GAAGg3C,OAAO92D,KAAKvC,OAC1BsE,EAAMigB,EAQV,OANIA,EAAEioC,IAAIjqD,KAAK6iB,IAAM,EACnB9gB,EAAMigB,EAAE4sC,KAAK5uD,KAAK6iB,GACTb,EAAEs3C,KAAK,GAAK,IACrBv3D,EAAMigB,EAAE2sC,KAAK3uD,KAAK6iB,IAGb9gB,EAAIu4D,UAAUt6D,OAGvBw8D,EAAKl8D,UAAUwpD,IAAM,SAAcnqD,EAAGqP,GACpC,GAAIrP,EAAEgsD,UAAY38C,EAAE28C,SAAU,OAAO,IAAI/2B,EAAG,GAAG0lC,UAAUt6D,MAEzD,IAAI0Z,EAAI/Z,EAAEmqD,IAAI96C,GACV8Q,EAAIpG,EAAE89C,MAAMx3D,KAAKvC,OAAOqsD,IAAI9pD,KAAK08D,MAAMnF,OAAOv3D,KAAKvC,OAAOqsD,IAAI9pD,KAAK6iB,GACnEb,EAAItI,EAAEk1C,KAAK9uC,GAAGg3C,OAAO92D,KAAKvC,OAC1BsE,EAAMigB,EAOV,OANIA,EAAEioC,IAAIjqD,KAAK6iB,IAAM,EACnB9gB,EAAMigB,EAAE4sC,KAAK5uD,KAAK6iB,GACTb,EAAEs3C,KAAK,GAAK,IACrBv3D,EAAMigB,EAAE2sC,KAAK3uD,KAAK6iB,IAGb9gB,EAAIu4D,UAAUt6D,OAGvBw8D,EAAKl8D,UAAUi5D,KAAO,SAAe55D,GAGnC,OADUK,KAAKy8D,KAAK98D,EAAEy5D,OAAOp5D,KAAK6iB,GAAGinC,IAAI9pD,KAAK8gB,KACnCw5C,UAAUt6D,OAx9GzB,CA09GoC2B,EAAQ3B,Q,wDC38G5C,SAASyjE,EAAQ9jE,EAAG0N,EAAKsX,GACvB,OAAOtX,GAAO1N,GAAKA,GAAKglB,EAO1B,SAAS++C,EAAa1U,GACpB,QAAU5uD,IAAN4uD,EAAiB,MAAO,GAC5B,GAAIA,IAAMxzD,OAAOwzD,GAAI,OAAOA,EAC5B,MAAM3wD,UAAU,4CA1BlB,+FA0JA,SAASslE,EAAOC,GAEd5jE,KAAK4jE,OAAS,GAAGnlE,MAAM8B,KAAKqjE,GAG9BD,EAAOrjE,UAAY,CAIjBujE,YAAa,WACX,OAAQ7jE,KAAK4jE,OAAO9lE,QAWrBgmE,KAAM,WACL,OAAK9jE,KAAK4jE,OAAO9lE,OAETkC,KAAK4jE,OAAOnmE,SAjCA,GA2CtBsmE,QAAS,SAASC,GAChB,GAAIpmE,MAAM2W,QAAQyvD,GAEhB,IADA,IAAIJ,EAAsCI,EACnCJ,EAAO9lE,QACZkC,KAAK4jE,OAAOvmC,QAAQumC,EAAOK,YAE7BjkE,KAAK4jE,OAAOvmC,QAAQ2mC,IAWxBh/D,KAAM,SAASg/D,GACb,GAAIpmE,MAAM2W,QAAQyvD,GAEhB,IADA,IAAIJ,EAAsCI,EACnCJ,EAAO9lE,QACZkC,KAAK4jE,OAAO5+D,KAAK4+D,EAAOnmE,cAE1BuC,KAAK4jE,OAAO5+D,KAAKg/D,KAYvB,IAAIn3D,GAAY,EAOhB,SAASq3D,EAAarD,EAAOsD,GAC3B,GAAItD,EACF,MAAMxiE,UAAU,iBAClB,OAAO8lE,GAAkB,MA+Bb,IAAIC,EAAmB,QAUrC,SAASxD,EAAYzpB,EAAU7uB,GAC7B,KAAMtoB,gBAAgB4gE,GACpB,OAAO,IAAIA,EAAYzpB,EAAU7uB,GAGnC,IADA6uB,OAAwB/2C,IAAb+2C,EAAyBp/B,OAAOo/B,GAAUktB,cAAgBD,KACpDA,EACf,MAAM,IAAI1mE,MAAM,mDAElB4qB,EAAUo7C,EAAap7C,GAGvBtoB,KAAKskE,YAAa,EAElBtkE,KAAKukE,UAAW,EAEhBvkE,KAAKwkE,SAAW,KAEhBxkE,KAAKykE,OAASvtD,QAAQoR,EAAO,OAE7BtoB,KAAK0kE,WAAaxtD,QAAQoR,EAAO,WAEjC9sB,OAAOC,eAAeuE,KAAM,WAAY,CAACrE,MAAO,UAChDH,OAAOC,eAAeuE,KAAM,QAAS,CAACrE,MAAOqE,KAAKykE,SAClDjpE,OAAOC,eAAeuE,KAAM,YAAa,CAACrE,MAAOqE,KAAK0kE,aA6FxD,SAASplE,EAAY63C,EAAU7uB,GAC7B,KAAMtoB,gBAAgBV,GACpB,OAAO,IAAIA,EAAY63C,EAAU7uB,GAEnC,IADA6uB,OAAwB/2C,IAAb+2C,EAAyBp/B,OAAOo/B,GAAUktB,cAAgBD,KACpDA,EACf,MAAM,IAAI1mE,MAAM,mDAElB4qB,EAAUo7C,EAAap7C,GAGvBtoB,KAAKskE,YAAa,EAElBtkE,KAAK2kE,SAAW,KAEhB3kE,KAAK4kE,SAAW,CAAC/D,MAAO3pD,QAAQoR,EAAO,QAEvC9sB,OAAOC,eAAeuE,KAAM,WAAY,CAACrE,MAAO,UA4DlD,SAASkpE,EAAYv8C,GACnB,IAAIu4C,EAAQv4C,EAAQu4C,MAMMiE,EAAkB,EAClBC,EAAkB,EAClBC,EAAoB,EACpBC,EAAsB,IACtBC,EAAsB,IAShDllE,KAAKqD,QAAU,SAAS8hE,EAAQC,GAG9B,IAxVoB,IAwVhBA,GAAgD,IAAtBJ,EAE5B,OADAA,EAAoB,EACbd,EAAarD,GAItB,IA9VoB,IA8VhBuE,EACF,OAAOv4D,EAGT,GAA0B,IAAtBm4D,EAAyB,CAG3B,GAAIvB,EAAQ2B,EAAM,EAAM,KAEtB,OAAOA,EAIT,GAAI3B,EAAQ2B,EAAM,IAAM,KAGtBJ,EAAoB,EACpBF,EAAkBM,EAAO,SAItB,GAAI3B,EAAQ2B,EAAM,IAAM,KAEd,MAATA,IACFH,EAAsB,KAEX,MAATG,IACFF,EAAsB,KAGxBF,EAAoB,EACpBF,EAAkBM,EAAO,QAItB,KAAI3B,EAAQ2B,EAAM,IAAM,KAgB3B,OAAOlB,EAAarD,GAdP,MAATuE,IACFH,EAAsB,KAEX,MAATG,IACFF,EAAsB,KAGxBF,EAAoB,EACpBF,EAAkBM,EAAO,IAa3B,OADAN,IAAsC,EAAIE,EACnC,KAKT,IAAKvB,EAAQ2B,EAAMH,EAAqBC,GAatC,OARAJ,EAAkBE,EAAoBD,EAAkB,EACxDE,EAAsB,IACtBC,EAAsB,IAGtBC,EAAOpB,QAAQqB,GAGRlB,EAAarD,GAgBtB,GAXAoE,EAAsB,IACtBC,EAAsB,IAMtBJ,GAAoBM,EAAO,KAAU,GAAKJ,GAD1CD,GAAmB,IAKfA,IAAoBC,EACtB,OAAO,KAGT,IAAIK,EAAaP,EAOjB,OAHAA,EAAkBE,EAAoBD,EAAkB,EAGjDM,GASX,SAASC,EAAYh9C,GACPA,EAAQu4C,MAMpB7gE,KAAKqD,QAAU,SAAS8hE,EAAQE,GAE9B,IAvdoB,IAudhBA,EACF,OAAOx4D,EAIT,GAAI42D,EAAQ4B,EAAY,EAAQ,KAC9B,OAAOA,EAGT,IAAItxD,EAAOhE,EAEP0zD,EAAQ4B,EAAY,IAAQ,OAC9BtxD,EAAQ,EACRhE,EAAS,KAGF0zD,EAAQ4B,EAAY,KAAQ,QACnCtxD,EAAQ,EACRhE,EAAS,KAGF0zD,EAAQ4B,EAAY,MAAS,WACpCtxD,EAAQ,EACRhE,EAAS,KAQX,IAHA,IAAId,EAAQ,EAAEo2D,GAAe,EAAItxD,GAAUhE,GAGpCgE,EAAQ,GAAG,CAGhB,IAAIwxD,EAAOF,GAAe,GAAKtxD,EAAQ,GAGvC9E,EAAMjK,KAAK,IAAe,GAAPugE,GAGnBxxD,GAAS,EAIX,OAAO9E,GAxWX2xD,EAAYtgE,UAAY,CAMtB0G,OAAQ,SAAgB4gB,EAAOU,GAC7B,IAAIrZ,EAEFA,EADmB,kBAAV2Y,GAAsBA,aAAiB49C,YACxC,IAAIxoE,WAAW4qB,GACG,kBAAVA,GAAsB,WAAYA,GACzCA,EAAM3qB,kBAAkBuoE,YACzB,IAAIxoE,WAAW4qB,EAAM3qB,OACN2qB,EAAM1qB,WACN0qB,EAAMzqB,YAErB,IAAIH,WAAW,GAGzBsrB,EAAUo7C,EAAap7C,GAElBtoB,KAAKskE,aACRtkE,KAAKwkE,SAAW,IAAIK,EAAY,CAAChE,MAAO7gE,KAAKykE,SAC7CzkE,KAAKukE,UAAW,GAElBvkE,KAAKskE,WAAaptD,QAAQoR,EAAO,QASjC,IAPA,IAKIzoB,EALA4lE,EAAe,IAAI9B,EAAO10D,GAE1By2D,EAAc,IAKVD,EAAa5B,gBACnBhkE,EAASG,KAAKwkE,SAASnhE,QAAQoiE,EAAcA,EAAa3B,WAC3Cj3D,GAEA,OAAXhN,IAEAjC,MAAM2W,QAAQ1U,GAChB6lE,EAAY1gE,KAAK68D,MAAM6D,EAA0C7lE,GAEjE6lE,EAAY1gE,KAAKnF,IAErB,IAAKG,KAAKskE,WAAY,CACpB,EAAG,CAED,IADAzkE,EAASG,KAAKwkE,SAASnhE,QAAQoiE,EAAcA,EAAa3B,WAC3Cj3D,EACb,MACa,OAAXhN,IAEAjC,MAAM2W,QAAQ1U,GAChB6lE,EAAY1gE,KAAK68D,MAAM6D,EAA0C7lE,GAEjE6lE,EAAY1gE,KAAKnF,WACX4lE,EAAa5B,eACvB7jE,KAAKwkE,SAAW,KAqBlB,OAlBIkB,EAAY5nE,UAI4B,IAAtC,CAAC,SAAS0/B,QAAQx9B,KAAKm3C,WACtBn3C,KAAK0kE,YAAe1kE,KAAKukE,WAEL,QAAnBmB,EAAY,IACd1lE,KAAKukE,UAAW,EAChBmB,EAAYjoE,SAIZuC,KAAKukE,UAAW,IAjQ1B,SAA4BmB,GAE1B,IADA,IAAIvmD,EAAI,GACCnhB,EAAI,EAAGA,EAAI0nE,EAAY5nE,SAAUE,EAAG,CAC3C,IAAI2nE,EAAKD,EAAY1nE,GACjB2nE,GAAM,MACRxmD,GAAKpH,OAAO6tD,aAAaD,IAEzBA,GAAM,MACNxmD,GAAKpH,OAAO6tD,aAA0B,OAAZD,GAAM,IACQ,OAAT,KAALA,KAG9B,OAAOxmD,EA0PE0mD,CAAmBH,KA+B9BpmE,EAAYgB,UAAY,CAMtBf,OAAQ,SAAgBumE,EAAYx9C,GAClCw9C,EAAaA,EAAa/tD,OAAO+tD,GAAc,GAC/Cx9C,EAAUo7C,EAAap7C,GAKlBtoB,KAAKskE,aACRtkE,KAAK2kE,SAAW,IAAIW,EAAYtlE,KAAK4kE,WACvC5kE,KAAKskE,WAAaptD,QAAQoR,EAAO,QAMjC,IAJA,IAGIzoB,EAHAoP,EAAQ,GACRw2D,EAAe,IAAI9B,EA1Y3B,SAA4Bv5C,GAgB1B,IAZA,IAAIjL,EAAIpH,OAAOqS,GAGXvb,EAAIsQ,EAAErhB,OAGNE,EAAI,EAGJgkB,EAAI,GAGDhkB,EAAI6Q,GAAG,CAGZ,IAAIiR,EAAIX,EAAEwU,WAAW31B,GAKrB,GAAI8hB,EAAI,OAAUA,EAAI,MAEpBkC,EAAEhd,KAAK8a,QAIJ,GAAI,OAAUA,GAAKA,GAAK,MAE3BkC,EAAEhd,KAAK,YAIJ,GAAI,OAAU8a,GAAKA,GAAK,MAG3B,GAAI9hB,IAAM6Q,EAAI,EACZmT,EAAEhd,KAAK,WAGJ,CAEH,IAAI4T,EAAIwR,EAAOuJ,WAAW31B,EAAI,GAG9B,GAAI,OAAU4a,GAAKA,GAAK,MAAQ,CAE9B,IAAIjZ,EAAQ,KAAJmgB,EAGJ9Q,EAAQ,KAAJ4J,EAIRoJ,EAAEhd,KAAK,OAAWrF,GAAK,IAAMqP,GAG7BhR,GAAK,OAMLgkB,EAAEhd,KAAK,OAMbhH,GAAK,EAIP,OAAOgkB,EA8TyB+jD,CAAmBD,KAGzCL,EAAa5B,gBACnBhkE,EAASG,KAAK2kE,SAASthE,QAAQoiE,EAAcA,EAAa3B,WAC3Cj3D,GAEXjP,MAAM2W,QAAQ1U,GAChBoP,EAAMjK,KAAK68D,MAAM5yD,EAAoCpP,GAErDoP,EAAMjK,KAAKnF,GAEf,IAAKG,KAAKskE,WAAY,CACpB,MACEzkE,EAASG,KAAK2kE,SAASthE,QAAQoiE,EAAcA,EAAa3B,WAC3Cj3D,GAEXjP,MAAM2W,QAAQ1U,GAChBoP,EAAMjK,KAAK68D,MAAM5yD,EAAoCpP,GAErDoP,EAAMjK,KAAKnF,GAEfG,KAAK2kE,SAAW,KAElB,OAAO,IAAI3nE,WAAWiS,M,mCCnc1B,YAEAzT,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IAmBtDD,EAAQslC,WAZR,SAAoBkgC,GAEZ,IAAM8E,EAAWt8D,EAAO7L,KAAKqjE,GAC7B8E,EAAStjD,UACT,IAAMtkB,EAAM4nE,EAAS/nE,SAAS,OAC9B,OAAmB,IAAfG,EAAIN,OACGiQ,OAAO,GAEXA,OAAO,KAAD,OAAM3P,KAoB3B1C,EAAQuqE,WAVR,SAAoB/E,GAEZ,IAAM9iE,EAAM8iE,EAAIjjE,SAAS,OACzB,OAAmB,IAAfG,EAAIN,OACGiQ,OAAO,GAEXA,OAAO,KAAD,OAAM3P,KAqB3B1C,EAAQwlC,WAVR,SAAoBnjB,EAAKkvC,GAEjB,IAAM7uD,EAAM2f,EAAI9f,SAAS,IACnBhB,EAASyM,EAAO7L,KAAKO,EAAIF,SAAiB,EAAR+uD,EAAW,KAAKxuD,MAAM,EAAW,EAARwuD,GAAY,OAE7E,OADAhwD,EAAOylB,UACAzlB,GAmBfvB,EAAQwqE,WAPR,SAAoBnoD,EAAKkvC,GAEjB,IAAM7uD,EAAM2f,EAAI9f,SAAS,IACzB,OAAOyL,EAAO7L,KAAKO,EAAIF,SAAiB,EAAR+uD,EAAW,KAAKxuD,MAAM,EAAW,EAARwuD,GAAY,U,2DC9D7E,IAAIkZ,EAAyBrpE,EAAQ,MAErCtB,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQ0qE,YAAS,EAEjB,IAAIC,EAAgBF,EAAuBrpE,EAAQ,KAE/CwpE,EAAmBH,EAAuBrpE,EAAQ,KAElDypE,EAAaJ,EAAuBrpE,EAAQ,KAE5C0pE,EAA8BL,EAAuBrpE,EAAQ,MAE7D2pE,EAAmBN,EAAuBrpE,EAAQ,MAElD4pE,EAAaP,EAAuBrpE,EAAQ,OAIhD,SAAS6pE,EAAaC,GAAW,IAAIC,EAErC,WAAuC,GAAuB,qBAAZ9G,UAA4BA,QAAQ+G,UAAW,OAAO,EAAO,GAAI/G,QAAQ+G,UAAUC,KAAM,OAAO,EAAO,GAAqB,oBAAVC,MAAsB,OAAO,EAAM,IAAsF,OAAhF9vD,QAAQ5W,UAAU2mE,QAAQ1mE,KAAKw/D,QAAQ+G,UAAU5vD,QAAS,IAAI,iBAAyB,EAAQ,MAAOxC,GAAK,OAAO,GAF9PwyD,GAA6B,OAAO,WAAkC,IAAuDrnE,EAAnDsnE,GAAQ,EAAIV,EAAgB,SAAaG,GAAkB,GAAIC,EAA2B,CAAE,IAAIO,GAAY,EAAIX,EAAgB,SAAazmE,MAAMQ,YAAaX,EAASkgE,QAAQ+G,UAAUK,EAAOtH,UAAWuH,QAAqBvnE,EAASsnE,EAAMtF,MAAM7hE,KAAM6/D,WAAc,OAAO,EAAI2G,EAA2B,SAAaxmE,KAAMH,IAI/c,IAAIumE,EAAsB,SAAUiB,IAClC,EAAId,EAAU,SAAaH,EAAQiB,GAEnC,IAAIC,EAASX,EAAaP,GAE1B,SAASA,IACP,IAAI5wC,EAAUqqC,UAAU/hE,OAAS,QAAsBsC,IAAjBy/D,UAAU,GAAmBA,UAAU,GAAK,sBAE9Ej9D,EAAOi9D,UAAU/hE,OAAS,QAAsBsC,IAAjBy/D,UAAU,GAAmBA,UAAU,GAAK,GAC3E0H,EAAmB3kE,EAAK0yC,YACxBA,OAAmC,IAArBiyB,GAAqCA,EACnDC,EAAiB5kE,EAAK6kE,UACtBA,OAA+B,IAAnBD,GAAmCA,EAC/CE,EAAwB9kE,EAAK+kE,mBAC7BA,OAA+C,IAA1BD,EAAmC,IAAOA,EAC/DE,EAAsBhlE,EAAK2yC,eAC3BA,OAAyC,IAAxBqyB,EAAiC,EAAIA,EAEtDC,EAAsBhI,UAAU/hE,OAAS,EAAI+hE,UAAU,QAAKz/D,EAEhE,OADA,EAAIkmE,EAAgB,SAAatmE,KAAMomE,GAChCkB,EAAO/mE,KAAKP,KAAM0mE,EAAU,QAAalxC,EAAS,CACvD8f,YAAaA,EACbmyB,UAAWA,EACXE,mBAAoBA,EACpBpyB,eAAgBA,GACfsyB,GAGL,OAAO,EAAIxB,EAAa,SAAaD,GA5Bb,CANZD,EAAuBrpE,EAAQ,OAmCpC,SAETpB,EAAQ0qE,OAASA,G,kCCpDjB,IAAID,EAAyBrpE,EAAQ,MAErCtB,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAO,QA4GP,SAAkB85B,EAASlN,GACzB,OAAO,IAAIw/C,EAAqBtyC,EAASlN,IA3G3C,IAAIg+C,EAAmBH,EAAuBrpE,EAAQ,KAElDupE,EAAgBF,EAAuBrpE,EAAQ,KAE/CypE,EAAaJ,EAAuBrpE,EAAQ,KAE5C0pE,EAA8BL,EAAuBrpE,EAAQ,MAE7D2pE,EAAmBN,EAAuBrpE,EAAQ,MAItD,SAAS6pE,EAAaC,GAAW,IAAIC,EAErC,WAAuC,GAAuB,qBAAZ9G,UAA4BA,QAAQ+G,UAAW,OAAO,EAAO,GAAI/G,QAAQ+G,UAAUC,KAAM,OAAO,EAAO,GAAqB,oBAAVC,MAAsB,OAAO,EAAM,IAAsF,OAAhF9vD,QAAQ5W,UAAU2mE,QAAQ1mE,KAAKw/D,QAAQ+G,UAAU5vD,QAAS,IAAI,iBAAyB,EAAQ,MAAOxC,GAAK,OAAO,GAF9PwyD,GAA6B,OAAO,WAAkC,IAAuDrnE,EAAnDsnE,GAAQ,EAAIV,EAAgB,SAAaG,GAAkB,GAAIC,EAA2B,CAAE,IAAIO,GAAY,EAAIX,EAAgB,SAAazmE,MAAMQ,YAAaX,EAASkgE,QAAQ+G,UAAUK,EAAOtH,UAAWuH,QAAqBvnE,EAASsnE,EAAMtF,MAAM7hE,KAAM6/D,WAAc,OAAO,EAAI2G,EAA2B,SAAaxmE,KAAMH,IAI/c,IAAIioE,EAAoC,SAAUC,IAChD,EAAIxB,EAAU,SAAauB,EAAsBC,GAEjD,IAAIT,EAASX,EAAamB,GAS1B,SAASA,EAAqBtyC,EAASlN,EAAS0/C,GAC9C,IAAIC,EAsBJ,OApBA,EAAI3B,EAAgB,SAAatmE,KAAM8nE,IACvCG,EAAQX,EAAO/mE,KAAKP,OACdkoE,OAAS,IAAIrsD,OAAOssD,UAAU3yC,EAASwyC,GAE7CC,EAAMC,OAAOE,OAAS,WACpB,OAAOH,EAAMh/D,KAAK,SAGpBg/D,EAAMC,OAAOG,UAAY,SAAUC,GACjC,OAAOL,EAAMh/D,KAAK,UAAWq/D,EAAM9oE,OAGrCyoE,EAAMC,OAAOK,QAAU,SAAUh/C,GAC/B,OAAO0+C,EAAMh/D,KAAK,QAASsgB,IAG7B0+C,EAAMC,OAAOM,QAAU,SAAUF,GAC/BL,EAAMh/D,KAAK,QAASq/D,EAAMnhE,KAAMmhE,EAAMG,SAGjCR,EA4CT,OAhCA,EAAI5B,EAAa,SAAayB,EAAsB,CAAC,CACnDhjD,IAAK,OACLnpB,MAAO,SAAc6D,EAAMkpE,EAAmBp0B,GAC5C,IAAIt1C,EAAKs1C,GAAYo0B,EAErB,IACE1oE,KAAKkoE,OAAOS,KAAKnpE,GACjBR,IACA,MAAOuqB,GACPvqB,EAAGuqB,MAYN,CACDzE,IAAK,QACLnpB,MAAO,SAAewL,EAAMshE,GAC1BzoE,KAAKkoE,OAAOtsB,MAAMz0C,EAAMshE,KAEzB,CACD3jD,IAAK,mBACLnpB,MAAO,SAA0BusB,EAAM0gD,EAAUtgD,GAC/CtoB,KAAKkoE,OAAOW,iBAAiB3gD,EAAM0gD,EAAUtgD,OAG1Cw/C,EA/E+B,CANpBhrE,EAAQ,KAsFZgsE,e,mCC7GhB,YAOA,IAAI3C,EAAyBrpE,EAAQ,MAErCtB,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAO,aAAc,EAErB,IAAIqtE,EAAe5C,EAAuBrpE,EAAQ,OAE9CksE,EAAqB7C,EAAuBrpE,EAAQ,MAEpDmsE,EAAW9C,EAAuBrpE,EAAQ,MAE1CwpE,EAAmBH,EAAuBrpE,EAAQ,KAElDupE,EAAgBF,EAAuBrpE,EAAQ,KAE/CypE,EAAaJ,EAAuBrpE,EAAQ,KAE5C0pE,EAA8BL,EAAuBrpE,EAAQ,MAE7D2pE,EAAmBN,EAAuBrpE,EAAQ,MAElDosE,EAAgBpsE,EAAQ,KAE5B,SAAS6pE,EAAaC,GAAW,IAAIC,EAErC,WAAuC,GAAuB,qBAAZ9G,UAA4BA,QAAQ+G,UAAW,OAAO,EAAO,GAAI/G,QAAQ+G,UAAUC,KAAM,OAAO,EAAO,GAAqB,oBAAVC,MAAsB,OAAO,EAAM,IAAsF,OAAhF9vD,QAAQ5W,UAAU2mE,QAAQ1mE,KAAKw/D,QAAQ+G,UAAU5vD,QAAS,IAAI,iBAAyB,EAAQ,MAAOxC,GAAK,OAAO,GAF9PwyD,GAA6B,OAAO,WAAkC,IAAuDrnE,EAAnDsnE,GAAQ,EAAIV,EAAgB,SAAaG,GAAkB,GAAIC,EAA2B,CAAE,IAAIO,GAAY,EAAIX,EAAgB,SAAazmE,MAAMQ,YAAaX,EAASkgE,QAAQ+G,UAAUK,EAAOtH,UAAWuH,QAAqBvnE,EAASsnE,EAAMtF,MAAM7hE,KAAM6/D,WAAc,OAAO,EAAI2G,EAA2B,SAAaxmE,KAAMH,IAI/c,IAAIspE,EAAsC,SAAUhqD,EAAGzK,GACrD,IAAIgF,EAAI,GAER,IAAK,IAAIiC,KAAKwD,EACR3jB,OAAO8E,UAAUiQ,eAAehQ,KAAK4e,EAAGxD,IAAMjH,EAAE8oB,QAAQ7hB,GAAK,IAAGjC,EAAEiC,GAAKwD,EAAExD,IAG/E,GAAS,MAALwD,GAAqD,oBAAjC3jB,OAAO4tE,sBAA2C,KAAIprE,EAAI,EAAb,IAAgB2d,EAAIngB,OAAO4tE,sBAAsBjqD,GAAInhB,EAAI2d,EAAE7d,OAAQE,IAClI0W,EAAE8oB,QAAQ7hB,EAAE3d,IAAM,GAAKxC,OAAO8E,UAAU+oE,qBAAqB9oE,KAAK4e,EAAGxD,EAAE3d,MAAK0b,EAAEiC,EAAE3d,IAAMmhB,EAAExD,EAAE3d,KAEhG,OAAO0b,GAIL4vD,EAA4B,SAAUvB,IACxC,EAAIxB,EAAU,SAAa+C,EAAcvB,GAEzC,IAAIT,EAASX,EAAa2C,GAW1B,SAASA,EAAaC,GACpB,IAAItB,EAEAzyC,EAAUqqC,UAAU/hE,OAAS,QAAsBsC,IAAjBy/D,UAAU,GAAmBA,UAAU,GAAK,sBAE9E2J,EAAK3J,UAAU/hE,OAAS,QAAsBsC,IAAjBy/D,UAAU,GAAmBA,UAAU,GAAK,GAEzEgI,EAAsBhI,UAAU/hE,OAAS,EAAI+hE,UAAU,QAAKz/D,GAChE,EAAIkmE,EAAgB,SAAatmE,KAAMspE,GAEvC,IAAIG,EAAiBD,EAAGl0B,YACpBA,OAAiC,IAAnBm0B,GAAmCA,EACjDC,EAAeF,EAAG/B,UAClBA,OAA6B,IAAjBiC,GAAiCA,EAC7CC,EAAwBH,EAAG7B,mBAC3BA,OAA+C,IAA1BgC,EAAmC,IAAOA,EAC/DC,EAAoBJ,EAAGj0B,eACvBA,OAAuC,IAAtBq0B,EAA+B,EAAIA,EACpDC,EAAeV,EAAOK,EAAI,CAAC,cAAe,YAAa,qBAAsB,mBAyBjF,OAvBAvB,EAAQX,EAAO/mE,KAAKP,OACdupE,iBAAmBA,EACzBtB,EAAM6B,MAAQ,GACd7B,EAAM8B,OAAS,EACf9B,EAAMzyC,QAAUA,EAChByyC,EAAM3yB,YAAcA,EACpB2yB,EAAM+B,OAAQ,EACd/B,EAAMR,UAAYA,EAClBQ,EAAMN,mBAAqBA,EAC3BM,EAAM1yB,eAAiBA,EACvB0yB,EAAM4B,aAAeA,EACrB5B,EAAMgC,mBAAqB,EAE3BhC,EAAMJ,oBAAsBA,GAAuB,WACjD,QAASI,EAAM8B,QAGb9B,EAAM3yB,aAAa2yB,EAAMiC,SAASjC,EAAMzyC,QAASh6B,OAAOiF,OAAO,CACjE60C,YAAa2yB,EAAM3yB,YACnBmyB,UAAWQ,EAAMR,UACjBE,mBAAoBM,EAAMN,mBAC1BpyB,eAAgB0yB,EAAM1yB,gBACrB0yB,EAAM4B,eACF5B,EAiXT,OAxWA,EAAI5B,EAAa,SAAaiD,EAAc,CAAC,CAC3CxkD,IAAK,UACLnpB,MAAO,WACDqE,KAAKkoE,QAETloE,KAAKkqE,SAASlqE,KAAKw1B,QAASh6B,OAAOiF,OAAO,CACxC60C,YAAat1C,KAAKs1C,YAClBmyB,UAAWznE,KAAKynE,UAChBE,mBAAoB3nE,KAAK2nE,mBACzBpyB,eAAgBv1C,KAAKu1C,gBACpBv1C,KAAK6pE,iBAYT,CACD/kD,IAAK,OACLnpB,MAAO,SAAcuG,EAAQ6D,EAAQokE,EAASC,GAC5C,IAAIC,EAASrqE,KAOb,OALKoqE,GAAW,YAAa,EAAInB,EAAQ,SAAakB,KACpDC,EAAUD,EACVA,EAAU,MAGL,IAAI1lE,SAAQ,SAAUC,EAASsvC,GACpC,IAAKq2B,EAAOL,MAAO,OAAOh2B,EAAO,IAAIt2C,MAAM,qBAE3C,IAAIqsE,EAASM,EAAOxC,oBAAoB3lE,EAAQ6D,GAE5CnF,EAAU,CACZ0mC,QAAS,MACTplC,OAAQA,EACR6D,OAAQA,GAAU,KAClBwhC,GAAIwiC,GAGNM,EAAOnC,OAAOS,KAAKlhD,KAAKC,UAAU9mB,GAAUwpE,GAAS,SAAU7gD,GAC7D,GAAIA,EAAO,OAAOyqB,EAAOzqB,GACzB8gD,EAAOP,MAAMC,GAAU,CACrBO,QAAS,CAAC5lE,EAASsvC,IAGjBm2B,IACFE,EAAOP,MAAMC,GAAQI,QAAUlqC,YAAW,kBACjCoqC,EAAOP,MAAMC,GACpB/1B,EAAO,IAAIt2C,MAAM,oBAChBysE,YAYV,CACDrlD,IAAK,QACLnpB,MAAO,WACL,IAAI4uE,GAAS,EAAIvB,EAAkB,SAA2BD,EAAY,QAAYyB,MAAK,SAASC,EAAQ1kE,GAC1G,IAAI2kE,EACJ,OAAO3B,EAAY,QAAY4B,MAAK,SAAkBC,GACpD,OACE,OAAQA,EAAS5N,KAAO4N,EAAS5oE,MAC/B,KAAK,EAEH,OADA4oE,EAAS5oE,KAAO,EACThC,KAAKO,KAAK,YAAawF,GAEhC,KAAK,EAGH,GAFA2kE,EAAOE,EAASC,KAEN,CACRD,EAAS5oE,KAAO,EAChB,MAGF,MAAM,IAAItE,MAAM,yBAElB,KAAK,EACH,OAAOktE,EAASE,OAAO,SAAUJ,GAEnC,KAAK,EACL,IAAK,MACH,OAAOE,EAASG,UAGrBN,EAASzqE,UAOd,OAJA,SAAeif,GACb,OAAOsrD,EAAO1I,MAAM7hE,KAAM6/D,YAhCvB,IA2CN,CACD/6C,IAAK,cACLnpB,MAAO,WACL,IAAIqvE,GAAe,EAAIhC,EAAkB,SAA2BD,EAAY,QAAYyB,MAAK,SAASS,IACxG,OAAOlC,EAAY,QAAY4B,MAAK,SAAmBO,GACrD,OACE,OAAQA,EAAUlO,KAAOkO,EAAUlpE,MACjC,KAAK,EAEH,OADAkpE,EAAUlpE,KAAO,EACVhC,KAAKO,KAAK,iBAEnB,KAAK,EACH,OAAO2qE,EAAUJ,OAAO,SAAUI,EAAUL,MAE9C,KAAK,EACL,IAAK,MACH,OAAOK,EAAUH,UAGtBE,EAAUjrE,UAOf,OAJA,WACE,OAAOgrE,EAAanJ,MAAM7hE,KAAM6/D,YArB7B,IAkCN,CACD/6C,IAAK,SACLnpB,MAAO,SAAgBuG,EAAQ6D,GAC7B,IAAIolE,EAASnrE,KAEb,OAAO,IAAIyE,SAAQ,SAAUC,EAASsvC,GACpC,IAAKm3B,EAAOnB,MAAO,OAAOh2B,EAAO,IAAIt2C,MAAM,qBAC3C,IAAIkD,EAAU,CACZ0mC,QAAS,MACTplC,OAAQA,EACR6D,OAAQA,GAAU,MAGpBolE,EAAOjD,OAAOS,KAAKlhD,KAAKC,UAAU9mB,IAAU,SAAU2oB,GACpD,GAAIA,EAAO,OAAOyqB,EAAOzqB,GACzB7kB,YAYL,CACDogB,IAAK,YACLnpB,MAAO,WACL,IAAIyvE,GAAa,EAAIpC,EAAkB,SAA2BD,EAAY,QAAYyB,MAAK,SAASa,EAAS/C,GAC/G,IAAIzoE,EACJ,OAAOkpE,EAAY,QAAY4B,MAAK,SAAmBW,GACrD,OACE,OAAQA,EAAUtO,KAAOsO,EAAUtpE,MACjC,KAAK,EAGH,MAFqB,kBAAVsmE,IAAoBA,EAAQ,CAACA,IACxCgD,EAAUtpE,KAAO,EACVhC,KAAKO,KAAK,SAAU+nE,GAE7B,KAAK,EAGH,GAFAzoE,EAASyrE,EAAUT,KAEI,kBAAVvC,GAAwC,OAAlBzoE,EAAOyoE,GAAkB,CAC1DgD,EAAUtpE,KAAO,EACjB,MAGF,MAAM,IAAItE,MAAM,mCAAqC4qE,EAAQ,WAAazoE,EAAOyoE,IAEnF,KAAK,EACH,OAAOgD,EAAUR,OAAO,SAAUjrE,GAEpC,KAAK,EACL,IAAK,MACH,OAAOyrE,EAAUP,UAGtBM,EAAUrrE,UAOf,OAJA,SAAmBurE,GACjB,OAAOH,EAAWvJ,MAAM7hE,KAAM6/D,YAjC3B,IA8CN,CACD/6C,IAAK,cACLnpB,MAAO,WACL,IAAI6vE,GAAe,EAAIxC,EAAkB,SAA2BD,EAAY,QAAYyB,MAAK,SAASiB,EAASnD,GACjH,IAAIzoE,EACJ,OAAOkpE,EAAY,QAAY4B,MAAK,SAAmBe,GACrD,OACE,OAAQA,EAAU1O,KAAO0O,EAAU1pE,MACjC,KAAK,EAGH,MAFqB,kBAAVsmE,IAAoBA,EAAQ,CAACA,IACxCoD,EAAU1pE,KAAO,EACVhC,KAAKO,KAAK,UAAW+nE,GAE9B,KAAK,EAGH,GAFAzoE,EAAS6rE,EAAUb,KAEI,kBAAVvC,GAAwC,OAAlBzoE,EAAOyoE,GAAkB,CAC1DoD,EAAU1pE,KAAO,EACjB,MAGF,MAAM,IAAItE,MAAM,4CAA8CmC,GAEhE,KAAK,EACH,OAAO6rE,EAAUZ,OAAO,SAAUjrE,GAEpC,KAAK,EACL,IAAK,MACH,OAAO6rE,EAAUX,UAGtBU,EAAUzrE,UAOf,OAJA,SAAqB2rE,GACnB,OAAOH,EAAa3J,MAAM7hE,KAAM6/D,YAjC7B,IA8CN,CACD/6C,IAAK,QACLnpB,MAAO,SAAewL,EAAM3H,GAC1BQ,KAAKkoE,OAAOtsB,MAAMz0C,GAAQ,IAAM3H,KAWjC,CACDslB,IAAK,WACLnpB,MAAO,SAAkB65B,EAASlN,GAChC,IAAIsjD,EAAS5rE,KAEbA,KAAKkoE,OAASloE,KAAKupE,iBAAiB/zC,EAASlN,GAC7CtoB,KAAKkoE,OAAOW,iBAAiB,QAAQ,WACnC+C,EAAO5B,OAAQ,EAEf4B,EAAO3iE,KAAK,QAEZ2iE,EAAO3B,mBAAqB,KAE9BjqE,KAAKkoE,OAAOW,iBAAiB,WAAW,SAAUjmE,GAChD,IAAIhC,EAAUgC,EAAKpD,KACfoB,aAAmB4kE,cAAa5kE,EAAU8I,EAAO7L,KAAK+C,GAAS3C,YAEnE,IACE2C,EAAU6mB,KAAKokD,MAAMjrE,GACrB,MAAO2oB,GACP,OAIF,GAAI3oB,EAAQw7C,cAAgBwvB,EAAOE,UAAUlrE,EAAQw7C,cAAct+C,OAAQ,CACzE,IAAKtC,OAAO+uB,KAAK3pB,EAAQmF,QAAQjI,OAAQ,OAAO8tE,EAAO3iE,KAAKrI,EAAQw7C,cACpE,IAAI5vC,EAAO,CAAC5L,EAAQw7C,cACpB,GAAIx7C,EAAQmF,OAAOvF,cAAgBhF,OAAQgR,EAAKxH,KAAKpE,EAAQmF,aAC3D,IAAK,IAAI/H,EAAI,EAAGA,EAAI4C,EAAQmF,OAAOjI,OAAQE,IACzCwO,EAAKxH,KAAKpE,EAAQmF,OAAO/H,IAI7B,OAAOyG,QAAQC,UAAU4xC,MAAK,WAC5Bs1B,EAAO3iE,KAAK44D,MAAM+J,EAAQp/D,MAI9B,IAAKo/D,EAAO9B,MAAMlpE,EAAQ2mC,IAExB,OAAI3mC,EAAQsB,QAAUtB,EAAQmF,OAErBtB,QAAQC,UAAU4xC,MAAK,WAC5Bs1B,EAAO3iE,KAAKrI,EAAQsB,OAAQtB,EAAQmF,gBAIxC,EAIE,UAAWnF,IAAY,WAAYA,GAASgrE,EAAO9B,MAAMlpE,EAAQ2mC,IAAI+iC,QAAQ,GAAG,IAAI5sE,MAAM,+FAC1FkuE,EAAO9B,MAAMlpE,EAAQ2mC,IAAI4iC,SAAS3xB,aAAaozB,EAAO9B,MAAMlpE,EAAQ2mC,IAAI4iC,SACxEvpE,EAAQ2oB,MAAOqiD,EAAO9B,MAAMlpE,EAAQ2mC,IAAI+iC,QAAQ,GAAG1pE,EAAQ2oB,OAAYqiD,EAAO9B,MAAMlpE,EAAQ2mC,IAAI+iC,QAAQ,GAAG1pE,EAAQf,eAChH+rE,EAAO9B,MAAMlpE,EAAQ2mC,OAE9BvnC,KAAKkoE,OAAOW,iBAAiB,SAAS,SAAUt/C,GAC9C,OAAOqiD,EAAO3iE,KAAK,QAASsgB,MAE9BvpB,KAAKkoE,OAAOW,iBAAiB,SAAS,SAAU3lE,GAC9C,IAAIiE,EAAOjE,EAAMiE,KACbshE,EAASvlE,EAAMulE,OACfmD,EAAO5B,OACT/pC,YAAW,WACT,OAAO2rC,EAAO3iE,KAAK,QAAS9B,EAAMshE,KACjC,GACLmD,EAAO5B,OAAQ,EACf4B,EAAO1D,YAAS9nE,EACH,MAAT+G,IACJykE,EAAO3B,qBACH2B,EAAOnE,YAAcmE,EAAOr2B,eAAiBq2B,EAAO3B,oBAAgD,IAA1B2B,EAAOr2B,iBAAuBtV,YAAW,WACrH,OAAO2rC,EAAO1B,SAAS10C,EAASlN,KAC/BsjD,EAAOjE,4BAIT2B,EA1auB,CA2a9BJ,EAAcJ,cAEhBptE,EAAO,QAAc4tE,I,2DC7drB,IAAMyC,EAAOjvE,EAAQ,KAAQkvE,GACvBC,EAAkBnvE,EAAQ,MAc1BovE,EAAgB,SAAhBA,EAAyBC,EAAY7jD,GACzC,KAAKtoB,gBAAgBksE,GACnB,OAAO,IAAIA,EAAcC,EAAY7jD,GAGlCA,IACHA,EAAU,IAGZtoB,KAAKsoB,QAAU,CACb8jD,QAAoC,qBAApB9jD,EAAQ8jD,QAA0B9jD,EAAQ8jD,QAAU,KACpEC,SAAsC,qBAArB/jD,EAAQ+jD,SAA2B/jD,EAAQ+jD,SAAW,KACvEC,UAAwC,qBAAtBhkD,EAAQgkD,UAA4BhkD,EAAQgkD,UAAY,WAAa,OAAOP,KAC9FlkC,QAAoC,qBAApBvf,EAAQuf,QAA0Bvf,EAAQuf,QAAU,EACpE0kC,mBAA0D,mBAA/BjkD,EAAQikD,oBAAmCjkD,EAAQikD,oBAGhFvsE,KAAKmsE,WAAaA,GAGpBxqE,EAAOjG,QAAUwwE,EAWjBA,EAAc5rE,UAAUyC,QAAU,SAASb,EAAQ6D,EAAQwhC,EAAI+M,GAC7D,IA6CI1zC,EA7CEwlB,EAAOpmB,KACT+C,EAAU,KAGRypE,EAAU5uE,MAAM2W,QAAQrS,IAA6B,oBAAX6D,EAEhD,GAA6B,IAAzB/F,KAAKsoB,QAAQuf,SAAiB2kC,EAChC,MAAM,IAAInuE,UAAU,0CAMtB,GAAGmuE,IAFYA,GAAWtqE,GAA4B,kBAAXA,GAAyC,oBAAX6D,EAGvEuuC,EAAWvuC,EACXhD,EAAUb,MACL,CACY,oBAAPqlC,IACR+M,EAAW/M,EAEXA,OAAKnnC,GAGP,IAAMqsE,EAAkC,oBAAbn4B,EAE3B,IACEvxC,EAAUkpE,EAAgB/pE,EAAQ6D,EAAQwhC,EAAI,CAC5C+kC,UAAWtsE,KAAKsoB,QAAQgkD,UACxBzkC,QAAS7nC,KAAKsoB,QAAQuf,QACtB0kC,mBAAoBvsE,KAAKsoB,QAAQikD,qBAEnC,MAAM52C,GACN,GAAG82C,EACD,OAAOn4B,EAAS3e,GAElB,MAAMA,EAIR,IAAI82C,EACF,OAAO1pE,EAMX,IACEnC,EAAU6mB,KAAKC,UAAU3kB,EAAS/C,KAAKsoB,QAAQ+jD,UAC/C,MAAM12C,GACN,OAAO2e,EAAS3e,GAQlB,OALA31B,KAAKmsE,WAAWvrE,GAAS,SAAS+0B,EAAK3yB,GACrCojB,EAAKsmD,eAAe/2C,EAAK3yB,EAAUsxC,MAI9BvxC,GAUTmpE,EAAc5rE,UAAUosE,eAAiB,SAAS/2C,EAAKg3C,EAAcr4B,GACnE,GAAG3e,EACD2e,EAAS3e,OADX,CAKA,IAAIg3C,EAGF,OAAOr4B,IAGT,IAAItxC,EACJ,IACEA,EAAWykB,KAAKokD,MAAMc,EAAc3sE,KAAKsoB,QAAQ8jD,SACjD,MAAMz2C,GACN,OAAO2e,EAAS3e,GAGlB,GAAuB,IAApB2e,EAASx2C,OAAc,CAIxB,GAAGF,MAAM2W,QAAQvR,GAAW,CAG1B,IAAM4pE,EAAU,SAAS7qE,GACvB,MAA4B,qBAAdA,EAAIwnB,OAOpB,OAAO+qB,EAAS,KAAMtxC,EAASu1B,OAAOq0C,GAAU5pE,EAASu1B,QAJtC,SAAUx2B,GAC3B,OAAQ6qE,EAAQ7qE,OAQlB,OAAOuyC,EAAS,KAAMtxC,EAASumB,MAAOvmB,EAASnD,QAMnDy0C,EAAS,KAAMtxC,M,kCC/JjB,IAAM+oE,EAAOjvE,EAAQ,KAAQkvE,GA4D7BrqE,EAAOjG,QA7CiB,SAASwG,EAAQ6D,EAAQwhC,EAAIjf,GACnD,GAAqB,kBAAXpmB,EACR,MAAM,IAAI7D,UAAU6D,EAAS,qBAM/B,IAAM2lC,EAAqC,kBAH3Cvf,EAAUA,GAAW,IAGUuf,QAAuBvf,EAAQuf,QAAU,EACxE,GAAgB,IAAZA,GAA6B,IAAZA,EACnB,MAAM,IAAIxpC,UAAUwpC,EAAU,mBAGhC,IAAM9kC,EAAU,CACdb,OAAQA,GAOV,GAJe,IAAZ2lC,IACD9kC,EAAQukC,QAAU,OAGjBvhC,EAAQ,CAET,GAAqB,kBAAXA,IAAwBnI,MAAM2W,QAAQxO,GAC9C,MAAM,IAAI1H,UAAU0H,EAAS,wCAE/BhD,EAAQgD,OAASA,EAInB,GAAkB,qBAARwhC,EAAqB,CAC7B,IAAM+kC,EAAyC,oBAAtBhkD,EAAQgkD,UAA2BhkD,EAAQgkD,UAAY,WAAa,OAAOP,KACpGhpE,EAAQwkC,GAAK+kC,EAAUvpE,EAASulB,QACX,IAAZuf,GAAwB,OAAPN,EAEtBjf,EAAQikD,qBACVxpE,EAAQwkC,GAAK,MAGfxkC,EAAQwkC,GAAKA,EAGf,OAAOxkC,I,sGC1DTvH,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ21B,UAAO,EACf,IAAM3kB,EAAe5P,EAAQ,MACvB6P,EAAa7P,EAAQ,MAErB+vE,E,8BACF,WAAYz9D,EAAM09D,GAAM,iBACpB,gBACKjgE,UAAW,EAChB,EAAKE,WAAY,EACjBL,EAAaO,QAAQmC,KAAKA,GAC1B,IAAM0V,GAAM,EAAInY,EAAWzQ,SAAS4wE,GAEpC,GADA,EAAKC,MAAQ39D,EAAKlO,WACZ,EAAK6rE,iBAAiBpgE,EAAW3Q,MACnC,MAAM,IAAIqC,UAAU,uDACxB,IAAM4C,EAAY,EAAKA,SAAW,EAAK8rE,MAAM9rE,SAC7C,EAAKD,UAAY,EAAK+rE,MAAM/rE,UAC5B,IAAMlB,EAAM,IAAI9C,WAAWiE,GAE3BnB,EAAIC,IAAI+kB,EAAIhnB,OAAS,EAAKivE,MAAM9rE,SAAWmO,EAAKlO,SAASL,OAAOikB,GAAKhkB,SAAWgkB,GAChF,IAAK,IAAI9mB,EAAI,EAAGA,EAAI8B,EAAIhC,OAAQE,IAC5B8B,EAAI9B,IAAM,GACd,EAAK+uE,MAAMlsE,OAAOf,GAElB,EAAKktE,MAAQ59D,EAAKlO,SAElB,IAAK,IAAIlD,EAAI,EAAGA,EAAI8B,EAAIhC,OAAQE,IAC5B8B,EAAI9B,IAAM,IArBM,OAsBpB,EAAKgvE,MAAMnsE,OAAOf,GAClBA,EAAI8N,KAAK,GAvBW,E,gCAyBxB,SAAOszD,GAGH,OAFAx0D,EAAaO,QAAQC,OAAOlN,MAC5BA,KAAK+sE,MAAMlsE,OAAOqgE,GACXlhE,O,wBAEX,SAAW0N,GACPhB,EAAaO,QAAQC,OAAOlN,MAC5B0M,EAAaO,QAAQgC,MAAMvB,EAAK1N,KAAKgB,WACrChB,KAAK6M,UAAW,EAChB7M,KAAK+sE,MAAMt+D,WAAWf,GACtB1N,KAAKgtE,MAAMnsE,OAAO6M,GAClB1N,KAAKgtE,MAAMv+D,WAAWf,GACtB1N,KAAK0O,Y,oBAET,WACI,IAAMhB,EAAM,IAAI1Q,WAAWgD,KAAKgtE,MAAMhsE,WAEtC,OADAhB,KAAKyO,WAAWf,GACTA,I,wBAEX,SAAWiB,GAEPA,IAAOA,EAAKnT,OAAO0F,OAAO1F,OAAOyxE,eAAejtE,MAAO,KACvD,IAAQgtE,EAA2DhtE,KAA3DgtE,MAAOD,EAAoD/sE,KAApD+sE,MAAOlgE,EAA6C7M,KAA7C6M,SAAUE,EAAmC/M,KAAnC+M,UAAW9L,EAAwBjB,KAAxBiB,SAAUD,EAAchB,KAAdgB,UAQrD,OANA2N,EAAG9B,SAAWA,EACd8B,EAAG5B,UAAYA,EACf4B,EAAG1N,SAAWA,EACd0N,EAAG3N,UAAYA,EACf2N,EAAGq+D,MAAQA,EAAM/sE,WAAW0O,EAAGq+D,OAC/Br+D,EAAGo+D,MAAQA,EAAM9sE,WAAW0O,EAAGo+D,OACxBp+D,I,qBAEX,WACI3O,KAAK+M,WAAY,EACjB/M,KAAKgtE,MAAMt+D,UACX1O,KAAK+sE,MAAMr+D,c,GA7DA/B,EAAW3Q,MAuE9BN,EAAQ21B,KADK,SAACjiB,EAAM0V,EAAKlkB,GAAZ,OAAwB,IAAIisE,EAAKz9D,EAAM0V,GAAKjkB,OAAOD,GAASE,UAEzEpF,EAAQ21B,KAAKnwB,OAAS,SAACkO,EAAM0V,GAAP,OAAe,IAAI+nD,EAAKz9D,EAAM0V","file":"static/js/3.cc25d41f.chunk.js","sourcesContent":["\"use strict\";\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.randomBytes = exports.wrapConstructorWithOpts = exports.wrapConstructor = exports.checkOpts = exports.Hash = exports.concatBytes = exports.toBytes = exports.utf8ToBytes = exports.asyncLoop = exports.nextTick = exports.hexToBytes = exports.bytesToHex = exports.isLE = exports.rotr = exports.createView = exports.u32 = exports.u8 = void 0;\n// The import here is via the package name. This is to ensure\n// that exports mapping/resolution does fall into place.\nconst crypto_1 = require(\"@noble/hashes/crypto\");\n// Cast array to different type\nconst u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.u8 = u8;\nconst u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\nexports.u32 = u32;\n// Cast array to view\nconst createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.createView = createView;\n// The rotate right (circular right shift) operation for uint32\nconst rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nexports.rotr = rotr;\nexports.isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// There is almost no big endian hardware, but js typed arrays uses platform specific endianness.\n// So, just to be sure not to corrupt anything.\nif (!exports.isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef]))\n */\nfunction bytesToHex(uint8a) {\n    // pre-caching improves the speed 6x\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nexports.bytesToHex = bytesToHex;\n/**\n * @example hexToBytes('deadbeef')\n */\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nexports.hexToBytes = hexToBytes;\n// There is no setImmediate in browser and setTimeout is slow. However, call to async function will return Promise\n// which will be fullfiled only on next scheduler queue processing step and this is exactly what we need.\nconst nextTick = async () => { };\nexports.nextTick = nextTick;\n// Returns control to thread each 'tick' ms to avoid blocking\nasync function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await (0, exports.nextTick)();\n        ts += diff;\n    }\n}\nexports.asyncLoop = asyncLoop;\nfunction utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\nexports.utf8ToBytes = utf8ToBytes;\nfunction toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!(data instanceof Uint8Array))\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n    return data;\n}\nexports.toBytes = toBytes;\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nfunction concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nexports.concatBytes = concatBytes;\n// For runtime check if class implements interface\nclass Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nexports.Hash = Hash;\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nfunction checkOpts(defaults, opts) {\n    if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n        throw new TypeError('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexports.checkOpts = checkOpts;\nfunction wrapConstructor(hashConstructor) {\n    const hashC = (message) => hashConstructor().update(toBytes(message)).digest();\n    const tmp = hashConstructor();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashConstructor();\n    return hashC;\n}\nexports.wrapConstructor = wrapConstructor;\nfunction wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexports.wrapConstructorWithOpts = wrapConstructorWithOpts;\n/**\n * Secure PRNG\n */\nfunction randomBytes(bytesLength = 32) {\n    if (crypto_1.crypto.web) {\n        return crypto_1.crypto.web.getRandomValues(new Uint8Array(bytesLength));\n    }\n    else if (crypto_1.crypto.node) {\n        return new Uint8Array(crypto_1.crypto.node.randomBytes(bytesLength).buffer);\n    }\n    else {\n        throw new Error(\"The environment doesn't have randomBytes function\");\n    }\n}\nexports.randomBytes = randomBytes;\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SHA2 = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nclass SHA2 extends utils_js_1.Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = (0, utils_js_1.createView)(this.buffer);\n    }\n    update(data) {\n        _assert_js_1.default.exists(this);\n        const { view, buffer, blockLen } = this;\n        data = (0, utils_js_1.toBytes)(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = (0, utils_js_1.createView)(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        _assert_js_1.default.exists(this);\n        _assert_js_1.default.output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = (0, utils_js_1.createView)(out);\n        this.get().forEach((v, i) => oview.setUint32(4 * i, v, isLE));\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\nexports.SHA2 = SHA2;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.output = exports.exists = exports.hash = exports.bytes = exports.bool = exports.number = void 0;\nfunction number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexports.number = number;\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nexports.bool = bool;\nfunction bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new TypeError('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nexports.bytes = bytes;\nfunction hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nexports.hash = hash;\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nexports.exists = exists;\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexports.output = output;\nconst assert = {\n    number,\n    bool,\n    bytes,\n    hash,\n    exists,\n    output,\n};\nexports.default = assert;\n",null,"/*! noble-ed25519 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport * as nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _255n = BigInt(255);\nconst CURVE_ORDER = _2n ** BigInt(252) + BigInt('27742317777372353535851937790883648493');\nconst CURVE = Object.freeze({\n    a: BigInt(-1),\n    d: BigInt('37095705934669439343138083508754565189542113879843219016388785533085940283555'),\n    P: _2n ** _255n - BigInt(19),\n    l: CURVE_ORDER,\n    n: CURVE_ORDER,\n    h: BigInt(8),\n    Gx: BigInt('15112221349535400772501151409588531511454012693041857206046113283949847762202'),\n    Gy: BigInt('46316835694926478169428394003475163141307993866256225615783033603165251855960'),\n});\nexport { CURVE };\nconst MAX_256B = _2n ** BigInt(256);\nconst SQRT_M1 = BigInt('19681161376707505956807079304988542015446066515923890162744021073123829784752');\nconst SQRT_D = BigInt('6853475219497561581579357271197624642482790079785650197046958215289687604742');\nconst SQRT_AD_MINUS_ONE = BigInt('25063068953384623474111414158702152701244531502492656460079210482610430750235');\nconst INVSQRT_A_MINUS_D = BigInt('54469307008909316920995813868745141605393597292927456921205312896311721017578');\nconst ONE_MINUS_D_SQ = BigInt('1159843021668779879193775521855586647937357759715417654439879720876111806838');\nconst D_MINUS_ONE_SQ = BigInt('40440834346308536858101042469323190826248399146238708352240133220865137265952');\nclass ExtendedPoint {\n    constructor(x, y, z, t) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.t = t;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('ExtendedPoint#fromAffine: expected Point');\n        }\n        if (p.equals(Point.ZERO))\n            return ExtendedPoint.ZERO;\n        return new ExtendedPoint(p.x, p.y, _1n, mod(p.x * p.y));\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return this.toAffineBatch(points).map(this.fromAffine);\n    }\n    equals(other) {\n        assertExtPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const X1Z2 = mod(X1 * Z2);\n        const X2Z1 = mod(X2 * Z1);\n        const Y1Z2 = mod(Y1 * Z2);\n        const Y2Z1 = mod(Y2 * Z1);\n        return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n    }\n    negate() {\n        return new ExtendedPoint(mod(-this.x), this.y, this.z, mod(-this.t));\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { a } = CURVE;\n        const A = mod(X1 ** _2n);\n        const B = mod(Y1 ** _2n);\n        const C = mod(_2n * mod(Z1 ** _2n));\n        const D = mod(a * A);\n        const E = mod(mod((X1 + Y1) ** _2n) - A - B);\n        const G = D + B;\n        const F = G - C;\n        const H = D - B;\n        const X3 = mod(E * F);\n        const Y3 = mod(G * H);\n        const T3 = mod(E * H);\n        const Z3 = mod(F * G);\n        return new ExtendedPoint(X3, Y3, Z3, T3);\n    }\n    add(other) {\n        assertExtPoint(other);\n        const { x: X1, y: Y1, z: Z1, t: T1 } = this;\n        const { x: X2, y: Y2, z: Z2, t: T2 } = other;\n        const A = mod((Y1 - X1) * (Y2 + X2));\n        const B = mod((Y1 + X1) * (Y2 - X2));\n        const F = mod(B - A);\n        if (F === _0n)\n            return this.double();\n        const C = mod(Z1 * _2n * T2);\n        const D = mod(T1 * _2n * Z2);\n        const E = D + C;\n        const G = B + A;\n        const H = D - C;\n        const X3 = mod(E * F);\n        const Y3 = mod(G * H);\n        const T3 = mod(E * H);\n        const Z3 = mod(F * G);\n        return new ExtendedPoint(X3, Y3, Z3, T3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    precomputeWindow(W) {\n        const windows = 1 + 256 / W;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(ExtendedPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = ExtendedPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = ExtendedPoint.ZERO;\n        let f = ExtendedPoint.ZERO;\n        const windows = 1 + 256 / W;\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            if (wbits === 0) {\n                let pr = precomputes[offset];\n                if (window % 2)\n                    pr = pr.negate();\n                f = f.add(pr);\n            }\n            else {\n                let cached = precomputes[offset + Math.abs(wbits) - 1];\n                if (wbits < 0)\n                    cached = cached.negate();\n                p = p.add(cached);\n            }\n        }\n        return ExtendedPoint.normalizeZ([p, f])[0];\n    }\n    multiply(scalar, affinePoint) {\n        return this.wNAF(normalizeScalar(scalar, CURVE.l), affinePoint);\n    }\n    multiplyUnsafe(scalar) {\n        let n = normalizeScalar(scalar, CURVE.l, false);\n        const G = ExtendedPoint.BASE;\n        const P0 = ExtendedPoint.ZERO;\n        if (n === _0n)\n            return P0;\n        if (this.equals(P0) || n === _1n)\n            return this;\n        if (this.equals(G))\n            return this.wNAF(n);\n        let p = P0;\n        let d = this;\n        while (n > _0n) {\n            if (n & _1n)\n                p = p.add(d);\n            d = d.double();\n            n >>= _1n;\n        }\n        return p;\n    }\n    isSmallOrder() {\n        return this.multiplyUnsafe(CURVE.h).equals(ExtendedPoint.ZERO);\n    }\n    isTorsionFree() {\n        return this.multiplyUnsafe(CURVE.l).equals(ExtendedPoint.ZERO);\n    }\n    toAffine(invZ = invert(this.z)) {\n        const { x, y, z } = this;\n        const ax = mod(x * invZ);\n        const ay = mod(y * invZ);\n        const zz = mod(z * invZ);\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n    fromRistrettoBytes() {\n        legacyRist();\n    }\n    toRistrettoBytes() {\n        legacyRist();\n    }\n    fromRistrettoHash() {\n        legacyRist();\n    }\n}\nExtendedPoint.BASE = new ExtendedPoint(CURVE.Gx, CURVE.Gy, _1n, mod(CURVE.Gx * CURVE.Gy));\nExtendedPoint.ZERO = new ExtendedPoint(_0n, _1n, _1n, _0n);\nfunction assertExtPoint(other) {\n    if (!(other instanceof ExtendedPoint))\n        throw new TypeError('ExtendedPoint expected');\n}\nfunction assertRstPoint(other) {\n    if (!(other instanceof RistrettoPoint))\n        throw new TypeError('RistrettoPoint expected');\n}\nfunction legacyRist() {\n    throw new Error('Legacy method: switch to RistrettoPoint');\n}\nclass RistrettoPoint {\n    constructor(ep) {\n        this.ep = ep;\n    }\n    static calcElligatorRistrettoMap(r0) {\n        const { d } = CURVE;\n        const r = mod(SQRT_M1 * r0 * r0);\n        const Ns = mod((r + _1n) * ONE_MINUS_D_SQ);\n        let c = BigInt(-1);\n        const D = mod((c - d * r) * mod(r + d));\n        let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D);\n        let s_ = mod(s * r0);\n        if (!edIsNegative(s_))\n            s_ = mod(-s_);\n        if (!Ns_D_is_sq)\n            s = s_;\n        if (!Ns_D_is_sq)\n            c = r;\n        const Nt = mod(c * (r - _1n) * D_MINUS_ONE_SQ - D);\n        const s2 = s * s;\n        const W0 = mod((s + s) * D);\n        const W1 = mod(Nt * SQRT_AD_MINUS_ONE);\n        const W2 = mod(_1n - s2);\n        const W3 = mod(_1n + s2);\n        return new ExtendedPoint(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n    }\n    static hashToCurve(hex) {\n        hex = ensureBytes(hex, 64);\n        const r1 = bytes255ToNumberLE(hex.slice(0, 32));\n        const R1 = this.calcElligatorRistrettoMap(r1);\n        const r2 = bytes255ToNumberLE(hex.slice(32, 64));\n        const R2 = this.calcElligatorRistrettoMap(r2);\n        return new RistrettoPoint(R1.add(R2));\n    }\n    static fromHex(hex) {\n        hex = ensureBytes(hex, 32);\n        const { a, d } = CURVE;\n        const emsg = 'RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint';\n        const s = bytes255ToNumberLE(hex);\n        if (!equalBytes(numberTo32BytesLE(s), hex) || edIsNegative(s))\n            throw new Error(emsg);\n        const s2 = mod(s * s);\n        const u1 = mod(_1n + a * s2);\n        const u2 = mod(_1n - a * s2);\n        const u1_2 = mod(u1 * u1);\n        const u2_2 = mod(u2 * u2);\n        const v = mod(a * d * u1_2 - u2_2);\n        const { isValid, value: I } = invertSqrt(mod(v * u2_2));\n        const Dx = mod(I * u2);\n        const Dy = mod(I * Dx * v);\n        let x = mod((s + s) * Dx);\n        if (edIsNegative(x))\n            x = mod(-x);\n        const y = mod(u1 * Dy);\n        const t = mod(x * y);\n        if (!isValid || edIsNegative(t) || y === _0n)\n            throw new Error(emsg);\n        return new RistrettoPoint(new ExtendedPoint(x, y, _1n, t));\n    }\n    toRawBytes() {\n        let { x, y, z, t } = this.ep;\n        const u1 = mod(mod(z + y) * mod(z - y));\n        const u2 = mod(x * y);\n        const { value: invsqrt } = invertSqrt(mod(u1 * u2 ** _2n));\n        const D1 = mod(invsqrt * u1);\n        const D2 = mod(invsqrt * u2);\n        const zInv = mod(D1 * D2 * t);\n        let D;\n        if (edIsNegative(t * zInv)) {\n            let _x = mod(y * SQRT_M1);\n            let _y = mod(x * SQRT_M1);\n            x = _x;\n            y = _y;\n            D = mod(D1 * INVSQRT_A_MINUS_D);\n        }\n        else {\n            D = D2;\n        }\n        if (edIsNegative(x * zInv))\n            y = mod(-y);\n        let s = mod((z - y) * D);\n        if (edIsNegative(s))\n            s = mod(-s);\n        return numberTo32BytesLE(s);\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toString() {\n        return this.toHex();\n    }\n    equals(other) {\n        assertRstPoint(other);\n        const a = this.ep;\n        const b = other.ep;\n        const one = mod(a.x * b.y) === mod(a.y * b.x);\n        const two = mod(a.y * b.y) === mod(a.x * b.x);\n        return one || two;\n    }\n    add(other) {\n        assertRstPoint(other);\n        return new RistrettoPoint(this.ep.add(other.ep));\n    }\n    subtract(other) {\n        assertRstPoint(other);\n        return new RistrettoPoint(this.ep.subtract(other.ep));\n    }\n    multiply(scalar) {\n        return new RistrettoPoint(this.ep.multiply(scalar));\n    }\n    multiplyUnsafe(scalar) {\n        return new RistrettoPoint(this.ep.multiplyUnsafe(scalar));\n    }\n}\nRistrettoPoint.BASE = new RistrettoPoint(ExtendedPoint.BASE);\nRistrettoPoint.ZERO = new RistrettoPoint(ExtendedPoint.ZERO);\nconst pointPrecomputes = new WeakMap();\nclass Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    static fromHex(hex, strict = true) {\n        const { d, P } = CURVE;\n        hex = ensureBytes(hex, 32);\n        const normed = hex.slice();\n        normed[31] = hex[31] & ~0x80;\n        const y = bytesToNumberLE(normed);\n        if (strict && y >= P)\n            throw new Error('Expected 0 < hex < P');\n        if (!strict && y >= MAX_256B)\n            throw new Error('Expected 0 < hex < 2**256');\n        const y2 = mod(y * y);\n        const u = mod(y2 - _1n);\n        const v = mod(d * y2 + _1n);\n        let { isValid, value: x } = uvRatio(u, v);\n        if (!isValid)\n            throw new Error('Point.fromHex: invalid y coordinate');\n        const isXOdd = (x & _1n) === _1n;\n        const isLastByteOdd = (hex[31] & 0x80) !== 0;\n        if (isLastByteOdd !== isXOdd) {\n            x = mod(-x);\n        }\n        return new Point(x, y);\n    }\n    static async fromPrivateKey(privateKey) {\n        return (await getExtendedPublicKey(privateKey)).point;\n    }\n    toRawBytes() {\n        const bytes = numberTo32BytesLE(this.y);\n        bytes[31] |= this.x & _1n ? 0x80 : 0;\n        return bytes;\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toX25519() {\n        const { y } = this;\n        const u = mod((_1n + y) * invert(_1n - y));\n        return numberTo32BytesLE(u);\n    }\n    isTorsionFree() {\n        return ExtendedPoint.fromAffine(this).isTorsionFree();\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(mod(-this.x), this.y);\n    }\n    add(other) {\n        return ExtendedPoint.fromAffine(this).add(ExtendedPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return ExtendedPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _1n);\nclass Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex, 64);\n        const r = Point.fromHex(bytes.slice(0, 32), false);\n        const s = bytesToNumberLE(bytes.slice(32, 64));\n        return new Signature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!(r instanceof Point))\n            throw new Error('Expected Point instance');\n        normalizeScalar(s, CURVE.l, false);\n        return this;\n    }\n    toRawBytes() {\n        const u8 = new Uint8Array(64);\n        u8.set(this.r.toRawBytes());\n        u8.set(numberTo32BytesLE(this.s), 32);\n        return u8;\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n}\nexport { ExtendedPoint, RistrettoPoint, Point, Signature };\nfunction concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array list');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction numberTo32BytesBE(num) {\n    const length = 32;\n    const hex = num.toString(16).padStart(length * 2, '0');\n    return hexToBytes(hex);\n}\nfunction numberTo32BytesLE(num) {\n    return numberTo32BytesBE(num).reverse();\n}\nfunction edIsNegative(num) {\n    return (mod(num) & _1n) === _1n;\n}\nfunction bytesToNumberLE(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    return BigInt('0x' + bytesToHex(Uint8Array.from(uint8a).reverse()));\n}\nfunction bytes255ToNumberLE(bytes) {\n    return mod(bytesToNumberLE(bytes) & (_2n ** _255n - _1n));\n}\nfunction mod(a, b = CURVE.P) {\n    const res = a % b;\n    return res >= _0n ? res : b + res;\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const tmp = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        tmp[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        tmp[i] = mod(acc * tmp[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return tmp;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction pow_2_252_3(x) {\n    const { P } = CURVE;\n    const _5n = BigInt(5);\n    const _10n = BigInt(10);\n    const _20n = BigInt(20);\n    const _40n = BigInt(40);\n    const _80n = BigInt(80);\n    const x2 = (x * x) % P;\n    const b2 = (x2 * x) % P;\n    const b4 = (pow2(b2, _2n) * b2) % P;\n    const b5 = (pow2(b4, _1n) * x) % P;\n    const b10 = (pow2(b5, _5n) * b5) % P;\n    const b20 = (pow2(b10, _10n) * b10) % P;\n    const b40 = (pow2(b20, _20n) * b20) % P;\n    const b80 = (pow2(b40, _40n) * b40) % P;\n    const b160 = (pow2(b80, _80n) * b80) % P;\n    const b240 = (pow2(b160, _80n) * b80) % P;\n    const b250 = (pow2(b240, _10n) * b10) % P;\n    const pow_p_5_8 = (pow2(b250, _2n) * x) % P;\n    return { pow_p_5_8, b2 };\n}\nfunction uvRatio(u, v) {\n    const v3 = mod(v * v * v);\n    const v7 = mod(v3 * v3 * v);\n    const pow = pow_2_252_3(u * v7).pow_p_5_8;\n    let x = mod(u * v3 * pow);\n    const vx2 = mod(v * x * x);\n    const root1 = x;\n    const root2 = mod(x * SQRT_M1);\n    const useRoot1 = vx2 === u;\n    const useRoot2 = vx2 === mod(-u);\n    const noRoot = vx2 === mod(-u * SQRT_M1);\n    if (useRoot1)\n        x = root1;\n    if (useRoot2 || noRoot)\n        x = root2;\n    if (edIsNegative(x))\n        x = mod(-x);\n    return { isValid: useRoot1 || useRoot2, value: x };\n}\nfunction invertSqrt(number) {\n    return uvRatio(_1n, number);\n}\nfunction modlLE(hash) {\n    return mod(bytesToNumberLE(hash), CURVE.l);\n}\nfunction equalBytes(b1, b2) {\n    if (b1.length !== b2.length) {\n        return false;\n    }\n    for (let i = 0; i < b1.length; i++) {\n        if (b1[i] !== b2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction ensureBytes(hex, expectedLength) {\n    const bytes = hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n    if (typeof expectedLength === 'number' && bytes.length !== expectedLength)\n        throw new Error(`Expected ${expectedLength} bytes`);\n    return bytes;\n}\nfunction normalizeScalar(num, max, strict = true) {\n    if (!max)\n        throw new TypeError('Specify max value');\n    if (typeof num === 'number' && Number.isSafeInteger(num))\n        num = BigInt(num);\n    if (typeof num === 'bigint' && num < max) {\n        if (strict) {\n            if (_0n < num)\n                return num;\n        }\n        else {\n            if (_0n <= num)\n                return num;\n        }\n    }\n    throw new TypeError('Expected valid scalar: 0 < scalar < max');\n}\nfunction adjustBytes25519(bytes) {\n    bytes[0] &= 248;\n    bytes[31] &= 127;\n    bytes[31] |= 64;\n    return bytes;\n}\nfunction decodeScalar25519(n) {\n    return bytesToNumberLE(adjustBytes25519(ensureBytes(n, 32)));\n}\nfunction checkPrivateKey(key) {\n    key =\n        typeof key === 'bigint' || typeof key === 'number'\n            ? numberTo32BytesBE(normalizeScalar(key, MAX_256B))\n            : ensureBytes(key);\n    if (key.length !== 32)\n        throw new Error(`Expected 32 bytes`);\n    return key;\n}\nfunction getKeyFromHash(hashed) {\n    const head = adjustBytes25519(hashed.slice(0, 32));\n    const prefix = hashed.slice(32, 64);\n    const scalar = modlLE(head);\n    const point = Point.BASE.multiply(scalar);\n    const pointBytes = point.toRawBytes();\n    return { head, prefix, scalar, point, pointBytes };\n}\nlet _sha512Sync;\nfunction sha512s(...m) {\n    if (typeof _sha512Sync !== 'function')\n        throw new Error('utils.sha512Sync must be set to use sync methods');\n    return _sha512Sync(...m);\n}\nasync function getExtendedPublicKey(key) {\n    return getKeyFromHash(await utils.sha512(checkPrivateKey(key)));\n}\nfunction getExtendedPublicKeySync(key) {\n    return getKeyFromHash(sha512s(checkPrivateKey(key)));\n}\nexport async function getPublicKey(privateKey) {\n    return (await getExtendedPublicKey(privateKey)).pointBytes;\n}\nfunction getPublicKeySync(privateKey) {\n    return getExtendedPublicKeySync(privateKey).pointBytes;\n}\nexport async function sign(message, privateKey) {\n    message = ensureBytes(message);\n    const { prefix, scalar, pointBytes } = await getExtendedPublicKey(privateKey);\n    const r = modlLE(await utils.sha512(prefix, message));\n    const R = Point.BASE.multiply(r);\n    const k = modlLE(await utils.sha512(R.toRawBytes(), pointBytes, message));\n    const s = mod(r + k * scalar, CURVE.l);\n    return new Signature(R, s).toRawBytes();\n}\nfunction signSync(message, privateKey) {\n    message = ensureBytes(message);\n    const { prefix, scalar, pointBytes } = getExtendedPublicKeySync(privateKey);\n    const r = modlLE(sha512s(prefix, message));\n    const R = Point.BASE.multiply(r);\n    const k = modlLE(sha512s(R.toRawBytes(), pointBytes, message));\n    const s = mod(r + k * scalar, CURVE.l);\n    return new Signature(R, s).toRawBytes();\n}\nfunction prepareVerification(sig, message, publicKey) {\n    message = ensureBytes(message);\n    if (!(publicKey instanceof Point))\n        publicKey = Point.fromHex(publicKey, false);\n    const { r, s } = sig instanceof Signature ? sig.assertValidity() : Signature.fromHex(sig);\n    const SB = ExtendedPoint.BASE.multiplyUnsafe(s);\n    return { r, s, SB, pub: publicKey, msg: message };\n}\nfunction finishVerification(publicKey, r, SB, hashed) {\n    const k = modlLE(hashed);\n    const kA = ExtendedPoint.fromAffine(publicKey).multiplyUnsafe(k);\n    const RkA = ExtendedPoint.fromAffine(r).add(kA);\n    return RkA.subtract(SB).multiplyUnsafe(CURVE.h).equals(ExtendedPoint.ZERO);\n}\nexport async function verify(sig, message, publicKey) {\n    const { r, SB, msg, pub } = prepareVerification(sig, message, publicKey);\n    const hashed = await utils.sha512(r.toRawBytes(), pub.toRawBytes(), msg);\n    return finishVerification(pub, r, SB, hashed);\n}\nfunction verifySync(sig, message, publicKey) {\n    const { r, SB, msg, pub } = prepareVerification(sig, message, publicKey);\n    const hashed = sha512s(r.toRawBytes(), pub.toRawBytes(), msg);\n    return finishVerification(pub, r, SB, hashed);\n}\nexport const sync = {\n    getExtendedPublicKey: getExtendedPublicKeySync,\n    getPublicKey: getPublicKeySync,\n    sign: signSync,\n    verify: verifySync,\n};\nexport async function getSharedSecret(privateKey, publicKey) {\n    const { head } = await getExtendedPublicKey(privateKey);\n    const u = Point.fromHex(publicKey).toX25519();\n    return curve25519.scalarMult(head, u);\n}\nPoint.BASE._setWindowSize(8);\nfunction cswap(swap, x_2, x_3) {\n    const dummy = mod(swap * (x_2 - x_3));\n    x_2 = mod(x_2 - dummy);\n    x_3 = mod(x_3 + dummy);\n    return [x_2, x_3];\n}\nfunction montgomeryLadder(pointU, scalar) {\n    const { P } = CURVE;\n    const u = normalizeScalar(pointU, P);\n    const k = normalizeScalar(scalar, P);\n    const a24 = BigInt(121665);\n    const x_1 = u;\n    let x_2 = _1n;\n    let z_2 = _0n;\n    let x_3 = u;\n    let z_3 = _1n;\n    let swap = _0n;\n    let sw;\n    for (let t = BigInt(255 - 1); t >= _0n; t--) {\n        const k_t = (k >> t) & _1n;\n        swap ^= k_t;\n        sw = cswap(swap, x_2, x_3);\n        x_2 = sw[0];\n        x_3 = sw[1];\n        sw = cswap(swap, z_2, z_3);\n        z_2 = sw[0];\n        z_3 = sw[1];\n        swap = k_t;\n        const A = x_2 + z_2;\n        const AA = mod(A * A);\n        const B = x_2 - z_2;\n        const BB = mod(B * B);\n        const E = AA - BB;\n        const C = x_3 + z_3;\n        const D = x_3 - z_3;\n        const DA = mod(D * A);\n        const CB = mod(C * B);\n        x_3 = mod((DA + CB) ** _2n);\n        z_3 = mod(x_1 * (DA - CB) ** _2n);\n        x_2 = mod(AA * BB);\n        z_2 = mod(E * (AA + mod(a24 * E)));\n    }\n    sw = cswap(swap, x_2, x_3);\n    x_2 = sw[0];\n    x_3 = sw[1];\n    sw = cswap(swap, z_2, z_3);\n    z_2 = sw[0];\n    z_3 = sw[1];\n    const { pow_p_5_8, b2 } = pow_2_252_3(z_2);\n    const xp2 = mod(pow2(pow_p_5_8, BigInt(3)) * b2);\n    return mod(x_2 * xp2);\n}\nfunction encodeUCoordinate(u) {\n    return numberTo32BytesLE(mod(u, CURVE.P));\n}\nfunction decodeUCoordinate(uEnc) {\n    const u = ensureBytes(uEnc, 32);\n    u[31] &= 127;\n    return bytesToNumberLE(u);\n}\nexport const curve25519 = {\n    BASE_POINT_U: '0900000000000000000000000000000000000000000000000000000000000000',\n    scalarMult(privateKey, publicKey) {\n        const u = decodeUCoordinate(publicKey);\n        const p = decodeScalar25519(privateKey);\n        const pu = montgomeryLadder(u, p);\n        if (pu === _0n)\n            throw new Error('Invalid private or public key received');\n        return encodeUCoordinate(pu);\n    },\n    scalarMultBase(privateKey) {\n        return curve25519.scalarMult(privateKey, curve25519.BASE_POINT_U);\n    },\n};\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nexport const utils = {\n    TORSION_SUBGROUP: [\n        '0100000000000000000000000000000000000000000000000000000000000000',\n        'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',\n        '0000000000000000000000000000000000000000000000000000000000000080',\n        '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',\n        'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n        '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',\n        '0000000000000000000000000000000000000000000000000000000000000000',\n        'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',\n    ],\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    getExtendedPublicKey,\n    mod,\n    invert,\n    hashToPrivateScalar: (hash) => {\n        hash = ensureBytes(hash);\n        if (hash.length < 40 || hash.length > 1024)\n            throw new Error('Expected 40-1024 bytes of private key as per FIPS 186');\n        return mod(bytesToNumberLE(hash), CURVE.l - _1n) + _1n;\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return new Uint8Array(randomBytes(bytesLength).buffer);\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => {\n        return utils.randomBytes(32);\n    },\n    sha512: async (...messages) => {\n        const message = concatBytes(...messages);\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-512', message.buffer);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            return Uint8Array.from(crypto.node.createHash('sha512').update(message).digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha512 function\");\n        }\n    },\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point.equals(Point.BASE) ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_2n);\n        return cached;\n    },\n    sha512Sync: undefined,\n};\nObject.defineProperties(utils, {\n    sha512Sync: {\n        configurable: false,\n        get() {\n            return _sha512Sync;\n        },\n        set(val) {\n            if (!_sha512Sync)\n                _sha512Sync = val;\n        },\n    },\n});\n","import { Struct, Infer, Result, Context, Describe } from './struct'\nimport { Failure } from './error'\n\n/**\n * Check if a value is an iterator.\n */\n\nfunction isIterable<T>(x: unknown): x is Iterable<T> {\n  return isObject(x) && typeof x[Symbol.iterator] === 'function'\n}\n\n/**\n * Check if a value is a plain object.\n */\n\nexport function isObject(x: unknown): x is object {\n  return typeof x === 'object' && x != null\n}\n\n/**\n * Check if a value is a plain object.\n */\n\nexport function isPlainObject(x: unknown): x is { [key: string]: any } {\n  if (Object.prototype.toString.call(x) !== '[object Object]') {\n    return false\n  }\n\n  const prototype = Object.getPrototypeOf(x)\n  return prototype === null || prototype === Object.prototype\n}\n\n/**\n * Return a value as a printable string.\n */\n\nexport function print(value: any): string {\n  return typeof value === 'string' ? JSON.stringify(value) : `${value}`\n}\n\n/**\n * Shifts (removes and returns) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n */\n\nexport function shiftIterator<T>(input: Iterator<T>): T | undefined {\n  const { done, value } = input.next()\n  return done ? undefined : value\n}\n\n/**\n * Convert a single validation result to a failure.\n */\n\nexport function toFailure<T, S>(\n  result: string | boolean | Partial<Failure>,\n  context: Context,\n  struct: Struct<T, S>,\n  value: any\n): Failure | undefined {\n  if (result === true) {\n    return\n  } else if (result === false) {\n    result = {}\n  } else if (typeof result === 'string') {\n    result = { message: result }\n  }\n\n  const { path, branch } = context\n  const { type } = struct\n  const {\n    refinement,\n    message = `Expected a value of type \\`${type}\\`${\n      refinement ? ` with refinement \\`${refinement}\\`` : ''\n    }, but received: \\`${print(value)}\\``,\n  } = result\n\n  return {\n    value,\n    type,\n    refinement,\n    key: path[path.length - 1],\n    path,\n    branch,\n    ...result,\n    message,\n  }\n}\n\n/**\n * Convert a validation result to an iterable of failures.\n */\n\nexport function* toFailures<T, S>(\n  result: Result,\n  context: Context,\n  struct: Struct<T, S>,\n  value: any\n): IterableIterator<Failure> {\n  if (!isIterable(result)) {\n    result = [result]\n  }\n\n  for (const r of result) {\n    const failure = toFailure(r, context, struct, value)\n\n    if (failure) {\n      yield failure\n    }\n  }\n}\n\n/**\n * Check a value against a struct, traversing deeply into nested values, and\n * returning an iterator of failures or success.\n */\n\nexport function* run<T, S>(\n  value: unknown,\n  struct: Struct<T, S>,\n  options: {\n    path?: any[]\n    branch?: any[]\n    coerce?: boolean\n    mask?: boolean\n  } = {}\n): IterableIterator<[Failure, undefined] | [undefined, T]> {\n  const { path = [], branch = [value], coerce = false, mask = false } = options\n  const ctx: Context = { path, branch }\n\n  if (coerce) {\n    value = struct.coercer(value, ctx)\n\n    if (\n      mask &&\n      struct.type !== 'type' &&\n      isObject(struct.schema) &&\n      isObject(value) &&\n      !Array.isArray(value)\n    ) {\n      for (const key in value) {\n        if (struct.schema[key] === undefined) {\n          delete value[key]\n        }\n      }\n    }\n  }\n\n  let valid = true\n\n  for (const failure of struct.validator(value, ctx)) {\n    valid = false\n    yield [failure, undefined]\n  }\n\n  for (let [k, v, s] of struct.entries(value, ctx)) {\n    const ts = run(v, s as Struct, {\n      path: k === undefined ? path : [...path, k],\n      branch: k === undefined ? branch : [...branch, v],\n      coerce,\n      mask,\n    })\n\n    for (const t of ts) {\n      if (t[0]) {\n        valid = false\n        yield [t[0], undefined]\n      } else if (coerce) {\n        v = t[1]\n\n        if (k === undefined) {\n          value = v\n        } else if (value instanceof Map) {\n          value.set(k, v)\n        } else if (value instanceof Set) {\n          value.add(v)\n        } else if (isObject(value)) {\n          value[k] = v\n        }\n      }\n    }\n  }\n\n  if (valid) {\n    for (const failure of struct.refiner(value as T, ctx)) {\n      valid = false\n      yield [failure, undefined]\n    }\n  }\n\n  if (valid) {\n    yield [undefined, value as T]\n  }\n}\n\n/**\n * Assign properties from one type to another, overwriting existing.\n */\n\nexport type Assign<T, U> = Simplify<U & Omit<T, keyof U>>\n\n/**\n * A schema for enum structs.\n */\n\nexport type EnumSchema<T extends string | number> = { [K in T]: K }\n\n/**\n * Check if a type is an exact match.\n */\n\nexport type IsMatch<T, G> = T extends G ? (G extends T ? T : never) : never\n\n/**\n * Check if a type is a record type.\n */\n\nexport type IsRecord<T> = T extends object\n  ? string extends keyof T\n    ? T\n    : never\n  : never\n/**\n * Check if a type is a tuple.\n */\n\nexport type IsTuple<T> = T extends [any]\n  ? T\n  : T extends [any, any]\n  ? T\n  : T extends [any, any, any]\n  ? T\n  : T extends [any, any, any, any]\n  ? T\n  : T extends [any, any, any, any, any]\n  ? T\n  : never\n\n/**\n * Check if a type is a union.\n */\n\nexport type IsUnion<T, U extends T = T> = (\n  T extends any ? (U extends T ? false : true) : false\n) extends false\n  ? never\n  : T\n\n/**\n * A schema for object structs.\n */\n\nexport type ObjectSchema = Record<string, Struct<any, any>>\n\n/**\n * Infer a type from an object struct schema.\n */\n\nexport type ObjectType<S extends ObjectSchema> = Simplify<\n  Optionalize<{ [K in keyof S]: Infer<S[K]> }>\n>\n\n/**\n * Omit properties from a type that extend from a specific type.\n */\n\nexport type OmitBy<T, V> = Omit<\n  T,\n  { [K in keyof T]: V extends Extract<T[K], V> ? K : never }[keyof T]\n>\n\n/**\n * Normalize properties of a type that allow `undefined` to make them optional.\n */\n\nexport type Optionalize<S extends object> = OmitBy<S, undefined> &\n  Partial<PickBy<S, undefined>>\n\n/**\n * Transform an object schema type to represent a partial.\n */\n\nexport type PartialObjectSchema<S extends ObjectSchema> = {\n  [K in keyof S]: Struct<Infer<S[K]> | undefined>\n}\n\n/**\n * Pick properties from a type that extend from a specific type.\n */\n\nexport type PickBy<T, V> = Pick<\n  T,\n  { [K in keyof T]: V extends Extract<T[K], V> ? K : never }[keyof T]\n>\n\n/**\n * Simplifies a type definition to its most basic representation.\n */\n\nexport type Simplify<T> = T extends any[] | Date\n  ? T\n  : { [K in keyof T]: T[K] } & {}\n\nexport type If<B extends Boolean, Then, Else> = B extends true ? Then : Else\n\n/**\n * A schema for any type of struct.\n */\n\nexport type StructSchema<T> = [T] extends [string]\n  ? [T] extends [IsMatch<T, string>]\n    ? null\n    : [T] extends [IsUnion<T>]\n    ? EnumSchema<T>\n    : T\n  : [T] extends [number]\n  ? [T] extends [IsMatch<T, number>]\n    ? null\n    : [T] extends [IsUnion<T>]\n    ? EnumSchema<T>\n    : T\n  : [T] extends [boolean]\n  ? [T] extends [IsMatch<T, boolean>]\n    ? null\n    : T\n  : T extends\n      | bigint\n      | symbol\n      | undefined\n      | null\n      | Function\n      | Date\n      | Error\n      | RegExp\n      | Map<any, any>\n      | WeakMap<any, any>\n      | Set<any>\n      | WeakSet<any>\n      | Promise<any>\n  ? null\n  : T extends Array<infer E>\n  ? T extends IsTuple<T>\n    ? null\n    : Struct<E>\n  : T extends object\n  ? T extends IsRecord<T>\n    ? null\n    : { [K in keyof T]: Describe<T[K]> }\n  : null\n\n/**\n * A schema for tuple structs.\n */\n\nexport type TupleSchema<T> = { [K in keyof T]: Struct<T[K]> }\n","/**\n * A `StructFailure` represents a single specific failure in validation.\n */\n\nexport type Failure = {\n  value: any\n  key: any\n  type: string\n  refinement: string | undefined\n  message: string\n  branch: Array<any>\n  path: Array<any>\n}\n\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\n\nexport class StructError extends TypeError {\n  value: any\n  key!: any\n  type!: string\n  refinement!: string | undefined\n  path!: Array<any>\n  branch!: Array<any>\n  failures: () => Array<Failure>;\n  [x: string]: any\n\n  constructor(failure: Failure, failures: () => Generator<Failure>) {\n    let cached: Array<Failure> | undefined\n    const { message, ...rest } = failure\n    const { path } = failure\n    const msg =\n      path.length === 0 ? message : `At path: ${path.join('.')} -- ${message}`\n    super(msg)\n    Object.assign(this, rest)\n    this.name = this.constructor.name\n    this.failures = () => {\n      return (cached ??= [failure, ...failures()])\n    }\n  }\n}\n","import { toFailures, shiftIterator, StructSchema, run } from './utils'\nimport { StructError, Failure } from './error'\n\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\n\nexport class Struct<T = unknown, S = unknown> {\n  readonly TYPE!: T\n  type: string\n  schema: S\n  coercer: (value: unknown, context: Context) => unknown\n  validator: (value: unknown, context: Context) => Iterable<Failure>\n  refiner: (value: T, context: Context) => Iterable<Failure>\n  entries: (\n    value: unknown,\n    context: Context\n  ) => Iterable<[string | number, unknown, Struct<any> | Struct<never>]>\n\n  constructor(props: {\n    type: string\n    schema: S\n    coercer?: Coercer\n    validator?: Validator\n    refiner?: Refiner<T>\n    entries?: Struct<T, S>['entries']\n  }) {\n    const {\n      type,\n      schema,\n      validator,\n      refiner,\n      coercer = (value: unknown) => value,\n      entries = function* () {},\n    } = props\n\n    this.type = type\n    this.schema = schema\n    this.entries = entries\n    this.coercer = coercer\n\n    if (validator) {\n      this.validator = (value, context) => {\n        const result = validator(value, context)\n        return toFailures(result, context, this, value)\n      }\n    } else {\n      this.validator = () => []\n    }\n\n    if (refiner) {\n      this.refiner = (value, context) => {\n        const result = refiner(value, context)\n        return toFailures(result, context, this, value)\n      }\n    } else {\n      this.refiner = () => []\n    }\n  }\n\n  /**\n   * Assert that a value passes the struct's validation, throwing if it doesn't.\n   */\n\n  assert(value: unknown): asserts value is T {\n    return assert(value, this)\n  }\n\n  /**\n   * Create a value with the struct's coercion logic, then validate it.\n   */\n\n  create(value: unknown): T {\n    return create(value, this)\n  }\n\n  /**\n   * Check if a value passes the struct's validation.\n   */\n\n  is(value: unknown): value is T {\n    return is(value, this)\n  }\n\n  /**\n   * Mask a value, coercing and validating it, but returning only the subset of\n   * properties defined by the struct's schema.\n   */\n\n  mask(value: unknown): T {\n    return mask(value, this)\n  }\n\n  /**\n   * Validate a value with the struct's validation logic, returning a tuple\n   * representing the result.\n   *\n   * You may optionally pass `true` for the `withCoercion` argument to coerce\n   * the value before attempting to validate it. If you do, the result will\n   * contain the coerced result when successful.\n   */\n\n  validate(\n    value: unknown,\n    options: {\n      coerce?: boolean\n    } = {}\n  ): [StructError, undefined] | [undefined, T] {\n    return validate(value, this, options)\n  }\n}\n\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n */\n\nexport function assert<T, S>(\n  value: unknown,\n  struct: Struct<T, S>\n): asserts value is T {\n  const result = validate(value, struct)\n\n  if (result[0]) {\n    throw result[0]\n  }\n}\n\n/**\n * Create a value with the coercion logic of struct and validate it.\n */\n\nexport function create<T, S>(value: unknown, struct: Struct<T, S>): T {\n  const result = validate(value, struct, { coerce: true })\n\n  if (result[0]) {\n    throw result[0]\n  } else {\n    return result[1]\n  }\n}\n\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n */\n\nexport function mask<T, S>(value: unknown, struct: Struct<T, S>): T {\n  const result = validate(value, struct, { coerce: true, mask: true })\n\n  if (result[0]) {\n    throw result[0]\n  } else {\n    return result[1]\n  }\n}\n\n/**\n * Check if a value passes a struct.\n */\n\nexport function is<T, S>(value: unknown, struct: Struct<T, S>): value is T {\n  const result = validate(value, struct)\n  return !result[0]\n}\n\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n */\n\nexport function validate<T, S>(\n  value: unknown,\n  struct: Struct<T, S>,\n  options: {\n    coerce?: boolean\n    mask?: boolean\n  } = {}\n): [StructError, undefined] | [undefined, T] {\n  const tuples = run(value, struct, options)\n  const tuple = shiftIterator(tuples)!\n\n  if (tuple[0]) {\n    const error = new StructError(tuple[0], function* () {\n      for (const t of tuples) {\n        if (t[0]) {\n          yield t[0]\n        }\n      }\n    })\n\n    return [error, undefined]\n  } else {\n    const v = tuple[1]\n    return [undefined, v]\n  }\n}\n\n/**\n * A `Context` contains information about the current location of the\n * validation inside the initial input value.\n */\n\nexport type Context = {\n  branch: Array<any>\n  path: Array<any>\n}\n\n/**\n * A type utility to extract the type from a `Struct` class.\n */\n\nexport type Infer<T extends Struct<any, any>> = T['TYPE']\n\n/**\n * A type utility to describe that a struct represents a TypeScript type.\n */\n\nexport type Describe<T> = Struct<T, StructSchema<T>>\n\n/**\n * A `Result` is returned from validation functions.\n */\n\nexport type Result =\n  | boolean\n  | string\n  | Partial<Failure>\n  | Iterable<boolean | string | Partial<Failure>>\n\n/**\n * A `Coercer` takes an unknown value and optionally coerces it.\n */\n\nexport type Coercer<T = unknown> = (value: T, context: Context) => unknown\n\n/**\n * A `Validator` takes an unknown value and validates it.\n */\n\nexport type Validator = (value: unknown, context: Context) => Result\n\n/**\n * A `Refiner` takes a value of a known type and validates it against a further\n * constraint.\n */\n\nexport type Refiner<T> = (value: T, context: Context) => Result\n","import { Struct, Context, Validator } from '../struct'\nimport { object, optional } from './types'\nimport { ObjectSchema, Assign, ObjectType, PartialObjectSchema } from '../utils'\n\n/**\n * Create a new struct that combines the properties properties from multiple\n * object structs.\n *\n * Like JavaScript's `Object.assign` utility.\n */\n\nexport function assign<A extends ObjectSchema, B extends ObjectSchema>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>\n): Struct<ObjectType<Assign<A, B>>, Assign<A, B>>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>\n): Struct<ObjectType<Assign<Assign<A, B>, C>>, Assign<Assign<A, B>, C>>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema,\n  D extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>,\n  D: Struct<ObjectType<D>, D>\n): Struct<\n  ObjectType<Assign<Assign<Assign<A, B>, C>, D>>,\n  Assign<Assign<Assign<A, B>, C>, D>\n>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema,\n  D extends ObjectSchema,\n  E extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>,\n  D: Struct<ObjectType<D>, D>,\n  E: Struct<ObjectType<E>, E>\n): Struct<\n  ObjectType<Assign<Assign<Assign<Assign<A, B>, C>, D>, E>>,\n  Assign<Assign<Assign<Assign<A, B>, C>, D>, E>\n>\nexport function assign(...Structs: Struct<any>[]): any {\n  const schemas = Structs.map((s) => s.schema)\n  const schema = Object.assign({}, ...schemas)\n  return object(schema)\n}\n\n/**\n * Define a new struct type with a custom validation function.\n */\n\nexport function define<T>(name: string, validator: Validator): Struct<T, null> {\n  return new Struct({ type: name, schema: null, validator })\n}\n\n/**\n * Create a new struct based on an existing struct, but the value is allowed to\n * be `undefined`. `log` will be called if the value is not `undefined`.\n */\n\nexport function deprecated<T>(\n  struct: Struct<T>,\n  log: (value: unknown, ctx: Context) => void\n): Struct<T> {\n  return new Struct({\n    ...struct,\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n    validator(value, ctx) {\n      if (value === undefined) {\n        return true\n      } else {\n        log(value, ctx)\n        return struct.validator(value, ctx)\n      }\n    },\n  })\n}\n\n/**\n * Create a struct with dynamic validation logic.\n *\n * The callback will receive the value currently being validated, and must\n * return a struct object to validate it with. This can be useful to model\n * validation logic that changes based on its input.\n */\n\nexport function dynamic<T>(\n  fn: (value: unknown, ctx: Context) => Struct<T, any>\n): Struct<T, null> {\n  return new Struct({\n    type: 'dynamic',\n    schema: null,\n    *entries(value, ctx) {\n      const struct = fn(value, ctx)\n      yield* struct.entries(value, ctx)\n    },\n    validator(value, ctx) {\n      const struct = fn(value, ctx)\n      return struct.validator(value, ctx)\n    },\n    coercer(value, ctx) {\n      const struct = fn(value, ctx)\n      return struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Create a struct with lazily evaluated validation logic.\n *\n * The first time validation is run with the struct, the callback will be called\n * and must return a struct object to use. This is useful for cases where you\n * want to have self-referential structs for nested data structures to avoid a\n * circular definition problem.\n */\n\nexport function lazy<T>(fn: () => Struct<T, any>): Struct<T, null> {\n  let struct: Struct<T, any> | undefined\n  return new Struct({\n    type: 'lazy',\n    schema: null,\n    *entries(value, ctx) {\n      struct ??= fn()\n      yield* struct.entries(value, ctx)\n    },\n    validator(value, ctx) {\n      struct ??= fn()\n      return struct.validator(value, ctx)\n    },\n    coercer(value, ctx) {\n      struct ??= fn()\n      return struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Create a new struct based on an existing object struct, but excluding\n * specific properties.\n *\n * Like TypeScript's `Omit` utility.\n */\n\nexport function omit<S extends ObjectSchema, K extends keyof S>(\n  struct: Struct<ObjectType<S>, S>,\n  keys: K[]\n): Struct<ObjectType<Omit<S, K>>, Omit<S, K>> {\n  const { schema } = struct\n  const subschema: any = { ...schema }\n\n  for (const key of keys) {\n    delete subschema[key]\n  }\n\n  return object(subschema as Omit<S, K>)\n}\n\n/**\n * Create a new struct based on an existing object struct, but with all of its\n * properties allowed to be `undefined`.\n *\n * Like TypeScript's `Partial` utility.\n */\n\nexport function partial<S extends ObjectSchema>(\n  struct: Struct<ObjectType<S>, S> | S\n): Struct<ObjectType<PartialObjectSchema<S>>, PartialObjectSchema<S>> {\n  const schema: any =\n    struct instanceof Struct ? { ...struct.schema } : { ...struct }\n\n  for (const key in schema) {\n    schema[key] = optional(schema[key])\n  }\n\n  return object(schema) as any\n}\n\n/**\n * Create a new struct based on an existing object struct, but only including\n * specific properties.\n *\n * Like TypeScript's `Pick` utility.\n */\n\nexport function pick<S extends ObjectSchema, K extends keyof S>(\n  struct: Struct<ObjectType<S>, S>,\n  keys: K[]\n): Struct<ObjectType<Pick<S, K>>, Pick<S, K>> {\n  const { schema } = struct\n  const subschema: any = {}\n\n  for (const key of keys) {\n    subschema[key] = schema[key]\n  }\n\n  return object(subschema as Pick<S, K>)\n}\n\n/**\n * Define a new struct type with a custom validation function.\n *\n * @deprecated This function has been renamed to `define`.\n */\n\nexport function struct<T>(name: string, validator: Validator): Struct<T, null> {\n  console.warn(\n    'superstruct@0.11 - The `struct` helper has been renamed to `define`.'\n  )\n\n  return define(name, validator)\n}\n","import { Infer, Struct } from '../struct'\nimport { define } from './utilities'\nimport {\n  TupleSchema,\n  ObjectSchema,\n  ObjectType,\n  print,\n  run,\n  isObject,\n} from '../utils'\n\n/**\n * Ensure that any value passes validation.\n */\n\nexport function any(): Struct<any, null> {\n  return define('any', () => true)\n}\n\n/**\n * Ensure that a value is an array and that its elements are of a specific type.\n *\n * Note: If you omit the element struct, the arrays elements will not be\n * iterated at all. This can be helpful for cases where performance is critical,\n * and it is preferred to using `array(any())`.\n */\n\nexport function array<T extends Struct<any>>(Element: T): Struct<Infer<T>[], T>\nexport function array(): Struct<unknown[], undefined>\nexport function array<T extends Struct<any>>(Element?: T): any {\n  return new Struct({\n    type: 'array',\n    schema: Element,\n    *entries(value) {\n      if (Element && Array.isArray(value)) {\n        for (const [i, v] of value.entries()) {\n          yield [i, v, Element]\n        }\n      }\n    },\n    coercer(value) {\n      return Array.isArray(value) ? value.slice() : value\n    },\n    validator(value) {\n      return (\n        Array.isArray(value) ||\n        `Expected an array value, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a boolean.\n */\n\nexport function boolean(): Struct<boolean, null> {\n  return define('boolean', (value) => {\n    return typeof value === 'boolean'\n  })\n}\n\n/**\n * Ensure that a value is a valid `Date`.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n */\n\nexport function date(): Struct<Date, null> {\n  return define('date', (value) => {\n    return (\n      (value instanceof Date && !isNaN(value.getTime())) ||\n      `Expected a valid \\`Date\\` object, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is one of a set of potential values.\n *\n * Note: after creating the struct, you can access the definition of the\n * potential values as `struct.schema`.\n */\n\nexport function enums<T extends number>(\n  values: readonly T[]\n): Struct<T, { [K in T[][number]]: K }>\nexport function enums<T extends string>(\n  values: readonly T[]\n): Struct<T, { [K in T[][number]]: K }>\nexport function enums<T extends number | string>(values: readonly T[]): any {\n  const schema: any = {}\n  const description = values.map((v) => print(v)).join()\n\n  for (const key of values) {\n    schema[key] = key\n  }\n\n  return new Struct({\n    type: 'enums',\n    schema,\n    validator(value) {\n      return (\n        values.includes(value as any) ||\n        `Expected one of \\`${description}\\`, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a function.\n */\n\nexport function func(): Struct<Function, null> {\n  return define('func', (value) => {\n    return (\n      typeof value === 'function' ||\n      `Expected a function, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an instance of a specific class.\n */\n\nexport function instance<T extends { new (...args: any): any }>(\n  Class: T\n): Struct<InstanceType<T>, null> {\n  return define('instance', (value) => {\n    return (\n      value instanceof Class ||\n      `Expected a \\`${Class.name}\\` instance, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an integer.\n */\n\nexport function integer(): Struct<number, null> {\n  return define('integer', (value) => {\n    return (\n      (typeof value === 'number' && !isNaN(value) && Number.isInteger(value)) ||\n      `Expected an integer, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value matches all of a set of types.\n */\n\nexport function intersection<A>(Structs: TupleSchema<[A]>): Struct<A, null>\nexport function intersection<A, B>(\n  Structs: TupleSchema<[A, B]>\n): Struct<A & B, null>\nexport function intersection<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<A & B & C, null>\nexport function intersection<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<A & B & C & D, null>\nexport function intersection<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<A & B & C & D & E, null>\nexport function intersection<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<A & B & C & D & E & F, null>\nexport function intersection<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<A & B & C & D & E & F & G, null>\nexport function intersection<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<A & B & C & D & E & F & G & H, null>\nexport function intersection<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<A & B & C & D & E & F & G & H & I, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<A & B & C & D & E & F & G & H & I & J, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N & O, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N & O & P, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<\n  A & B & C & D & E & F & G & H & I & J & K & L & M & N & O & P & Q,\n  null\n>\nexport function intersection(Structs: Array<Struct<any, any>>): any {\n  return new Struct({\n    type: 'intersection',\n    schema: null,\n    *entries(value, ctx) {\n      for (const S of Structs) {\n        yield* S.entries(value, ctx)\n      }\n    },\n    *validator(value, ctx) {\n      for (const S of Structs) {\n        yield* S.validator(value, ctx)\n      }\n    },\n    *refiner(value, ctx) {\n      for (const S of Structs) {\n        yield* S.refiner(value, ctx)\n      }\n    },\n  })\n}\n\n/**\n * Ensure that a value is an exact value, using `===` for comparison.\n */\n\nexport function literal<T extends boolean>(constant: T): Struct<T, T>\nexport function literal<T extends number>(constant: T): Struct<T, T>\nexport function literal<T extends string>(constant: T): Struct<T, T>\nexport function literal<T>(constant: T): Struct<T, null>\nexport function literal<T>(constant: T): any {\n  const description = print(constant)\n  const t = typeof constant\n  return new Struct({\n    type: 'literal',\n    schema:\n      t === 'string' || t === 'number' || t === 'boolean' ? constant : null,\n    validator(value) {\n      return (\n        value === constant ||\n        `Expected the literal \\`${description}\\`, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a `Map` object, and that its keys and values are of\n * specific types.\n */\n\nexport function map(): Struct<Map<unknown, unknown>, null>\nexport function map<K, V>(\n  Key: Struct<K>,\n  Value: Struct<V>\n): Struct<Map<K, V>, null>\nexport function map<K, V>(Key?: Struct<K>, Value?: Struct<V>): any {\n  return new Struct({\n    type: 'map',\n    schema: null,\n    *entries(value) {\n      if (Key && Value && value instanceof Map) {\n        for (const [k, v] of value.entries()) {\n          yield [k as string, k, Key]\n          yield [k as string, v, Value]\n        }\n      }\n    },\n    coercer(value) {\n      return value instanceof Map ? new Map(value) : value\n    },\n    validator(value) {\n      return (\n        value instanceof Map ||\n        `Expected a \\`Map\\` object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that no value ever passes validation.\n */\n\nexport function never(): Struct<never, null> {\n  return define('never', () => false)\n}\n\n/**\n * Augment an existing struct to allow `null` values.\n */\n\nexport function nullable<T, S>(struct: Struct<T, S>): Struct<T | null, S> {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) => value === null || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === null || struct.refiner(value, ctx),\n  })\n}\n\n/**\n * Ensure that a value is a number.\n */\n\nexport function number(): Struct<number, null> {\n  return define('number', (value) => {\n    return (\n      (typeof value === 'number' && !isNaN(value)) ||\n      `Expected a number, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an object, that is has a known set of properties,\n * and that its properties are of specific types.\n *\n * Note: Unrecognized properties will fail validation.\n */\n\nexport function object(): Struct<Record<string, unknown>, null>\nexport function object<S extends ObjectSchema>(\n  schema: S\n): Struct<ObjectType<S>, S>\nexport function object<S extends ObjectSchema>(schema?: S): any {\n  const knowns = schema ? Object.keys(schema) : []\n  const Never = never()\n  return new Struct({\n    type: 'object',\n    schema: schema ? schema : null,\n    *entries(value) {\n      if (schema && isObject(value)) {\n        const unknowns = new Set(Object.keys(value))\n\n        for (const key of knowns) {\n          unknowns.delete(key)\n          yield [key, value[key], schema[key]]\n        }\n\n        for (const key of unknowns) {\n          yield [key, value[key], Never]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n    coercer(value) {\n      return isObject(value) ? { ...value } : value\n    },\n  })\n}\n\n/**\n * Augment a struct to allow `undefined` values.\n */\n\nexport function optional<T, S>(struct: Struct<T, S>): Struct<T | undefined, S> {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) =>\n      value === undefined || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n  })\n}\n\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * Like TypeScript's `Record` utility.\n */\n\nexport function record<K extends string, V>(\n  Key: Struct<K>,\n  Value: Struct<V>\n): Struct<Record<K, V>, null> {\n  return new Struct({\n    type: 'record',\n    schema: null,\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k in value) {\n          const v = value[k]\n          yield [k, k, Key]\n          yield [k, v, Value]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a `RegExp`.\n *\n * Note: this does not test the value against the regular expression! For that\n * you need to use the `pattern()` refinement.\n */\n\nexport function regexp(): Struct<RegExp, null> {\n  return define('regexp', (value) => {\n    return value instanceof RegExp\n  })\n}\n\n/**\n * Ensure that a value is a `Set` object, and that its elements are of a\n * specific type.\n */\n\nexport function set(): Struct<Set<unknown>, null>\nexport function set<T>(Element: Struct<T>): Struct<Set<T>, null>\nexport function set<T>(Element?: Struct<T>): any {\n  return new Struct({\n    type: 'set',\n    schema: null,\n    *entries(value) {\n      if (Element && value instanceof Set) {\n        for (const v of value) {\n          yield [v as string, v, Element]\n        }\n      }\n    },\n    coercer(value) {\n      return value instanceof Set ? new Set(value) : value\n    },\n    validator(value) {\n      return (\n        value instanceof Set ||\n        `Expected a \\`Set\\` object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a string.\n */\n\nexport function string(): Struct<string, null> {\n  return define('string', (value) => {\n    return (\n      typeof value === 'string' ||\n      `Expected a string, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is a tuple of a specific length, and that each of its\n * elements is of a specific type.\n */\n\nexport function tuple<A>(Structs: TupleSchema<[A]>): Struct<[A], null>\nexport function tuple<A, B>(Structs: TupleSchema<[A, B]>): Struct<[A, B], null>\nexport function tuple<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<[A, B, C], null>\nexport function tuple<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<[A, B, C, D], null>\nexport function tuple<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<[A, B, C, D, E], null>\nexport function tuple<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<[A, B, C, D, E, F], null>\nexport function tuple<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<[A, B, C, D, E, F, G], null>\nexport function tuple<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<[A, B, C, D, E, F, G, H], null>\nexport function tuple<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<[A, B, C, D, E, F, G, H, I], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<[A, B, C, D, E, F, G, H, I, J], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q], null>\nexport function tuple(Elements: Struct<any>[]): any {\n  const Never = never()\n\n  return new Struct({\n    type: 'tuple',\n    schema: null,\n    *entries(value) {\n      if (Array.isArray(value)) {\n        const length = Math.max(Elements.length, value.length)\n\n        for (let i = 0; i < length; i++) {\n          yield [i, value[i], Elements[i] || Never]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        Array.isArray(value) ||\n        `Expected an array, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n */\n\nexport function type<S extends ObjectSchema>(\n  schema: S\n): Struct<ObjectType<S>, S> {\n  const keys = Object.keys(schema)\n  return new Struct({\n    type: 'type',\n    schema,\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k of keys) {\n          yield [k, value[k], schema[k]]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value matches one of a set of types.\n */\n\nexport function union<A>(Structs: TupleSchema<[A]>): Struct<A, null>\nexport function union<A, B>(Structs: TupleSchema<[A, B]>): Struct<A | B, null>\nexport function union<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<A | B | C, null>\nexport function union<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<A | B | C | D, null>\nexport function union<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<A | B | C | D | E, null>\nexport function union<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<A | B | C | D | E | F, null>\nexport function union<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<A | B | C | D | E | F | G, null>\nexport function union<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<A | B | C | D | E | F | G | H, null>\nexport function union<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<A | B | C | D | E | F | G | H | I, null>\nexport function union<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<A | B | C | D | E | F | G | H | I | J, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N | O, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<\n  A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P | Q,\n  null\n>\nexport function union(Structs: Struct<any>[]): any {\n  const description = Structs.map((s) => s.type).join(' | ')\n  return new Struct({\n    type: 'union',\n    schema: null,\n    validator(value, ctx) {\n      const failures = []\n\n      for (const S of Structs) {\n        const [...tuples] = run(value, S, ctx)\n        const [first] = tuples\n\n        if (!first[0]) {\n          return []\n        } else {\n          for (const [failure] of tuples) {\n            if (failure) {\n              failures.push(failure)\n            }\n          }\n        }\n      }\n\n      return [\n        `Expected the value to satisfy a union of \\`${description}\\`, but received: ${print(\n          value\n        )}`,\n        ...failures,\n      ]\n    },\n  })\n}\n\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n */\n\nexport function unknown(): Struct<unknown, null> {\n  return define('unknown', () => true)\n}\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","import { Struct, is, Coercer } from '../struct'\nimport { isPlainObject } from '../utils'\nimport { string, unknown } from './types'\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function coerce<T, S, C>(\n  struct: Struct<T, S>,\n  condition: Struct<C, any>,\n  coercer: Coercer<C>\n): Struct<T, S> {\n  return new Struct({\n    ...struct,\n    coercer: (value, ctx) => {\n      return is(value, condition)\n        ? struct.coercer(coercer(value, ctx), ctx)\n        : struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Augment a struct to replace `undefined` values with a default.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function defaulted<T, S>(\n  struct: Struct<T, S>,\n  fallback: any,\n  options: {\n    strict?: boolean\n  } = {}\n): Struct<T, S> {\n  return coerce(struct, unknown(), (x) => {\n    const f = typeof fallback === 'function' ? fallback() : fallback\n\n    if (x === undefined) {\n      return f\n    }\n\n    if (!options.strict && isPlainObject(x) && isPlainObject(f)) {\n      const ret = { ...x }\n      let changed = false\n\n      for (const key in f) {\n        if (ret[key] === undefined) {\n          ret[key] = f[key]\n          changed = true\n        }\n      }\n\n      if (changed) {\n        return ret\n      }\n    }\n\n    return x\n  })\n}\n\n/**\n * Augment a struct to trim string inputs.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function trimmed<T, S>(struct: Struct<T, S>): Struct<T, S> {\n  return coerce(struct, string(), (x) => x.trim())\n}\n","/*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport * as nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _3n = BigInt(3);\nconst _8n = BigInt(8);\nconst POW_2_256 = _2n ** BigInt(256);\nconst CURVE = {\n    a: _0n,\n    b: BigInt(7),\n    P: POW_2_256 - _2n ** BigInt(32) - BigInt(977),\n    n: POW_2_256 - BigInt('432420386565659656852420866394968145599'),\n    h: _1n,\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n};\nexport { CURVE };\nfunction weistrass(x) {\n    const { a, b } = CURVE;\n    const x2 = mod(x * x);\n    const x3 = mod(x2 * x);\n    return mod(x3 + a * x + b);\n}\nconst USE_ENDOMORPHISM = CURVE.a === _0n;\nclass JacobianPoint {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('JacobianPoint#fromAffine: expected Point');\n        }\n        return new JacobianPoint(p.x, p.y, _1n);\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return JacobianPoint.toAffineBatch(points).map(JacobianPoint.fromAffine);\n    }\n    equals(other) {\n        if (!(other instanceof JacobianPoint))\n            throw new TypeError('JacobianPoint expected');\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const Z1Z1 = mod(Z1 ** _2n);\n        const Z2Z2 = mod(Z2 ** _2n);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        return U1 === U2 && S1 === S2;\n    }\n    negate() {\n        return new JacobianPoint(this.x, mod(-this.y), this.z);\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const A = mod(X1 ** _2n);\n        const B = mod(Y1 ** _2n);\n        const C = mod(B ** _2n);\n        const D = mod(_2n * (mod((X1 + B) ** _2n) - A - C));\n        const E = mod(_3n * A);\n        const F = mod(E ** _2n);\n        const X3 = mod(F - _2n * D);\n        const Y3 = mod(E * (D - X3) - _8n * C);\n        const Z3 = mod(_2n * Y1 * Z1);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    add(other) {\n        if (!(other instanceof JacobianPoint))\n            throw new TypeError('JacobianPoint expected');\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        if (X2 === _0n || Y2 === _0n)\n            return this;\n        if (X1 === _0n || Y1 === _0n)\n            return other;\n        const Z1Z1 = mod(Z1 ** _2n);\n        const Z2Z2 = mod(Z2 ** _2n);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        const H = mod(U2 - U1);\n        const r = mod(S2 - S1);\n        if (H === _0n) {\n            if (r === _0n) {\n                return this.double();\n            }\n            else {\n                return JacobianPoint.ZERO;\n            }\n        }\n        const HH = mod(H ** _2n);\n        const HHH = mod(H * HH);\n        const V = mod(U1 * HH);\n        const X3 = mod(r ** _2n - HHH - _2n * V);\n        const Y3 = mod(r * (V - X3) - S1 * HHH);\n        const Z3 = mod(Z1 * Z2 * H);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiplyUnsafe(scalar) {\n        const P0 = JacobianPoint.ZERO;\n        if (typeof scalar === 'bigint' && scalar === _0n)\n            return P0;\n        let n = normalizeScalar(scalar);\n        if (n === _1n)\n            return this;\n        if (!USE_ENDOMORPHISM) {\n            let p = P0;\n            let d = this;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        }\n        let { k1neg, k1, k2neg, k2 } = splitScalarEndo(n);\n        let k1p = P0;\n        let k2p = P0;\n        let d = this;\n        while (k1 > _0n || k2 > _0n) {\n            if (k1 & _1n)\n                k1p = k1p.add(d);\n            if (k2 & _1n)\n                k2p = k2p.add(d);\n            d = d.double();\n            k1 >>= _1n;\n            k2 >>= _1n;\n        }\n        if (k1neg)\n            k1p = k1p.negate();\n        if (k2neg)\n            k2p = k2p.negate();\n        k2p = new JacobianPoint(mod(k2p.x * CURVE.beta), k2p.y, k2p.z);\n        return k1p.add(k2p);\n    }\n    precomputeWindow(W) {\n        const windows = USE_ENDOMORPHISM ? 128 / W + 1 : 256 / W + 1;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(JacobianPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = JacobianPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = JacobianPoint.ZERO;\n        let f = JacobianPoint.ZERO;\n        const windows = 1 + (USE_ENDOMORPHISM ? 128 / W : 256 / W);\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            if (wbits === 0) {\n                let pr = precomputes[offset];\n                if (window % 2)\n                    pr = pr.negate();\n                f = f.add(pr);\n            }\n            else {\n                let cached = precomputes[offset + Math.abs(wbits) - 1];\n                if (wbits < 0)\n                    cached = cached.negate();\n                p = p.add(cached);\n            }\n        }\n        return { p, f };\n    }\n    multiply(scalar, affinePoint) {\n        let n = normalizeScalar(scalar);\n        let point;\n        let fake;\n        if (USE_ENDOMORPHISM) {\n            const { k1neg, k1, k2neg, k2 } = splitScalarEndo(n);\n            let { p: k1p, f: f1p } = this.wNAF(k1, affinePoint);\n            let { p: k2p, f: f2p } = this.wNAF(k2, affinePoint);\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new JacobianPoint(mod(k2p.x * CURVE.beta), k2p.y, k2p.z);\n            point = k1p.add(k2p);\n            fake = f1p.add(f2p);\n        }\n        else {\n            const { p, f } = this.wNAF(n, affinePoint);\n            point = p;\n            fake = f;\n        }\n        return JacobianPoint.normalizeZ([point, fake])[0];\n    }\n    toAffine(invZ = invert(this.z)) {\n        const { x, y, z } = this;\n        const iz1 = invZ;\n        const iz2 = mod(iz1 * iz1);\n        const iz3 = mod(iz2 * iz1);\n        const ax = mod(x * iz2);\n        const ay = mod(y * iz3);\n        const zz = mod(z * iz1);\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n}\nJacobianPoint.BASE = new JacobianPoint(CURVE.Gx, CURVE.Gy, _1n);\nJacobianPoint.ZERO = new JacobianPoint(_0n, _1n, _0n);\nconst pointPrecomputes = new WeakMap();\nexport class Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    static fromCompressedHex(bytes) {\n        const isShort = bytes.length === 32;\n        const x = bytesToNumber(isShort ? bytes : bytes.subarray(1));\n        if (!isValidFieldElement(x))\n            throw new Error('Point is not on curve');\n        const y2 = weistrass(x);\n        let y = sqrtMod(y2);\n        const isYOdd = (y & _1n) === _1n;\n        if (isShort) {\n            if (isYOdd)\n                y = mod(-y);\n        }\n        else {\n            const isFirstByteOdd = (bytes[0] & 1) === 1;\n            if (isFirstByteOdd !== isYOdd)\n                y = mod(-y);\n        }\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromUncompressedHex(bytes) {\n        const x = bytesToNumber(bytes.subarray(1, 33));\n        const y = bytesToNumber(bytes.subarray(33, 65));\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        const len = bytes.length;\n        const header = bytes[0];\n        if (len === 32 || (len === 33 && (header === 0x02 || header === 0x03))) {\n            return this.fromCompressedHex(bytes);\n        }\n        if (len === 65 && header === 0x04)\n            return this.fromUncompressedHex(bytes);\n        throw new Error(`Point.fromHex: received invalid point. Expected 32-33 compressed bytes or 65 uncompressed bytes, not ${len}`);\n    }\n    static fromPrivateKey(privateKey) {\n        return Point.BASE.multiply(normalizePrivateKey(privateKey));\n    }\n    static fromSignature(msgHash, signature, recovery) {\n        msgHash = ensureBytes(msgHash);\n        const h = truncateHash(msgHash);\n        const { r, s } = normalizeSignature(signature);\n        if (recovery !== 0 && recovery !== 1) {\n            throw new Error('Cannot recover signature: invalid recovery bit');\n        }\n        const prefix = recovery & 1 ? '03' : '02';\n        const R = Point.fromHex(prefix + numTo32bStr(r));\n        const { n } = CURVE;\n        const rinv = invert(r, n);\n        const u1 = mod(-h * rinv, n);\n        const u2 = mod(s * rinv, n);\n        const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2);\n        if (!Q)\n            throw new Error('Cannot recover signature: point at infinify');\n        Q.assertValidity();\n        return Q;\n    }\n    toRawBytes(isCompressed = false) {\n        return hexToBytes(this.toHex(isCompressed));\n    }\n    toHex(isCompressed = false) {\n        const x = numTo32bStr(this.x);\n        if (isCompressed) {\n            const prefix = this.y & _1n ? '03' : '02';\n            return `${prefix}${x}`;\n        }\n        else {\n            return `04${x}${numTo32bStr(this.y)}`;\n        }\n    }\n    toHexX() {\n        return this.toHex(true).slice(2);\n    }\n    toRawX() {\n        return this.toRawBytes(true).slice(1);\n    }\n    assertValidity() {\n        const msg = 'Point is not on elliptic curve';\n        const { x, y } = this;\n        if (!isValidFieldElement(x) || !isValidFieldElement(y))\n            throw new Error(msg);\n        const left = mod(y * y);\n        const right = weistrass(x);\n        if (mod(left - right) !== _0n)\n            throw new Error(msg);\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(this.x, mod(-this.y));\n    }\n    double() {\n        return JacobianPoint.fromAffine(this).double().toAffine();\n    }\n    add(other) {\n        return JacobianPoint.fromAffine(this).add(JacobianPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return JacobianPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n    multiplyAndAddUnsafe(Q, a, b) {\n        const P = JacobianPoint.fromAffine(this);\n        const aP = a === _0n || a === _1n || this !== Point.BASE ? P.multiplyUnsafe(a) : P.multiply(a);\n        const bQ = JacobianPoint.fromAffine(Q).multiplyUnsafe(b);\n        const sum = aP.add(bQ);\n        return sum.equals(JacobianPoint.ZERO) ? undefined : sum.toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _0n);\nfunction sliceDER(s) {\n    return Number.parseInt(s[0], 16) >= 8 ? '00' + s : s;\n}\nfunction parseDERInt(data) {\n    if (data.length < 2 || data[0] !== 0x02) {\n        throw new Error(`Invalid signature integer tag: ${bytesToHex(data)}`);\n    }\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) {\n        throw new Error(`Invalid signature integer: wrong length`);\n    }\n    if (res[0] === 0x00 && res[1] <= 0x7f) {\n        throw new Error('Invalid signature integer: trailing length');\n    }\n    return { data: bytesToNumber(res), left: data.subarray(len + 2) };\n}\nfunction parseDERSignature(data) {\n    if (data.length < 2 || data[0] != 0x30) {\n        throw new Error(`Invalid signature tag: ${bytesToHex(data)}`);\n    }\n    if (data[1] !== data.length - 2) {\n        throw new Error('Invalid signature: incorrect length');\n    }\n    const { data: r, left: sBytes } = parseDERInt(data.subarray(2));\n    const { data: s, left: rBytesLeft } = parseDERInt(sBytes);\n    if (rBytesLeft.length) {\n        throw new Error(`Invalid signature: left bytes after parsing: ${bytesToHex(rBytesLeft)}`);\n    }\n    return { r, s };\n}\nexport class Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromCompact(hex) {\n        const arr = isUint8a(hex);\n        const name = 'Signature.fromCompact';\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`${name}: Expected string or Uint8Array`);\n        const str = arr ? bytesToHex(hex) : hex;\n        if (str.length !== 128)\n            throw new Error(`${name}: Expected 64-byte hex`);\n        return new Signature(hexToNumber(str.slice(0, 64)), hexToNumber(str.slice(64, 128)));\n    }\n    static fromDER(hex) {\n        const arr = isUint8a(hex);\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`Signature.fromDER: Expected string or Uint8Array`);\n        const { r, s } = parseDERSignature(arr ? hex : hexToBytes(hex));\n        return new Signature(r, s);\n    }\n    static fromHex(hex) {\n        return this.fromDER(hex);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isWithinCurveOrder(r))\n            throw new Error('Invalid Signature: r must be 0 < r < n');\n        if (!isWithinCurveOrder(s))\n            throw new Error('Invalid Signature: s must be 0 < s < n');\n    }\n    hasHighS() {\n        const HALF = CURVE.n >> _1n;\n        return this.s > HALF;\n    }\n    normalizeS() {\n        return this.hasHighS() ? new Signature(this.r, CURVE.n - this.s) : this;\n    }\n    toDERRawBytes(isCompressed = false) {\n        return hexToBytes(this.toDERHex(isCompressed));\n    }\n    toDERHex(isCompressed = false) {\n        const sHex = sliceDER(numberToHexUnpadded(this.s));\n        if (isCompressed)\n            return sHex;\n        const rHex = sliceDER(numberToHexUnpadded(this.r));\n        const rLen = numberToHexUnpadded(rHex.length / 2);\n        const sLen = numberToHexUnpadded(sHex.length / 2);\n        const length = numberToHexUnpadded(rHex.length / 2 + sHex.length / 2 + 4);\n        return `30${length}02${rLen}${rHex}02${sLen}${sHex}`;\n    }\n    toRawBytes() {\n        return this.toDERRawBytes();\n    }\n    toHex() {\n        return this.toDERHex();\n    }\n    toCompactRawBytes() {\n        return hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n}\nfunction concatBytes(...arrays) {\n    if (!arrays.every(isUint8a))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nfunction isUint8a(bytes) {\n    return bytes instanceof Uint8Array;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nfunction numTo32bStr(num) {\n    if (num > POW_2_256)\n        throw new Error('Expected number < 2^256');\n    return num.toString(16).padStart(64, '0');\n}\nfunction numTo32b(num) {\n    return hexToBytes(numTo32bStr(num));\n}\nfunction numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nfunction hexToNumber(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToNumber: expected string, got ' + typeof hex);\n    }\n    return BigInt(`0x${hex}`);\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex' + hex.length);\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction bytesToNumber(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nfunction ensureBytes(hex) {\n    return hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n}\nfunction normalizeScalar(num) {\n    if (typeof num === 'number' && Number.isSafeInteger(num) && num > 0)\n        return BigInt(num);\n    if (typeof num === 'bigint' && isWithinCurveOrder(num))\n        return num;\n    throw new TypeError('Expected valid private scalar: 0 < scalar < curve.n');\n}\nfunction mod(a, b = CURVE.P) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction sqrtMod(x) {\n    const { P } = CURVE;\n    const _6n = BigInt(6);\n    const _11n = BigInt(11);\n    const _22n = BigInt(22);\n    const _23n = BigInt(23);\n    const _44n = BigInt(44);\n    const _88n = BigInt(88);\n    const b2 = (x * x * x) % P;\n    const b3 = (b2 * b2 * x) % P;\n    const b6 = (pow2(b3, _3n) * b3) % P;\n    const b9 = (pow2(b6, _3n) * b3) % P;\n    const b11 = (pow2(b9, _2n) * b2) % P;\n    const b22 = (pow2(b11, _11n) * b11) % P;\n    const b44 = (pow2(b22, _22n) * b22) % P;\n    const b88 = (pow2(b44, _44n) * b44) % P;\n    const b176 = (pow2(b88, _88n) * b88) % P;\n    const b220 = (pow2(b176, _44n) * b44) % P;\n    const b223 = (pow2(b220, _3n) * b3) % P;\n    const t1 = (pow2(b223, _23n) * b22) % P;\n    const t2 = (pow2(t1, _6n) * b2) % P;\n    return pow2(t2, _2n);\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const scratch = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = mod(acc * scratch[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return scratch;\n}\nconst divNearest = (a, b) => (a + b / _2n) / b;\nconst POW_2_128 = _2n ** BigInt(128);\nfunction splitScalarEndo(k) {\n    const { n } = CURVE;\n    const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n    const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n    const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n    const b2 = a1;\n    const c1 = divNearest(b2 * k, n);\n    const c2 = divNearest(-b1 * k, n);\n    let k1 = mod(k - c1 * a1 - c2 * a2, n);\n    let k2 = mod(-c1 * b1 - c2 * b2, n);\n    const k1neg = k1 > POW_2_128;\n    const k2neg = k2 > POW_2_128;\n    if (k1neg)\n        k1 = n - k1;\n    if (k2neg)\n        k2 = n - k2;\n    if (k1 > POW_2_128 || k2 > POW_2_128) {\n        throw new Error('splitScalarEndo: Endomorphism failed, k=' + k);\n    }\n    return { k1neg, k1, k2neg, k2 };\n}\nfunction truncateHash(hash) {\n    const { n } = CURVE;\n    const byteLength = hash.length;\n    const delta = byteLength * 8 - 256;\n    let h = bytesToNumber(hash);\n    if (delta > 0)\n        h = h >> BigInt(delta);\n    if (h >= n)\n        h -= n;\n    return h;\n}\nclass HmacDrbg {\n    constructor() {\n        this.v = new Uint8Array(32).fill(1);\n        this.k = new Uint8Array(32).fill(0);\n        this.counter = 0;\n    }\n    hmac(...values) {\n        return utils.hmacSha256(this.k, ...values);\n    }\n    hmacSync(...values) {\n        if (typeof utils.hmacSha256Sync !== 'function')\n            throw new Error('utils.hmacSha256Sync is undefined, you need to set it');\n        const res = utils.hmacSha256Sync(this.k, ...values);\n        if (res instanceof Promise)\n            throw new Error('To use sync sign(), ensure utils.hmacSha256 is sync');\n        return res;\n    }\n    incr() {\n        if (this.counter >= 1000) {\n            throw new Error('Tried 1,000 k values for sign(), all were invalid');\n        }\n        this.counter += 1;\n    }\n    async reseed(seed = new Uint8Array()) {\n        this.k = await this.hmac(this.v, Uint8Array.from([0x00]), seed);\n        this.v = await this.hmac(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = await this.hmac(this.v, Uint8Array.from([0x01]), seed);\n        this.v = await this.hmac(this.v);\n    }\n    reseedSync(seed = new Uint8Array()) {\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x00]), seed);\n        this.v = this.hmacSync(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x01]), seed);\n        this.v = this.hmacSync(this.v);\n    }\n    async generate() {\n        this.incr();\n        this.v = await this.hmac(this.v);\n        return this.v;\n    }\n    generateSync() {\n        this.incr();\n        this.v = this.hmacSync(this.v);\n        return this.v;\n    }\n}\nfunction isWithinCurveOrder(num) {\n    return _0n < num && num < CURVE.n;\n}\nfunction isValidFieldElement(num) {\n    return _0n < num && num < CURVE.P;\n}\nfunction kmdToSig(kBytes, m, d) {\n    const k = bytesToNumber(kBytes);\n    if (!isWithinCurveOrder(k))\n        return;\n    const { n } = CURVE;\n    const q = Point.BASE.multiply(k);\n    const r = mod(q.x, n);\n    if (r === _0n)\n        return;\n    const s = mod(invert(k, n) * mod(m + d * r, n), n);\n    if (s === _0n)\n        return;\n    const sig = new Signature(r, s);\n    const recovery = (q.x === sig.r ? 0 : 2) | Number(q.y & _1n);\n    return { sig, recovery };\n}\nfunction normalizePrivateKey(key) {\n    let num;\n    if (typeof key === 'bigint') {\n        num = key;\n    }\n    else if (typeof key === 'number' && Number.isSafeInteger(key) && key > 0) {\n        num = BigInt(key);\n    }\n    else if (typeof key === 'string') {\n        if (key.length !== 64)\n            throw new Error('Expected 32 bytes of private key');\n        num = hexToNumber(key);\n    }\n    else if (isUint8a(key)) {\n        if (key.length !== 32)\n            throw new Error('Expected 32 bytes of private key');\n        num = bytesToNumber(key);\n    }\n    else {\n        throw new TypeError('Expected valid private key');\n    }\n    if (!isWithinCurveOrder(num))\n        throw new Error('Expected private key: 0 < key < n');\n    return num;\n}\nfunction normalizePublicKey(publicKey) {\n    if (publicKey instanceof Point) {\n        publicKey.assertValidity();\n        return publicKey;\n    }\n    else {\n        return Point.fromHex(publicKey);\n    }\n}\nfunction normalizeSignature(signature) {\n    if (signature instanceof Signature) {\n        signature.assertValidity();\n        return signature;\n    }\n    try {\n        return Signature.fromDER(signature);\n    }\n    catch (error) {\n        return Signature.fromCompact(signature);\n    }\n}\nexport function getPublicKey(privateKey, isCompressed = false) {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n}\nexport function recoverPublicKey(msgHash, signature, recovery, isCompressed = false) {\n    return Point.fromSignature(msgHash, signature, recovery).toRawBytes(isCompressed);\n}\nfunction isPub(item) {\n    const arr = isUint8a(item);\n    const str = typeof item === 'string';\n    const len = (arr || str) && item.length;\n    if (arr)\n        return len === 33 || len === 65;\n    if (str)\n        return len === 66 || len === 130;\n    if (item instanceof Point)\n        return true;\n    return false;\n}\nexport function getSharedSecret(privateA, publicB, isCompressed = false) {\n    if (isPub(privateA))\n        throw new TypeError('getSharedSecret: first arg must be private key');\n    if (!isPub(publicB))\n        throw new TypeError('getSharedSecret: second arg must be public key');\n    const b = normalizePublicKey(publicB);\n    b.assertValidity();\n    return b.multiply(normalizePrivateKey(privateA)).toRawBytes(isCompressed);\n}\nfunction bits2int(bytes) {\n    const slice = bytes.length > 32 ? bytes.slice(0, 32) : bytes;\n    return bytesToNumber(slice);\n}\nfunction bits2octets(bytes) {\n    const z1 = bits2int(bytes);\n    const z2 = mod(z1, CURVE.n);\n    return int2octets(z2 < _0n ? z1 : z2);\n}\nfunction int2octets(num) {\n    if (typeof num !== 'bigint')\n        throw new Error('Expected bigint');\n    const hex = numTo32bStr(num);\n    return hexToBytes(hex);\n}\nfunction initSigArgs(msgHash, privateKey, extraEntropy) {\n    if (msgHash == null)\n        throw new Error(`sign: expected valid message hash, not \"${msgHash}\"`);\n    const h1 = ensureBytes(msgHash);\n    const d = normalizePrivateKey(privateKey);\n    const seedArgs = [int2octets(d), bits2octets(h1)];\n    if (extraEntropy != null) {\n        if (extraEntropy === true)\n            extraEntropy = utils.randomBytes(32);\n        const e = ensureBytes(extraEntropy);\n        if (e.length !== 32)\n            throw new Error('sign: Expected 32 bytes of extra data');\n        seedArgs.push(e);\n    }\n    const seed = concatBytes(...seedArgs);\n    const m = bits2int(h1);\n    return { seed, m, d };\n}\nfunction finalizeSig(recSig, opts) {\n    let { sig, recovery } = recSig;\n    const { canonical, der, recovered } = Object.assign({ canonical: true, der: true }, opts);\n    if (canonical && sig.hasHighS()) {\n        sig = sig.normalizeS();\n        recovery ^= 1;\n    }\n    const hashed = der ? sig.toDERRawBytes() : sig.toCompactRawBytes();\n    return recovered ? [hashed, recovery] : hashed;\n}\nasync function sign(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    let sig;\n    const drbg = new HmacDrbg();\n    await drbg.reseed(seed);\n    while (!(sig = kmdToSig(await drbg.generate(), m, d)))\n        await drbg.reseed();\n    return finalizeSig(sig, opts);\n}\nfunction signSync(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    let sig;\n    const drbg = new HmacDrbg();\n    drbg.reseedSync(seed);\n    while (!(sig = kmdToSig(drbg.generateSync(), m, d)))\n        drbg.reseedSync();\n    return finalizeSig(sig, opts);\n}\nexport { sign, signSync };\nconst vopts = { strict: true };\nexport function verify(signature, msgHash, publicKey, opts = vopts) {\n    let sig;\n    try {\n        sig = normalizeSignature(signature);\n        msgHash = ensureBytes(msgHash);\n    }\n    catch (error) {\n        return false;\n    }\n    const { r, s } = sig;\n    if (opts.strict && sig.hasHighS())\n        return false;\n    const h = truncateHash(msgHash);\n    let P;\n    try {\n        P = normalizePublicKey(publicKey);\n    }\n    catch (error) {\n        return false;\n    }\n    const { n } = CURVE;\n    const sinv = invert(s, n);\n    const u1 = mod(h * sinv, n);\n    const u2 = mod(r * sinv, n);\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2);\n    if (!R)\n        return false;\n    const v = mod(R.x, n);\n    return v === r;\n}\nfunction finalizeSchnorrChallenge(ch) {\n    return mod(bytesToNumber(ch), CURVE.n);\n}\nfunction hasEvenY(point) {\n    return (point.y & _1n) === _0n;\n}\nclass SchnorrSignature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        if (bytes.length !== 64)\n            throw new TypeError(`SchnorrSignature.fromHex: expected 64 bytes, not ${bytes.length}`);\n        const r = bytesToNumber(bytes.subarray(0, 32));\n        const s = bytesToNumber(bytes.subarray(32, 64));\n        return new SchnorrSignature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isValidFieldElement(r) || !isWithinCurveOrder(s))\n            throw new Error('Invalid signature');\n    }\n    toHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n    toRawBytes() {\n        return hexToBytes(this.toHex());\n    }\n}\nfunction schnorrGetPublicKey(privateKey) {\n    return Point.fromPrivateKey(privateKey).toRawX();\n}\nfunction initSchnorrSigArgs(message, privateKey, auxRand) {\n    if (message == null)\n        throw new TypeError(`sign: Expected valid message, not \"${message}\"`);\n    const m = ensureBytes(message);\n    const d0 = normalizePrivateKey(privateKey);\n    const rand = ensureBytes(auxRand);\n    if (rand.length !== 32)\n        throw new TypeError('sign: Expected 32 bytes of aux randomness');\n    const P = Point.fromPrivateKey(d0);\n    const px = P.toRawX();\n    const d = hasEvenY(P) ? d0 : CURVE.n - d0;\n    return { m, P, px, d, rand };\n}\nfunction initSchnorrNonce(d, t0h) {\n    return numTo32b(d ^ bytesToNumber(t0h));\n}\nfunction finalizeSchnorrNonce(k0h) {\n    const k0 = mod(bytesToNumber(k0h), CURVE.n);\n    if (k0 === _0n)\n        throw new Error('sign: Creation of signature failed. k is zero');\n    const R = Point.fromPrivateKey(k0);\n    const rx = R.toRawX();\n    const k = hasEvenY(R) ? k0 : CURVE.n - k0;\n    return { R, rx, k };\n}\nfunction finalizeSchnorrSig(R, k, e, d) {\n    return new SchnorrSignature(R.x, mod(k + e * d, CURVE.n)).toRawBytes();\n}\nasync function schnorrSign(message, privateKey, auxRand = utils.randomBytes()) {\n    const { m, px, d, rand } = initSchnorrSigArgs(message, privateKey, auxRand);\n    const t = initSchnorrNonce(d, await utils.taggedHash(TAGS.aux, rand));\n    const { R, rx, k } = finalizeSchnorrNonce(await utils.taggedHash(TAGS.nonce, t, px, m));\n    const e = finalizeSchnorrChallenge(await utils.taggedHash(TAGS.challenge, rx, px, m));\n    const sig = finalizeSchnorrSig(R, k, e, d);\n    const isValid = await schnorrVerify(sig, m, px);\n    if (!isValid)\n        throw new Error('sign: Invalid signature produced');\n    return sig;\n}\nfunction schnorrSignSync(message, privateKey, auxRand = utils.randomBytes()) {\n    const { m, px, d, rand } = initSchnorrSigArgs(message, privateKey, auxRand);\n    const t = initSchnorrNonce(d, utils.taggedHashSync(TAGS.aux, rand));\n    const { R, rx, k } = finalizeSchnorrNonce(utils.taggedHashSync(TAGS.nonce, t, px, m));\n    const e = finalizeSchnorrChallenge(utils.taggedHashSync(TAGS.challenge, rx, px, m));\n    const sig = finalizeSchnorrSig(R, k, e, d);\n    const isValid = schnorrVerifySync(sig, m, px);\n    if (!isValid)\n        throw new Error('sign: Invalid signature produced');\n    return sig;\n}\nfunction initSchnorrVerify(signature, message, publicKey) {\n    const raw = signature instanceof SchnorrSignature;\n    const sig = raw ? signature : SchnorrSignature.fromHex(signature);\n    if (raw)\n        sig.assertValidity();\n    return {\n        ...sig,\n        m: ensureBytes(message),\n        P: normalizePublicKey(publicKey),\n    };\n}\nfunction finalizeSchnorrVerify(r, P, s, e) {\n    const R = Point.BASE.multiplyAndAddUnsafe(P, normalizePrivateKey(s), mod(-e, CURVE.n));\n    if (!R || !hasEvenY(R) || R.x !== r)\n        return false;\n    return true;\n}\nasync function schnorrVerify(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = finalizeSchnorrChallenge(await utils.taggedHash(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        return false;\n    }\n}\nfunction schnorrVerifySync(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = finalizeSchnorrChallenge(utils.taggedHashSync(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        return false;\n    }\n}\nexport const schnorr = {\n    Signature: SchnorrSignature,\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    signSync: schnorrSignSync,\n    verifySync: schnorrVerifySync,\n};\nPoint.BASE._setWindowSize(8);\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nconst TAGS = {\n    challenge: 'BIP0340/challenge',\n    aux: 'BIP0340/aux',\n    nonce: 'BIP0340/nonce',\n};\nconst TAGGED_HASH_PREFIXES = {};\nexport const utils = {\n    isValidPrivateKey(privateKey) {\n        try {\n            normalizePrivateKey(privateKey);\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    },\n    privateAdd: (privateKey, tweak) => {\n        const p = normalizePrivateKey(privateKey);\n        const t = normalizePrivateKey(tweak);\n        return numTo32b(mod(p + t, CURVE.n));\n    },\n    privateNegate: (privateKey) => {\n        const p = normalizePrivateKey(privateKey);\n        return numTo32b(CURVE.n - p);\n    },\n    pointAddScalar: (p, tweak, isCompressed) => {\n        const P = Point.fromHex(p);\n        const t = normalizePrivateKey(tweak);\n        const Q = Point.BASE.multiplyAndAddUnsafe(P, t, _1n);\n        if (!Q)\n            throw new Error('Tweaked point at infinity');\n        return Q.toRawBytes(isCompressed);\n    },\n    pointMultiply: (p, tweak, isCompressed) => {\n        const P = Point.fromHex(p);\n        const t = bytesToNumber(ensureBytes(tweak));\n        return P.multiply(t).toRawBytes(isCompressed);\n    },\n    hashToPrivateKey: (hash) => {\n        hash = ensureBytes(hash);\n        if (hash.length < 40 || hash.length > 1024)\n            throw new Error('Expected 40-1024 bytes of private key as per FIPS 186');\n        const num = mod(bytesToNumber(hash), CURVE.n - _1n) + _1n;\n        return numTo32b(num);\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return Uint8Array.from(randomBytes(bytesLength));\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => {\n        return utils.hashToPrivateKey(utils.randomBytes(40));\n    },\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    mod,\n    invert,\n    sha256: async (...messages) => {\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-256', concatBytes(...messages));\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHash } = crypto.node;\n            const hash = createHash('sha256');\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha256 function\");\n        }\n    },\n    hmacSha256: async (key, ...messages) => {\n        if (crypto.web) {\n            const ckey = await crypto.web.subtle.importKey('raw', key, { name: 'HMAC', hash: { name: 'SHA-256' } }, false, ['sign']);\n            const message = concatBytes(...messages);\n            const buffer = await crypto.web.subtle.sign('HMAC', ckey, message);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHmac } = crypto.node;\n            const hash = createHmac('sha256', key);\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have hmac-sha256 function\");\n        }\n    },\n    sha256Sync: undefined,\n    hmacSha256Sync: undefined,\n    taggedHash: async (tag, ...messages) => {\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = await utils.sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return utils.sha256(tagP, ...messages);\n    },\n    taggedHashSync: (tag, ...messages) => {\n        if (typeof utils.sha256Sync !== 'function')\n            throw new Error('utils.sha256Sync is undefined, you need to set it');\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = utils.sha256Sync(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return utils.sha256Sync(tagP, ...messages);\n    },\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point === Point.BASE ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_3n);\n        return cached;\n    },\n};\n","import {sha512} from '@noble/hashes/sha512';\nimport * as ed25519 from '@noble/ed25519';\n\n/**\n * A 64 byte secret key, the first 32 bytes of which is the\n * private scalar and the last 32 bytes is the public key.\n * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n */\ntype Ed25519SecretKey = Uint8Array;\n\n/**\n * Ed25519 Keypair\n */\nexport interface Ed25519Keypair {\n  publicKey: Uint8Array;\n  secretKey: Ed25519SecretKey;\n}\n\ned25519.utils.sha512Sync = (...m) => sha512(ed25519.utils.concatBytes(...m));\n\nexport const generatePrivateKey = ed25519.utils.randomPrivateKey;\nexport const generateKeypair = (): Ed25519Keypair => {\n  const privateScalar = ed25519.utils.randomPrivateKey();\n  const publicKey = getPublicKey(privateScalar);\n  const secretKey = new Uint8Array(64);\n  secretKey.set(privateScalar);\n  secretKey.set(publicKey, 32);\n  return {\n    publicKey,\n    secretKey,\n  };\n};\nexport const getPublicKey = ed25519.sync.getPublicKey;\nexport function isOnCurve(publicKey: Uint8Array): boolean {\n  try {\n    ed25519.Point.fromHex(publicKey, true /* strict */);\n    return true;\n  } catch {\n    return false;\n  }\n}\nexport const sign = (\n  message: Parameters<typeof ed25519.sync.sign>[0],\n  secretKey: Ed25519SecretKey,\n) => ed25519.sync.sign(message, secretKey.slice(0, 32));\nexport const verify = ed25519.sync.verify;\n","import {Buffer} from 'buffer';\n\nexport const toBuffer = (arr: Buffer | Uint8Array | Array<number>): Buffer => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n","import {Buffer} from 'buffer';\nimport {serialize, deserialize, deserializeUnchecked} from 'borsh';\n\n// Class wrapping a plain object\nexport class Struct {\n  constructor(properties: any) {\n    Object.assign(this, properties);\n  }\n\n  encode(): Buffer {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n\n  static decode(data: Buffer): any {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n\n  static decodeUnchecked(data: Buffer): any {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nexport class Enum extends Struct {\n  enum: string = '';\n  constructor(properties: any) {\n    super(properties);\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\n\nexport const SOLANA_SCHEMA: Map<Function, any> = new Map();\n","import BN from 'bn.js';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport {sha256} from '@noble/hashes/sha256';\n\nimport {isOnCurve} from './utils/ed25519';\nimport {Struct, SOLANA_SCHEMA} from './utils/borsh-schema';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * Maximum length of derived pubkey seed\n */\nexport const MAX_SEED_LENGTH = 32;\n\n/**\n * Size of public key in bytes\n */\nexport const PUBLIC_KEY_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\nexport type PublicKeyInitData =\n  | number\n  | string\n  | Buffer\n  | Uint8Array\n  | Array<number>\n  | PublicKeyData;\n\n/**\n * JSON object representation of PublicKey class\n */\nexport type PublicKeyData = {\n  /** @internal */\n  _bn: BN;\n};\n\nfunction isPublicKeyData(value: PublicKeyInitData): value is PublicKeyData {\n  return (value as PublicKeyData)._bn !== undefined;\n}\n\n/**\n * A public key\n */\nexport class PublicKey extends Struct {\n  /** @internal */\n  _bn: BN;\n\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value: PublicKeyInitData) {\n    super({});\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != PUBLIC_KEY_LENGTH) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n\n      if (this._bn.byteLength() > 32) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Default public key value. (All zeros)\n   */\n  static default: PublicKey = new PublicKey('11111111111111111111111111111111');\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey: PublicKey): boolean {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58(): string {\n    return bs58.encode(this.toBytes());\n  }\n\n  toJSON(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Return the byte array representation of the public key\n   */\n  toBytes(): Uint8Array {\n    return this.toBuffer();\n  }\n\n  /**\n   * Return the Buffer representation of the public key\n   */\n  toBuffer(): Buffer {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === PUBLIC_KEY_LENGTH) {\n      return b;\n    }\n\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(\n    fromPublicKey: PublicKey,\n    seed: string,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    const buffer = Buffer.concat([\n      fromPublicKey.toBuffer(),\n      Buffer.from(seed),\n      programId.toBuffer(),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static createProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): PublicKey {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([\n      buffer,\n      programId.toBuffer(),\n      Buffer.from('ProgramDerivedAddress'),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    if (isOnCurve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Async version of createProgramAddressSync\n   * For backwards compatibility\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    return this.createProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static findProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): [PublicKey, number] {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = this.createProgramAddressSync(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Async version of findProgramAddressSync\n   * For backwards compatibility\n   */\n  static async findProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<[PublicKey, number]> {\n    return this.findProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkeyData: PublicKeyInitData): boolean {\n    const pubkey = new PublicKey(pubkeyData);\n    return isOnCurve(pubkey.toBytes());\n  }\n}\n\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']],\n});\n","import {PublicKey} from './publickey';\n\nexport const BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey(\n  'BPFLoader1111111111111111111111111111111111',\n);\n","/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nexport const PACKET_DATA_SIZE = 1280 - 40 - 8;\n\nexport const VERSION_PREFIX_MASK = 0x7f;\n\nexport const SIGNATURE_LENGTH_IN_BYTES = 64;\n","export class TransactionExpiredBlockheightExceededError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: block height exceeded.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(\n  TransactionExpiredBlockheightExceededError.prototype,\n  'name',\n  {\n    value: 'TransactionExpiredBlockheightExceededError',\n  },\n);\n\nexport class TransactionExpiredTimeoutError extends Error {\n  signature: string;\n\n  constructor(signature: string, timeoutSeconds: number) {\n    super(\n      `Transaction was not confirmed in ${timeoutSeconds.toFixed(\n        2,\n      )} seconds. It is ` +\n        'unknown if it succeeded or failed. Check signature ' +\n        `${signature} using the Solana Explorer or CLI tools.`,\n    );\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredTimeoutError.prototype, 'name', {\n  value: 'TransactionExpiredTimeoutError',\n});\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (property: string = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a signature\n */\nexport const signature = (property: string = 'signature') => {\n  return BufferLayout.blob(64, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64') => {\n  return BufferLayout.blob(8, property);\n};\n\ninterface IRustStringShim\n  extends Omit<\n    BufferLayout.Structure<\n      Readonly<{\n        length: number;\n        lengthPadding: number;\n        chars: Uint8Array;\n      }>\n    >,\n    'decode' | 'encode' | 'replicate'\n  > {\n  alloc: (str: string) => number;\n  decode: (b: Uint8Array, offset?: number) => string;\n  encode: (str: string, b: Uint8Array, offset?: number) => number;\n  replicate: (property: string) => this;\n}\n\n/**\n * Layout for a Rust String type\n */\nexport const rustString = (\n  property: string = 'string',\n): BufferLayout.Layout<string> => {\n  const rsl = BufferLayout.struct<\n    Readonly<{\n      length?: number;\n      lengthPadding?: number;\n      chars: Uint8Array;\n    }>\n  >(\n    [\n      BufferLayout.u32('length'),\n      BufferLayout.u32('lengthPadding'),\n      BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars'),\n    ],\n    property,\n  );\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n\n  const rslShim = rsl as unknown as IRustStringShim;\n\n  rslShim.decode = (b: Uint8Array, offset?: number) => {\n    const data = _decode(b, offset);\n    return data['chars'].toString();\n  };\n\n  rslShim.encode = (str: string, b: Uint8Array, offset?: number) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8'),\n    };\n    return _encode(data, b, offset);\n  };\n\n  rslShim.alloc = (str: string) => {\n    return (\n      BufferLayout.u32().span +\n      BufferLayout.u32().span +\n      Buffer.from(str, 'utf8').length\n    );\n  };\n\n  return rslShim;\n};\n\n/**\n * Layout for an Authorized object\n */\nexport const authorized = (property: string = 'authorized') => {\n  return BufferLayout.struct<\n    Readonly<{\n      staker: Uint8Array;\n      withdrawer: Uint8Array;\n    }>\n  >([publicKey('staker'), publicKey('withdrawer')], property);\n};\n\n/**\n * Layout for a Lockup object\n */\nexport const lockup = (property: string = 'lockup') => {\n  return BufferLayout.struct<\n    Readonly<{\n      custodian: Uint8Array;\n      epoch: number;\n      unixTimestamp: number;\n    }>\n  >(\n    [\n      BufferLayout.ns64('unixTimestamp'),\n      BufferLayout.ns64('epoch'),\n      publicKey('custodian'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteInit object\n */\nexport const voteInit = (property: string = 'voteInit') => {\n  return BufferLayout.struct<\n    Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>\n  >(\n    [\n      publicKey('nodePubkey'),\n      publicKey('authorizedVoter'),\n      publicKey('authorizedWithdrawer'),\n      BufferLayout.u8('commission'),\n    ],\n    property,\n  );\n};\n\nexport function getAlloc(type: any, fields: any): number {\n  const getItemAlloc = (item: any): number => {\n    if (item.span >= 0) {\n      return item.span;\n    } else if (typeof item.alloc === 'function') {\n      return item.alloc(fields[item.property]);\n    } else if ('count' in item && 'elementLayout' in item) {\n      const field = fields[item.property];\n      if (Array.isArray(field)) {\n        return field.length * getItemAlloc(item.elementLayout);\n      }\n    }\n    // Couldn't determine allocated size of layout\n    return 0;\n  };\n\n  let alloc = 0;\n  type.layout.fields.forEach((item: any) => {\n    alloc += getItemAlloc(item);\n  });\n\n  return alloc;\n}\n","export function decodeLength(bytes: Array<number>): number {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift() as number;\n    len |= (elem & 0x7f) << (size * 7);\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\n\nexport function encodeLength(bytes: Array<number>, len: number) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport type {Blockhash} from '../blockhash';\nimport * as Layout from '../layout';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\n\n/**\n * An instruction to execute by a program\n *\n * @property {number} programIdIndex\n * @property {number[]} accounts\n * @property {string} data\n */\nexport type CompiledInstruction = {\n  /** Index into the transaction keys array indicating the program account that executes this instruction */\n  programIdIndex: number;\n  /** Ordered indices into the transaction keys array indicating which accounts to pass to the program */\n  accounts: number[];\n  /** The program input data encoded as base 58 */\n  data: string;\n};\n\n/**\n * Message constructor arguments\n */\nexport type MessageArgs = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** All the account keys used by this transaction */\n  accountKeys: string[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  instructions: CompiledInstruction[];\n};\n\n/**\n * List of instructions to be processed atomically\n */\nexport class Message {\n  header: MessageHeader;\n  accountKeys: PublicKey[];\n  recentBlockhash: Blockhash;\n  instructions: CompiledInstruction[];\n\n  private indexToProgramIds: Map<number, PublicKey> = new Map<\n    number,\n    PublicKey\n  >();\n\n  constructor(args: MessageArgs) {\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix =>\n      this.indexToProgramIds.set(\n        ix.programIdIndex,\n        this.accountKeys[ix.programIdIndex],\n      ),\n    );\n  }\n\n  get version(): 'legacy' {\n    return 'legacy';\n  }\n\n  get staticAccountKeys(): Array<PublicKey> {\n    return this.accountKeys;\n  }\n\n  get compiledInstructions(): Array<MessageCompiledInstruction> {\n    return this.instructions.map(\n      (ix): MessageCompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      }),\n    );\n  }\n\n  get addressTableLookups(): Array<MessageAddressTableLookup> {\n    return [];\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    return (\n      index <\n        this.header.numRequiredSignatures -\n          this.header.numReadonlySignedAccounts ||\n      (index >= this.header.numRequiredSignatures &&\n        index <\n          this.accountKeys.length - this.header.numReadonlyUnsignedAccounts)\n    );\n  }\n\n  isProgramId(index: number): boolean {\n    return this.indexToProgramIds.has(index);\n  }\n\n  programIds(): PublicKey[] {\n    return [...this.indexToProgramIds.values()];\n  }\n\n  nonProgramIds(): PublicKey[] {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n\n  serialize(): Buffer {\n    const numKeys = this.accountKeys.length;\n\n    let keyCount: number[] = [];\n    shortvec.encodeLength(keyCount, numKeys);\n\n    const instructions = this.instructions.map(instruction => {\n      const {accounts, programIdIndex} = instruction;\n      const data = Array.from(bs58.decode(instruction.data));\n\n      let keyIndicesCount: number[] = [];\n      shortvec.encodeLength(keyIndicesCount, accounts.length);\n\n      let dataCount: number[] = [];\n      shortvec.encodeLength(dataCount, data.length);\n\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: accounts,\n        dataLength: Buffer.from(dataCount),\n        data,\n      };\n    });\n\n    let instructionCount: number[] = [];\n    shortvec.encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct<\n        Readonly<{\n          data: number[];\n          dataLength: Uint8Array;\n          keyIndices: number[];\n          keyIndicesCount: Uint8Array;\n          programIdIndex: number;\n        }>\n      >([\n        BufferLayout.u8('programIdIndex'),\n\n        BufferLayout.blob(\n          instruction.keyIndicesCount.length,\n          'keyIndicesCount',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8('keyIndex'),\n          instruction.keyIndices.length,\n          'keyIndices',\n        ),\n        BufferLayout.blob(instruction.dataLength.length, 'dataLength'),\n        BufferLayout.seq(\n          BufferLayout.u8('userdatum'),\n          instruction.data.length,\n          'data',\n        ),\n      ]);\n      const length = instructionLayout.encode(\n        instruction,\n        instructionBuffer,\n        instructionBufferLength,\n      );\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n\n    const signDataLayout = BufferLayout.struct<\n      Readonly<{\n        keyCount: Uint8Array;\n        keys: Uint8Array[];\n        numReadonlySignedAccounts: Uint8Array;\n        numReadonlyUnsignedAccounts: Uint8Array;\n        numRequiredSignatures: Uint8Array;\n        recentBlockhash: Uint8Array;\n      }>\n    >([\n      BufferLayout.blob(1, 'numRequiredSignatures'),\n      BufferLayout.blob(1, 'numReadonlySignedAccounts'),\n      BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'),\n      BufferLayout.blob(keyCount.length, 'keyCount'),\n      BufferLayout.seq(Layout.publicKey('key'), numKeys, 'keys'),\n      Layout.publicKey('recentBlockhash'),\n    ]);\n\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([\n        this.header.numReadonlySignedAccounts,\n      ]),\n      numReadonlyUnsignedAccounts: Buffer.from([\n        this.header.numReadonlyUnsignedAccounts,\n      ]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n    };\n\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Message {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const numRequiredSignatures = byteArray.shift() as number;\n    if (\n      numRequiredSignatures !==\n      (numRequiredSignatures & VERSION_PREFIX_MASK)\n    ) {\n      throw new Error(\n        'Versioned messages must be deserialized with VersionedMessage.deserialize()',\n      );\n    }\n\n    const numReadonlySignedAccounts = byteArray.shift() as number;\n    const numReadonlyUnsignedAccounts = byteArray.shift() as number;\n\n    const accountCount = shortvec.decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = byteArray.slice(0, PUBLIC_KEY_LENGTH);\n      byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n      accountKeys.push(bs58.encode(Buffer.from(account)));\n    }\n\n    const recentBlockhash = byteArray.slice(0, PUBLIC_KEY_LENGTH);\n    byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    let instructions: CompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift() as number;\n      const accountCount = shortvec.decodeLength(byteArray);\n      const accounts = byteArray.slice(0, accountCount);\n      byteArray = byteArray.slice(accountCount);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const dataSlice = byteArray.slice(0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      byteArray = byteArray.slice(dataLength);\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data,\n      });\n    }\n\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions,\n    };\n\n    return new Message(messageArgs);\n  }\n}\n","export default function (\n  condition: unknown,\n  message?: string,\n): asserts condition {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n\nimport {PACKET_DATA_SIZE, SIGNATURE_LENGTH_IN_BYTES} from './constants';\nimport {Connection} from '../connection';\nimport {Message} from '../message';\nimport {PublicKey} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport invariant from '../utils/assert';\nimport type {Signer} from '../keypair';\nimport type {Blockhash} from '../blockhash';\nimport type {CompiledInstruction} from '../message';\nimport {sign, verify} from '../utils/ed25519';\n\n/**\n * Transaction signature as base-58 encoded string\n */\nexport type TransactionSignature = string;\n\nexport const enum TransactionStatus {\n  BLOCKHEIGHT_EXCEEDED,\n  PROCESSED,\n  TIMED_OUT,\n}\n\n/**\n * Default (empty) signature\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(SIGNATURE_LENGTH_IN_BYTES).fill(0);\n\n/**\n * Account metadata used to define instructions\n */\nexport type AccountMeta = {\n  /** An account's public key */\n  pubkey: PublicKey;\n  /** True if an instruction requires a transaction signature matching `pubkey` */\n  isSigner: boolean;\n  /** True if the `pubkey` can be loaded as a read-write account. */\n  isWritable: boolean;\n};\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n */\nexport type TransactionInstructionCtorFields = {\n  keys: Array<AccountMeta>;\n  programId: PublicKey;\n  data?: Buffer;\n};\n\n/**\n * Configuration object for Transaction.serialize()\n */\nexport type SerializeConfig = {\n  /** Require all transaction signatures be present (default: true) */\n  requireAllSignatures?: boolean;\n  /** Verify provided signatures (default: true) */\n  verifySignatures?: boolean;\n};\n\n/**\n * @internal\n */\nexport interface TransactionInstructionJSON {\n  keys: {\n    pubkey: string;\n    isSigner: boolean;\n    isWritable: boolean;\n  }[];\n  programId: string;\n  data: number[];\n}\n\n/**\n * Transaction Instruction class\n */\nexport class TransactionInstruction {\n  /**\n   * Public keys to include in this transaction\n   * Boolean represents whether this pubkey needs to sign the transaction\n   */\n  keys: Array<AccountMeta>;\n\n  /**\n   * Program Id to execute\n   */\n  programId: PublicKey;\n\n  /**\n   * Program input\n   */\n  data: Buffer = Buffer.alloc(0);\n\n  constructor(opts: TransactionInstructionCtorFields) {\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionInstructionJSON {\n    return {\n      keys: this.keys.map(({pubkey, isSigner, isWritable}) => ({\n        pubkey: pubkey.toJSON(),\n        isSigner,\n        isWritable,\n      })),\n      programId: this.programId.toJSON(),\n      data: [...this.data],\n    };\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\nexport type SignaturePubkeyPair = {\n  signature: Buffer | null;\n  publicKey: PublicKey;\n};\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\nexport type TransactionCtorFields_DEPRECATED = {\n  /** Optional nonce information used for offline nonce'd transactions */\n  nonceInfo?: NonceInformation | null;\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  recentBlockhash?: Blockhash;\n};\n\n// For backward compatibility; an unfortunate consequence of being\n// forced to over-export types by the documentation generator.\n// See https://github.com/solana-labs/solana/pull/25820\nexport type TransactionCtorFields = TransactionCtorFields_DEPRECATED;\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\nexport type TransactionBlockhashCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  blockhash: Blockhash;\n  /** the last block chain can advance to before tx is declared expired */\n  lastValidBlockHeight: number;\n};\n\n/**\n * Nonce information to be used to build an offline Transaction.\n */\nexport type NonceInformation = {\n  /** The current blockhash stored in the nonce */\n  nonce: Blockhash;\n  /** AdvanceNonceAccount Instruction */\n  nonceInstruction: TransactionInstruction;\n};\n\n/**\n * @internal\n */\nexport interface TransactionJSON {\n  recentBlockhash: string | null;\n  feePayer: string | null;\n  nonceInfo: {\n    nonce: string;\n    nonceInstruction: TransactionInstructionJSON;\n  } | null;\n  instructions: TransactionInstructionJSON[];\n  signers: string[];\n}\n\n/**\n * Transaction class\n */\nexport class Transaction {\n  /**\n   * Signatures for the transaction.  Typically created by invoking the\n   * `sign()` method\n   */\n  signatures: Array<SignaturePubkeyPair> = [];\n\n  /**\n   * The first (payer) Transaction signature\n   */\n  get signature(): Buffer | null {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n  feePayer?: PublicKey;\n\n  /**\n   * The instructions to atomically execute\n   */\n  instructions: Array<TransactionInstruction> = [];\n\n  /**\n   * A recent transaction id. Must be populated by the caller\n   */\n  recentBlockhash?: Blockhash;\n\n  /**\n   * the last block chain can advance to before tx is declared expired\n   * */\n  lastValidBlockHeight?: number;\n\n  /**\n   * Optional Nonce information. If populated, transaction will use a durable\n   * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n   */\n  nonceInfo?: NonceInformation;\n\n  /**\n   * @internal\n   */\n  _message?: Message;\n\n  /**\n   * @internal\n   */\n  _json?: TransactionJSON;\n\n  // Construct a transaction with a blockhash and lastValidBlockHeight\n  constructor(opts?: TransactionBlockhashCtor);\n\n  /**\n   * @deprecated `TransactionCtorFields` has been deprecated and will be removed in a future version.\n   * Please supply a `TransactionBlockhashCtor` instead.\n   */\n  constructor(opts?: TransactionCtorFields_DEPRECATED);\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(\n    opts?: TransactionBlockhashCtor | TransactionCtorFields_DEPRECATED,\n  ) {\n    if (!opts) {\n      return;\n    }\n    if (opts.feePayer) {\n      this.feePayer = opts.feePayer;\n    }\n    if (opts.signatures) {\n      this.signatures = opts.signatures;\n    }\n    if (Object.prototype.hasOwnProperty.call(opts, 'lastValidBlockHeight')) {\n      const {blockhash, lastValidBlockHeight} =\n        opts as TransactionBlockhashCtor;\n      this.recentBlockhash = blockhash;\n      this.lastValidBlockHeight = lastValidBlockHeight;\n    } else {\n      const {recentBlockhash, nonceInfo} =\n        opts as TransactionCtorFields_DEPRECATED;\n      if (nonceInfo) {\n        this.nonceInfo = nonceInfo;\n      }\n      this.recentBlockhash = recentBlockhash;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionJSON {\n    return {\n      recentBlockhash: this.recentBlockhash || null,\n      feePayer: this.feePayer ? this.feePayer.toJSON() : null,\n      nonceInfo: this.nonceInfo\n        ? {\n            nonce: this.nonceInfo.nonce,\n            nonceInstruction: this.nonceInfo.nonceInstruction.toJSON(),\n          }\n        : null,\n      instructions: this.instructions.map(instruction => instruction.toJSON()),\n      signers: this.signatures.map(({publicKey}) => {\n        return publicKey.toJSON();\n      }),\n    };\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   */\n  add(\n    ...items: Array<\n      Transaction | TransactionInstruction | TransactionInstructionCtorFields\n    >\n  ): Transaction {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n\n    items.forEach((item: any) => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage(): Message {\n    if (\n      this._message &&\n      JSON.stringify(this.toJSON()) === JSON.stringify(this._json)\n    ) {\n      return this._message;\n    }\n\n    let recentBlockhash;\n    let instructions: TransactionInstruction[];\n    if (this.nonceInfo) {\n      recentBlockhash = this.nonceInfo.nonce;\n      if (this.instructions[0] != this.nonceInfo.nonceInstruction) {\n        instructions = [this.nonceInfo.nonceInstruction, ...this.instructions];\n      } else {\n        instructions = this.instructions;\n      }\n    } else {\n      recentBlockhash = this.recentBlockhash;\n      instructions = this.instructions;\n    }\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n\n    if (instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n\n    let feePayer: PublicKey;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n\n    for (let i = 0; i < instructions.length; i++) {\n      if (instructions[i].programId === undefined) {\n        throw new Error(\n          `Transaction instruction index ${i} has undefined program id`,\n        );\n      }\n    }\n\n    const programIds: string[] = [];\n    const accountMetas: AccountMeta[] = [];\n    instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({...accountMeta});\n      });\n\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false,\n      });\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas: AccountMeta[] = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable =\n          uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n        uniqueMetas[uniqueIndex].isSigner =\n          uniqueMetas[uniqueIndex].isSigner || accountMeta.isSigner;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    uniqueMetas.sort(function (x, y) {\n      if (x.isSigner !== y.isSigner) {\n        // Signers always come before non-signers\n        return x.isSigner ? -1 : 1;\n      }\n      if (x.isWritable !== y.isWritable) {\n        // Writable accounts always come before read-only accounts\n        return x.isWritable ? -1 : 1;\n      }\n      // Otherwise, sort by pubkey, stringwise.\n      return x.pubkey.toBase58().localeCompare(y.pubkey.toBase58());\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true,\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn(\n            'Transaction references a signature that is unnecessary, ' +\n              'only the fee payer and instruction signer accounts should sign a transaction. ' +\n              'This behavior is deprecated and will throw an error in the next major version release.',\n          );\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys: string[] = [];\n    const unsignedKeys: string[] = [];\n    uniqueMetas.forEach(({pubkey, isSigner, isWritable}) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const compiledInstructions: CompiledInstruction[] = instructions.map(\n      instruction => {\n        const {data, programId} = instruction;\n        return {\n          programIdIndex: accountKeys.indexOf(programId.toString()),\n          accounts: instruction.keys.map(meta =>\n            accountKeys.indexOf(meta.pubkey.toString()),\n          ),\n          data: bs58.encode(data),\n        };\n      },\n    );\n\n    compiledInstructions.forEach(instruction => {\n      invariant(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => invariant(keyIndex >= 0));\n    });\n\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions: compiledInstructions,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile(): Message {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(\n      0,\n      message.header.numRequiredSignatures,\n    );\n\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n\n      if (valid) return message;\n    }\n\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey,\n    }));\n\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage(): Buffer {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Get the estimated fee associated with a transaction\n   */\n  async getEstimatedFee(connection: Connection): Promise<number> {\n    return (await connection.getFeeForMessage(this.compileMessage())).value;\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers: Array<PublicKey>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    const seen = new Set();\n    this.signatures = signers\n      .filter(publicKey => {\n        const key = publicKey.toString();\n        if (seen.has(key)) {\n          return false;\n        } else {\n          seen.add(key);\n          return true;\n        }\n      })\n      .map(publicKey => ({signature: null, publicKey}));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   */\n  sign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey,\n    }));\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   */\n  partialSign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message: Message, ...signers: Array<Signer>) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = sign(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   */\n  addSignature(pubkey: PublicKey, signature: Buffer) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey: PublicKey, signature: Buffer) {\n    invariant(signature.length === 64);\n\n    const index = this.signatures.findIndex(sigpair =>\n      pubkey.equals(sigpair.publicKey),\n    );\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a complete, signed Transaction\n   */\n  verifySignatures(): boolean {\n    return this._verifySignatures(this.serializeMessage(), true);\n  }\n\n  /**\n   * @internal\n   */\n  _verifySignatures(signData: Buffer, requireAllSignatures: boolean): boolean {\n    for (const {signature, publicKey} of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          return false;\n        }\n      } else {\n        if (!verify(signature, signData, publicKey.toBuffer())) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   */\n  serialize(config?: SerializeConfig): Buffer {\n    const {requireAllSignatures, verifySignatures} = Object.assign(\n      {requireAllSignatures: true, verifySignatures: true},\n      config,\n    );\n\n    const signData = this.serializeMessage();\n    if (\n      verifySignatures &&\n      !this._verifySignatures(signData, requireAllSignatures)\n    ) {\n      throw new Error('Signature verification failed');\n    }\n\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData: Buffer): Buffer {\n    const {signatures} = this;\n    const signatureCount: number[] = [];\n    shortvec.encodeLength(signatureCount, signatures.length);\n    const transactionLength =\n      signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    invariant(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({signature}, index) => {\n      if (signature !== null) {\n        invariant(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(\n          wireTransaction,\n          signatureCount.length + index * 64,\n        );\n      }\n    });\n    signData.copy(\n      wireTransaction,\n      signatureCount.length + signatures.length * 64,\n    );\n    invariant(\n      wireTransaction.length <= PACKET_DATA_SIZE,\n      `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`,\n    );\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys(): Array<PublicKey> {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId(): PublicKey {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data(): Buffer {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Transaction {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const signatureCount = shortvec.decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = byteArray.slice(0, SIGNATURE_LENGTH_IN_BYTES);\n      byteArray = byteArray.slice(SIGNATURE_LENGTH_IN_BYTES);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   */\n  static populate(\n    message: Message,\n    signatures: Array<string> = [],\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature:\n          signature == bs58.encode(DEFAULT_SIGNATURE)\n            ? null\n            : bs58.decode(signature),\n        publicKey: message.accountKeys[index],\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner:\n            transaction.signatures.some(\n              keyObj => keyObj.publicKey.toString() === pubkey.toString(),\n            ) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account),\n        };\n      });\n\n      transaction.instructions.push(\n        new TransactionInstruction({\n          keys,\n          programId: message.accountKeys[instruction.programIdIndex],\n          data: bs58.decode(instruction.data),\n        }),\n      );\n    });\n\n    transaction._message = message;\n    transaction._json = transaction.toJSON();\n\n    return transaction;\n  }\n}\n","import bs58 from 'bs58';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../layout';\nimport {Blockhash} from '../blockhash';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport assert from '../utils/assert';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\n\n/**\n * Message constructor arguments\n */\nexport type MessageV0Args = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** The static account keys used by this transaction */\n  staticAccountKeys: PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  compiledInstructions: MessageCompiledInstruction[];\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  addressTableLookups: MessageAddressTableLookup[];\n};\n\nexport class MessageV0 {\n  header: MessageHeader;\n  staticAccountKeys: Array<PublicKey>;\n  recentBlockhash: Blockhash;\n  compiledInstructions: Array<MessageCompiledInstruction>;\n  addressTableLookups: Array<MessageAddressTableLookup>;\n\n  constructor(args: MessageV0Args) {\n    this.header = args.header;\n    this.staticAccountKeys = args.staticAccountKeys;\n    this.recentBlockhash = args.recentBlockhash;\n    this.compiledInstructions = args.compiledInstructions;\n    this.addressTableLookups = args.addressTableLookups;\n  }\n\n  get version(): 0 {\n    return 0;\n  }\n\n  serialize(): Uint8Array {\n    const encodedStaticAccountKeysLength = Array<number>();\n    shortvec.encodeLength(\n      encodedStaticAccountKeysLength,\n      this.staticAccountKeys.length,\n    );\n\n    const serializedInstructions = this.serializeInstructions();\n    const encodedInstructionsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedInstructionsLength,\n      this.compiledInstructions.length,\n    );\n\n    const serializedAddressTableLookups = this.serializeAddressTableLookups();\n    const encodedAddressTableLookupsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedAddressTableLookupsLength,\n      this.addressTableLookups.length,\n    );\n\n    const messageLayout = BufferLayout.struct<{\n      prefix: number;\n      header: MessageHeader;\n      staticAccountKeysLength: Uint8Array;\n      staticAccountKeys: Array<Uint8Array>;\n      recentBlockhash: Uint8Array;\n      instructionsLength: Uint8Array;\n      serializedInstructions: Uint8Array;\n      addressTableLookupsLength: Uint8Array;\n      serializedAddressTableLookups: Uint8Array;\n    }>([\n      BufferLayout.u8('prefix'),\n      BufferLayout.struct<MessageHeader>(\n        [\n          BufferLayout.u8('numRequiredSignatures'),\n          BufferLayout.u8('numReadonlySignedAccounts'),\n          BufferLayout.u8('numReadonlyUnsignedAccounts'),\n        ],\n        'header',\n      ),\n      BufferLayout.blob(\n        encodedStaticAccountKeysLength.length,\n        'staticAccountKeysLength',\n      ),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        this.staticAccountKeys.length,\n        'staticAccountKeys',\n      ),\n      Layout.publicKey('recentBlockhash'),\n      BufferLayout.blob(encodedInstructionsLength.length, 'instructionsLength'),\n      BufferLayout.blob(\n        serializedInstructions.length,\n        'serializedInstructions',\n      ),\n      BufferLayout.blob(\n        encodedAddressTableLookupsLength.length,\n        'addressTableLookupsLength',\n      ),\n      BufferLayout.blob(\n        serializedAddressTableLookups.length,\n        'serializedAddressTableLookups',\n      ),\n    ]);\n\n    const serializedMessage = new Uint8Array(PACKET_DATA_SIZE);\n    const MESSAGE_VERSION_0_PREFIX = 1 << 7;\n    const serializedMessageLength = messageLayout.encode(\n      {\n        prefix: MESSAGE_VERSION_0_PREFIX,\n        header: this.header,\n        staticAccountKeysLength: new Uint8Array(encodedStaticAccountKeysLength),\n        staticAccountKeys: this.staticAccountKeys.map(key => key.toBytes()),\n        recentBlockhash: bs58.decode(this.recentBlockhash),\n        instructionsLength: new Uint8Array(encodedInstructionsLength),\n        serializedInstructions,\n        addressTableLookupsLength: new Uint8Array(\n          encodedAddressTableLookupsLength,\n        ),\n        serializedAddressTableLookups,\n      },\n      serializedMessage,\n    );\n    return serializedMessage.slice(0, serializedMessageLength);\n  }\n\n  private serializeInstructions(): Uint8Array {\n    let serializedLength = 0;\n    const serializedInstructions = new Uint8Array(PACKET_DATA_SIZE);\n    for (const instruction of this.compiledInstructions) {\n      const encodedAccountKeyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedAccountKeyIndexesLength,\n        instruction.accountKeyIndexes.length,\n      );\n\n      const encodedDataLength = Array<number>();\n      shortvec.encodeLength(encodedDataLength, instruction.data.length);\n\n      const instructionLayout = BufferLayout.struct<{\n        programIdIndex: number;\n        encodedAccountKeyIndexesLength: Uint8Array;\n        accountKeyIndexes: number[];\n        encodedDataLength: Uint8Array;\n        data: Uint8Array;\n      }>([\n        BufferLayout.u8('programIdIndex'),\n        BufferLayout.blob(\n          encodedAccountKeyIndexesLength.length,\n          'encodedAccountKeyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          instruction.accountKeyIndexes.length,\n          'accountKeyIndexes',\n        ),\n        BufferLayout.blob(encodedDataLength.length, 'encodedDataLength'),\n        BufferLayout.blob(instruction.data.length, 'data'),\n      ]);\n\n      serializedLength += instructionLayout.encode(\n        {\n          programIdIndex: instruction.programIdIndex,\n          encodedAccountKeyIndexesLength: new Uint8Array(\n            encodedAccountKeyIndexesLength,\n          ),\n          accountKeyIndexes: instruction.accountKeyIndexes,\n          encodedDataLength: new Uint8Array(encodedDataLength),\n          data: instruction.data,\n        },\n        serializedInstructions,\n        serializedLength,\n      );\n    }\n\n    return serializedInstructions.slice(0, serializedLength);\n  }\n\n  private serializeAddressTableLookups(): Uint8Array {\n    let serializedLength = 0;\n    const serializedAddressTableLookups = new Uint8Array(PACKET_DATA_SIZE);\n    for (const lookup of this.addressTableLookups) {\n      const encodedWritableIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedWritableIndexesLength,\n        lookup.writableIndexes.length,\n      );\n\n      const encodedReadonlyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedReadonlyIndexesLength,\n        lookup.readonlyIndexes.length,\n      );\n\n      const addressTableLookupLayout = BufferLayout.struct<{\n        accountKey: Uint8Array;\n        encodedWritableIndexesLength: Uint8Array;\n        writableIndexes: number[];\n        encodedReadonlyIndexesLength: Uint8Array;\n        readonlyIndexes: number[];\n      }>([\n        Layout.publicKey('accountKey'),\n        BufferLayout.blob(\n          encodedWritableIndexesLength.length,\n          'encodedWritableIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.writableIndexes.length,\n          'writableIndexes',\n        ),\n        BufferLayout.blob(\n          encodedReadonlyIndexesLength.length,\n          'encodedReadonlyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.readonlyIndexes.length,\n          'readonlyIndexes',\n        ),\n      ]);\n\n      serializedLength += addressTableLookupLayout.encode(\n        {\n          accountKey: lookup.accountKey.toBytes(),\n          encodedWritableIndexesLength: new Uint8Array(\n            encodedWritableIndexesLength,\n          ),\n          writableIndexes: lookup.writableIndexes,\n          encodedReadonlyIndexesLength: new Uint8Array(\n            encodedReadonlyIndexesLength,\n          ),\n          readonlyIndexes: lookup.readonlyIndexes,\n        },\n        serializedAddressTableLookups,\n        serializedLength,\n      );\n    }\n\n    return serializedAddressTableLookups.slice(0, serializedLength);\n  }\n\n  static deserialize(serializedMessage: Uint8Array): MessageV0 {\n    let byteArray = [...serializedMessage];\n\n    const prefix = byteArray.shift() as number;\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n    assert(\n      prefix !== maskedPrefix,\n      `Expected versioned message but received legacy message`,\n    );\n\n    const version = maskedPrefix;\n    assert(\n      version === 0,\n      `Expected versioned message with version 0 but found version ${version}`,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: byteArray.shift() as number,\n      numReadonlySignedAccounts: byteArray.shift() as number,\n      numReadonlyUnsignedAccounts: byteArray.shift() as number,\n    };\n\n    const staticAccountKeys = [];\n    const staticAccountKeysLength = shortvec.decodeLength(byteArray);\n    for (let i = 0; i < staticAccountKeysLength; i++) {\n      staticAccountKeys.push(\n        new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH)),\n      );\n    }\n\n    const recentBlockhash = bs58.encode(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    const compiledInstructions: MessageCompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift() as number;\n      const accountKeyIndexesLength = shortvec.decodeLength(byteArray);\n      const accountKeyIndexes = byteArray.splice(0, accountKeyIndexesLength);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const data = new Uint8Array(byteArray.splice(0, dataLength));\n      compiledInstructions.push({\n        programIdIndex,\n        accountKeyIndexes,\n        data,\n      });\n    }\n\n    const addressTableLookupsCount = shortvec.decodeLength(byteArray);\n    const addressTableLookups: MessageAddressTableLookup[] = [];\n    for (let i = 0; i < addressTableLookupsCount; i++) {\n      const accountKey = new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n      const writableIndexesLength = shortvec.decodeLength(byteArray);\n      const writableIndexes = byteArray.splice(0, writableIndexesLength);\n      const readonlyIndexesLength = shortvec.decodeLength(byteArray);\n      const readonlyIndexes = byteArray.splice(0, readonlyIndexesLength);\n      addressTableLookups.push({\n        accountKey,\n        writableIndexes,\n        readonlyIndexes,\n      });\n    }\n\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n}\n","import {PublicKey} from './publickey';\n\nexport const SYSVAR_CLOCK_PUBKEY = new PublicKey(\n  'SysvarC1ock11111111111111111111111111111111',\n);\n\nexport const SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey(\n  'SysvarEpochSchedu1e111111111111111111111111',\n);\n\nexport const SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey(\n  'Sysvar1nstructions1111111111111111111111111',\n);\n\nexport const SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey(\n  'SysvarRecentB1ockHashes11111111111111111111',\n);\n\nexport const SYSVAR_RENT_PUBKEY = new PublicKey(\n  'SysvarRent111111111111111111111111111111111',\n);\n\nexport const SYSVAR_REWARDS_PUBKEY = new PublicKey(\n  'SysvarRewards111111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey(\n  'SysvarS1otHashes111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey(\n  'SysvarS1otHistory11111111111111111111111111',\n);\n\nexport const SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey(\n  'SysvarStakeHistory1111111111111111111111111',\n);\n","import {Connection} from '../connection';\nimport {Transaction} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\nimport type {Signer} from '../keypair';\nimport type {TransactionSignature} from '../transaction';\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  signers: Array<Signer>,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature> {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries,\n    minContextSlot: options.minContextSlot,\n  };\n\n  const signature = await connection.sendTransaction(\n    transaction,\n    signers,\n    sendOptions,\n  );\n\n  const status =\n    transaction.recentBlockhash != null &&\n    transaction.lastValidBlockHeight != null\n      ? (\n          await connection.confirmTransaction(\n            {\n              signature: signature,\n              blockhash: transaction.recentBlockhash,\n              lastValidBlockHeight: transaction.lastValidBlockHeight,\n            },\n            options && options.commitment,\n          )\n        ).value\n      : (\n          await connection.confirmTransaction(\n            signature,\n            options && options.commitment,\n          )\n        ).value;\n\n  if (status.err) {\n    throw new Error(\n      `Transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","// zzz\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from './layout';\n\nexport interface IInstructionInputData {\n  readonly instruction: number;\n}\n\n/**\n * @internal\n */\nexport type InstructionType<TInputData extends IInstructionInputData> = {\n  /** The Instruction index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nexport function encodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  fields?: any,\n): Buffer {\n  const allocLength =\n    type.layout.span >= 0 ? type.layout.span : Layout.getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({instruction: type.index}, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nexport function decodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  buffer: Buffer,\n): TInputData {\n  let data: TInputData;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(\n      `invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`,\n    );\n  }\n\n  return data;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nexport const FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport interface FeeCalculator {\n  /** Cost in lamports to validate a signature. */\n  lamportsPerSignature: number;\n}\n","import {Buffer} from 'buffer';\nimport {blob, Layout} from '@solana/buffer-layout';\nimport {toBigIntLE, toBufferLE} from 'bigint-buffer';\n\ninterface EncodeDecode<T> {\n  decode(buffer: Buffer, offset?: number): T;\n  encode(src: T, buffer: Buffer, offset?: number): number;\n}\n\nconst encodeDecode = <T>(layout: Layout<T>): EncodeDecode<T> => {\n  const decode = layout.decode.bind(layout);\n  const encode = layout.encode.bind(layout);\n  return {decode, encode};\n};\n\nconst bigInt =\n  (length: number) =>\n  (property?: string): Layout<bigint> => {\n    const layout = blob(length, property);\n    const {encode, decode} = encodeDecode(layout);\n\n    const bigIntLayout = layout as Layout<unknown> as Layout<bigint>;\n\n    bigIntLayout.decode = (buffer: Buffer, offset: number) => {\n      const src = decode(buffer, offset);\n      return toBigIntLE(Buffer.from(src));\n    };\n\n    bigIntLayout.encode = (bigInt: bigint, buffer: Buffer, offset: number) => {\n      const src = toBufferLE(bigInt, length);\n      return encode(src, buffer, offset);\n    };\n\n    return bigIntLayout;\n  };\n\nexport const u64 = bigInt(8);\n\nexport const u128 = bigInt(16);\n\nexport const u192 = bigInt(24);\n\nexport const u256 = bigInt(32);\n","import * as BufferLayout from '@solana/buffer-layout';\nimport {Buffer} from 'buffer';\n\nimport type {Blockhash} from './blockhash';\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport type {FeeCalculator} from './fee-calculator';\nimport {FeeCalculatorLayout} from './fee-calculator';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct<\n  Readonly<{\n    authorizedPubkey: Uint8Array;\n    feeCalculator: Readonly<{\n      lamportsPerSignature: number;\n    }>;\n    nonce: Uint8Array;\n    state: number;\n    version: number;\n  }>\n>([\n  BufferLayout.u32('version'),\n  BufferLayout.u32('state'),\n  Layout.publicKey('authorizedPubkey'),\n  Layout.publicKey('nonce'),\n  BufferLayout.struct<Readonly<{lamportsPerSignature: number}>>(\n    [FeeCalculatorLayout],\n    'feeCalculator',\n  ),\n]);\n\nexport const NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\ntype NonceAccountArgs = {\n  authorizedPubkey: PublicKey;\n  nonce: Blockhash;\n  feeCalculator: FeeCalculator;\n};\n\n/**\n * NonceAccount class\n */\nexport class NonceAccount {\n  authorizedPubkey: PublicKey;\n  nonce: Blockhash;\n  feeCalculator: FeeCalculator;\n\n  /**\n   * @internal\n   */\n  constructor(args: NonceAccountArgs) {\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): NonceAccount {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {NONCE_ACCOUNT_LENGTH} from '../nonce-account';\nimport {PublicKey} from '../publickey';\nimport {SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\nimport {u64} from '../utils/bigint';\n\n/**\n * Create account system transaction params\n */\nexport type CreateAccountParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account */\n  newAccountPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Transfer system transaction params\n */\nexport type TransferParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n};\n\n/**\n * Assign system transaction params\n */\nexport type AssignParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Create account with seed system transaction params\n */\nexport type CreateAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account. Must be pre-calculated with PublicKey.createWithSeed() */\n  newAccountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the created account. Must be the same as the base key used to create `newAccountPubkey` */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the created account. Must be the same as the seed used to create `newAccountPubkey` */\n  seed: string;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Create nonce account system transaction params\n */\nexport type CreateNonceAccountParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n};\n\n/**\n * Create nonce account with seed system transaction params\n */\nexport type CreateNonceAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n  /** Base public key to use to derive the address of the nonce account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the nonce account */\n  seed: string;\n};\n\n/**\n * Initialize nonce account system instruction params\n */\nexport type InitializeNonceParams = {\n  /** Nonce account which will be initialized */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the initialized nonce account */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Advance nonce account system instruction params\n */\nexport type AdvanceNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Withdraw nonce account system transaction params\n */\nexport type WithdrawNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key of the account which will receive the withdrawn nonce account balance */\n  toPubkey: PublicKey;\n  /** Amount of lamports to withdraw from the nonce account */\n  lamports: number;\n};\n\n/**\n * Authorize nonce account system transaction params\n */\nexport type AuthorizeNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the current nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key to set as the new nonce authority */\n  newAuthorizedPubkey: PublicKey;\n};\n\n/**\n * Allocate account system transaction params\n */\nexport type AllocateParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Amount of space in bytes to allocate */\n  space: number;\n};\n\n/**\n * Allocate account with seed system transaction params\n */\nexport type AllocateWithSeedParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the allocated account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the allocated account */\n  seed: string;\n  /** Amount of space in bytes to allocate */\n  space: number;\n  /** Public key of the program to assign as the owner of the allocated account */\n  programId: PublicKey;\n};\n\n/**\n * Assign account with seed system transaction params\n */\nexport type AssignWithSeedParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the assigned account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the assigned account */\n  seed: string;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Transfer with seed system transaction params\n */\nexport type TransferWithSeedParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/** Decoded transfer system transaction instruction */\nexport type DecodedTransferInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n};\n\n/** Decoded transferWithSeed system transaction instruction */\nexport type DecodedTransferWithSeedInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/**\n * System Instruction class\n */\nexport class SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): SystemInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: SystemInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as SystemInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(\n    instruction: TransactionInstruction,\n  ): CreateAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Create,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(\n    instruction: TransactionInstruction,\n  ): DecodedTransferInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Transfer,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(\n    instruction: TransactionInstruction,\n  ): DecodedTransferWithSeedInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction: TransactionInstruction): AllocateParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {space} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Allocate,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space,\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(\n    instruction: TransactionInstruction,\n  ): AllocateWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction: TransactionInstruction): AssignParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Assign,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(\n    instruction: TransactionInstruction,\n  ): AssignWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(\n    instruction: TransactionInstruction,\n  ): CreateAccountWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {base, seed, lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(\n    instruction: TransactionInstruction,\n  ): AdvanceNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\nexport type SystemInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof SystemInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'AdvanceNonceAccount'\n  | 'Allocate'\n  | 'AllocateWithSeed'\n  | 'Assign'\n  | 'AssignWithSeed'\n  | 'AuthorizeNonceAccount'\n  | 'Create'\n  | 'CreateWithSeed'\n  | 'InitializeNonceAccount'\n  | 'Transfer'\n  | 'TransferWithSeed'\n  | 'WithdrawNonceAccount'\n  | 'UpgradeNonceAccount';\n\ntype SystemInstructionInputData = {\n  AdvanceNonceAccount: IInstructionInputData;\n  Allocate: IInstructionInputData & {\n    space: number;\n  };\n  AllocateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  Assign: IInstructionInputData & {\n    programId: Uint8Array;\n  };\n  AssignWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    seed: string;\n    programId: Uint8Array;\n  };\n  AuthorizeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Create: IInstructionInputData & {\n    lamports: number;\n    programId: Uint8Array;\n    space: number;\n  };\n  CreateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    lamports: number;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  InitializeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Transfer: IInstructionInputData & {\n    lamports: bigint;\n  };\n  TransferWithSeed: IInstructionInputData & {\n    lamports: bigint;\n    programId: Uint8Array;\n    seed: string;\n  };\n  WithdrawNonceAccount: IInstructionInputData & {\n    lamports: number;\n  };\n  UpgradeNonceAccount: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nexport const SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in SystemInstructionType]: InstructionType<\n    SystemInstructionInputData[Instruction]\n  >;\n}>({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct<SystemInstructionInputData['Create']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct<SystemInstructionInputData['Assign']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct<SystemInstructionInputData['Transfer']>([\n      BufferLayout.u32('instruction'),\n      u64('lamports'),\n    ]),\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct<SystemInstructionInputData['CreateWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AdvanceNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['WithdrawNonceAccount']\n    >([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')]),\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['InitializeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AuthorizeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct<SystemInstructionInputData['Allocate']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('space'),\n    ]),\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct<SystemInstructionInputData['AllocateWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('base'),\n        Layout.rustString('seed'),\n        BufferLayout.ns64('space'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<SystemInstructionInputData['AssignWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct<SystemInstructionInputData['TransferWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        u64('lamports'),\n        Layout.rustString('seed'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  UpgradeNonceAccount: {\n    index: 12,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['UpgradeNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nexport class SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n  static programId: PublicKey = new PublicKey(\n    '11111111111111111111111111111111',\n  );\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params: CreateAccountParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.newAccountPubkey, isSigner: true, isWritable: true},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(\n    params: TransferParams | TransferWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {lamports: BigInt(params.lamports)});\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(\n    params: AssignParams | AssignWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(\n    params: CreateAccountWithSeedParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n    let keys = [\n      {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n      {pubkey: params.newAccountPubkey, isSigner: false, isWritable: true},\n    ];\n    if (params.basePubkey != params.fromPubkey) {\n      keys.push({pubkey: params.basePubkey, isSigner: true, isWritable: false});\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(\n    params: CreateNonceAccountParams | CreateNonceAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(\n        SystemProgram.createAccountWithSeed({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          basePubkey: params.basePubkey,\n          seed: params.seed,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    } else {\n      transaction.add(\n        SystemProgram.createAccount({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    }\n\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey,\n    };\n\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(\n    params: InitializeNonceParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer()),\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params: AdvanceNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params: WithdrawNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {lamports: params.lamports});\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params: AuthorizeNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(\n    params: AllocateParams | AllocateWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space,\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport {Transaction, PACKET_DATA_SIZE} from './transaction';\nimport {SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {sendAndConfirmTransaction} from './utils/send-and-confirm-transaction';\nimport {sleep} from './utils/sleep';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\nimport {SystemProgram} from './programs/system';\nimport {IInstructionInputData} from './instruction';\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nexport class Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n  static chunkSize: number = CHUNK_SIZE;\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return (\n      2 * // Every transaction requires two signatures (payer + program)\n      (Math.ceil(dataLength / Loader.chunkSize) +\n        1 + // Add one for Create transaction\n        1) // Add one for Finalize transaction\n    );\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    programId: PublicKey,\n    data: Buffer | Uint8Array | Array<number>,\n  ): Promise<boolean> {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(\n        data.length,\n      );\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(\n        program.publicKey,\n        'confirmed',\n      );\n\n      let transaction: Transaction | null = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.allocate({\n              accountPubkey: program.publicKey,\n              space: data.length,\n            }),\n          );\n        }\n\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.assign({\n              accountPubkey: program.publicKey,\n              programId,\n            }),\n          );\n        }\n\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.transfer({\n              fromPubkey: payer.publicKey,\n              toPubkey: program.publicKey,\n              lamports: balanceNeeded - programInfo.lamports,\n            }),\n          );\n        }\n      } else {\n        transaction = new Transaction().add(\n          SystemProgram.createAccount({\n            fromPubkey: payer.publicKey,\n            newAccountPubkey: program.publicKey,\n            lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n            space: data.length,\n            programId,\n          }),\n        );\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(\n          connection,\n          transaction,\n          [payer, program],\n          {\n            commitment: 'confirmed',\n          },\n        );\n      }\n    }\n\n    const dataLayout = BufferLayout.struct<\n      Readonly<{\n        bytes: number[];\n        bytesLength: number;\n        bytesLengthPadding: number;\n        instruction: number;\n        offset: number;\n      }>\n    >([\n      BufferLayout.u32('instruction'),\n      BufferLayout.u32('offset'),\n      BufferLayout.u32('bytesLength'),\n      BufferLayout.u32('bytesLengthPadding'),\n      BufferLayout.seq(\n        BufferLayout.u8('byte'),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'bytes',\n      ),\n    ]);\n\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode(\n        {\n          instruction: 0, // Load instruction\n          offset,\n          bytes: bytes as number[],\n          bytesLength: 0,\n          bytesLengthPadding: 0,\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [{pubkey: program.publicKey, isSigner: true, isWritable: true}],\n        programId,\n        data,\n      });\n      transactions.push(\n        sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed',\n        }),\n      );\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct<IInstructionInputData>([\n        BufferLayout.u32('instruction'),\n      ]);\n\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode(\n        {\n          instruction: 1, // Finalize instruction\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [\n          {pubkey: program.publicKey, isSigner: true, isWritable: true},\n          {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        ],\n        programId,\n        data,\n      });\n      await sendAndConfirmTransaction(\n        connection,\n        transaction,\n        [payer, program],\n        {\n          commitment: 'confirmed',\n        },\n      );\n    }\n\n    // success\n    return true;\n  }\n}\n","import type {Buffer} from 'buffer';\n\nimport {PublicKey} from './publickey';\nimport {Loader} from './loader';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\n\nexport const BPF_LOADER_PROGRAM_ID = new PublicKey(\n  'BPFLoader2111111111111111111111111111111111',\n);\n\n/**\n * Factory class for transactions to interact with a program loader\n */\nexport class BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a BPF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the BPF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    elf: Buffer | Uint8Array | Array<number>,\n    loaderProgramId: PublicKey,\n  ): Promise<boolean> {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n","var objToString = Object.prototype.toString;\nvar objKeys = Object.keys || function(obj) {\n\t\tvar keys = [];\n\t\tfor (var name in obj) {\n\t\t\tkeys.push(name);\n\t\t}\n\t\treturn keys;\n\t};\n\nfunction stringify(val, isArrayProp) {\n\tvar i, max, str, keys, key, propVal, toStr;\n\tif (val === true) {\n\t\treturn \"true\";\n\t}\n\tif (val === false) {\n\t\treturn \"false\";\n\t}\n\tswitch (typeof val) {\n\t\tcase \"object\":\n\t\t\tif (val === null) {\n\t\t\t\treturn null;\n\t\t\t} else if (val.toJSON && typeof val.toJSON === \"function\") {\n\t\t\t\treturn stringify(val.toJSON(), isArrayProp);\n\t\t\t} else {\n\t\t\t\ttoStr = objToString.call(val);\n\t\t\t\tif (toStr === \"[object Array]\") {\n\t\t\t\t\tstr = '[';\n\t\t\t\t\tmax = val.length - 1;\n\t\t\t\t\tfor(i = 0; i < max; i++) {\n\t\t\t\t\t\tstr += stringify(val[i], true) + ',';\n\t\t\t\t\t}\n\t\t\t\t\tif (max > -1) {\n\t\t\t\t\t\tstr += stringify(val[i], true);\n\t\t\t\t\t}\n\t\t\t\t\treturn str + ']';\n\t\t\t\t} else if (toStr === \"[object Object]\") {\n\t\t\t\t\t// only object is left\n\t\t\t\t\tkeys = objKeys(val).sort();\n\t\t\t\t\tmax = keys.length;\n\t\t\t\t\tstr = \"\";\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile (i < max) {\n\t\t\t\t\t\tkey = keys[i];\n\t\t\t\t\t\tpropVal = stringify(val[key], false);\n\t\t\t\t\t\tif (propVal !== undefined) {\n\t\t\t\t\t\t\tif (str) {\n\t\t\t\t\t\t\t\tstr += ',';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstr += JSON.stringify(key) + ':' + propVal;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\treturn '{' + str + '}';\n\t\t\t\t} else {\n\t\t\t\t\treturn JSON.stringify(val);\n\t\t\t\t}\n\t\t\t}\n\t\tcase \"function\":\n\t\tcase \"undefined\":\n\t\t\treturn isArrayProp ? null : undefined;\n\t\tcase \"string\":\n\t\t\treturn JSON.stringify(val);\n\t\tdefault:\n\t\t\treturn isFinite(val) ? val : null;\n\t}\n}\n\nmodule.exports = function(val) {\n\tvar returnVal = stringify(val, false);\n\tif (returnVal !== undefined) {\n\t\treturn ''+ returnVal;\n\t}\n};\n","const MINIMUM_SLOT_PER_EPOCH = 32;\n\n// Returns the number of trailing zeros in the binary representation of self.\nfunction trailingZeros(n: number) {\n  let trailingZeros = 0;\n  while (n > 1) {\n    n /= 2;\n    trailingZeros++;\n  }\n  return trailingZeros;\n}\n\n// Returns the smallest power of two greater than or equal to n\nfunction nextPowerOfTwo(n: number) {\n  if (n === 0) return 1;\n  n--;\n  n |= n >> 1;\n  n |= n >> 2;\n  n |= n >> 4;\n  n |= n >> 8;\n  n |= n >> 16;\n  n |= n >> 32;\n  return n + 1;\n}\n\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n * Can be retrieved with the {@link connection.getEpochSchedule} method\n */\nexport class EpochSchedule {\n  /** The maximum number of slots in each epoch */\n  public slotsPerEpoch: number;\n  /** The number of slots before beginning of an epoch to calculate a leader schedule for that epoch */\n  public leaderScheduleSlotOffset: number;\n  /** Indicates whether epochs start short and grow */\n  public warmup: boolean;\n  /** The first epoch with `slotsPerEpoch` slots */\n  public firstNormalEpoch: number;\n  /** The first slot of `firstNormalEpoch` */\n  public firstNormalSlot: number;\n\n  constructor(\n    slotsPerEpoch: number,\n    leaderScheduleSlotOffset: number,\n    warmup: boolean,\n    firstNormalEpoch: number,\n    firstNormalSlot: number,\n  ) {\n    this.slotsPerEpoch = slotsPerEpoch;\n    this.leaderScheduleSlotOffset = leaderScheduleSlotOffset;\n    this.warmup = warmup;\n    this.firstNormalEpoch = firstNormalEpoch;\n    this.firstNormalSlot = firstNormalSlot;\n  }\n\n  getEpoch(slot: number): number {\n    return this.getEpochAndSlotIndex(slot)[0];\n  }\n\n  getEpochAndSlotIndex(slot: number): [number, number] {\n    if (slot < this.firstNormalSlot) {\n      const epoch =\n        trailingZeros(nextPowerOfTwo(slot + MINIMUM_SLOT_PER_EPOCH + 1)) -\n        trailingZeros(MINIMUM_SLOT_PER_EPOCH) -\n        1;\n\n      const epochLen = this.getSlotsInEpoch(epoch);\n      const slotIndex = slot - (epochLen - MINIMUM_SLOT_PER_EPOCH);\n      return [epoch, slotIndex];\n    } else {\n      const normalSlotIndex = slot - this.firstNormalSlot;\n      const normalEpochIndex = Math.floor(normalSlotIndex / this.slotsPerEpoch);\n      const epoch = this.firstNormalEpoch + normalEpochIndex;\n      const slotIndex = normalSlotIndex % this.slotsPerEpoch;\n      return [epoch, slotIndex];\n    }\n  }\n\n  getFirstSlotInEpoch(epoch: number): number {\n    if (epoch <= this.firstNormalEpoch) {\n      return (Math.pow(2, epoch) - 1) * MINIMUM_SLOT_PER_EPOCH;\n    } else {\n      return (\n        (epoch - this.firstNormalEpoch) * this.slotsPerEpoch +\n        this.firstNormalSlot\n      );\n    }\n  }\n\n  getLastSlotInEpoch(epoch: number): number {\n    return this.getFirstSlotInEpoch(epoch) + this.getSlotsInEpoch(epoch) - 1;\n  }\n\n  getSlotsInEpoch(epoch: number) {\n    if (epoch < this.firstNormalEpoch) {\n      return Math.pow(2, epoch + trailingZeros(MINIMUM_SLOT_PER_EPOCH));\n    } else {\n      return this.slotsPerEpoch;\n    }\n  }\n}\n","export class SendTransactionError extends Error {\n  logs: string[] | undefined;\n\n  constructor(message: string, logs?: string[]) {\n    super(message);\n\n    this.logs = logs;\n  }\n}\n\n// Keep in sync with client/src/rpc_custom_errors.rs\n// Typescript `enums` thwart tree-shaking. See https://bargsten.org/jsts/enums/\nexport const SolanaJSONRPCErrorCode = {\n  JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP: -32001,\n  JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE: -32002,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE: -32003,\n  JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE: -32004,\n  JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY: -32005,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE: -32006,\n  JSON_RPC_SERVER_ERROR_SLOT_SKIPPED: -32007,\n  JSON_RPC_SERVER_ERROR_NO_SNAPSHOT: -32008,\n  JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED: -32009,\n  JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX: -32010,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE: -32011,\n  JSON_RPC_SCAN_ERROR: -32012,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH: -32013,\n  JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET: -32014,\n  JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION: -32015,\n  JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED: -32016,\n} as const;\nexport type SolanaJSONRPCErrorCodeEnum =\n  typeof SolanaJSONRPCErrorCode[keyof typeof SolanaJSONRPCErrorCode];\n\nexport class SolanaJSONRPCError extends Error {\n  code: SolanaJSONRPCErrorCodeEnum | unknown;\n  data?: any;\n  constructor(\n    {\n      code,\n      message,\n      data,\n    }: Readonly<{code: unknown; message: string; data?: any}>,\n    customMessage?: string,\n  ) {\n    super(customMessage != null ? `${customMessage}: ${message}` : message);\n    this.code = code;\n    this.data = data;\n    this.name = 'SolanaJSONRPCError';\n  }\n}\n","export const Headers = globalThis.Headers;\nexport const Request = globalThis.Request;\nexport const Response = globalThis.Response;\nexport default globalThis.fetch;\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport assert from '../../utils/assert';\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport {u64} from '../../utils/bigint';\nimport {decodeData} from '../../account-data';\n\nexport type AddressLookupTableState = {\n  deactivationSlot: bigint;\n  lastExtendedSlot: number;\n  lastExtendedSlotStartIndex: number;\n  authority?: PublicKey;\n  addresses: Array<PublicKey>;\n};\n\nexport type AddressLookupTableAccountArgs = {\n  key: PublicKey;\n  state: AddressLookupTableState;\n};\n\n/// The serialized size of lookup table metadata\nconst LOOKUP_TABLE_META_SIZE = 56;\n\nexport class AddressLookupTableAccount {\n  key: PublicKey;\n  state: AddressLookupTableState;\n\n  constructor(args: AddressLookupTableAccountArgs) {\n    this.key = args.key;\n    this.state = args.state;\n  }\n\n  isActive(): boolean {\n    const U64_MAX = 2n ** 64n - 1n;\n    return this.state.deactivationSlot === U64_MAX;\n  }\n\n  static deserialize(accountData: Uint8Array): AddressLookupTableState {\n    const meta = decodeData(LookupTableMetaLayout, accountData);\n\n    const serializedAddressesLen = accountData.length - LOOKUP_TABLE_META_SIZE;\n    assert(serializedAddressesLen >= 0, 'lookup table is invalid');\n    assert(serializedAddressesLen % 32 === 0, 'lookup table is invalid');\n\n    const numSerializedAddresses = serializedAddressesLen / 32;\n    const {addresses} = BufferLayout.struct<{addresses: Array<Uint8Array>}>([\n      BufferLayout.seq(Layout.publicKey(), numSerializedAddresses, 'addresses'),\n    ]).decode(accountData.slice(LOOKUP_TABLE_META_SIZE));\n\n    return {\n      deactivationSlot: meta.deactivationSlot,\n      lastExtendedSlot: meta.lastExtendedSlot,\n      lastExtendedSlotStartIndex: meta.lastExtendedStartIndex,\n      authority:\n        meta.authority.length !== 0\n          ? new PublicKey(meta.authority[0])\n          : undefined,\n      addresses: addresses.map(address => new PublicKey(address)),\n    };\n  }\n}\n\nconst LookupTableMetaLayout = {\n  index: 1,\n  layout: BufferLayout.struct<{\n    typeIndex: number;\n    deactivationSlot: bigint;\n    lastExtendedSlot: number;\n    lastExtendedStartIndex: number;\n    authority: Array<Uint8Array>;\n  }>([\n    BufferLayout.u32('typeIndex'),\n    u64('deactivationSlot'),\n    BufferLayout.nu64('lastExtendedSlot'),\n    BufferLayout.u8('lastExtendedStartIndex'),\n    BufferLayout.u8(), // option\n    BufferLayout.seq(\n      Layout.publicKey(),\n      BufferLayout.offset(BufferLayout.u8(), -1),\n      'authority',\n    ),\n  ]),\n};\n","import * as BufferLayout from '@solana/buffer-layout';\n\nexport interface IAccountStateData {\n  readonly typeIndex: number;\n}\n\n/**\n * @internal\n */\nexport type AccountType<TInputData extends IAccountStateData> = {\n  /** The account type index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Decode account data buffer using an AccountType\n * @internal\n */\nexport function decodeData<TAccountStateData extends IAccountStateData>(\n  type: AccountType<TAccountStateData>,\n  data: Uint8Array,\n): TAccountStateData {\n  let decoded: TAccountStateData;\n  try {\n    decoded = type.layout.decode(data);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (decoded.typeIndex !== type.index) {\n    throw new Error(\n      `invalid account data; account type mismatch ${decoded.typeIndex} != ${type.index}`,\n    );\n  }\n\n  return decoded;\n}\n","const URL_RE = /^[^:]+:\\/\\/([^:[]+|\\[[^\\]]+\\])(:\\d+)?(.*)/i;\n\nexport function makeWebsocketUrl(endpoint: string) {\n  const matches = endpoint.match(URL_RE);\n  if (matches == null) {\n    throw TypeError(`Failed to validate endpoint URL \\`${endpoint}\\``);\n  }\n  const [\n    _, // eslint-disable-line @typescript-eslint/no-unused-vars\n    hostish,\n    portWithColon,\n    rest,\n  ] = matches;\n  const protocol = endpoint.startsWith('https:') ? 'wss:' : 'ws:';\n  const startPort =\n    portWithColon == null ? null : parseInt(portWithColon.slice(1), 10);\n  const websocketPort =\n    // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n    // is explictly specifying the endpoint port (HTTP-based RPC), assuming\n    // we're directly trying to connect to solana-validator's ws listening port.\n    // When the endpoint omits the port, we're connecting to the protocol\n    // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n    // proxy which manages WebSocket upgrade and backend port redirection.\n    startPort == null ? '' : `:${startPort + 1}`;\n  return `${protocol}//${hostish}${websocketPort}${rest}`;\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n// @ts-ignore\nimport fastStableStringify from 'fast-stable-stringify';\nimport {\n  type as pick,\n  number,\n  string,\n  array,\n  boolean,\n  literal,\n  record,\n  union,\n  optional,\n  nullable,\n  coerce,\n  instance,\n  create,\n  tuple,\n  unknown,\n  any,\n} from 'superstruct';\nimport type {Struct} from 'superstruct';\nimport {Client as RpcWebSocketClient} from 'rpc-websockets';\nimport RpcClient from 'jayson/lib/client/browser';\n\nimport {AgentManager} from './agent-manager';\nimport {EpochSchedule} from './epoch-schedule';\nimport {SendTransactionError, SolanaJSONRPCError} from './errors';\nimport fetchImpl, {Response} from './fetch-impl';\nimport {NonceAccount} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {Signer} from './keypair';\nimport {MS_PER_SLOT} from './timing';\nimport {\n  Transaction,\n  TransactionStatus,\n  TransactionVersion,\n} from './transaction';\nimport {Message, MessageHeader, MessageV0, VersionedMessage} from './message';\nimport {AddressLookupTableAccount} from './programs/address-lookup-table/state';\nimport assert from './utils/assert';\nimport {sleep} from './utils/sleep';\nimport {toBuffer} from './utils/to-buffer';\nimport {\n  TransactionExpiredBlockheightExceededError,\n  TransactionExpiredTimeoutError,\n} from './transaction/expiry-custom-errors';\nimport {makeWebsocketUrl} from './utils/makeWebsocketUrl';\nimport type {Blockhash} from './blockhash';\nimport type {FeeCalculator} from './fee-calculator';\nimport type {TransactionSignature} from './transaction';\nimport type {CompiledInstruction} from './message';\n\nconst PublicKeyFromString = coerce(\n  instance(PublicKey),\n  string(),\n  value => new PublicKey(value),\n);\n\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\n\nconst BufferFromRawAccountData = coerce(\n  instance(Buffer),\n  RawAccountDataResult,\n  value => Buffer.from(value[0], 'base64'),\n);\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nexport const BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\n/**\n * HACK.\n * Copied from rpc-websockets/dist/lib/client.\n * Otherwise, `yarn build` fails with:\n * https://gist.github.com/steveluscher/c057eca81d479ef705cdb53162f9971d\n */\ninterface IWSRequestParams {\n  [x: string]: any;\n  [x: number]: any;\n}\n\ntype ClientSubscriptionId = number;\n/** @internal */ type ServerSubscriptionId = number;\n/** @internal */ type SubscriptionConfigHash = string;\n/** @internal */ type SubscriptionDisposeFn = () => Promise<void>;\n/**\n * @internal\n * Every subscription contains the args used to open the subscription with\n * the server, and a list of callers interested in notifications.\n */\ntype BaseSubscription<TMethod = SubscriptionConfig['method']> = Readonly<{\n  args: IWSRequestParams;\n  callbacks: Set<Extract<SubscriptionConfig, {method: TMethod}>['callback']>;\n}>;\n/**\n * @internal\n * A subscription may be in various states of connectedness. Only when it is\n * fully connected will it have a server subscription id associated with it.\n * This id can be returned to the server to unsubscribe the client entirely.\n */\ntype StatefulSubscription = Readonly<\n  // New subscriptions that have not yet been\n  // sent to the server start in this state.\n  | {\n      state: 'pending';\n    }\n  // These subscriptions have been sent to the server\n  // and are waiting for the server to acknowledge them.\n  | {\n      state: 'subscribing';\n    }\n  // These subscriptions have been acknowledged by the\n  // server and have been assigned server subscription ids.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'subscribed';\n    }\n  // These subscriptions are intended to be torn down and\n  // are waiting on an acknowledgement from the server.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribing';\n    }\n  // The request to tear down these subscriptions has been\n  // acknowledged by the server. The `serverSubscriptionId`\n  // is the id of the now-dead subscription.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribed';\n    }\n>;\n/**\n * A type that encapsulates a subscription's RPC method\n * names and notification (callback) signature.\n */\ntype SubscriptionConfig = Readonly<\n  | {\n      callback: AccountChangeCallback;\n      method: 'accountSubscribe';\n      unsubscribeMethod: 'accountUnsubscribe';\n    }\n  | {\n      callback: LogsCallback;\n      method: 'logsSubscribe';\n      unsubscribeMethod: 'logsUnsubscribe';\n    }\n  | {\n      callback: ProgramAccountChangeCallback;\n      method: 'programSubscribe';\n      unsubscribeMethod: 'programUnsubscribe';\n    }\n  | {\n      callback: RootChangeCallback;\n      method: 'rootSubscribe';\n      unsubscribeMethod: 'rootUnsubscribe';\n    }\n  | {\n      callback: SignatureSubscriptionCallback;\n      method: 'signatureSubscribe';\n      unsubscribeMethod: 'signatureUnsubscribe';\n    }\n  | {\n      callback: SlotChangeCallback;\n      method: 'slotSubscribe';\n      unsubscribeMethod: 'slotUnsubscribe';\n    }\n  | {\n      callback: SlotUpdateCallback;\n      method: 'slotsUpdatesSubscribe';\n      unsubscribeMethod: 'slotsUpdatesUnsubscribe';\n    }\n>;\n/**\n * @internal\n * Utility type that keeps tagged unions intact while omitting properties.\n */\ntype DistributiveOmit<T, K extends PropertyKey> = T extends unknown\n  ? Omit<T, K>\n  : never;\n/**\n * @internal\n * This type represents a single subscribable 'topic.' It's made up of:\n *\n * - The args used to open the subscription with the server,\n * - The state of the subscription, in terms of its connectedness, and\n * - The set of callbacks to call when the server publishes notifications\n *\n * This record gets indexed by `SubscriptionConfigHash` and is used to\n * set up subscriptions, fan out notifications, and track subscription state.\n */\ntype Subscription = BaseSubscription &\n  StatefulSubscription &\n  DistributiveOmit<SubscriptionConfig, 'callback'>;\n\ntype RpcRequest = (methodName: string, args: Array<any>) => Promise<any>;\n\ntype RpcBatchRequest = (requests: RpcParams[]) => Promise<any[]>;\n\n/**\n * @internal\n */\nexport type RpcParams = {\n  methodName: string;\n  args: Array<any>;\n};\n\nexport type TokenAccountsFilter =\n  | {\n      mint: PublicKey;\n    }\n  | {\n      programId: PublicKey;\n    };\n\n/**\n * Extra contextual information for RPC responses\n */\nexport type Context = {\n  slot: number;\n};\n\n/**\n * Options for sending transactions\n */\nexport type SendOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for confirming transactions\n */\nexport type ConfirmOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** desired commitment level */\n  commitment?: Commitment;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n */\nexport type ConfirmedSignaturesForAddress2Options = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * Options for getSignaturesForAddress\n */\nexport type SignaturesForAddressOptions = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * RPC Response with extra contextual information\n */\nexport type RpcResponseAndContext<T> = {\n  /** response context */\n  context: Context;\n  /** response value */\n  value: T;\n};\n\nexport type BlockhashWithExpiryBlockHeight = Readonly<{\n  blockhash: Blockhash;\n  lastValidBlockHeight: number;\n}>;\n\n/**\n * A strategy for confirming transactions that uses the last valid\n * block height for a given blockhash to check for transaction expiration.\n */\nexport type BlockheightBasedTransactionConfirmationStrategy = {\n  signature: TransactionSignature;\n} & BlockhashWithExpiryBlockHeight;\n\n/* @internal */\nfunction assertEndpointUrl(putativeUrl: string) {\n  if (/^https?:/.test(putativeUrl) === false) {\n    throw new TypeError('Endpoint URL must start with `http:` or `https:`.');\n  }\n  return putativeUrl;\n}\n\n/** @internal */\nfunction extractCommitmentFromConfig<TConfig>(\n  commitmentOrConfig?: Commitment | ({commitment?: Commitment} & TConfig),\n) {\n  let commitment: Commitment | undefined;\n  let config: Omit<TConfig, 'commitment'> | undefined;\n  if (typeof commitmentOrConfig === 'string') {\n    commitment = commitmentOrConfig;\n  } else if (commitmentOrConfig) {\n    const {commitment: specifiedCommitment, ...specifiedConfig} =\n      commitmentOrConfig;\n    commitment = specifiedCommitment;\n    config = specifiedConfig;\n  }\n  return {commitment, config};\n}\n\n/**\n * @internal\n */\nfunction createRpcResult<T, U>(result: Struct<T, U>) {\n  return union([\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      result,\n    }),\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      error: pick({\n        code: unknown(),\n        message: string(),\n        data: optional(any()),\n      }),\n    }),\n  ]);\n}\n\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult<T, U>(schema: Struct<T, U>) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema),\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext<T, U>(value: Struct<T, U>) {\n  return jsonRpcResult(\n    pick({\n      context: pick({\n        slot: number(),\n      }),\n      value,\n    }),\n  );\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext<T, U>(value: Struct<T, U>) {\n  return pick({\n    context: pick({\n      slot: number(),\n    }),\n    value,\n  });\n}\n\n/**\n * @internal\n */\nfunction versionedMessageFromResponse(\n  version: TransactionVersion | undefined,\n  response: MessageResponse,\n): VersionedMessage {\n  if (version === 0) {\n    return new MessageV0({\n      header: response.header,\n      staticAccountKeys: response.accountKeys.map(\n        accountKey => new PublicKey(accountKey),\n      ),\n      recentBlockhash: response.recentBlockhash,\n      compiledInstructions: response.instructions.map(ix => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      })),\n      addressTableLookups: response.addressTableLookups!,\n    });\n  } else {\n    return new Message(response);\n  }\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Commitment =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized'\n  | 'recent' // Deprecated as of v1.5.5\n  | 'single' // Deprecated as of v1.5.5\n  | 'singleGossip' // Deprecated as of v1.5.5\n  | 'root' // Deprecated as of v1.5.5\n  | 'max'; // Deprecated as of v1.5.5\n\n/**\n * A subset of Commitment levels, which are at least optimistically confirmed\n * <pre>\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Finality = 'confirmed' | 'finalized';\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n */\nexport type LargestAccountsFilter = 'circulating' | 'nonCirculating';\n\n/**\n * Configuration object for changing `getAccountInfo` query behavior\n */\nexport type GetAccountInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getBalance` query behavior\n */\nexport type GetBalanceConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetVersionedBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n};\n\n/**\n * Configuration object for changing `getStakeMinimumDelegation` query behavior\n */\nexport type GetStakeMinimumDelegationConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n};\n\n/**\n * Configuration object for changing `getBlockHeight` query behavior\n */\nexport type GetBlockHeightConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getEpochInfo` query behavior\n */\nexport type GetEpochInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getInflationReward` query behavior\n */\nexport type GetInflationRewardConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** An epoch for which the reward occurs. If omitted, the previous epoch will be used */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getLatestBlockhash` query behavior\n */\nexport type GetLatestBlockhashConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlot` query behavior\n */\nexport type GetSlotConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlotLeader` query behavior\n */\nexport type GetSlotLeaderConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetVersionedTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n};\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n */\nexport type GetLargestAccountsConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Filter largest accounts by whether they are part of the circulating supply */\n  filter?: LargestAccountsFilter;\n};\n\n/**\n * Configuration object for changing `getSupply` request behavior\n */\nexport type GetSupplyConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Exclude non circulating accounts list from response */\n  excludeNonCirculatingAccountsList?: boolean;\n};\n\n/**\n * Configuration object for changing query behavior\n */\nexport type SignatureStatusConfig = {\n  /** enable searching status history, not needed for recent transactions */\n  searchTransactionHistory: boolean;\n};\n\n/**\n * Information describing a cluster node\n */\nexport type ContactInfo = {\n  /** Identity public key of the node */\n  pubkey: string;\n  /** Gossip network address for the node */\n  gossip: string | null;\n  /** TPU network address for the node (null if not available) */\n  tpu: string | null;\n  /** JSON RPC network address for the node (null if not available) */\n  rpc: string | null;\n  /** Software version of the node (null if not available) */\n  version: string | null;\n};\n\n/**\n * Information describing a vote account\n */\nexport type VoteAccountInfo = {\n  /** Public key of the vote account */\n  votePubkey: string;\n  /** Identity public key of the node voting with this account */\n  nodePubkey: string;\n  /** The stake, in lamports, delegated to this vote account and activated */\n  activatedStake: number;\n  /** Whether the vote account is staked for this epoch */\n  epochVoteAccount: boolean;\n  /** Recent epoch voting credit history for this voter */\n  epochCredits: Array<[number, number, number]>;\n  /** A percentage (0-100) of rewards payout owed to the voter */\n  commission: number;\n  /** Most recent slot voted on by this vote account */\n  lastVote: number;\n};\n\n/**\n * A collection of cluster vote accounts\n */\nexport type VoteAccountStatus = {\n  /** Active vote accounts */\n  current: Array<VoteAccountInfo>;\n  /** Inactive vote accounts */\n  delinquent: Array<VoteAccountInfo>;\n};\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n */\nexport type InflationGovernor = {\n  foundation: number;\n  foundationTerm: number;\n  initial: number;\n  taper: number;\n  terminal: number;\n};\n\nconst GetInflationGovernorResult = pick({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number(),\n});\n\n/**\n * The inflation reward for an epoch\n */\nexport type InflationReward = {\n  /** epoch for which the reward occurs */\n  epoch: number;\n  /** the slot in which the rewards are effective */\n  effectiveSlot: number;\n  /** reward amount in lamports */\n  amount: number;\n  /** post balance of the account in lamports */\n  postBalance: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(\n  array(\n    nullable(\n      pick({\n        epoch: number(),\n        effectiveSlot: number(),\n        amount: number(),\n        postBalance: number(),\n      }),\n    ),\n  ),\n);\n\n/**\n * Information about the current epoch\n */\nexport type EpochInfo = {\n  epoch: number;\n  slotIndex: number;\n  slotsInEpoch: number;\n  absoluteSlot: number;\n  blockHeight?: number;\n  transactionCount?: number;\n};\n\nconst GetEpochInfoResult = pick({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number()),\n});\n\nconst GetEpochScheduleResult = pick({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number(),\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\nexport type LeaderSchedule = {\n  [address: string]: number[];\n};\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([pick({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = pick({\n  err: TransactionErrorResult,\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\nexport type Version = {\n  /** Version of solana-core */\n  'solana-core': string;\n  'feature-set'?: number;\n};\n\nconst VersionResult = pick({\n  'solana-core': string(),\n  'feature-set': optional(number()),\n});\n\nexport type SimulatedTransactionAccountInfo = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: string;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: string[];\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\nexport type TransactionReturnDataEncoding = 'base64';\n\nexport type TransactionReturnData = {\n  programId: string;\n  data: [string, TransactionReturnDataEncoding];\n};\n\nexport type SimulatedTransactionResponse = {\n  err: TransactionError | string | null;\n  logs: Array<string> | null;\n  accounts?: (SimulatedTransactionAccountInfo | null)[] | null;\n  unitsConsumed?: number;\n  returnData?: TransactionReturnData | null;\n};\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    err: nullable(union([pick({}), string()])),\n    logs: nullable(array(string())),\n    accounts: optional(\n      nullable(\n        array(\n          nullable(\n            pick({\n              executable: boolean(),\n              owner: string(),\n              lamports: number(),\n              data: array(string()),\n              rentEpoch: optional(number()),\n            }),\n          ),\n        ),\n      ),\n    ),\n    unitsConsumed: optional(number()),\n    returnData: optional(\n      nullable(\n        pick({\n          programId: string(),\n          data: tuple([string(), literal('base64')]),\n        }),\n      ),\n    ),\n  }),\n);\n\nexport type ParsedInnerInstruction = {\n  index: number;\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n};\n\nexport type TokenBalance = {\n  accountIndex: number;\n  mint: string;\n  owner?: string;\n  uiTokenAmount: TokenAmount;\n};\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionMeta} instead.\n */\nexport type ParsedConfirmedTransactionMeta = ParsedTransactionMeta;\n\n/**\n * Collection of addresses loaded by a transaction using address table lookups\n */\nexport type LoadedAddresses = {\n  writable: Array<PublicKey>;\n  readonly: Array<PublicKey>;\n};\n\n/**\n * Metadata for a parsed transaction on the ledger\n */\nexport type ParsedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked parsed instructions */\n  innerInstructions?: ParsedInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n};\n\nexport type CompiledInnerInstruction = {\n  index: number;\n  instructions: CompiledInstruction[];\n};\n\n/**\n * Metadata for a confirmed transaction on the ledger\n */\nexport type ConfirmedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked instructions */\n  innerInstructions?: CompiledInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type TransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: Message;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type VersionedTransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: VersionedMessage;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The transaction version */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed transaction message from the RPC API\n */\ntype MessageResponse = {\n  accountKeys: string[];\n  header: MessageHeader;\n  instructions: CompiledInstruction[];\n  recentBlockhash: string;\n  addressTableLookups?: ParsedAddressTableLookup[];\n};\n\n/**\n * A confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport type ConfirmedTransaction = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: Transaction;\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A partially decoded transaction instruction\n */\nexport type PartiallyDecodedInstruction = {\n  /** Program id called by this instruction */\n  programId: PublicKey;\n  /** Public keys of accounts passed to this instruction */\n  accounts: Array<PublicKey>;\n  /** Raw base-58 instruction data */\n  data: string;\n};\n\n/**\n * A parsed transaction message account\n */\nexport type ParsedMessageAccount = {\n  /** Public key of the account */\n  pubkey: PublicKey;\n  /** Indicates if the account signed the transaction */\n  signer: boolean;\n  /** Indicates if the account is writable for this transaction */\n  writable: boolean;\n};\n\n/**\n * A parsed transaction instruction\n */\nexport type ParsedInstruction = {\n  /** Name of the program for this instruction */\n  program: string;\n  /** ID of the program for this instruction */\n  programId: PublicKey;\n  /** Parsed instruction info */\n  parsed: any;\n};\n\n/**\n * A parsed address table lookup\n */\nexport type ParsedAddressTableLookup = {\n  /** Address lookup table account key */\n  accountKey: PublicKey;\n  /** Parsed instruction info */\n  writableIndexes: number[];\n  /** Parsed instruction info */\n  readonlyIndexes: number[];\n};\n\n/**\n * A parsed transaction message\n */\nexport type ParsedMessage = {\n  /** Accounts used in the instructions */\n  accountKeys: ParsedMessageAccount[];\n  /** The atomically executed instructions for the transaction */\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n  /** Recent blockhash */\n  recentBlockhash: string;\n  /** Address table lookups used to load additional accounts */\n  addressTableLookups?: ParsedAddressTableLookup[] | null;\n};\n\n/**\n * A parsed transaction\n */\nexport type ParsedTransaction = {\n  /** Signatures for the transaction */\n  signatures: Array<string>;\n  /** Message of the transaction */\n  message: ParsedMessage;\n};\n\n/**\n * A parsed and confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionWithMeta} instead.\n */\nexport type ParsedConfirmedTransaction = ParsedTransactionWithMeta;\n\n/**\n * A parsed transaction on the ledger with meta\n */\nexport type ParsedTransactionWithMeta = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: ParsedTransaction;\n  /** Metadata produced from the transaction */\n  meta: ParsedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The version of the transaction message */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type BlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: Message;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type VersionedBlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: VersionedMessage;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A confirmed block on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport type ConfirmedBlock = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions and status metas */\n  transactions: Array<{\n    transaction: Transaction;\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    pubkey: string;\n    lamports: number;\n    postBalance: number | null;\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A Block on the ledger with signatures only\n */\nexport type BlockSignatures = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of signatures */\n  signatures: Array<string>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * recent block production information\n */\nexport type BlockProduction = Readonly<{\n  /** a dictionary of validator identities, as base-58 encoded strings. Value is a two element array containing the number of leader slots and the number of blocks produced */\n  byIdentity: Readonly<Record<string, ReadonlyArray<number>>>;\n  /** Block production slot range */\n  range: Readonly<{\n    /** first slot of the block production information (inclusive) */\n    firstSlot: number;\n    /** last slot of block production information (inclusive) */\n    lastSlot: number;\n  }>;\n}>;\n\nexport type GetBlockProductionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Slot range to return block production for. If parameter not provided, defaults to current epoch. */\n  range?: {\n    /** first slot to return block production information for (inclusive) */\n    firstSlot: number;\n    /** last slot to return block production information for (inclusive). If parameter not provided, defaults to the highest slot */\n    lastSlot?: number;\n  };\n  /** Only return results for this validator identity (base-58 encoded) */\n  identity?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getBlockProduction\" message\n */\nconst BlockProductionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    byIdentity: record(string(), array(number())),\n    range: pick({\n      firstSlot: number(),\n      lastSlot: number(),\n    }),\n  }),\n);\n\n/**\n * A performance sample\n */\nexport type PerfSample = {\n  /** Slot number of sample */\n  slot: number;\n  /** Number of transactions in a sample window */\n  numTransactions: number;\n  /** Number of slots in a sample window */\n  numSlots: number;\n  /** Sample window in seconds */\n  samplePeriodSecs: number;\n};\n\nfunction createRpcClient(\n  url: string,\n  httpHeaders?: HttpHeaders,\n  customFetch?: FetchFn,\n  fetchMiddleware?: FetchMiddleware,\n  disableRetryOnRateLimit?: boolean,\n): RpcClient {\n  const fetch = customFetch ? customFetch : fetchImpl;\n  let agentManager: AgentManager | undefined;\n  if (!process.env.BROWSER) {\n    agentManager = new AgentManager(url.startsWith('https:') /* useHttps */);\n  }\n\n  let fetchWithMiddleware: FetchFn | undefined;\n\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (info, init) => {\n      const modifiedFetchArgs = await new Promise<Parameters<FetchFn>>(\n        (resolve, reject) => {\n          try {\n            fetchMiddleware(info, init, (modifiedInfo, modifiedInit) =>\n              resolve([modifiedInfo, modifiedInit]),\n            );\n          } catch (error) {\n            reject(error);\n          }\n        },\n      );\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const agent = agentManager ? agentManager.requestStart() : undefined;\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign(\n        {\n          'Content-Type': 'application/json',\n        },\n        httpHeaders || {},\n        COMMON_HTTP_HEADERS,\n      ),\n    };\n\n    try {\n      let too_many_requests_retries = 5;\n      let res: Response;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.log(\n          `Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`,\n        );\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    } finally {\n      agentManager && agentManager.requestEnd();\n    }\n  }, {});\n\n  return clientBrowser;\n}\n\nfunction createRpcRequest(client: RpcClient): RpcRequest {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\nfunction createRpcBatchRequest(client: RpcClient): RpcBatchRequest {\n  return (requests: RpcParams[]) => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n\n      const batch = requests.map((params: RpcParams) => {\n        return client.request(params.methodName, params.args);\n      });\n\n      client.request(batch, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\nexport type Supply = {\n  /** Total supply in lamports */\n  total: number;\n  /** Circulating supply in lamports */\n  circulating: number;\n  /** Non-circulating supply in lamports */\n  nonCirculating: number;\n  /** List of non-circulating account addresses */\n  nonCirculatingAccounts: Array<PublicKey>;\n};\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(\n  pick({\n    total: number(),\n    circulating: number(),\n    nonCirculating: number(),\n    nonCirculatingAccounts: array(PublicKeyFromString),\n  }),\n);\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\nexport type TokenAmount = {\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = pick({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string()),\n});\n\n/**\n * Token address and balance.\n */\nexport type TokenAccountBalancePair = {\n  /** Address of the token account */\n  address: PublicKey;\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      address: PublicKeyFromString,\n      amount: string(),\n      uiAmount: nullable(number()),\n      decimals: number(),\n      uiAmountString: optional(string()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: BufferFromRawAccountData,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\nconst ParsedAccountDataResult = pick({\n  program: string(),\n  parsed: unknown(),\n  space: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: ParsedAccountDataResult,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Pair of an account address and its balance\n */\nexport type AccountBalancePair = {\n  address: PublicKey;\n  lamports: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      lamports: number(),\n      address: PublicKeyFromString,\n    }),\n  ),\n);\n\n/**\n * @internal\n */\nconst AccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number(),\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\nconst ParsedOrRawAccountData = coerce(\n  union([instance(Buffer), ParsedAccountDataResult]),\n  union([RawAccountDataResult, ParsedAccountDataResult]),\n  value => {\n    if (Array.isArray(value)) {\n      return create(value, BufferFromRawAccountData);\n    } else {\n      return value;\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number(),\n});\n\nconst KeyedParsedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult,\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = pick({\n  state: union([\n    literal('active'),\n    literal('inactive'),\n    literal('activating'),\n    literal('deactivating'),\n  ]),\n  active: number(),\n  inactive: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = pick({\n  parent: number(),\n  slot: number(),\n  root: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = pick({\n  subscription: number(),\n  result: SlotInfoResult,\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\nexport type SlotUpdate =\n  | {\n      type: 'firstShredReceived';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'completed';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'createdBank';\n      slot: number;\n      timestamp: number;\n      parent: number;\n    }\n  | {\n      type: 'frozen';\n      slot: number;\n      timestamp: number;\n      stats: {\n        numTransactionEntries: number;\n        numSuccessfulTransactions: number;\n        numFailedTransactions: number;\n        maxTransactionsPerEntry: number;\n      };\n    }\n  | {\n      type: 'dead';\n      slot: number;\n      timestamp: number;\n      err: string;\n    }\n  | {\n      type: 'optimisticConfirmation';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'root';\n      slot: number;\n      timestamp: number;\n    };\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([\n  pick({\n    type: union([\n      literal('firstShredReceived'),\n      literal('completed'),\n      literal('optimisticConfirmation'),\n      literal('root'),\n    ]),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('createdBank'),\n    parent: number(),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('frozen'),\n    slot: number(),\n    timestamp: number(),\n    stats: pick({\n      numTransactionEntries: number(),\n      numSuccessfulTransactions: number(),\n      numFailedTransactions: number(),\n      maxTransactionsPerEntry: number(),\n    }),\n  }),\n  pick({\n    type: literal('dead'),\n    slot: number(),\n    timestamp: number(),\n    err: string(),\n  }),\n]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = pick({\n  subscription: number(),\n  result: SlotUpdateResult,\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(\n    union([SignatureStatusResult, SignatureReceivedResult]),\n  ),\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = pick({\n  subscription: number(),\n  result: number(),\n});\n\nconst ContactInfoResult = pick({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string()),\n});\n\nconst VoteAccountInfoResult = pick({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number()),\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(\n  pick({\n    current: array(VoteAccountInfoResult),\n    delinquent: array(VoteAccountInfoResult),\n  }),\n);\n\nconst ConfirmationStatus = union([\n  literal('processed'),\n  literal('confirmed'),\n  literal('finalized'),\n]);\n\nconst SignatureStatusResponse = pick({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus),\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(\n  array(nullable(SignatureStatusResponse)),\n);\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\n\nconst AddressTableLookupStruct = pick({\n  accountKey: PublicKeyFromString,\n  writableIndexes: array(number()),\n  readonlyIndexes: array(number()),\n});\n\nconst ConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(string()),\n    header: pick({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number(),\n    }),\n    instructions: array(\n      pick({\n        accounts: array(number()),\n        data: string(),\n        programIdIndex: number(),\n      }),\n    ),\n    recentBlockhash: string(),\n    addressTableLookups: optional(array(AddressTableLookupStruct)),\n  }),\n});\n\nconst ParsedInstructionResult = pick({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString,\n});\n\nconst RawInstructionResult = pick({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString,\n});\n\nconst InstructionResult = union([\n  RawInstructionResult,\n  ParsedInstructionResult,\n]);\n\nconst UnknownInstructionResult = union([\n  pick({\n    parsed: unknown(),\n    program: string(),\n    programId: string(),\n  }),\n  pick({\n    accounts: array(string()),\n    data: string(),\n    programId: string(),\n  }),\n]);\n\nconst ParsedOrRawInstruction = coerce(\n  InstructionResult,\n  UnknownInstructionResult,\n  value => {\n    if ('accounts' in value) {\n      return create(value, RawInstructionResult);\n    } else {\n      return create(value, ParsedInstructionResult);\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(\n      pick({\n        pubkey: PublicKeyFromString,\n        signer: boolean(),\n        writable: boolean(),\n      }),\n    ),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n    addressTableLookups: optional(nullable(array(AddressTableLookupStruct))),\n  }),\n});\n\nconst TokenBalanceResult = pick({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  uiTokenAmount: TokenAmountResult,\n});\n\nconst LoadedAddressesResult = pick({\n  writable: array(PublicKeyFromString),\n  readonly: array(PublicKeyFromString),\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(\n            pick({\n              accounts: array(number()),\n              data: string(),\n              programIdIndex: number(),\n            }),\n          ),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(ParsedOrRawInstruction),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n});\n\nconst TransactionVersionStruct = union([literal(0), literal('legacy')]);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(\n        array(\n          pick({\n            pubkey: string(),\n            lamports: number(),\n            postBalance: nullable(number()),\n            rewardType: nullable(string()),\n          }),\n        ),\n      ),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetBlockRpcResult} instead.\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(\n        array(\n          pick({\n            pubkey: string(),\n            lamports: number(),\n            postBalance: nullable(number()),\n            rewardType: nullable(string()),\n          }),\n        ),\n      ),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockSignaturesRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      signatures: array(string()),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTransaction\" message\n */\nconst GetTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      meta: ConfirmedTransactionMetaResult,\n      blockTime: optional(nullable(number())),\n      transaction: ConfirmedTransactionResult,\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getTransaction\" message\n */\nconst GetParsedTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      transaction: ParsedConfirmedTransactionResult,\n      meta: nullable(ParsedConfirmedTransactionMetaResult),\n      blockTime: optional(nullable(number())),\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetLatestBlockhashRpcResult} instead.\n */\nconst GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    feeCalculator: pick({\n      lamportsPerSignature: number(),\n    }),\n  }),\n);\n\n/**\n * Expected JSON RPC response for the \"getLatestBlockhash\" message\n */\nconst GetLatestBlockhashRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    lastValidBlockHeight: number(),\n  }),\n);\n\nconst PerfSampleResult = pick({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number(),\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(\n  array(PerfSampleResult),\n);\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(\n  nullable(\n    pick({\n      feeCalculator: pick({\n        lamportsPerSignature: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\nexport type SlotInfo = {\n  /** Currently processing slot */\n  slot: number;\n  /** Parent of the current slot */\n  parent: number;\n  /** The root block of the current slot's fork */\n  root: number;\n};\n\n/**\n * Parsed account data\n */\nexport type ParsedAccountData = {\n  /** Name of the program that owns this account */\n  program: string;\n  /** Parsed account data */\n  parsed: any;\n  /** Space used by account data */\n  space: number;\n};\n\n/**\n * Stake Activation data\n */\nexport type StakeActivationData = {\n  /** the stake account's activation state */\n  state: 'active' | 'inactive' | 'activating' | 'deactivating';\n  /** stake active during the epoch */\n  active: number;\n  /** stake inactive during the epoch */\n  inactive: number;\n};\n\n/**\n * Data slice argument for getProgramAccounts\n */\nexport type DataSlice = {\n  /** offset of data slice */\n  offset: number;\n  /** length of data slice */\n  length: number;\n};\n\n/**\n * Memory comparison filter for getProgramAccounts\n */\nexport type MemcmpFilter = {\n  memcmp: {\n    /** offset into program account data to start comparison */\n    offset: number;\n    /** data to match, as base-58 encoded string and limited to less than 129 bytes */\n    bytes: string;\n  };\n};\n\n/**\n * Data size comparison filter for getProgramAccounts\n */\nexport type DataSizeFilter = {\n  /** Size of data for program account data length comparison */\n  dataSize: number;\n};\n\n/**\n * A filter object for getProgramAccounts\n */\nexport type GetProgramAccountsFilter = MemcmpFilter | DataSizeFilter;\n\n/**\n * Configuration object for getProgramAccounts requests\n */\nexport type GetProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional encoding for account data (default base64)\n   * To use \"jsonParsed\" encoding, please refer to `getParsedProgramAccounts` in connection.ts\n   * */\n  encoding?: 'base64';\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for getParsedProgramAccounts\n */\nexport type GetParsedProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for getMultipleAccounts\n */\nexport type GetMultipleAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetStakeActivationConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Epoch for which to calculate activation details. If parameter not provided, defaults to current epoch */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTokenAccountsByOwnerConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTransactionCountConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Information describing an account\n */\nexport type AccountInfo<T> = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: PublicKey;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: T;\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\n/**\n * Account information identified by pubkey\n */\nexport type KeyedAccountInfo = {\n  accountId: PublicKey;\n  accountInfo: AccountInfo<Buffer>;\n};\n\n/**\n * Callback function for account change notifications\n */\nexport type AccountChangeCallback = (\n  accountInfo: AccountInfo<Buffer>,\n  context: Context,\n) => void;\n\n/**\n * Callback function for program account change notifications\n */\nexport type ProgramAccountChangeCallback = (\n  keyedAccountInfo: KeyedAccountInfo,\n  context: Context,\n) => void;\n\n/**\n * Callback function for slot change notifications\n */\nexport type SlotChangeCallback = (slotInfo: SlotInfo) => void;\n\n/**\n * Callback function for slot update notifications\n */\nexport type SlotUpdateCallback = (slotUpdate: SlotUpdate) => void;\n\n/**\n * Callback function for signature status notifications\n */\nexport type SignatureResultCallback = (\n  signatureResult: SignatureResult,\n  context: Context,\n) => void;\n\n/**\n * Signature status notification with transaction result\n */\nexport type SignatureStatusNotification = {\n  type: 'status';\n  result: SignatureResult;\n};\n\n/**\n * Signature received notification\n */\nexport type SignatureReceivedNotification = {\n  type: 'received';\n};\n\n/**\n * Callback function for signature notifications\n */\nexport type SignatureSubscriptionCallback = (\n  notification: SignatureStatusNotification | SignatureReceivedNotification,\n  context: Context,\n) => void;\n\n/**\n * Signature subscription options\n */\nexport type SignatureSubscriptionOptions = {\n  commitment?: Commitment;\n  enableReceivedNotification?: boolean;\n};\n\n/**\n * Callback function for root change notifications\n */\nexport type RootChangeCallback = (root: number) => void;\n\n/**\n * @internal\n */\nconst LogsResult = pick({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string(),\n});\n\n/**\n * Logs result.\n */\nexport type Logs = {\n  err: TransactionError | null;\n  logs: string[];\n  signature: string;\n};\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = pick({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number(),\n});\n\n/**\n * Filter for log subscriptions.\n */\nexport type LogsFilter = PublicKey | 'all' | 'allWithVotes';\n\n/**\n * Callback function for log notifications.\n */\nexport type LogsCallback = (logs: Logs, ctx: Context) => void;\n\n/**\n * Signature result\n */\nexport type SignatureResult = {\n  err: TransactionError | null;\n};\n\n/**\n * Transaction error\n */\nexport type TransactionError = {} | string;\n\n/**\n * Transaction confirmation status\n * <pre>\n *   'processed': Transaction landed in a block which has reached 1 confirmation by the connected node\n *   'confirmed': Transaction landed in a block which has reached 1 confirmation by the cluster\n *   'finalized': Transaction landed in a block which has been finalized by the cluster\n * </pre>\n */\nexport type TransactionConfirmationStatus =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized';\n\n/**\n * Signature status\n */\nexport type SignatureStatus = {\n  /** when the transaction was processed */\n  slot: number;\n  /** the number of blocks that have been confirmed and voted on in the fork containing `slot` */\n  confirmations: number | null;\n  /** transaction error, if any */\n  err: TransactionError | null;\n  /** cluster confirmation status, if data available. Possible responses: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * A confirmed signature with its status\n */\nexport type ConfirmedSignatureInfo = {\n  /** the transaction signature */\n  signature: string;\n  /** when the transaction was processed */\n  slot: number;\n  /** error, if any */\n  err: TransactionError | null;\n  /** memo associated with the transaction, if any */\n  memo: string | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * An object defining headers to be passed to the RPC server\n */\nexport type HttpHeaders = {\n  [header: string]: string;\n} & {\n  // Prohibited headers; for internal use only.\n  'solana-client'?: never;\n};\n\n/**\n * The type of the JavaScript `fetch()` API\n */\nexport type FetchFn = typeof fetchImpl;\n\n/**\n * A callback used to augment the outgoing HTTP request\n */\nexport type FetchMiddleware = (\n  info: Parameters<FetchFn>[0],\n  init: Parameters<FetchFn>[1],\n  fetch: (...a: Parameters<FetchFn>) => void,\n) => void;\n\n/**\n * Configuration for instantiating a Connection\n */\nexport type ConnectionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional endpoint URL to the fullnode JSON RPC PubSub WebSocket Endpoint */\n  wsEndpoint?: string;\n  /** Optional HTTP headers object */\n  httpHeaders?: HttpHeaders;\n  /** Optional custom fetch function */\n  fetch?: FetchFn;\n  /** Optional fetch middleware callback */\n  fetchMiddleware?: FetchMiddleware;\n  /** Optional Disable retrying calls when server responds with HTTP 429 (Too Many Requests) */\n  disableRetryOnRateLimit?: boolean;\n  /** time to allow for the server to initially process a transaction (in milliseconds) */\n  confirmTransactionInitialTimeout?: number;\n};\n\n/** @internal */\nconst COMMON_HTTP_HEADERS = {\n  'solana-client': `js/${process.env.npm_package_version ?? 'UNKNOWN'}`,\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nexport class Connection {\n  /** @internal */ _commitment?: Commitment;\n  /** @internal */ _confirmTransactionInitialTimeout?: number;\n  /** @internal */ _rpcEndpoint: string;\n  /** @internal */ _rpcWsEndpoint: string;\n  /** @internal */ _rpcClient: RpcClient;\n  /** @internal */ _rpcRequest: RpcRequest;\n  /** @internal */ _rpcBatchRequest: RpcBatchRequest;\n  /** @internal */ _rpcWebSocket: RpcWebSocketClient;\n  /** @internal */ _rpcWebSocketConnected: boolean = false;\n  /** @internal */ _rpcWebSocketHeartbeat: ReturnType<\n    typeof setInterval\n  > | null = null;\n  /** @internal */ _rpcWebSocketIdleTimeout: ReturnType<\n    typeof setTimeout\n  > | null = null;\n  /** @internal\n   * A number that we increment every time an active connection closes.\n   * Used to determine whether the same socket connection that was open\n   * when an async operation started is the same one that's active when\n   * its continuation fires.\n   *\n   */ private _rpcWebSocketGeneration: number = 0;\n\n  /** @internal */ _disableBlockhashCaching: boolean = false;\n  /** @internal */ _pollingBlockhash: boolean = false;\n  /** @internal */ _blockhashInfo: {\n    latestBlockhash: BlockhashWithExpiryBlockHeight | null;\n    lastFetch: number;\n    simulatedSignatures: Array<string>;\n    transactionSignatures: Array<string>;\n  } = {\n    latestBlockhash: null,\n    lastFetch: 0,\n    transactionSignatures: [],\n    simulatedSignatures: [],\n  };\n\n  /** @internal */ private _nextClientSubscriptionId: ClientSubscriptionId = 0;\n  /** @internal */ private _subscriptionDisposeFunctionsByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionDisposeFn\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionCallbacksByServerSubscriptionId: {\n    [serverSubscriptionId: ServerSubscriptionId]:\n      | Set<SubscriptionConfig['callback']>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionsByHash: {\n    [hash: SubscriptionConfigHash]: Subscription | undefined;\n  } = {};\n  /**\n   * Special case.\n   * After a signature is processed, RPCs automatically dispose of the\n   * subscription on the server side. We need to track which of these\n   * subscriptions have been disposed in such a way, so that we know\n   * whether the client is dealing with a not-yet-processed signature\n   * (in which case we must tear down the server subscription) or an\n   * already-processed signature (in which case the client can simply\n   * clear out the subscription locally without telling the server).\n   *\n   * NOTE: There is a proposal to eliminate this special case, here:\n   * https://github.com/solana-labs/solana/issues/18892\n   */\n  /** @internal */ private _subscriptionsAutoDisposedByRpc: Set<ServerSubscriptionId> =\n    new Set();\n\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(\n    endpoint: string,\n    commitmentOrConfig?: Commitment | ConnectionConfig,\n  ) {\n    let wsEndpoint;\n    let httpHeaders;\n    let fetch;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    if (commitmentOrConfig && typeof commitmentOrConfig === 'string') {\n      this._commitment = commitmentOrConfig;\n    } else if (commitmentOrConfig) {\n      this._commitment = commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout =\n        commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = commitmentOrConfig.wsEndpoint;\n      httpHeaders = commitmentOrConfig.httpHeaders;\n      fetch = commitmentOrConfig.fetch;\n      fetchMiddleware = commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = commitmentOrConfig.disableRetryOnRateLimit;\n    }\n\n    this._rpcEndpoint = assertEndpointUrl(endpoint);\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n\n    this._rpcClient = createRpcClient(\n      endpoint,\n      httpHeaders,\n      fetch,\n      fetchMiddleware,\n      disableRetryOnRateLimit,\n    );\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity,\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on(\n      'accountNotification',\n      this._wsOnAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'programNotification',\n      this._wsOnProgramAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotNotification',\n      this._wsOnSlotNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotsUpdatesNotification',\n      this._wsOnSlotUpdatesNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'signatureNotification',\n      this._wsOnSignatureNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'rootNotification',\n      this._wsOnRootNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'logsNotification',\n      this._wsOnLogsNotification.bind(this),\n    );\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment(): Commitment | undefined {\n    return this._commitment;\n  }\n\n  /**\n   * The RPC endpoint\n   */\n  get rpcEndpoint(): string {\n    return this._rpcEndpoint;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    /** @internal */\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get balance for ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<number> {\n    return await this.getBalanceAndContext(publicKey, commitmentOrConfig)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get balance of account ' + publicKey.toBase58() + ': ' + e,\n        );\n      });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot: number): Promise<number | null> {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get block time for slot ${slot}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get minimum ledger slot',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get first available block',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(\n    config?: GetSupplyConfig | Commitment,\n  ): Promise<RpcResponseAndContext<Supply>> {\n    let configArg: GetSupplyConfig = {};\n    if (typeof config === 'string') {\n      configArg = {commitment: config};\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: (config && config.commitment) || this.commitment,\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment,\n      };\n    }\n\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(\n    tokenMintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(\n    tokenAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token account balance',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>>}\n   */\n  async getTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitmentOrConfig?: Commitment | GetTokenAccountsByOwnerConfig,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>\n    >\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<ParsedAccountData>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(\n    config?: GetLargestAccountsConfig,\n  ): Promise<RpcResponseAndContext<Array<AccountBalancePair>>> {\n    const arg = {\n      ...config,\n      commitment: (config && config.commitment) || this.commitment,\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get largest accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(\n    mintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<Array<TokenAccountBalancePair>>> {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token largest accounts',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AccountInfo<Buffer> | null>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'base64',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(AccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<\n    RpcResponseAndContext<AccountInfo<Buffer | ParsedAccountData> | null>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<AccountInfo<Buffer> | null> {\n    try {\n      const res = await this.getAccountInfoAndContext(\n        publicKey,\n        commitmentOrConfig,\n      );\n      return res.value;\n    } catch (e) {\n      throw new Error(\n        'failed to get info about account ' + publicKey.toBase58() + ': ' + e,\n      );\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleAccountsInfoAndContext(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<RpcResponseAndContext<(AccountInfo<Buffer> | null)[]>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(AccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<(AccountInfo<Buffer> | null)[]> {\n    const res = await this.getMultipleAccountsInfoAndContext(\n      publicKeys,\n      commitmentOrConfig,\n    );\n    return res.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   */\n  async getStakeActivation(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetStakeActivationConfig,\n    epoch?: number,\n  ): Promise<StakeActivationData> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get Stake Activation ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const {encoding, ...configWithoutEncoding} = config || {};\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      encoding || 'base64',\n      configWithoutEncoding,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(unsafeRes, jsonRpcResult(array(KeyedAccountInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetParsedProgramAccountsConfig | Commitment,\n  ): Promise<\n    Array<{\n      pubkey: PublicKey;\n      account: AccountInfo<Buffer | ParsedAccountData>;\n    }>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResult(array(KeyedParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  confirmTransaction(\n    strategy: BlockheightBasedTransactionConfirmationStrategy,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  /** @deprecated Instead, call `confirmTransaction` using a `TransactionConfirmationConfig` */\n  // eslint-disable-next-line no-dupe-class-members\n  confirmTransaction(\n    strategy: TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async confirmTransaction(\n    strategy:\n      | BlockheightBasedTransactionConfirmationStrategy\n      | TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>> {\n    let rawSignature: string;\n\n    if (typeof strategy == 'string') {\n      rawSignature = strategy;\n    } else {\n      const config =\n        strategy as BlockheightBasedTransactionConfirmationStrategy;\n      rawSignature = config.signature;\n    }\n\n    let decodedSignature;\n\n    try {\n      decodedSignature = bs58.decode(rawSignature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + rawSignature);\n    }\n\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n\n    const subscriptionCommitment = commitment || this.commitment;\n    let timeoutId;\n    let subscriptionId;\n    let done = false;\n\n    const confirmationPromise = new Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>((resolve, reject) => {\n      try {\n        subscriptionId = this.onSignature(\n          rawSignature,\n          (result: SignatureResult, context: Context) => {\n            subscriptionId = undefined;\n            const response = {\n              context,\n              value: result,\n            };\n            done = true;\n            resolve({__type: TransactionStatus.PROCESSED, response});\n          },\n          subscriptionCommitment,\n        );\n      } catch (err) {\n        reject(err);\n      }\n    });\n\n    const expiryPromise = new Promise<\n      | {__type: TransactionStatus.BLOCKHEIGHT_EXCEEDED}\n      | {__type: TransactionStatus.TIMED_OUT; timeoutMs: number}\n    >(resolve => {\n      if (typeof strategy === 'string') {\n        let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n        switch (subscriptionCommitment) {\n          case 'processed':\n          case 'recent':\n          case 'single':\n          case 'confirmed':\n          case 'singleGossip': {\n            timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n            break;\n          }\n          // exhaust enums to ensure full coverage\n          case 'finalized':\n          case 'max':\n          case 'root':\n        }\n\n        timeoutId = setTimeout(\n          () => resolve({__type: TransactionStatus.TIMED_OUT, timeoutMs}),\n          timeoutMs,\n        );\n      } else {\n        let config =\n          strategy as BlockheightBasedTransactionConfirmationStrategy;\n        const checkBlockHeight = async () => {\n          try {\n            const blockHeight = await this.getBlockHeight(commitment);\n            return blockHeight;\n          } catch (_e) {\n            return -1;\n          }\n        };\n        (async () => {\n          let currentBlockHeight = await checkBlockHeight();\n          if (done) return;\n          while (currentBlockHeight <= config.lastValidBlockHeight) {\n            await sleep(1000);\n            if (done) return;\n            currentBlockHeight = await checkBlockHeight();\n            if (done) return;\n          }\n          resolve({__type: TransactionStatus.BLOCKHEIGHT_EXCEEDED});\n        })();\n      }\n    });\n\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([confirmationPromise, expiryPromise]);\n      switch (outcome.__type) {\n        case TransactionStatus.BLOCKHEIGHT_EXCEEDED:\n          throw new TransactionExpiredBlockheightExceededError(rawSignature);\n        case TransactionStatus.PROCESSED:\n          result = outcome.response;\n          break;\n        case TransactionStatus.TIMED_OUT:\n          throw new TransactionExpiredTimeoutError(\n            rawSignature,\n            outcome.timeoutMs / 1000,\n          );\n      }\n    } finally {\n      clearTimeout(timeoutId);\n      if (subscriptionId) {\n        this.removeSignatureListener(subscriptionId);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes(): Promise<Array<ContactInfo>> {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get cluster nodes');\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment?: Commitment): Promise<VoteAccountStatus> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get vote accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(\n    commitmentOrConfig?: Commitment | GetSlotConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(\n    commitmentOrConfig?: Commitment | GetSlotLeaderConfig,\n  ): Promise<string> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leader');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(\n    startSlot: number,\n    limit: number,\n  ): Promise<Array<PublicKey>> {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leaders');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(\n    signature: TransactionSignature,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<SignatureStatus | null>> {\n    const {context, value: values} = await this.getSignatureStatuses(\n      [signature],\n      config,\n    );\n    assert(values.length === 1);\n    const value = values[0];\n    return {context, value};\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(\n    signatures: Array<TransactionSignature>,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<Array<SignatureStatus | null>>> {\n    const params: any[] = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get signature status');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(\n    commitmentOrConfig?: Commitment | GetTransactionCountConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get transaction count',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment?: Commitment): Promise<number> {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true,\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(\n    commitment?: Commitment,\n  ): Promise<InflationGovernor> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(\n    addresses: PublicKey[],\n    epoch?: number,\n    commitmentOrConfig?: Commitment | GetInflationRewardConfig,\n  ): Promise<(InflationReward | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [addresses.map(pubkey => pubkey.toBase58())],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation reward');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(\n    commitmentOrConfig?: Commitment | GetEpochInfoConfig,\n  ): Promise<EpochInfo> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch info');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule(): Promise<EpochSchedule> {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch schedule');\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(\n      epochSchedule.slotsPerEpoch,\n      epochSchedule.leaderScheduleSlotOffset,\n      epochSchedule.warmup,\n      epochSchedule.firstNormalEpoch,\n      epochSchedule.firstNormalSlot,\n    );\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule(): Promise<LeaderSchedule> {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get leader schedule');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(\n    dataLength: number,\n    commitment?: Commitment,\n  ): Promise<number> {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getMinimumBalanceForRentExemption',\n      args,\n    );\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhashAndContext(\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<{blockhash: Blockhash; feeCalculator: FeeCalculator}>\n  > {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getRecentBlockhash', args);\n    const res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(\n    limit?: number,\n  ): Promise<Array<PerfSample>> {\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPerformanceSamples',\n      limit ? [limit] : [],\n    );\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get recent performance samples',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getFeeForMessage} instead.\n   */\n  async getFeeCalculatorForBlockhash(\n    blockhash: Blockhash,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<FeeCalculator | null>> {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getFeeCalculatorForBlockhash',\n      args,\n    );\n\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee calculator');\n    }\n    const {context, value} = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null,\n    };\n  }\n\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n  async getFeeForMessage(\n    message: Message,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<number>> {\n    const wireMessage = message.serialize().toString('base64');\n    const args = this._buildArgs([wireMessage], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot');\n    }\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n    return res.result as unknown as RpcResponseAndContext<number>;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhash(\n    commitment?: Commitment,\n  ): Promise<{blockhash: Blockhash; feeCalculator: FeeCalculator}> {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhash(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    try {\n      const res = await this.getLatestBlockhashAndContext(commitmentOrConfig);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhashAndContext(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<RpcResponseAndContext<BlockhashWithExpiryBlockHeight>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getLatestBlockhash', args);\n    const res = create(unsafeRes, GetLatestBlockhashRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get latest blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion(): Promise<Version> {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get version');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash(): Promise<string> {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get genesis hash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   *\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  async getBlock(\n    slot: number,\n    rawConfig?: GetBlockConfig,\n  ): Promise<BlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<VersionedBlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<VersionedBlockResponse | null> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockRpcResult);\n\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta, version}) => ({\n        meta,\n        transaction: {\n          ...transaction,\n          message: versionedMessageFromResponse(version, transaction.message),\n        },\n        version,\n      })),\n    };\n  }\n\n  /*\n   * Returns the current block height of the node\n   */\n  async getBlockHeight(\n    commitmentOrConfig?: Commitment | GetBlockHeightConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlockHeight', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get block height information',\n      );\n    }\n\n    return res.result;\n  }\n\n  /*\n   * Returns recent block production information from the current or previous epoch\n   */\n  async getBlockProduction(\n    configOrCommitment?: GetBlockProductionConfig | Commitment,\n  ): Promise<RpcResponseAndContext<BlockProduction>> {\n    let extra: Omit<GetBlockProductionConfig, 'commitment'> | undefined;\n    let commitment: Commitment | undefined;\n\n    if (typeof configOrCommitment === 'string') {\n      commitment = configOrCommitment;\n    } else if (configOrCommitment) {\n      const {commitment: c, ...rest} = configOrCommitment;\n      commitment = c;\n      extra = rest;\n    }\n\n    const args = this._buildArgs([], commitment, 'base64', extra);\n    const unsafeRes = await this._rpcRequest('getBlockProduction', args);\n    const res = create(unsafeRes, BlockProductionResponseStruct);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get block production information',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   *\n   * @deprecated Instead, call `getTransaction` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetTransactionConfig,\n  ): Promise<TransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: versionedMessageFromResponse(\n          result.version,\n          result.transaction.message,\n        ),\n      },\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized transaction\n   */\n  async getParsedTransaction(\n    signature: TransactionSignature,\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<ParsedTransactionWithMeta | null> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<(ParsedTransactionWithMeta | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        'jsonParsed',\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link TransactionResponse}.\n   *\n   * @deprecated Instead, call `getTransactions` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetTransactionConfig | Finality,\n  ): Promise<(TransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        undefined /* encoding */,\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      const result = res.result;\n      if (!result) return result;\n\n      return {\n        ...result,\n        transaction: {\n          ...result.transaction,\n          message: versionedMessageFromResponse(\n            result.version,\n            result.transaction.message,\n          ),\n        },\n      };\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since v1.13.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<ConfirmedBlock> {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n\n    const block = {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n\n    return {\n      ...block,\n      transactions: block.transactions.map(({transaction, meta}) => {\n        return {\n          meta,\n          transaction: Transaction.populate(\n            transaction.message,\n            transaction.signatures,\n          ),\n        };\n      }),\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(\n    startSlot: number,\n    endSlot?: number,\n    commitment?: Finality,\n  ): Promise<Array<number>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      endSlot !== undefined ? [startSlot, endSlot] : [startSlot],\n      commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get blocks');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a block, excluding rewards\n   */\n  async getBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getBlockSignatures} instead.\n   */\n  async getConfirmedBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getTransaction} instead.\n   */\n  async getConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    const message = new Message(result.transaction.message);\n    const signatures = result.transaction.signatures;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures),\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransaction} instead.\n   */\n  async getParsedConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed transaction',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransactions} instead.\n   */\n  async getParsedConfirmedTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment,\n        'jsonParsed',\n      );\n      return {\n        methodName: 'getConfirmedTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(\n          res.error,\n          'failed to get confirmed transactions',\n        );\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(\n    address: PublicKey,\n    startSlot: number,\n    endSlot: number,\n  ): Promise<Array<TransactionSignature>> {\n    let options: any = {};\n\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(\n          startSlot,\n          'finalized',\n        );\n        if (block.signatures.length > 0) {\n          options.until =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(\n      address,\n      options,\n    );\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getConfirmedSignaturesForAddress2(\n    address: PublicKey,\n    options?: ConfirmedSignaturesForAddress2Options,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest(\n      'getConfirmedSignaturesForAddress2',\n      args,\n    );\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(\n    address: PublicKey,\n    options?: SignaturesForAddressOptions,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  async getAddressLookupTable(\n    accountKey: PublicKey,\n    config?: GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AddressLookupTableAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      accountKey,\n      config,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = new AddressLookupTableAccount({\n        key: accountKey,\n        state: AddressLookupTableAccount.deserialize(accountInfo.data),\n      });\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(\n    nonceAccount: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<NonceAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      nonceAccount,\n      commitment,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(\n    nonceAccount: PublicKey,\n    commitment?: Commitment,\n  ): Promise<NonceAccount | null> {\n    return await this.getNonceAndContext(nonceAccount, commitment)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get nonce for account ' +\n            nonceAccount.toBase58() +\n            ': ' +\n            e,\n        );\n      });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(\n    to: PublicKey,\n    lamports: number,\n  ): Promise<TransactionSignature> {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [\n      to.toBase58(),\n      lamports,\n    ]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `airdrop to ${to.toBase58()} failed`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _blockhashWithExpiryBlockHeight(\n    disableCache: boolean,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.latestBlockhash !== null && !expired) {\n        return this._blockhashInfo.latestBlockhash;\n      }\n    }\n\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash(): Promise<BlockhashWithExpiryBlockHeight> {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      const cachedLatestBlockhash = this._blockhashInfo.latestBlockhash;\n      const cachedBlockhash = cachedLatestBlockhash\n        ? cachedLatestBlockhash.blockhash\n        : null;\n      for (let i = 0; i < 50; i++) {\n        const latestBlockhash = await this.getLatestBlockhash('finalized');\n\n        if (cachedBlockhash !== latestBlockhash.blockhash) {\n          this._blockhashInfo = {\n            latestBlockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: [],\n          };\n          return latestBlockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n\n      throw new Error(\n        `Unable to obtain a new blockhash after ${Date.now() - startTime}ms`,\n      );\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * get the stake minimum delegation\n   */\n  async getStakeMinimumDelegation(\n    config?: GetStakeMinimumDelegationConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    const {commitment, config: configArg} = extractCommitmentFromConfig(config);\n    const args = this._buildArgs([], commitment, 'base64', configArg);\n    const unsafeRes = await this._rpcRequest('getStakeMinimumDelegation', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get stake minimum delegation`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Simulate a transaction\n   */\n  async simulateTransaction(\n    transactionOrMessage: Transaction | Message,\n    signers?: Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      let originalTx: Transaction = transactionOrMessage;\n      transaction = new Transaction();\n      transaction.feePayer = originalTx.feePayer;\n      transaction.instructions = transactionOrMessage.instructions;\n      transaction.nonceInfo = originalTx.nonceInfo;\n      transaction.signatures = originalTx.signatures;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n      // HACK: this function relies on mutating the populated transaction\n      transaction._message = transaction._json = undefined;\n    }\n\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n\n        if (!signers) break;\n\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (\n          !this._blockhashInfo.simulatedSignatures.includes(signature) &&\n          !this._blockhashInfo.transactionSignatures.includes(signature)\n        ) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config: any = {\n      encoding: 'base64',\n      commitment: this.commitment,\n    };\n\n    if (includeAccounts) {\n      const addresses = (\n        Array.isArray(includeAccounts)\n          ? includeAccounts\n          : message.nonProgramIds()\n      ).map(key => key.toBase58());\n\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses,\n      };\n    }\n\n    if (signers) {\n      config.sigVerify = true;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError(\n        'failed to simulate transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   */\n  async sendTransaction(\n    transaction: Transaction,\n    signers: Array<Signer>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(\n    rawTransaction: Buffer | Uint8Array | Array<number>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(\n      encodedTransaction,\n      options,\n    );\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(\n    encodedTransaction: string,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const config: any = {encoding: 'base64'};\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment =\n      (options && options.preflightCommitment) || this.commitment;\n\n    if (options && options.maxRetries != null) {\n      config.maxRetries = options.maxRetries;\n    }\n    if (options && options.minContextSlot != null) {\n      config.minContextSlot = options.minContextSlot;\n    }\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n      }\n      throw new SendTransactionError(\n        'failed to send transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      this._rpcWebSocket.notify('ping').catch(() => {});\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err: Error) {\n    this._rpcWebSocketConnected = false;\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code: number) {\n    this._rpcWebSocketConnected = false;\n    this._rpcWebSocketGeneration++;\n    if (this._rpcWebSocketIdleTimeout) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n    }\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    Object.entries(\n      this._subscriptionsByHash as Record<SubscriptionConfigHash, Subscription>,\n    ).forEach(([hash, subscription]) => {\n      this._subscriptionsByHash[hash] = {\n        ...subscription,\n        state: 'pending',\n      };\n    });\n  }\n\n  /**\n   * @internal\n   */\n  async _updateSubscriptions() {\n    if (Object.keys(this._subscriptionsByHash).length === 0) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          try {\n            this._rpcWebSocket.close();\n          } catch (err) {\n            // swallow error if socket has already been closed.\n            if (err instanceof Error) {\n              console.log(\n                `Error when closing socket connection: ${err.message}`,\n              );\n            }\n          }\n        }, 500);\n      }\n      return;\n    }\n\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n\n    const activeWebSocketGeneration = this._rpcWebSocketGeneration;\n    const isCurrentConnectionStillActive = () => {\n      return activeWebSocketGeneration === this._rpcWebSocketGeneration;\n    };\n\n    await Promise.all(\n      // Don't be tempted to change this to `Object.entries`. We call\n      // `_updateSubscriptions` recursively when processing the state,\n      // so it's important that we look up the *current* version of\n      // each subscription, every time we process a hash.\n      Object.keys(this._subscriptionsByHash).map(async hash => {\n        const subscription = this._subscriptionsByHash[hash];\n        if (subscription === undefined) {\n          // This entry has since been deleted. Skip.\n          return;\n        }\n        switch (subscription.state) {\n          case 'pending':\n          case 'unsubscribed':\n            if (subscription.callbacks.size === 0) {\n              /**\n               * You can end up here when:\n               *\n               * - a subscription has recently unsubscribed\n               *   without having new callbacks added to it\n               *   while the unsubscribe was in flight, or\n               * - when a pending subscription has its\n               *   listeners removed before a request was\n               *   sent to the server.\n               *\n               * Being that nobody is interested in this\n               * subscription any longer, delete it.\n               */\n              delete this._subscriptionsByHash[hash];\n              if (subscription.state === 'unsubscribed') {\n                delete this._subscriptionCallbacksByServerSubscriptionId[\n                  subscription.serverSubscriptionId\n                ];\n              }\n              await this._updateSubscriptions();\n              return;\n            }\n            await (async () => {\n              const {args, method} = subscription;\n              try {\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  state: 'subscribing',\n                };\n                const serverSubscriptionId: ServerSubscriptionId =\n                  (await this._rpcWebSocket.call(method, args)) as number;\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  serverSubscriptionId,\n                  state: 'subscribed',\n                };\n                this._subscriptionCallbacksByServerSubscriptionId[\n                  serverSubscriptionId\n                ] = subscription.callbacks;\n                await this._updateSubscriptions();\n              } catch (e) {\n                if (e instanceof Error) {\n                  console.error(\n                    `${method} error for argument`,\n                    args,\n                    e.message,\n                  );\n                }\n                if (!isCurrentConnectionStillActive()) {\n                  return;\n                }\n                // TODO: Maybe add an 'errored' state or a retry limit?\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  state: 'pending',\n                };\n                await this._updateSubscriptions();\n              }\n            })();\n            break;\n          case 'subscribed':\n            if (subscription.callbacks.size === 0) {\n              // By the time we successfully set up a subscription\n              // with the server, the client stopped caring about it.\n              // Tear it down now.\n              await (async () => {\n                const {serverSubscriptionId, unsubscribeMethod} = subscription;\n                if (\n                  this._subscriptionsAutoDisposedByRpc.has(serverSubscriptionId)\n                ) {\n                  /**\n                   * Special case.\n                   * If we're dealing with a subscription that has been auto-\n                   * disposed by the RPC, then we can skip the RPC call to\n                   * tear down the subscription here.\n                   *\n                   * NOTE: There is a proposal to eliminate this special case, here:\n                   * https://github.com/solana-labs/solana/issues/18892\n                   */\n                  this._subscriptionsAutoDisposedByRpc.delete(\n                    serverSubscriptionId,\n                  );\n                } else {\n                  this._subscriptionsByHash[hash] = {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  };\n                  try {\n                    await this._rpcWebSocket.call(unsubscribeMethod, [\n                      serverSubscriptionId,\n                    ]);\n                  } catch (e) {\n                    if (e instanceof Error) {\n                      console.error(`${unsubscribeMethod} error:`, e.message);\n                    }\n                    if (!isCurrentConnectionStillActive()) {\n                      return;\n                    }\n                    // TODO: Maybe add an 'errored' state or a retry limit?\n                    this._subscriptionsByHash[hash] = {\n                      ...subscription,\n                      state: 'subscribed',\n                    };\n                    await this._updateSubscriptions();\n                    return;\n                  }\n                }\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  state: 'unsubscribed',\n                };\n                await this._updateSubscriptions();\n              })();\n            }\n            break;\n          case 'subscribing':\n          case 'unsubscribing':\n            break;\n        }\n      }),\n    );\n  }\n\n  /**\n   * @internal\n   */\n  private _handleServerNotification<\n    TCallback extends SubscriptionConfig['callback'],\n  >(\n    serverSubscriptionId: ServerSubscriptionId,\n    callbackArgs: Parameters<TCallback>,\n  ): void {\n    const callbacks =\n      this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId];\n    if (callbacks === undefined) {\n      return;\n    }\n    callbacks.forEach(cb => {\n      try {\n        cb(\n          // I failed to find a way to convince TypeScript that `cb` is of type\n          // `TCallback` which is certainly compatible with `Parameters<TCallback>`.\n          // See https://github.com/microsoft/TypeScript/issues/47615\n          // @ts-ignore\n          ...callbackArgs,\n        );\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification: object) {\n    const {result, subscription} = create(\n      notification,\n      AccountNotificationResult,\n    );\n    this._handleServerNotification<AccountChangeCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  private _makeSubscription(\n    subscriptionConfig: SubscriptionConfig,\n    /**\n     * When preparing `args` for a call to `_makeSubscription`, be sure\n     * to carefully apply a default `commitment` property, if necessary.\n     *\n     * - If the user supplied a `commitment` use that.\n     * - Otherwise, if the `Connection::commitment` is set, use that.\n     * - Otherwise, set it to the RPC server default: `finalized`.\n     *\n     * This is extremely important to ensure that these two fundamentally\n     * identical subscriptions produce the same identifying hash:\n     *\n     * - A subscription made without specifying a commitment.\n     * - A subscription made where the commitment specified is the same\n     *   as the default applied to the subscription above.\n     *\n     * Example; these two subscriptions must produce the same hash:\n     *\n     * - An `accountSubscribe` subscription for `'PUBKEY'`\n     * - An `accountSubscribe` subscription for `'PUBKEY'` with commitment\n     *   `'finalized'`.\n     *\n     * See the 'making a subscription with defaulted params omitted' test\n     * in `connection-subscriptions.ts` for more.\n     */\n    args: IWSRequestParams,\n  ): ClientSubscriptionId {\n    const clientSubscriptionId = this._nextClientSubscriptionId++;\n    const hash = fastStableStringify(\n      [subscriptionConfig.method, args],\n      true /* isArrayProp */,\n    );\n    const existingSubscription = this._subscriptionsByHash[hash];\n    if (existingSubscription === undefined) {\n      this._subscriptionsByHash[hash] = {\n        ...subscriptionConfig,\n        args,\n        callbacks: new Set([subscriptionConfig.callback]),\n        state: 'pending',\n      };\n    } else {\n      existingSubscription.callbacks.add(subscriptionConfig.callback);\n    }\n    this._subscriptionDisposeFunctionsByClientSubscriptionId[\n      clientSubscriptionId\n    ] = async () => {\n      delete this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n      const subscription = this._subscriptionsByHash[hash];\n      assert(\n        subscription !== undefined,\n        `Could not find a \\`Subscription\\` when tearing down client subscription #${clientSubscriptionId}`,\n      );\n      subscription.callbacks.delete(subscriptionConfig.callback);\n      await this._updateSubscriptions();\n    };\n    this._updateSubscriptions();\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @return subscription id\n   */\n  onAccountChange(\n    publicKey: PublicKey,\n    callback: AccountChangeCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64',\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'accountSubscribe',\n        unsubscribeMethod: 'accountUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'account change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      ProgramAccountNotificationResult,\n    );\n    this._handleServerNotification<ProgramAccountChangeCallback>(subscription, [\n      {\n        accountId: result.value.pubkey,\n        accountInfo: result.value.account,\n      },\n      result.context,\n    ]);\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @param filters The program account filters to pass into the RPC method\n   * @return subscription id\n   */\n  onProgramAccountChange(\n    programId: PublicKey,\n    callback: ProgramAccountChangeCallback,\n    commitment?: Commitment,\n    filters?: GetProgramAccountsFilter[],\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64' /* encoding */,\n      filters ? {filters: filters} : undefined /* extra */,\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'programSubscribe',\n        unsubscribeMethod: 'programUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'program account change',\n    );\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(\n    filter: LogsFilter,\n    callback: LogsCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [typeof filter === 'object' ? {mentions: [filter.toString()]} : filter],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'logsSubscribe',\n        unsubscribeMethod: 'logsUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param id client subscription id to deregister.\n   */\n  async removeOnLogsListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'logs');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification: Object) {\n    const {result, subscription} = create(notification, LogsNotificationResult);\n    this._handleServerNotification<LogsCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification: Object) {\n    const {result, subscription} = create(notification, SlotNotificationResult);\n    this._handleServerNotification<SlotChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback: SlotChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotSubscribe',\n        unsubscribeMethod: 'slotUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SlotUpdateNotificationResult,\n    );\n    this._handleServerNotification<SlotUpdateCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback: SlotUpdateCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotsUpdatesSubscribe',\n        unsubscribeMethod: 'slotsUpdatesUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotUpdateListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot update',\n    );\n  }\n\n  /**\n   * @internal\n   */\n\n  private async _unsubscribeClientSubscription(\n    clientSubscriptionId: ClientSubscriptionId,\n    subscriptionName: string,\n  ) {\n    const dispose =\n      this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n    if (dispose) {\n      await dispose();\n    } else {\n      console.warn(\n        'Ignored unsubscribe request because an active subscription with id ' +\n          `\\`${clientSubscriptionId}\\` for '${subscriptionName}' events ` +\n          'could not be found.',\n      );\n    }\n  }\n\n  _buildArgs(\n    args: Array<any>,\n    override?: Commitment,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options: any = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(\n    args: Array<any>,\n    override?: Finality,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error(\n        'Using Connection with default commitment: `' +\n          this._commitment +\n          '`, but method requires at least `confirmed`',\n      );\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SignatureNotificationResult,\n    );\n    if (result.value !== 'receivedSignature') {\n      /**\n       * Special case.\n       * After a signature is processed, RPCs automatically dispose of the\n       * subscription on the server side. We need to track which of these\n       * subscriptions have been disposed in such a way, so that we know\n       * whether the client is dealing with a not-yet-processed signature\n       * (in which case we must tear down the server subscription) or an\n       * already-processed signature (in which case the client can simply\n       * clear out the subscription locally without telling the server).\n       *\n       * NOTE: There is a proposal to eliminate this special case, here:\n       * https://github.com/solana-labs/solana/issues/18892\n       */\n      this._subscriptionsAutoDisposedByRpc.add(subscription);\n    }\n    this._handleServerNotification<SignatureSubscriptionCallback>(\n      subscription,\n      result.value === 'receivedSignature'\n        ? [{type: 'received'}, result.context]\n        : [{type: 'status', result: result.value}, result.context],\n    );\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(\n    signature: TransactionSignature,\n    callback: SignatureResultCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [signature],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          if (notification.type === 'status') {\n            callback(notification.result, context);\n            // Signatures subscriptions are auto-removed by the RPC service\n            // so no need to explicitly send an unsubscribe message.\n            try {\n              this.removeSignatureListener(clientSubscriptionId);\n              // eslint-disable-next-line no-empty\n            } catch (_err) {\n              // Already removed.\n            }\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(\n    signature: TransactionSignature,\n    callback: SignatureSubscriptionCallback,\n    options?: SignatureSubscriptionOptions,\n  ): ClientSubscriptionId {\n    const {commitment, ...extra} = {\n      ...options,\n      commitment:\n        (options && options.commitment) || this._commitment || 'finalized', // Apply connection/server default.\n    };\n    const args = this._buildArgs(\n      [signature],\n      commitment,\n      undefined /* encoding */,\n      extra,\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          callback(notification, context);\n          // Signatures subscriptions are auto-removed by the RPC service\n          // so no need to explicitly send an unsubscribe message.\n          try {\n            this.removeSignatureListener(clientSubscriptionId);\n            // eslint-disable-next-line no-empty\n          } catch (_err) {\n            // Already removed.\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSignatureListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'signature result',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification: Object) {\n    const {result, subscription} = create(notification, RootNotificationResult);\n    this._handleServerNotification<RootChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback: RootChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'rootSubscribe',\n        unsubscribeMethod: 'rootUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeRootChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'root change',\n    );\n  }\n}\n","import {generateKeypair, getPublicKey, Ed25519Keypair} from './utils/ed25519';\nimport {PublicKey} from './publickey';\n\n/**\n * Keypair signer interface\n */\nexport interface Signer {\n  publicKey: PublicKey;\n  secretKey: Uint8Array;\n}\n\n/**\n * An account keypair used for signing transactions.\n */\nexport class Keypair {\n  private _keypair: Ed25519Keypair;\n\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param keypair ed25519 keypair\n   */\n  constructor(keypair?: Ed25519Keypair) {\n    this._keypair = keypair ?? generateKeypair();\n  }\n\n  /**\n   * Generate a new random keypair\n   */\n  static generate(): Keypair {\n    return new Keypair(generateKeypair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options: skip secret key validation\n   */\n  static fromSecretKey(\n    secretKey: Uint8Array,\n    options?: {skipValidation?: boolean},\n  ): Keypair {\n    if (secretKey.byteLength !== 64) {\n      throw new Error('bad secret key size');\n    }\n    const publicKey = secretKey.slice(32, 64);\n    if (!options || !options.skipValidation) {\n      const privateScalar = secretKey.slice(0, 32);\n      const computedPublicKey = getPublicKey(privateScalar);\n      for (let ii = 0; ii < 32; ii++) {\n        if (publicKey[ii] !== computedPublicKey[ii]) {\n          throw new Error('provided secretKey is invalid');\n        }\n      }\n    }\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   */\n  static fromSeed(seed: Uint8Array): Keypair {\n    const publicKey = getPublicKey(seed);\n    const secretKey = new Uint8Array(64);\n    secretKey.set(seed);\n    secretKey.set(publicKey, 32);\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * The public key for this keypair\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   */\n  get secretKey(): Uint8Array {\n    return this._keypair.secretKey;\n  }\n}\n","import {toBufferLE} from 'bigint-buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport * as bigintLayout from '../../utils/bigint';\nimport {SystemProgram} from '../system';\nimport {TransactionInstruction} from '../../transaction';\nimport {decodeData, encodeData, IInstructionInputData} from '../../instruction';\n\nexport * from './state';\n\nexport type CreateLookupTableParams = {\n  /** Account used to derive and control the new address lookup table. */\n  authority: PublicKey;\n  /** Account that will fund the new address lookup table. */\n  payer: PublicKey;\n  /** A recent slot must be used in the derivation path for each initialized table. */\n  recentSlot: bigint | number;\n};\n\nexport type FreezeLookupTableParams = {\n  /** Address lookup table account to freeze. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type ExtendLookupTableParams = {\n  /** Address lookup table account to extend. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Account that will fund the table reallocation.\n   * Not required if the reallocation has already been funded. */\n  payer?: PublicKey;\n  /** List of Public Keys to be added to the lookup table. */\n  addresses: Array<PublicKey>;\n};\n\nexport type DeactivateLookupTableParams = {\n  /** Address lookup table account to deactivate. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type CloseLookupTableParams = {\n  /** Address lookup table account to close. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Recipient of closed account lamports. */\n  recipient: PublicKey;\n};\n\n/**\n * An enumeration of valid LookupTableInstructionType's\n */\nexport type LookupTableInstructionType =\n  | 'CreateLookupTable'\n  | 'ExtendLookupTable'\n  | 'CloseLookupTable'\n  | 'FreezeLookupTable'\n  | 'DeactivateLookupTable';\n\ntype LookupTableInstructionInputData = {\n  CreateLookupTable: IInstructionInputData &\n    Readonly<{\n      recentSlot: bigint;\n      bumpSeed: number;\n    }>;\n  FreezeLookupTable: IInstructionInputData;\n  ExtendLookupTable: IInstructionInputData &\n    Readonly<{\n      numberOfAddresses: bigint;\n      addresses: Array<Uint8Array>;\n    }>;\n  DeactivateLookupTable: IInstructionInputData;\n  CloseLookupTable: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid address lookup table InstructionType's\n * @internal\n */\nexport const LOOKUP_TABLE_INSTRUCTION_LAYOUTS = Object.freeze({\n  CreateLookupTable: {\n    index: 0,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CreateLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64('recentSlot'),\n      BufferLayout.u8('bumpSeed'),\n    ]),\n  },\n  FreezeLookupTable: {\n    index: 1,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['FreezeLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  ExtendLookupTable: {\n    index: 2,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['ExtendLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64(),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'addresses',\n      ),\n    ]),\n  },\n  DeactivateLookupTable: {\n    index: 3,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['DeactivateLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  CloseLookupTable: {\n    index: 4,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CloseLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\nexport class AddressLookupTableInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): LookupTableInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const index = instructionTypeLayout.decode(instruction.data);\n\n    let type: LookupTableInstructionType | undefined;\n    for (const [layoutType, layout] of Object.entries(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS,\n    )) {\n      if ((layout as any).index == index) {\n        type = layoutType as LookupTableInstructionType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error(\n        'Invalid Instruction. Should be a LookupTable Instruction',\n      );\n    }\n    return type;\n  }\n\n  static decodeCreateLookupTable(\n    instruction: TransactionInstruction,\n  ): CreateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 4);\n\n    const {recentSlot} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable,\n      instruction.data,\n    );\n\n    return {\n      authority: instruction.keys[1].pubkey,\n      payer: instruction.keys[2].pubkey,\n      recentSlot: Number(recentSlot),\n    };\n  }\n\n  static decodeExtendLookupTable(\n    instruction: TransactionInstruction,\n  ): ExtendLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    if (instruction.keys.length < 2) {\n      throw new Error(\n        `invalid instruction; found ${instruction.keys.length} keys, expected at least 2`,\n      );\n    }\n\n    const {addresses} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable,\n      instruction.data,\n    );\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      payer:\n        instruction.keys.length > 2 ? instruction.keys[2].pubkey : undefined,\n      addresses: addresses.map(buffer => new PublicKey(buffer)),\n    };\n  }\n\n  static decodeCloseLookupTable(\n    instruction: TransactionInstruction,\n  ): CloseLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 3);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      recipient: instruction.keys[2].pubkey,\n    };\n  }\n\n  static decodeFreezeLookupTable(\n    instruction: TransactionInstruction,\n  ): FreezeLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  static decodeDeactivateLookupTable(\n    instruction: TransactionInstruction,\n  ): DeactivateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(AddressLookupTableProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not AddressLookupTable Program',\n      );\n    }\n  }\n  /**\n   * @internal\n   */\n  static checkKeysLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\nexport class AddressLookupTableProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static programId: PublicKey = new PublicKey(\n    'AddressLookupTab1e1111111111111111111111111',\n  );\n\n  static createLookupTable(params: CreateLookupTableParams) {\n    const [lookupTableAddress, bumpSeed] = PublicKey.findProgramAddressSync(\n      [params.authority.toBuffer(), toBufferLE(BigInt(params.recentSlot), 8)],\n      this.programId,\n    );\n\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable;\n    const data = encodeData(type, {\n      recentSlot: BigInt(params.recentSlot),\n      bumpSeed: bumpSeed,\n    });\n\n    const keys = [\n      {\n        pubkey: lookupTableAddress,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.payer,\n        isSigner: true,\n        isWritable: true,\n      },\n      {\n        pubkey: SystemProgram.programId,\n        isSigner: false,\n        isWritable: false,\n      },\n    ];\n\n    return [\n      new TransactionInstruction({\n        programId: this.programId,\n        keys: keys,\n        data: data,\n      }),\n      lookupTableAddress,\n    ] as [TransactionInstruction, PublicKey];\n  }\n\n  static freezeLookupTable(params: FreezeLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.FreezeLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static extendLookupTable(params: ExtendLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable;\n    const data = encodeData(type, {\n      addresses: params.addresses.map(addr => addr.toBytes()),\n    });\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    if (params.payer) {\n      keys.push(\n        {\n          pubkey: params.payer,\n          isSigner: true,\n          isWritable: true,\n        },\n        {\n          pubkey: SystemProgram.programId,\n          isSigner: false,\n          isWritable: false,\n        },\n      );\n    }\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static deactivateLookupTable(params: DeactivateLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.DeactivateLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static closeLookupTable(params: CloseLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CloseLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.recipient,\n        isSigner: false,\n        isWritable: true,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {u64} from '../utils/bigint';\n\n/**\n * Compute Budget Instruction class\n */\nexport class ComputeBudgetInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a compute budget instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): ComputeBudgetInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u8('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: ComputeBudgetInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS,\n    )) {\n      if (layout.index == typeIndex) {\n        type = ixType as ComputeBudgetInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error(\n        'Instruction type incorrect; not a ComputeBudgetInstruction',\n      );\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode request units compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestUnits(\n    instruction: TransactionInstruction,\n  ): RequestUnitsParams {\n    this.checkProgramId(instruction.programId);\n    const {units, additionalFee} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits,\n      instruction.data,\n    );\n    return {units, additionalFee};\n  }\n\n  /**\n   * Decode request heap frame compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestHeapFrame(\n    instruction: TransactionInstruction,\n  ): RequestHeapFrameParams {\n    this.checkProgramId(instruction.programId);\n    const {bytes} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame,\n      instruction.data,\n    );\n    return {bytes};\n  }\n\n  /**\n   * Decode set compute unit limit compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitLimit(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitLimitParams {\n    this.checkProgramId(instruction.programId);\n    const {units} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit,\n      instruction.data,\n    );\n    return {units};\n  }\n\n  /**\n   * Decode set compute unit price compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitPrice(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitPriceParams {\n    this.checkProgramId(instruction.programId);\n    const {microLamports} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice,\n      instruction.data,\n    );\n    return {microLamports};\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(ComputeBudgetProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not ComputeBudgetProgram',\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid ComputeBudgetInstructionType's\n */\nexport type ComputeBudgetInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof ComputeBudgetInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'RequestUnits'\n  | 'RequestHeapFrame'\n  | 'SetComputeUnitLimit'\n  | 'SetComputeUnitPrice';\n\ntype ComputeBudgetInstructionInputData = {\n  RequestUnits: IInstructionInputData & Readonly<RequestUnitsParams>;\n  RequestHeapFrame: IInstructionInputData & Readonly<RequestHeapFrameParams>;\n  SetComputeUnitLimit: IInstructionInputData &\n    Readonly<SetComputeUnitLimitParams>;\n  SetComputeUnitPrice: IInstructionInputData &\n    Readonly<SetComputeUnitPriceParams>;\n};\n\n/**\n * Request units instruction params\n */\nexport interface RequestUnitsParams {\n  /** Units to request for transaction-wide compute */\n  units: number;\n  /** Prioritization fee lamports */\n  additionalFee: number;\n}\n\n/**\n * Request heap frame instruction params\n */\nexport type RequestHeapFrameParams = {\n  /** Requested transaction-wide program heap size in bytes. Must be multiple of 1024. Applies to each program, including CPIs. */\n  bytes: number;\n};\n\n/**\n * Set compute unit limit instruction params\n */\nexport interface SetComputeUnitLimitParams {\n  /** Transaction-wide compute unit limit */\n  units: number;\n}\n\n/**\n * Set compute unit price instruction params\n */\nexport interface SetComputeUnitPriceParams {\n  /** Transaction compute unit price used for prioritization fees */\n  microLamports: number | bigint;\n}\n\n/**\n * An enumeration of valid ComputeBudget InstructionType's\n * @internal\n */\nexport const COMPUTE_BUDGET_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in ComputeBudgetInstructionType]: InstructionType<\n    ComputeBudgetInstructionInputData[Instruction]\n  >;\n}>({\n  RequestUnits: {\n    index: 0,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestUnits']\n    >([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u32('units'),\n      BufferLayout.u32('additionalFee'),\n    ]),\n  },\n  RequestHeapFrame: {\n    index: 1,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestHeapFrame']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('bytes')]),\n  },\n  SetComputeUnitLimit: {\n    index: 2,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitLimit']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('units')]),\n  },\n  SetComputeUnitPrice: {\n    index: 3,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitPrice']\n    >([BufferLayout.u8('instruction'), u64('microLamports')]),\n  },\n});\n\n/**\n * Factory class for transaction instructions to interact with the Compute Budget program\n */\nexport class ComputeBudgetProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Compute Budget program\n   */\n  static programId: PublicKey = new PublicKey(\n    'ComputeBudget111111111111111111111111111111',\n  );\n\n  static requestUnits(params: RequestUnitsParams): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static requestHeapFrame(\n    params: RequestHeapFrameParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitLimit(\n    params: SetComputeUnitLimitParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitPrice(\n    params: SetComputeUnitPriceParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice;\n    const data = encodeData(type, {\n      microLamports: BigInt(params.microLamports),\n    });\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {Keypair} from '../keypair';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {sign} from '../utils/ed25519';\n\nconst PRIVATE_KEY_BYTES = 64;\nconst PUBLIC_KEY_BYTES = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\nexport type CreateEd25519InstructionWithPublicKeyParams = {\n  publicKey: Uint8Array;\n  message: Uint8Array;\n  signature: Uint8Array;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an ed25519 instruction using a private key\n */\nexport type CreateEd25519InstructionWithPrivateKeyParams = {\n  privateKey: Uint8Array;\n  message: Uint8Array;\n  instructionIndex?: number;\n};\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    padding: number;\n    publicKeyInstructionIndex: number;\n    publicKeyOffset: number;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u8('padding'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u16('signatureInstructionIndex'),\n  BufferLayout.u16('publicKeyOffset'),\n  BufferLayout.u16('publicKeyInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u16('messageInstructionIndex'),\n]);\n\nexport class Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Ed25519SigVerify111111111111111111111111111',\n  );\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateEd25519InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, instructionIndex} = params;\n\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public Key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    assert(\n      signature.length === SIGNATURE_BYTES,\n      `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`,\n    );\n\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n\n    const index =\n      instructionIndex == null\n        ? 0xffff // An index of `u16::MAX` makes it default to the current instruction.\n        : instructionIndex;\n\n    ED25519_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        padding: 0,\n        signatureOffset,\n        signatureInstructionIndex: index,\n        publicKeyOffset,\n        publicKeyInstructionIndex: index,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: index,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateEd25519InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey, message, instructionIndex} = params;\n\n    assert(\n      privateKey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${privateKey.length} bytes`,\n    );\n\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = sign(message, keypair.secretKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import {hmac} from '@noble/hashes/hmac';\nimport {sha256} from '@noble/hashes/sha256';\nimport * as secp256k1 from '@noble/secp256k1';\n\n// Supply a synchronous hashing algorithm to make this\n// library interoperable with the synchronous APIs in web3.js.\nsecp256k1.utils.hmacSha256Sync = (key: Uint8Array, ...msgs: Uint8Array[]) => {\n  const h = hmac.create(sha256, key);\n  msgs.forEach(msg => h.update(msg));\n  return h.digest();\n};\n\nexport const ecdsaSign = (\n  msgHash: Parameters<typeof secp256k1.signSync>[0],\n  privKey: Parameters<typeof secp256k1.signSync>[1],\n) => secp256k1.signSync(msgHash, privKey, {der: false, recovered: true});\nexport const isValidPrivateKey = secp256k1.utils.isValidPrivateKey;\nexport const publicKeyCreate = secp256k1.getPublicKey;\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport sha3 from 'js-sha3';\n\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {publicKeyCreate, ecdsaSign} from '../utils/secp256k1';\nimport {toBuffer} from '../utils/to-buffer';\n\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\nexport type CreateSecp256k1InstructionWithPublicKeyParams = {\n  publicKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using an Ethereum address\n */\nexport type CreateSecp256k1InstructionWithEthAddressParams = {\n  ethAddress: Buffer | Uint8Array | Array<number> | string;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using a private key\n */\nexport type CreateSecp256k1InstructionWithPrivateKeyParams = {\n  privateKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  instructionIndex?: number;\n};\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    ethAddress: Uint8Array;\n    ethAddressInstructionIndex: number;\n    ethAddressOffset: number;\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    recoveryId: number;\n    signature: Uint8Array;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u8('signatureInstructionIndex'),\n  BufferLayout.u16('ethAddressOffset'),\n  BufferLayout.u8('ethAddressInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u8('messageInstructionIndex'),\n  BufferLayout.blob(20, 'ethAddress'),\n  BufferLayout.blob(64, 'signature'),\n  BufferLayout.u8('recoveryId'),\n]);\n\nexport class Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'KeccakSecp256k11111111111111111111111111111',\n  );\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(\n    publicKey: Buffer | Uint8Array | Array<number>,\n  ): Buffer {\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    try {\n      return Buffer.from(\n        sha3.keccak_256.update(toBuffer(publicKey)).digest(),\n      ).slice(-ETHEREUM_ADDRESS_BYTES);\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateSecp256k1InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, recoveryId, instructionIndex} =\n      params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(\n    params: CreateSecp256k1InstructionWithEthAddressParams,\n  ): TransactionInstruction {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0,\n    } = params;\n\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n\n    assert(\n      ethAddress.length === ETHEREUM_ADDRESS_BYTES,\n      `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`,\n    );\n\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(\n      SECP256K1_INSTRUCTION_LAYOUT.span + message.length,\n    );\n\n    SECP256K1_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        signatureOffset,\n        signatureInstructionIndex: instructionIndex,\n        ethAddressOffset,\n        ethAddressInstructionIndex: instructionIndex,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: instructionIndex,\n        signature: toBuffer(signature),\n        ethAddress: toBuffer(ethAddress),\n        recoveryId,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateSecp256k1InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey: pkey, message, instructionIndex} = params;\n\n    assert(\n      pkey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`,\n    );\n\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(\n        privateKey,\n        false /* isCompressed */,\n      ).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(\n        sha3.keccak_256.update(toBuffer(message)).digest(),\n      );\n      const [signature, recoveryId] = ecdsaSign(messageHash, privateKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_STAKE_HISTORY_PUBKEY,\n} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nexport const STAKE_CONFIG_ID = new PublicKey(\n  'StakeConfig11111111111111111111111111111111',\n);\n\n/**\n * Stake account authority info\n */\nexport class Authorized {\n  /** stake authority */\n  staker: PublicKey;\n  /** withdraw authority */\n  withdrawer: PublicKey;\n\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker: PublicKey, withdrawer: PublicKey) {\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n\ntype AuthorizedRaw = Readonly<{\n  staker: Uint8Array;\n  withdrawer: Uint8Array;\n}>;\n\n/**\n * Stake account lockup info\n */\nexport class Lockup {\n  /** Unix timestamp of lockup expiration */\n  unixTimestamp: number;\n  /** Epoch of lockup expiration */\n  epoch: number;\n  /** Lockup custodian authority */\n  custodian: PublicKey;\n\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp: number, epoch: number, custodian: PublicKey) {\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n  static default: Lockup = new Lockup(0, 0, PublicKey.default);\n}\n\ntype LockupRaw = Readonly<{\n  custodian: Uint8Array;\n  epoch: number;\n  unixTimestamp: number;\n}>;\n\n/**\n * Create stake account transaction params\n */\nexport type CreateStakeAccountParams = {\n  /** Address of the account which will fund creation */\n  fromPubkey: PublicKey;\n  /** Address of the new stake account */\n  stakePubkey: PublicKey;\n  /** Authorities of the new stake account */\n  authorized: Authorized;\n  /** Lockup of the new stake account */\n  lockup?: Lockup;\n  /** Funding amount */\n  lamports: number;\n};\n\n/**\n * Create stake account with seed transaction params\n */\nexport type CreateStakeAccountWithSeedParams = {\n  fromPubkey: PublicKey;\n  stakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  authorized: Authorized;\n  lockup?: Lockup;\n  lamports: number;\n};\n\n/**\n * Initialize stake instruction params\n */\nexport type InitializeStakeParams = {\n  stakePubkey: PublicKey;\n  authorized: Authorized;\n  lockup?: Lockup;\n};\n\n/**\n * Delegate stake instruction params\n */\nexport type DelegateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  votePubkey: PublicKey;\n};\n\n/**\n * Authorize stake instruction params\n */\nexport type AuthorizeStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Authorize stake instruction params using a derived key\n */\nexport type AuthorizeWithSeedStakeParams = {\n  stakePubkey: PublicKey;\n  authorityBase: PublicKey;\n  authoritySeed: string;\n  authorityOwner: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Split stake instruction params\n */\nexport type SplitStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  lamports: number;\n};\n\n/**\n * Split with seed transaction params\n */\nexport type SplitStakeWithSeedParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  lamports: number;\n};\n\n/**\n * Withdraw stake instruction params\n */\nexport type WithdrawStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  toPubkey: PublicKey;\n  lamports: number;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Deactivate stake instruction params\n */\nexport type DeactivateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Merge stake instruction params\n */\nexport type MergeStakeParams = {\n  stakePubkey: PublicKey;\n  sourceStakePubKey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Stake Instruction class\n */\nexport class StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): StakeInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: StakeInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as StakeInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized, lockup} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Initialize,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(\n        new PublicKey(authorized.staker),\n        new PublicKey(authorized.withdrawer),\n      ),\n      lockup: new Lockup(\n        lockup.unixTimestamp,\n        lockup.epoch,\n        new PublicKey(lockup.custodian),\n      ),\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(\n    instruction: TransactionInstruction,\n  ): DelegateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey,\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {newAuthorized, stakeAuthorizationType} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    const o: AuthorizeStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeWithSeedStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner,\n    } = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    const o: AuthorizeWithSeedStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction: TransactionInstruction): SplitStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Split,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction: TransactionInstruction): MergeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    const o: WithdrawStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(\n    instruction: TransactionInstruction,\n  ): DeactivateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\nexport type StakeInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof StakeInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'Authorize'\n  | 'AuthorizeWithSeed'\n  | 'Deactivate'\n  | 'Delegate'\n  | 'Initialize'\n  | 'Merge'\n  | 'Split'\n  | 'Withdraw';\n\ntype StakeInstructionInputData = {\n  Authorize: IInstructionInputData &\n    Readonly<{\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  AuthorizeWithSeed: IInstructionInputData &\n    Readonly<{\n      authorityOwner: Uint8Array;\n      authoritySeed: string;\n      instruction: number;\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  Deactivate: IInstructionInputData;\n  Delegate: IInstructionInputData;\n  Initialize: IInstructionInputData &\n    Readonly<{\n      authorized: AuthorizedRaw;\n      lockup: LockupRaw;\n    }>;\n  Merge: IInstructionInputData;\n  Split: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n  Withdraw: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n};\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nexport const STAKE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in StakeInstructionType]: InstructionType<\n    StakeInstructionInputData[Instruction]\n  >;\n}>({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct<StakeInstructionInputData['Initialize']>([\n      BufferLayout.u32('instruction'),\n      Layout.authorized(),\n      Layout.lockup(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<StakeInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('stakeAuthorizationType'),\n    ]),\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct<StakeInstructionInputData['Delegate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct<StakeInstructionInputData['Split']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct<StakeInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct<StakeInstructionInputData['Deactivate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct<StakeInstructionInputData['Merge']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct<StakeInstructionInputData['AuthorizeWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('newAuthorized'),\n        BufferLayout.u32('stakeAuthorizationType'),\n        Layout.rustString('authoritySeed'),\n        Layout.publicKey('authorityOwner'),\n      ],\n    ),\n  },\n});\n\n/**\n * Stake authorization type\n */\nexport type StakeAuthorizationType = {\n  /** The Stake Authorization index (from solana-stake-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nexport const StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nexport class StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Stake11111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Stake account\n   *\n   * This is generated from the solana-stake-program StakeState struct as\n   * `StakeState::size_of()`:\n   * https://docs.rs/solana-stake-program/latest/solana_stake_program/stake_state/enum.StakeState.html\n   */\n  static space: number = 200;\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params: InitializeStakeParams): TransactionInstruction {\n    const {stakePubkey, authorized, lockup: maybeLockup} = params;\n    const lockup: Lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer()),\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer()),\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(\n    params: CreateStakeAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params: CreateStakeAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params: DelegateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, votePubkey} = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: votePubkey, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params: AuthorizeStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: true},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params: AuthorizeWithSeedStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer()),\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: authorityBase, isSigner: true, isWritable: false},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  static splitInstruction(params: SplitStakeParams): TransactionInstruction {\n    const {stakePubkey, authorizedPubkey, splitStakePubkey, lamports} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {lamports});\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: splitStakePubkey, isSigner: false, isWritable: true},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(params: SplitStakeParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.authorizedPubkey,\n        newAccountPubkey: params.splitStakePubkey,\n        lamports: 0,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(this.splitInstruction(params));\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another account\n   * derived from a base public key and seed\n   */\n  static splitWithSeed(params: SplitStakeWithSeedParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      basePubkey,\n      seed,\n      lamports,\n    } = params;\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.allocate({\n        accountPubkey: splitStakePubkey,\n        basePubkey,\n        seed,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(\n      this.splitInstruction({\n        stakePubkey,\n        authorizedPubkey,\n        splitStakePubkey,\n        lamports,\n      }),\n    );\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params: MergeStakeParams): Transaction {\n    const {stakePubkey, sourceStakePubKey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: sourceStakePubKey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params: WithdrawStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, toPubkey, lamports, custodianPubkey} =\n      params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false,\n      },\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params: DeactivateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {SYSVAR_CLOCK_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Vote account info\n */\nexport class VoteInit {\n  nodePubkey: PublicKey;\n  authorizedVoter: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number; /** [0, 100] */\n\n  constructor(\n    nodePubkey: PublicKey,\n    authorizedVoter: PublicKey,\n    authorizedWithdrawer: PublicKey,\n    commission: number,\n  ) {\n    this.nodePubkey = nodePubkey;\n    this.authorizedVoter = authorizedVoter;\n    this.authorizedWithdrawer = authorizedWithdrawer;\n    this.commission = commission;\n  }\n}\n\n/**\n * Create vote account transaction params\n */\nexport type CreateVoteAccountParams = {\n  fromPubkey: PublicKey;\n  votePubkey: PublicKey;\n  voteInit: VoteInit;\n  lamports: number;\n};\n\n/**\n * InitializeAccount instruction params\n */\nexport type InitializeAccountParams = {\n  votePubkey: PublicKey;\n  nodePubkey: PublicKey;\n  voteInit: VoteInit;\n};\n\n/**\n * Authorize instruction params\n */\nexport type AuthorizeVoteParams = {\n  votePubkey: PublicKey;\n  /** Current vote or withdraw authority, depending on `voteAuthorizationType` */\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n};\n\n/**\n * Withdraw from vote account transaction params\n */\nexport type WithdrawFromVoteAccountParams = {\n  votePubkey: PublicKey;\n  authorizedWithdrawerPubkey: PublicKey;\n  lamports: number;\n  toPubkey: PublicKey;\n};\n\n/**\n * Vote Instruction class\n */\nexport class VoteInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a vote instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): VoteInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: VoteInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(VOTE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as VoteInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a VoteInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode an initialize vote instruction and retrieve the instruction params.\n   */\n  static decodeInitializeAccount(\n    instruction: TransactionInstruction,\n  ): InitializeAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 4);\n\n    const {voteInit} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.InitializeAccount,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      nodePubkey: instruction.keys[3].pubkey,\n      voteInit: new VoteInit(\n        new PublicKey(voteInit.nodePubkey),\n        new PublicKey(voteInit.authorizedVoter),\n        new PublicKey(voteInit.authorizedWithdrawer),\n        voteInit.commission,\n      ),\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {newAuthorized, voteAuthorizationType} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n    };\n  }\n\n  /**\n   * Decode a withdraw instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawFromVoteAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedWithdrawerPubkey: instruction.keys[2].pubkey,\n      lamports,\n      toPubkey: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(VoteProgram.programId)) {\n      throw new Error('invalid instruction; programId is not VoteProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid VoteInstructionType's\n */\nexport type VoteInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof VoteInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  'Authorize' | 'InitializeAccount' | 'Withdraw';\n\ntype VoteInstructionInputData = {\n  Authorize: IInstructionInputData & {\n    newAuthorized: Uint8Array;\n    voteAuthorizationType: number;\n  };\n  InitializeAccount: IInstructionInputData & {\n    voteInit: Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>;\n  };\n  Withdraw: IInstructionInputData & {\n    lamports: number;\n  };\n};\n\nconst VOTE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in VoteInstructionType]: InstructionType<\n    VoteInstructionInputData[Instruction]\n  >;\n}>({\n  InitializeAccount: {\n    index: 0,\n    layout: BufferLayout.struct<VoteInstructionInputData['InitializeAccount']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteInit(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<VoteInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('voteAuthorizationType'),\n    ]),\n  },\n  Withdraw: {\n    index: 3,\n    layout: BufferLayout.struct<VoteInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n});\n\n/**\n * VoteAuthorize type\n */\nexport type VoteAuthorizationType = {\n  /** The VoteAuthorize index (from solana-vote-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid VoteAuthorization layouts.\n */\nexport const VoteAuthorizationLayout = Object.freeze({\n  Voter: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Vote program\n */\nexport class VoteProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Vote program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Vote111111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Vote account\n   *\n   * This is generated from the solana-vote-program VoteState struct as\n   * `VoteState::size_of()`:\n   * https://docs.rs/solana-vote-program/1.9.5/solana_vote_program/vote_state/struct.VoteState.html#method.size_of\n   */\n  static space: number = 3731;\n\n  /**\n   * Generate an Initialize instruction.\n   */\n  static initializeAccount(\n    params: InitializeAccountParams,\n  ): TransactionInstruction {\n    const {votePubkey, nodePubkey, voteInit} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.InitializeAccount;\n    const data = encodeData(type, {\n      voteInit: {\n        nodePubkey: toBuffer(voteInit.nodePubkey.toBuffer()),\n        authorizedVoter: toBuffer(voteInit.authorizedVoter.toBuffer()),\n        authorizedWithdrawer: toBuffer(\n          voteInit.authorizedWithdrawer.toBuffer(),\n        ),\n        commission: voteInit.commission,\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: votePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: nodePubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction that creates a new Vote account.\n   */\n  static createAccount(params: CreateVoteAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.votePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    return transaction.add(\n      this.initializeAccount({\n        votePubkey: params.votePubkey,\n        nodePubkey: params.voteInit.nodePubkey,\n        voteInit: params.voteInit,\n      }),\n    );\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account.\n   */\n  static authorize(params: AuthorizeVoteParams): Transaction {\n    const {\n      votePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      voteAuthorizationType: voteAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw from a Vote account.\n   */\n  static withdraw(params: WithdrawFromVoteAccountParams): Transaction {\n    const {votePubkey, authorizedWithdrawerPubkey, lamports, toPubkey} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: authorizedWithdrawerPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw safely from a Vote account.\n   *\n   * This function was created as a safeguard for vote accounts running validators, `safeWithdraw`\n   * checks that the withdraw amount will not exceed the specified balance while leaving enough left\n   * to cover rent. If you wish to close the vote account by withdrawing the full amount, call the\n   * `withdraw` method directly.\n   */\n  static safeWithdraw(\n    params: WithdrawFromVoteAccountParams,\n    currentVoteAccountBalance: number,\n    rentExemptMinimum: number,\n  ): Transaction {\n    if (params.lamports > currentVoteAccountBalance - rentExemptMinimum) {\n      throw new Error(\n        'Withdraw will leave vote account with insuffcient funds.',\n      );\n    }\n    return VoteProgram.withdraw(params);\n  }\n}\n","import {Buffer} from 'buffer';\nimport {\n  assert as assertType,\n  optional,\n  string,\n  type as pick,\n} from 'superstruct';\n\nimport * as Layout from './layout';\nimport * as shortvec from './utils/shortvec-encoding';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from './publickey';\n\nexport const VALIDATOR_INFO_KEY = new PublicKey(\n  'Va1idator1nfo111111111111111111111111111111',\n);\n\n/**\n * @internal\n */\ntype ConfigKey = {\n  publicKey: PublicKey;\n  isSigner: boolean;\n};\n\n/**\n * Info used to identity validators.\n */\nexport type Info = {\n  /** validator name */\n  name: string;\n  /** optional, validator website */\n  website?: string;\n  /** optional, extra information the validator chose to share */\n  details?: string;\n  /** optional, used to identify validators on keybase.io */\n  keybaseUsername?: string;\n};\n\nconst InfoString = pick({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  keybaseUsername: optional(string()),\n});\n\n/**\n * ValidatorInfo class\n */\nexport class ValidatorInfo {\n  /**\n   * validator public key\n   */\n  key: PublicKey;\n  /**\n   * validator information\n   */\n  info: Info;\n\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key: PublicKey, info: Info) {\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): ValidatorInfo | null {\n    let byteArray = [...buffer];\n    const configKeyCount = shortvec.decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n\n    const configKeys: Array<ConfigKey> = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(byteArray.slice(0, PUBLIC_KEY_LENGTH));\n      byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n      const isSigner = byteArray.slice(0, 1)[0] === 1;\n      byteArray = byteArray.slice(1);\n      configKeys.push({publicKey, isSigner});\n    }\n\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo: any = Layout.rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo as string);\n        assertType(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n\n    return null;\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport type {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {toBuffer} from './utils/to-buffer';\n\nexport const VOTE_PROGRAM_ID = new PublicKey(\n  'Vote111111111111111111111111111111111111111',\n);\n\nexport type Lockout = {\n  slot: number;\n  confirmationCount: number;\n};\n\n/**\n * History of how many credits earned by the end of each epoch\n */\nexport type EpochCredits = Readonly<{\n  epoch: number;\n  credits: number;\n  prevCredits: number;\n}>;\n\nexport type AuthorizedVoter = Readonly<{\n  epoch: number;\n  authorizedVoter: PublicKey;\n}>;\n\ntype AuthorizedVoterRaw = Readonly<{\n  authorizedVoter: Uint8Array;\n  epoch: number;\n}>;\n\ntype PriorVoters = Readonly<{\n  buf: PriorVoterRaw[];\n  idx: number;\n  isEmpty: number;\n}>;\n\nexport type PriorVoter = Readonly<{\n  authorizedPubkey: PublicKey;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\ntype PriorVoterRaw = Readonly<{\n  authorizedPubkey: Uint8Array;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\nexport type BlockTimestamp = Readonly<{\n  slot: number;\n  timestamp: number;\n}>;\n\ntype VoteAccountData = Readonly<{\n  authorizedVoters: AuthorizedVoterRaw[];\n  authorizedWithdrawer: Uint8Array;\n  commission: number;\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n  nodePubkey: Uint8Array;\n  priorVoters: PriorVoters;\n  rootSlot: number;\n  rootSlotValid: number;\n  votes: Lockout[];\n}>;\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct<VoteAccountData>([\n  Layout.publicKey('nodePubkey'),\n  Layout.publicKey('authorizedWithdrawer'),\n  BufferLayout.u8('commission'),\n  BufferLayout.nu64(), // votes.length\n  BufferLayout.seq<Lockout>(\n    BufferLayout.struct([\n      BufferLayout.nu64('slot'),\n      BufferLayout.u32('confirmationCount'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'votes',\n  ),\n  BufferLayout.u8('rootSlotValid'),\n  BufferLayout.nu64('rootSlot'),\n  BufferLayout.nu64(), // authorizedVoters.length\n  BufferLayout.seq<AuthorizedVoterRaw>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      Layout.publicKey('authorizedVoter'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'authorizedVoters',\n  ),\n  BufferLayout.struct<PriorVoters>(\n    [\n      BufferLayout.seq(\n        BufferLayout.struct([\n          Layout.publicKey('authorizedPubkey'),\n          BufferLayout.nu64('epochOfLastAuthorizedSwitch'),\n          BufferLayout.nu64('targetEpoch'),\n        ]),\n        32,\n        'buf',\n      ),\n      BufferLayout.nu64('idx'),\n      BufferLayout.u8('isEmpty'),\n    ],\n    'priorVoters',\n  ),\n  BufferLayout.nu64(), // epochCredits.length\n  BufferLayout.seq<EpochCredits>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      BufferLayout.nu64('credits'),\n      BufferLayout.nu64('prevCredits'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'epochCredits',\n  ),\n  BufferLayout.struct<BlockTimestamp>(\n    [BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')],\n    'lastTimestamp',\n  ),\n]);\n\ntype VoteAccountArgs = {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n};\n\n/**\n * VoteAccount class\n */\nexport class VoteAccount {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n\n  /**\n   * @internal\n   */\n  constructor(args: VoteAccountArgs) {\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): VoteAccount {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n\n    let rootSlot: number | null = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp,\n    });\n  }\n}\n\nfunction parseAuthorizedVoter({\n  authorizedVoter,\n  epoch,\n}: AuthorizedVoterRaw): AuthorizedVoter {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter),\n  };\n}\n\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch,\n}: PriorVoterRaw): PriorVoter {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch,\n  };\n}\n\nfunction getPriorVoters({buf, idx, isEmpty}: PriorVoters): PriorVoter[] {\n  if (isEmpty) {\n    return [];\n  }\n\n  return [\n    ...buf.slice(idx + 1).map(parsePriorVoters),\n    ...buf.slice(0, idx).map(parsePriorVoters),\n  ];\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha384 = exports.sha512_256 = exports.sha512 = exports.SHA512 = void 0;\nconst _sha2_js_1 = require(\"./_sha2.js\");\nconst _u64_js_1 = require(\"./_u64.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = _u64_js_1.default.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n)));\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\nclass SHA512 extends _sha2_js_1.SHA2 {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = _u64_js_1.default.rotrSH(W15h, W15l, 1) ^ _u64_js_1.default.rotrSH(W15h, W15l, 8) ^ _u64_js_1.default.shrSH(W15h, W15l, 7);\n            const s0l = _u64_js_1.default.rotrSL(W15h, W15l, 1) ^ _u64_js_1.default.rotrSL(W15h, W15l, 8) ^ _u64_js_1.default.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = _u64_js_1.default.rotrSH(W2h, W2l, 19) ^ _u64_js_1.default.rotrBH(W2h, W2l, 61) ^ _u64_js_1.default.shrSH(W2h, W2l, 6);\n            const s1l = _u64_js_1.default.rotrSL(W2h, W2l, 19) ^ _u64_js_1.default.rotrBL(W2h, W2l, 61) ^ _u64_js_1.default.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = _u64_js_1.default.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = _u64_js_1.default.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = _u64_js_1.default.rotrSH(Eh, El, 14) ^ _u64_js_1.default.rotrSH(Eh, El, 18) ^ _u64_js_1.default.rotrBH(Eh, El, 41);\n            const sigma1l = _u64_js_1.default.rotrSL(Eh, El, 14) ^ _u64_js_1.default.rotrSL(Eh, El, 18) ^ _u64_js_1.default.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = _u64_js_1.default.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = _u64_js_1.default.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = _u64_js_1.default.rotrSH(Ah, Al, 28) ^ _u64_js_1.default.rotrBH(Ah, Al, 34) ^ _u64_js_1.default.rotrBH(Ah, Al, 39);\n            const sigma0l = _u64_js_1.default.rotrSL(Ah, Al, 28) ^ _u64_js_1.default.rotrBL(Ah, Al, 34) ^ _u64_js_1.default.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = _u64_js_1.default.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = _u64_js_1.default.add3L(T1l, sigma0l, MAJl);\n            Ah = _u64_js_1.default.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = _u64_js_1.default.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = _u64_js_1.default.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = _u64_js_1.default.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = _u64_js_1.default.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = _u64_js_1.default.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = _u64_js_1.default.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = _u64_js_1.default.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = _u64_js_1.default.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nexports.SHA512 = SHA512;\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexports.sha512 = (0, utils_js_1.wrapConstructor)(() => new SHA512());\nexports.sha512_256 = (0, utils_js_1.wrapConstructor)(() => new SHA512_256());\nexports.sha384 = (0, utils_js_1.wrapConstructor)(() => new SHA384());\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.crypto = void 0;\nexports.crypto = {\n    node: undefined,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.add = exports.toBig = exports.split = exports.fromBig = void 0;\nconst U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nexports.fromBig = fromBig;\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nexports.split = split;\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\nexports.toBig = toBig;\n// for Shift in [0, 32)\nconst shrSH = (h, l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h, l) => l;\nconst rotr32L = (h, l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\nexports.add = add;\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig: exports.toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexports.default = u64;\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha256 = void 0;\nconst _sha2_js_1 = require(\"./_sha2.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends _sha2_js_1.SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = (0, utils_js_1.rotr)(W15, 7) ^ (0, utils_js_1.rotr)(W15, 18) ^ (W15 >>> 3);\n            const s1 = (0, utils_js_1.rotr)(W2, 17) ^ (0, utils_js_1.rotr)(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = (0, utils_js_1.rotr)(E, 6) ^ (0, utils_js_1.rotr)(E, 11) ^ (0, utils_js_1.rotr)(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = (0, utils_js_1.rotr)(A, 2) ^ (0, utils_js_1.rotr)(A, 13) ^ (0, utils_js_1.rotr)(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexports.sha256 = (0, utils_js_1.wrapConstructor)(() => new SHA256());\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeUnchecked = exports.deserialize = exports.serialize = exports.BinaryReader = exports.BinaryWriter = exports.BorshError = exports.baseDecode = exports.baseEncode = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\n// TODO: Make sure this polyfill not included when not required\nconst encoding = __importStar(require(\"text-encoding-utf-8\"));\nconst ResolvedTextDecoder = typeof TextDecoder !== \"function\" ? encoding.TextDecoder : TextDecoder;\nconst textDecoder = new ResolvedTextDecoder(\"utf-8\", { fatal: true });\nfunction baseEncode(value) {\n    if (typeof value === \"string\") {\n        value = Buffer.from(value, \"utf8\");\n    }\n    return bs58_1.default.encode(Buffer.from(value));\n}\nexports.baseEncode = baseEncode;\nfunction baseDecode(value) {\n    return Buffer.from(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\nconst INITIAL_LENGTH = 1024;\nclass BorshError extends Error {\n    constructor(message) {\n        super(message);\n        this.fieldPath = [];\n        this.originalMessage = message;\n    }\n    addToFieldPath(fieldName) {\n        this.fieldPath.splice(0, 0, fieldName);\n        // NOTE: Modifying message directly as jest doesn't use .toString()\n        this.message = this.originalMessage + \": \" + this.fieldPath.join(\".\");\n    }\n}\nexports.BorshError = BorshError;\n/// Binary encoder.\nclass BinaryWriter {\n    constructor() {\n        this.buf = Buffer.alloc(INITIAL_LENGTH);\n        this.length = 0;\n    }\n    maybeResize() {\n        if (this.buf.length < 16 + this.length) {\n            this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n        }\n    }\n    writeU8(value) {\n        this.maybeResize();\n        this.buf.writeUInt8(value, this.length);\n        this.length += 1;\n    }\n    writeU16(value) {\n        this.maybeResize();\n        this.buf.writeUInt16LE(value, this.length);\n        this.length += 2;\n    }\n    writeU32(value) {\n        this.maybeResize();\n        this.buf.writeUInt32LE(value, this.length);\n        this.length += 4;\n    }\n    writeU64(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 8)));\n    }\n    writeU128(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 16)));\n    }\n    writeU256(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 32)));\n    }\n    writeU512(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 64)));\n    }\n    writeBuffer(buffer) {\n        // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n        this.buf = Buffer.concat([\n            Buffer.from(this.buf.subarray(0, this.length)),\n            buffer,\n            Buffer.alloc(INITIAL_LENGTH),\n        ]);\n        this.length += buffer.length;\n    }\n    writeString(str) {\n        this.maybeResize();\n        const b = Buffer.from(str, \"utf8\");\n        this.writeU32(b.length);\n        this.writeBuffer(b);\n    }\n    writeFixedArray(array) {\n        this.writeBuffer(Buffer.from(array));\n    }\n    writeArray(array, fn) {\n        this.maybeResize();\n        this.writeU32(array.length);\n        for (const elem of array) {\n            this.maybeResize();\n            fn(elem);\n        }\n    }\n    toArray() {\n        return this.buf.subarray(0, this.length);\n    }\n}\nexports.BinaryWriter = BinaryWriter;\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n    const originalMethod = propertyDescriptor.value;\n    propertyDescriptor.value = function (...args) {\n        try {\n            return originalMethod.apply(this, args);\n        }\n        catch (e) {\n            if (e instanceof RangeError) {\n                const code = e.code;\n                if ([\"ERR_BUFFER_OUT_OF_BOUNDS\", \"ERR_OUT_OF_RANGE\"].indexOf(code) >= 0) {\n                    throw new BorshError(\"Reached the end of buffer when deserializing\");\n                }\n            }\n            throw e;\n        }\n    };\n}\nclass BinaryReader {\n    constructor(buf) {\n        this.buf = buf;\n        this.offset = 0;\n    }\n    readU8() {\n        const value = this.buf.readUInt8(this.offset);\n        this.offset += 1;\n        return value;\n    }\n    readU16() {\n        const value = this.buf.readUInt16LE(this.offset);\n        this.offset += 2;\n        return value;\n    }\n    readU32() {\n        const value = this.buf.readUInt32LE(this.offset);\n        this.offset += 4;\n        return value;\n    }\n    readU64() {\n        const buf = this.readBuffer(8);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU128() {\n        const buf = this.readBuffer(16);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU256() {\n        const buf = this.readBuffer(32);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU512() {\n        const buf = this.readBuffer(64);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readBuffer(len) {\n        if (this.offset + len > this.buf.length) {\n            throw new BorshError(`Expected buffer length ${len} isn't within bounds`);\n        }\n        const result = this.buf.slice(this.offset, this.offset + len);\n        this.offset += len;\n        return result;\n    }\n    readString() {\n        const len = this.readU32();\n        const buf = this.readBuffer(len);\n        try {\n            // NOTE: Using TextDecoder to fail on invalid UTF-8\n            return textDecoder.decode(buf);\n        }\n        catch (e) {\n            throw new BorshError(`Error decoding UTF-8 string: ${e}`);\n        }\n    }\n    readFixedArray(len) {\n        return new Uint8Array(this.readBuffer(len));\n    }\n    readArray(fn) {\n        const len = this.readU32();\n        const result = Array();\n        for (let i = 0; i < len; ++i) {\n            result.push(fn());\n        }\n        return result;\n    }\n}\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU8\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU16\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU32\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU64\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU128\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU256\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU512\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readString\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readFixedArray\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readArray\", null);\nexports.BinaryReader = BinaryReader;\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n    try {\n        // TODO: Handle missing values properly (make sure they never result in just skipped write)\n        if (typeof fieldType === \"string\") {\n            writer[`write${capitalizeFirstLetter(fieldType)}`](value);\n        }\n        else if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                if (value.length !== fieldType[0]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);\n                }\n                writer.writeFixedArray(value);\n            }\n            else if (fieldType.length === 2 && typeof fieldType[1] === \"number\") {\n                if (value.length !== fieldType[1]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[1]}, but got ${value.length} bytes`);\n                }\n                for (let i = 0; i < fieldType[1]; i++) {\n                    serializeField(schema, null, value[i], fieldType[0], writer);\n                }\n            }\n            else {\n                writer.writeArray(value, (item) => {\n                    serializeField(schema, fieldName, item, fieldType[0], writer);\n                });\n            }\n        }\n        else if (fieldType.kind !== undefined) {\n            switch (fieldType.kind) {\n                case \"option\": {\n                    if (value === null || value === undefined) {\n                        writer.writeU8(0);\n                    }\n                    else {\n                        writer.writeU8(1);\n                        serializeField(schema, fieldName, value, fieldType.type, writer);\n                    }\n                    break;\n                }\n                case \"map\": {\n                    writer.writeU32(value.size);\n                    value.forEach((val, key) => {\n                        serializeField(schema, fieldName, key, fieldType.key, writer);\n                        serializeField(schema, fieldName, val, fieldType.value, writer);\n                    });\n                    break;\n                }\n                default:\n                    throw new BorshError(`FieldType ${fieldType} unrecognized`);\n            }\n        }\n        else {\n            serializeStruct(schema, value, writer);\n        }\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction serializeStruct(schema, obj, writer) {\n    if (typeof obj.borshSerialize === \"function\") {\n        obj.borshSerialize(writer);\n        return;\n    }\n    const structSchema = schema.get(obj.constructor);\n    if (!structSchema) {\n        throw new BorshError(`Class ${obj.constructor.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        structSchema.fields.map(([fieldName, fieldType]) => {\n            serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        });\n    }\n    else if (structSchema.kind === \"enum\") {\n        const name = obj[structSchema.field];\n        for (let idx = 0; idx < structSchema.values.length; ++idx) {\n            const [fieldName, fieldType] = structSchema.values[idx];\n            if (fieldName === name) {\n                writer.writeU8(idx);\n                serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n                break;\n            }\n        }\n    }\n    else {\n        throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);\n    }\n}\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nfunction serialize(schema, obj, Writer = BinaryWriter) {\n    const writer = new Writer();\n    serializeStruct(schema, obj, writer);\n    return writer.toArray();\n}\nexports.serialize = serialize;\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n    try {\n        if (typeof fieldType === \"string\") {\n            return reader[`read${capitalizeFirstLetter(fieldType)}`]();\n        }\n        if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                return reader.readFixedArray(fieldType[0]);\n            }\n            else if (typeof fieldType[1] === \"number\") {\n                const arr = [];\n                for (let i = 0; i < fieldType[1]; i++) {\n                    arr.push(deserializeField(schema, null, fieldType[0], reader));\n                }\n                return arr;\n            }\n            else {\n                return reader.readArray(() => deserializeField(schema, fieldName, fieldType[0], reader));\n            }\n        }\n        if (fieldType.kind === \"option\") {\n            const option = reader.readU8();\n            if (option) {\n                return deserializeField(schema, fieldName, fieldType.type, reader);\n            }\n            return undefined;\n        }\n        if (fieldType.kind === \"map\") {\n            let map = new Map();\n            const length = reader.readU32();\n            for (let i = 0; i < length; i++) {\n                const key = deserializeField(schema, fieldName, fieldType.key, reader);\n                const val = deserializeField(schema, fieldName, fieldType.value, reader);\n                map.set(key, val);\n            }\n            return map;\n        }\n        return deserializeStruct(schema, fieldType, reader);\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction deserializeStruct(schema, classType, reader) {\n    if (typeof classType.borshDeserialize === \"function\") {\n        return classType.borshDeserialize(reader);\n    }\n    const structSchema = schema.get(classType);\n    if (!structSchema) {\n        throw new BorshError(`Class ${classType.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        const result = {};\n        for (const [fieldName, fieldType] of schema.get(classType).fields) {\n            result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n        }\n        return new classType(result);\n    }\n    if (structSchema.kind === \"enum\") {\n        const idx = reader.readU8();\n        if (idx >= structSchema.values.length) {\n            throw new BorshError(`Enum index: ${idx} is out of range`);\n        }\n        const [fieldName, fieldType] = structSchema.values[idx];\n        const fieldValue = deserializeField(schema, fieldName, fieldType, reader);\n        return new classType({ [fieldName]: fieldValue });\n    }\n    throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);\n}\n/// Deserializes object from bytes using schema.\nfunction deserialize(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    const result = deserializeStruct(schema, classType, reader);\n    if (reader.offset < buffer.length) {\n        throw new BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);\n    }\n    return result;\n}\nexports.deserialize = deserialize;\n/// Deserializes object from bytes using schema, without checking the length read\nfunction deserializeUnchecked(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    return deserializeStruct(schema, classType, reader);\n}\nexports.deserializeUnchecked = deserializeUnchecked;\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n/** @interface */\nfunction Decoder() {}\nDecoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point, or |finished|.\n   */\n  handler: function(stream, bite) {}\n};\n\n/** @interface */\nfunction Encoder() {}\nEncoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of code points being encoded.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit, or |finished|.\n   */\n  handler: function(stream, code_point) {}\n};\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexport {TextEncoder, TextDecoder};\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet converter;\n/**\n * Convert a little-endian buffer into a BigInt.\n * @param buf The little-endian buffer to convert\n * @returns A BigInt with the little-endian representation of buf.\n */\nfunction toBigIntLE(buf) {\n    {\n        const reversed = Buffer.from(buf);\n        reversed.reverse();\n        const hex = reversed.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, false);\n}\nexports.toBigIntLE = toBigIntLE;\n/**\n * Convert a big-endian buffer into a BigInt\n * @param buf The big-endian buffer to convert.\n * @returns A BigInt with the big-endian representation of buf.\n */\nfunction toBigIntBE(buf) {\n    {\n        const hex = buf.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, true);\n}\nexports.toBigIntBE = toBigIntBE;\n/**\n * Convert a BigInt to a little-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A little-endian buffer representation of num.\n */\nfunction toBufferLE(num, width) {\n    {\n        const hex = num.toString(16);\n        const buffer = Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n        buffer.reverse();\n        return buffer;\n    }\n    // Allocation is done here, since it is slower using napi in C\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), false);\n}\nexports.toBufferLE = toBufferLE;\n/**\n * Convert a BigInt to a big-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A big-endian buffer representation of num.\n */\nfunction toBufferBE(num, width) {\n    {\n        const hex = num.toString(16);\n        return Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n    }\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), true);\n}\nexports.toBufferBE = toBufferBE;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Client = void 0;\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _websocket = _interopRequireDefault(require(\"./lib/client/websocket.browser\"));\n\nvar _client = _interopRequireDefault(require(\"./lib/client\"));\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Client = /*#__PURE__*/function (_CommonClient) {\n  (0, _inherits2[\"default\"])(Client, _CommonClient);\n\n  var _super = _createSuper(Client);\n\n  function Client() {\n    var address = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"ws://localhost:8080\";\n\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref$autoconnect = _ref.autoconnect,\n        autoconnect = _ref$autoconnect === void 0 ? true : _ref$autoconnect,\n        _ref$reconnect = _ref.reconnect,\n        reconnect = _ref$reconnect === void 0 ? true : _ref$reconnect,\n        _ref$reconnect_interv = _ref.reconnect_interval,\n        reconnect_interval = _ref$reconnect_interv === void 0 ? 1000 : _ref$reconnect_interv,\n        _ref$max_reconnects = _ref.max_reconnects,\n        max_reconnects = _ref$max_reconnects === void 0 ? 5 : _ref$max_reconnects;\n\n    var generate_request_id = arguments.length > 2 ? arguments[2] : undefined;\n    (0, _classCallCheck2[\"default\"])(this, Client);\n    return _super.call(this, _websocket[\"default\"], address, {\n      autoconnect: autoconnect,\n      reconnect: reconnect,\n      reconnect_interval: reconnect_interval,\n      max_reconnects: max_reconnects\n    }, generate_request_id);\n  }\n\n  return (0, _createClass2[\"default\"])(Client);\n}(_client[\"default\"]);\n\nexports.Client = Client;","/**\n * WebSocket implements a browser-side WebSocket specification.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = _default;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar WebSocketBrowserImpl = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(WebSocketBrowserImpl, _EventEmitter);\n\n  var _super = _createSuper(WebSocketBrowserImpl);\n\n  /** Instantiate a WebSocket class\n   * @constructor\n   * @param {String} address - url to a websocket server\n   * @param {(Object)} options - websocket options\n   * @param {(String|Array)} protocols - a list of protocols\n   * @return {WebSocketBrowserImpl} - returns a WebSocket instance\n   */\n  function WebSocketBrowserImpl(address, options, protocols) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, WebSocketBrowserImpl);\n    _this = _super.call(this);\n    _this.socket = new window.WebSocket(address, protocols);\n\n    _this.socket.onopen = function () {\n      return _this.emit(\"open\");\n    };\n\n    _this.socket.onmessage = function (event) {\n      return _this.emit(\"message\", event.data);\n    };\n\n    _this.socket.onerror = function (error) {\n      return _this.emit(\"error\", error);\n    };\n\n    _this.socket.onclose = function (event) {\n      _this.emit(\"close\", event.code, event.reason);\n    };\n\n    return _this;\n  }\n  /**\n   * Sends data through a websocket connection\n   * @method\n   * @param {(String|Object)} data - data to be sent via websocket\n   * @param {Object} optionsOrCallback - ws options\n   * @param {Function} callback - a callback called once the data is sent\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(WebSocketBrowserImpl, [{\n    key: \"send\",\n    value: function send(data, optionsOrCallback, callback) {\n      var cb = callback || optionsOrCallback;\n\n      try {\n        this.socket.send(data);\n        cb();\n      } catch (error) {\n        cb(error);\n      }\n    }\n    /**\n     * Closes an underlying socket\n     * @method\n     * @param {Number} code - status code explaining why the connection is being closed\n     * @param {String} reason - a description why the connection is closing\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, reason) {\n      this.socket.close(code, reason);\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(type, listener, options) {\n      this.socket.addEventListener(type, listener, options);\n    }\n  }]);\n  return WebSocketBrowserImpl;\n}(_eventemitter.EventEmitter);\n/**\n * factory method for common WebSocket instance\n * @method\n * @param {String} address - url to a websocket server\n * @param {(Object)} options - websocket options\n * @return {Undefined}\n */\n\n\nfunction _default(address, options) {\n  return new WebSocketBrowserImpl(address, options);\n}","/**\n * \"Client\" wraps \"ws\" or a browser-implemented \"WebSocket\" library\n * according to the environment providing JSON RPC 2.0 support on top.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}; // @ts-ignore\n\n\nvar CommonClient = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(CommonClient, _EventEmitter);\n\n  var _super = _createSuper(CommonClient);\n\n  /**\n   * Instantiate a Client class.\n   * @constructor\n   * @param {webSocketFactory} webSocketFactory - factory method for WebSocket\n   * @param {String} address - url to a websocket server\n   * @param {Object} options - ws options object with reconnect parameters\n   * @param {Function} generate_request_id - custom generation request Id\n   * @return {CommonClient}\n   */\n  function CommonClient(webSocketFactory) {\n    var _this;\n\n    var address = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"ws://localhost:8080\";\n\n    var _a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var generate_request_id = arguments.length > 3 ? arguments[3] : undefined;\n    (0, _classCallCheck2[\"default\"])(this, CommonClient);\n\n    var _a$autoconnect = _a.autoconnect,\n        autoconnect = _a$autoconnect === void 0 ? true : _a$autoconnect,\n        _a$reconnect = _a.reconnect,\n        reconnect = _a$reconnect === void 0 ? true : _a$reconnect,\n        _a$reconnect_interval = _a.reconnect_interval,\n        reconnect_interval = _a$reconnect_interval === void 0 ? 1000 : _a$reconnect_interval,\n        _a$max_reconnects = _a.max_reconnects,\n        max_reconnects = _a$max_reconnects === void 0 ? 5 : _a$max_reconnects,\n        rest_options = __rest(_a, [\"autoconnect\", \"reconnect\", \"reconnect_interval\", \"max_reconnects\"]);\n\n    _this = _super.call(this);\n    _this.webSocketFactory = webSocketFactory;\n    _this.queue = {};\n    _this.rpc_id = 0;\n    _this.address = address;\n    _this.autoconnect = autoconnect;\n    _this.ready = false;\n    _this.reconnect = reconnect;\n    _this.reconnect_interval = reconnect_interval;\n    _this.max_reconnects = max_reconnects;\n    _this.rest_options = rest_options;\n    _this.current_reconnects = 0;\n\n    _this.generate_request_id = generate_request_id || function () {\n      return ++_this.rpc_id;\n    };\n\n    if (_this.autoconnect) _this._connect(_this.address, Object.assign({\n      autoconnect: _this.autoconnect,\n      reconnect: _this.reconnect,\n      reconnect_interval: _this.reconnect_interval,\n      max_reconnects: _this.max_reconnects\n    }, _this.rest_options));\n    return _this;\n  }\n  /**\n   * Connects to a defined server if not connected already.\n   * @method\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(CommonClient, [{\n    key: \"connect\",\n    value: function connect() {\n      if (this.socket) return;\n\n      this._connect(this.address, Object.assign({\n        autoconnect: this.autoconnect,\n        reconnect: this.reconnect,\n        reconnect_interval: this.reconnect_interval,\n        max_reconnects: this.max_reconnects\n      }, this.rest_options));\n    }\n    /**\n     * Calls a registered RPC method on server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object|Array} params - optional method parameters\n     * @param {Number} timeout - RPC reply timeout value\n     * @param {Object} ws_opts - options passed to ws\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"call\",\n    value: function call(method, params, timeout, ws_opts) {\n      var _this2 = this;\n\n      if (!ws_opts && \"object\" === (0, _typeof2[\"default\"])(timeout)) {\n        ws_opts = timeout;\n        timeout = null;\n      }\n\n      return new Promise(function (resolve, reject) {\n        if (!_this2.ready) return reject(new Error(\"socket not ready\"));\n\n        var rpc_id = _this2.generate_request_id(method, params);\n\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null,\n          id: rpc_id\n        };\n\n        _this2.socket.send(JSON.stringify(message), ws_opts, function (error) {\n          if (error) return reject(error);\n          _this2.queue[rpc_id] = {\n            promise: [resolve, reject]\n          };\n\n          if (timeout) {\n            _this2.queue[rpc_id].timeout = setTimeout(function () {\n              delete _this2.queue[rpc_id];\n              reject(new Error(\"reply timeout\"));\n            }, timeout);\n          }\n        });\n      });\n    }\n    /**\n     * Logins with the other side of the connection.\n     * @method\n     * @param {Object} params - Login credentials object\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(params) {\n        var resp;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.call(\"rpc.login\", params);\n\n              case 2:\n                resp = _context.sent;\n\n                if (resp) {\n                  _context.next = 5;\n                  break;\n                }\n\n                throw new Error(\"authentication failed\");\n\n              case 5:\n                return _context.abrupt(\"return\", resp);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function login(_x) {\n        return _login.apply(this, arguments);\n      }\n\n      return login;\n    }()\n    /**\n     * Fetches a list of client's methods registered on server.\n     * @method\n     * @return {Array}\n     */\n\n  }, {\n    key: \"listMethods\",\n    value: function () {\n      var _listMethods = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.call(\"__listMethods\");\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function listMethods() {\n        return _listMethods.apply(this, arguments);\n      }\n\n      return listMethods;\n    }()\n    /**\n     * Sends a JSON-RPC 2.0 notification to server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object} params - optional method parameters\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"notify\",\n    value: function notify(method, params) {\n      var _this3 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (!_this3.ready) return reject(new Error(\"socket not ready\"));\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null\n        };\n\n        _this3.socket.send(JSON.stringify(message), function (error) {\n          if (error) return reject(error);\n          resolve();\n        });\n      });\n    }\n    /**\n     * Subscribes for a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"subscribe\",\n    value: function () {\n      var _subscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context3.next = 3;\n                return this.call(\"rpc.on\", event);\n\n              case 3:\n                result = _context3.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed subscribing to an event '\" + event + \"' with: \" + result[event]);\n\n              case 6:\n                return _context3.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function subscribe(_x2) {\n        return _subscribe.apply(this, arguments);\n      }\n\n      return subscribe;\n    }()\n    /**\n     * Unsubscribes from a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function () {\n      var _unsubscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context4.next = 3;\n                return this.call(\"rpc.off\", event);\n\n              case 3:\n                result = _context4.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed unsubscribing from an event with: \" + result);\n\n              case 6:\n                return _context4.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function unsubscribe(_x3) {\n        return _unsubscribe.apply(this, arguments);\n      }\n\n      return unsubscribe;\n    }()\n    /**\n     * Closes a WebSocket connection gracefully.\n     * @method\n     * @param {Number} code - socket close code\n     * @param {String} data - optional data to be sent before closing\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, data) {\n      this.socket.close(code || 1000, data);\n    }\n    /**\n     * Connection/Message handler.\n     * @method\n     * @private\n     * @param {String} address - WebSocket API address\n     * @param {Object} options - ws options object\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"_connect\",\n    value: function _connect(address, options) {\n      var _this4 = this;\n\n      this.socket = this.webSocketFactory(address, options);\n      this.socket.addEventListener(\"open\", function () {\n        _this4.ready = true;\n\n        _this4.emit(\"open\");\n\n        _this4.current_reconnects = 0;\n      });\n      this.socket.addEventListener(\"message\", function (_ref) {\n        var message = _ref.data;\n        if (message instanceof ArrayBuffer) message = Buffer.from(message).toString();\n\n        try {\n          message = JSON.parse(message);\n        } catch (error) {\n          return;\n        } // check if any listeners are attached and forward event\n\n\n        if (message.notification && _this4.listeners(message.notification).length) {\n          if (!Object.keys(message.params).length) return _this4.emit(message.notification);\n          var args = [message.notification];\n          if (message.params.constructor === Object) args.push(message.params);else // using for-loop instead of unshift/spread because performance is better\n            for (var i = 0; i < message.params.length; i++) {\n              args.push(message.params[i]);\n            } // run as microtask so that pending queue messages are resolved first\n          // eslint-disable-next-line prefer-spread\n\n          return Promise.resolve().then(function () {\n            _this4.emit.apply(_this4, args);\n          });\n        }\n\n        if (!_this4.queue[message.id]) {\n          // general JSON RPC 2.0 events\n          if (message.method && message.params) {\n            // run as microtask so that pending queue messages are resolved first\n            return Promise.resolve().then(function () {\n              _this4.emit(message.method, message.params);\n            });\n          }\n\n          return;\n        } // reject early since server's response is invalid\n\n\n        if (\"error\" in message === \"result\" in message) _this4.queue[message.id].promise[1](new Error(\"Server response malformed. Response must include either \\\"result\\\"\" + \" or \\\"error\\\", but not both.\"));\n        if (_this4.queue[message.id].timeout) clearTimeout(_this4.queue[message.id].timeout);\n        if (message.error) _this4.queue[message.id].promise[1](message.error);else _this4.queue[message.id].promise[0](message.result);\n        delete _this4.queue[message.id];\n      });\n      this.socket.addEventListener(\"error\", function (error) {\n        return _this4.emit(\"error\", error);\n      });\n      this.socket.addEventListener(\"close\", function (_ref2) {\n        var code = _ref2.code,\n            reason = _ref2.reason;\n        if (_this4.ready) // Delay close event until internal state is updated\n          setTimeout(function () {\n            return _this4.emit(\"close\", code, reason);\n          }, 0);\n        _this4.ready = false;\n        _this4.socket = undefined;\n        if (code === 1000) return;\n        _this4.current_reconnects++;\n        if (_this4.reconnect && (_this4.max_reconnects > _this4.current_reconnects || _this4.max_reconnects === 0)) setTimeout(function () {\n          return _this4._connect(address, options);\n        }, _this4.reconnect_interval);\n      });\n    }\n  }]);\n  return CommonClient;\n}(_eventemitter.EventEmitter);\n\nexports[\"default\"] = CommonClient;","'use strict';\n\nconst uuid = require('uuid').v4;\nconst generateRequest = require('../../generateRequest');\n\n/**\n * Constructor for a Jayson Browser Client that does not depend any node.js core libraries\n * @class ClientBrowser\n * @param {Function} callServer Method that calls the server, receives the stringified request and a regular node-style callback\n * @param {Object} [options]\n * @param {Function} [options.reviver] Reviver function for JSON\n * @param {Function} [options.replacer] Replacer function for JSON\n * @param {Number} [options.version=2] JSON-RPC version to use (1|2)\n * @param {Function} [options.generator] Function to use for generating request IDs\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n * @return {ClientBrowser}\n */\nconst ClientBrowser = function(callServer, options) {\n  if(!(this instanceof ClientBrowser)) {\n    return new ClientBrowser(callServer, options);\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  this.options = {\n    reviver: typeof options.reviver !== 'undefined' ? options.reviver : null,\n    replacer: typeof options.replacer !== 'undefined' ? options.replacer : null,\n    generator: typeof options.generator !== 'undefined' ? options.generator : function() { return uuid(); },\n    version: typeof options.version !== 'undefined' ? options.version : 2,\n    notificationIdNull: typeof options.notificationIdNull === 'boolean' ? options.notificationIdNull : false,\n  };\n\n  this.callServer = callServer;\n};\n\nmodule.exports = ClientBrowser;\n\n/**\n *  Creates a request and dispatches it if given a callback.\n *  @param {String|Array} method A batch request if passed an Array, or a method name if passed a String\n *  @param {Array|Object} [params] Parameters for the method\n *  @param {String|Number} [id] Optional id. If undefined an id will be generated. If null it creates a notification request\n *  @param {Function} [callback] Request callback. If specified, executes the request rather than only returning it.\n *  @throws {TypeError} Invalid parameters\n *  @return {Object} JSON-RPC 1.0 or 2.0 compatible request\n */\nClientBrowser.prototype.request = function(method, params, id, callback) {\n  const self = this;\n  let request = null;\n\n  // is this a batch request?\n  const isBatch = Array.isArray(method) && typeof params === 'function';\n\n  if (this.options.version === 1 && isBatch) {\n    throw new TypeError('JSON-RPC 1.0 does not support batching');\n  }\n\n  // is this a raw request?\n  const isRaw = !isBatch && method && typeof method === 'object' && typeof params === 'function';\n\n  if(isBatch || isRaw) {\n    callback = params;\n    request = method;\n  } else {\n    if(typeof id === 'function') {\n      callback = id;\n      // specifically undefined because \"null\" is a notification request\n      id = undefined;\n    }\n\n    const hasCallback = typeof callback === 'function';\n\n    try {\n      request = generateRequest(method, params, id, {\n        generator: this.options.generator,\n        version: this.options.version,\n        notificationIdNull: this.options.notificationIdNull,\n      });\n    } catch(err) {\n      if(hasCallback) {\n        return callback(err);\n      }\n      throw err;\n    }\n\n    // no callback means we should just return a raw request\n    if(!hasCallback) {\n      return request;\n    }\n\n  }\n\n  let message;\n  try {\n    message = JSON.stringify(request, this.options.replacer);\n  } catch(err) {\n    return callback(err);\n  }\n\n  this.callServer(message, function(err, response) {\n    self._parseResponse(err, response, callback);\n  });\n\n  // always return the raw request\n  return request;\n};\n\n/**\n * Parses a response from a server\n * @param {Object} err Error to pass on that is unrelated to the actual response\n * @param {String} responseText JSON-RPC 1.0 or 2.0 response\n * @param {Function} callback Callback that will receive different arguments depending on the amount of parameters\n * @private\n */\nClientBrowser.prototype._parseResponse = function(err, responseText, callback) {\n  if(err) {\n    callback(err);\n    return;\n  }\n\n  if(!responseText) {\n    // empty response text, assume that is correct because it could be a\n    // notification which jayson does not give any body for\n    return callback();\n  }\n\n  let response;\n  try {\n    response = JSON.parse(responseText, this.options.reviver);\n  } catch(err) {\n    return callback(err);\n  }\n\n  if(callback.length === 3) {\n    // if callback length is 3, we split callback arguments on error and response\n\n    // is batch response?\n    if(Array.isArray(response)) {\n\n      // neccesary to split strictly on validity according to spec here\n      const isError = function(res) {\n        return typeof res.error !== 'undefined';\n      };\n\n      const isNotError = function (res) {\n        return !isError(res);\n      };\n\n      return callback(null, response.filter(isError), response.filter(isNotError));\n    \n    } else {\n\n      // split regardless of validity\n      return callback(null, response.error, response.result);\n    \n    }\n  \n  }\n\n  callback(null, response);\n};\n","'use strict';\n\nconst uuid = require('uuid').v4;\n\n/**\n *  Generates a JSON-RPC 1.0 or 2.0 request\n *  @param {String} method Name of method to call\n *  @param {Array|Object} params Array of parameters passed to the method as specified, or an object of parameter names and corresponding value\n *  @param {String|Number|null} [id] Request ID can be a string, number, null for explicit notification or left out for automatic generation\n *  @param {Object} [options]\n *  @param {Number} [options.version=2] JSON-RPC version to use (1 or 2)\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n *  @param {Function} [options.generator] Passed the request, and the options object and is expected to return a request ID\n *  @throws {TypeError} If any of the parameters are invalid\n *  @return {Object} A JSON-RPC 1.0 or 2.0 request\n *  @memberOf Utils\n */\nconst generateRequest = function(method, params, id, options) {\n  if(typeof method !== 'string') {\n    throw new TypeError(method + ' must be a string');\n  }\n\n  options = options || {};\n\n  // check valid version provided\n  const version = typeof options.version === 'number' ? options.version : 2;\n  if (version !== 1 && version !== 2) {\n    throw new TypeError(version + ' must be 1 or 2');\n  }\n\n  const request = {\n    method: method\n  };\n\n  if(version === 2) {\n    request.jsonrpc = '2.0';\n  }\n\n  if(params) {\n    // params given, but invalid?\n    if(typeof params !== 'object' && !Array.isArray(params)) {\n      throw new TypeError(params + ' must be an object, array or omitted');\n    }\n    request.params = params;\n  }\n\n  // if id was left out, generate one (null means explicit notification)\n  if(typeof(id) === 'undefined') {\n    const generator = typeof options.generator === 'function' ? options.generator : function() { return uuid(); };\n    request.id = generator(request, options);\n  } else if (version === 2 && id === null) {\n    // we have a version 2 notification\n    if (options.notificationIdNull) {\n      request.id = null; // id will not be set at all unless option provided\n    }\n  } else {\n    request.id = id;\n  }\n\n  return request;\n};\n\nmodule.exports = generateRequest;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hmac = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// HMAC (RFC 2104)\nclass HMAC extends utils_js_1.Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        _assert_js_1.default.hash(hash);\n        const key = (0, utils_js_1.toBytes)(_key);\n        this.iHash = hash.create();\n        if (!(this.iHash instanceof utils_js_1.Hash))\n            throw new TypeError('Expected instance of class which extends utils.Hash');\n        const blockLen = (this.blockLen = this.iHash.blockLen);\n        this.outputLen = this.iHash.outputLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > this.iHash.blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        _assert_js_1.default.exists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        _assert_js_1.default.exists(this);\n        _assert_js_1.default.bytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nconst hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nexports.hmac = hmac;\nexports.hmac.create = (hash, key) => new HMAC(hash, key);\n"],"sourceRoot":""}